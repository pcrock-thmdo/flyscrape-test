[
  {
    "url": "https://cloud.google.com/iam/docs/understanding-roles",
    "data": {
      "roles": [
        {
          "description": "Ability to view or act on access approval requests and view configuration.",
          "id": "roles/accessapproval.approver",
          "is_beta": false,
          "permissions": [
            "accessapproval.requests.*",
            "accessapproval.serviceAccounts.get",
            "accessapproval.settings.get",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Access Approval Approver"
        },
        {
          "description": "Ability to update the Access Approval configuration",
          "id": "roles/accessapproval.configEditor",
          "is_beta": false,
          "permissions": [
            "accessapproval.serviceAccounts.get",
            "accessapproval.settings.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Access Approval Config Editor"
        },
        {
          "description": "Ability to invalidate existing approved approval requests",
          "id": "roles/accessapproval.invalidator",
          "is_beta": false,
          "permissions": [
            "accessapproval.requests.invalidate",
            "accessapproval.serviceAccounts.get",
            "accessapproval.settings.get",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Access Approval Invalidator"
        },
        {
          "description": "Ability to view access approval requests and configuration",
          "id": "roles/accessapproval.viewer",
          "is_beta": false,
          "permissions": [
            "accessapproval.requests.get",
            "accessapproval.requests.list",
            "accessapproval.serviceAccounts.get",
            "accessapproval.settings.get",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Access Approval Viewer"
        },
        {
          "description": "Create, edit, and change Cloud access bindings.",
          "id": "roles/accesscontextmanager.gcpAccessAdmin",
          "is_beta": false,
          "permissions": [
            "accesscontextmanager.gcpUserAccessBindings.*"
          ],
          "title": "Cloud Access Binding Admin"
        },
        {
          "description": "Read access to Cloud access bindings.",
          "id": "roles/accesscontextmanager.gcpAccessReader",
          "is_beta": false,
          "permissions": [
            "accesscontextmanager.gcpUserAccessBindings.get",
            "accesscontextmanager.gcpUserAccessBindings.list"
          ],
          "title": "Cloud Access Binding Reader"
        },
        {
          "description": "Full access to policies, access levels, access zones and authorized orgs descs.",
          "id": "roles/accesscontextmanager.policyAdmin",
          "is_beta": false,
          "permissions": [
            "accesscontextmanager.accessLevels.*",
            "accesscontextmanager.authorizedOrgsDescs.*",
            "accesscontextmanager.policies.*",
            "accesscontextmanager.servicePerimeters.*",
            "cloudasset.assets.searchAllResources",
            "resourcemanager.organizations.get",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Access Context Manager Admin"
        },
        {
          "description": "Edit access to policies.  Create, edit, and change access levels, access zones and authorized orgs descs.",
          "id": "roles/accesscontextmanager.policyEditor",
          "is_beta": false,
          "permissions": [
            "accesscontextmanager.accessLevels.*",
            "accesscontextmanager.authorizedOrgsDescs.*",
            "accesscontextmanager.policies.create",
            "accesscontextmanager.policies.delete",
            "accesscontextmanager.policies.get",
            "accesscontextmanager.policies.getIamPolicy",
            "accesscontextmanager.policies.list",
            "accesscontextmanager.policies.update",
            "accesscontextmanager.servicePerimeters.*",
            "cloudasset.assets.searchAllResources",
            "resourcemanager.organizations.get",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Access Context Manager Editor"
        },
        {
          "description": "Read access to policies, access levels, access zones and authorized orgs descs.",
          "id": "roles/accesscontextmanager.policyReader",
          "is_beta": false,
          "permissions": [
            "accesscontextmanager.accessLevels.get",
            "accesscontextmanager.accessLevels.list",
            "accesscontextmanager.authorizedOrgsDescs.get",
            "accesscontextmanager.authorizedOrgsDescs.list",
            "accesscontextmanager.policies.get",
            "accesscontextmanager.policies.getIamPolicy",
            "accesscontextmanager.policies.list",
            "accesscontextmanager.servicePerimeters.get",
            "accesscontextmanager.servicePerimeters.list",
            "resourcemanager.organizations.get",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Access Context Manager Reader"
        },
        {
          "description": "Access to edit and deploy an action",
          "id": "roles/actions.Admin",
          "is_beta": false,
          "permissions": [
            "actions.*",
            "firebase.projects.get",
            "firebase.projects.update",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "serviceusage.services.use"
          ],
          "title": "Actions Admin"
        },
        {
          "description": "Access to view an action",
          "id": "roles/actions.Viewer",
          "is_beta": false,
          "permissions": [
            "actions.agent.get",
            "actions.agentVersions.get",
            "actions.agentVersions.list",
            "firebase.projects.get",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "serviceusage.services.use"
          ],
          "title": "Actions Viewer"
        },
        {
          "description": "Full access to Notebooks, all resources.",
          "id": "roles/notebooks.admin",
          "is_beta": false,
          "permissions": [
            "aiplatform.notebookExecutionJobs.*",
            "aiplatform.operations.list",
            "aiplatform.pipelineJobs.create",
            "aiplatform.schedules.*",
            "compute.acceleratorTypes.*",
            "compute.addresses.get",
            "compute.addresses.list",
            "compute.addresses.listEffectiveTags",
            "compute.addresses.listTagBindings",
            "compute.autoscalers.get",
            "compute.autoscalers.list",
            "compute.backendBuckets.get",
            "compute.backendBuckets.getIamPolicy",
            "compute.backendBuckets.list",
            "compute.backendBuckets.listEffectiveTags",
            "compute.backendBuckets.listTagBindings",
            "compute.backendServices.get",
            "compute.backendServices.getIamPolicy",
            "compute.backendServices.list",
            "compute.backendServices.listEffectiveTags",
            "compute.backendServices.listTagBindings",
            "compute.commitments.get",
            "compute.commitments.list",
            "compute.crossSiteNetworks.get",
            "compute.crossSiteNetworks.list",
            "compute.diskSettings.get",
            "compute.diskTypes.*",
            "compute.disks.get",
            "compute.disks.getIamPolicy",
            "compute.disks.list",
            "compute.disks.listEffectiveTags",
            "compute.disks.listTagBindings",
            "compute.externalVpnGateways.get",
            "compute.externalVpnGateways.list",
            "compute.externalVpnGateways.listEffectiveTags",
            "compute.externalVpnGateways.listTagBindings",
            "compute.firewallPolicies.get",
            "compute.firewallPolicies.getIamPolicy",
            "compute.firewallPolicies.list",
            "compute.firewallPolicies.listEffectiveTags",
            "compute.firewallPolicies.listTagBindings",
            "compute.firewalls.get",
            "compute.firewalls.list",
            "compute.firewalls.listEffectiveTags",
            "compute.firewalls.listTagBindings",
            "compute.forwardingRules.get",
            "compute.forwardingRules.list",
            "compute.forwardingRules.listEffectiveTags",
            "compute.forwardingRules.listTagBindings",
            "compute.futureReservations.get",
            "compute.futureReservations.getIamPolicy",
            "compute.futureReservations.list",
            "compute.globalAddresses.get",
            "compute.globalAddresses.list",
            "compute.globalAddresses.listEffectiveTags",
            "compute.globalAddresses.listTagBindings",
            "compute.globalForwardingRules.get",
            "compute.globalForwardingRules.list",
            "compute.globalForwardingRules.listEffectiveTags",
            "compute.globalForwardingRules.listTagBindings",
            "compute.globalNetworkEndpointGroups.get",
            "compute.globalNetworkEndpointGroups.list",
            "compute.globalNetworkEndpointGroups.listEffectiveTags",
            "compute.globalNetworkEndpointGroups.listTagBindings",
            "compute.globalOperations.get",
            "compute.globalOperations.getIamPolicy",
            "compute.globalOperations.list",
            "compute.globalPublicDelegatedPrefixes.get",
            "compute.globalPublicDelegatedPrefixes.list",
            "compute.healthChecks.get",
            "compute.healthChecks.list",
            "compute.healthChecks.listEffectiveTags",
            "compute.healthChecks.listTagBindings",
            "compute.httpHealthChecks.get",
            "compute.httpHealthChecks.list",
            "compute.httpHealthChecks.listEffectiveTags",
            "compute.httpHealthChecks.listTagBindings",
            "compute.httpsHealthChecks.get",
            "compute.httpsHealthChecks.list",
            "compute.httpsHealthChecks.listEffectiveTags",
            "compute.httpsHealthChecks.listTagBindings",
            "compute.images.get",
            "compute.images.getFromFamily",
            "compute.images.getIamPolicy",
            "compute.images.list",
            "compute.images.listEffectiveTags",
            "compute.images.listTagBindings",
            "compute.instanceGroupManagers.get",
            "compute.instanceGroupManagers.list",
            "compute.instanceGroupManagers.listEffectiveTags",
            "compute.instanceGroupManagers.listTagBindings",
            "compute.instanceGroups.get",
            "compute.instanceGroups.list",
            "compute.instanceGroups.listEffectiveTags",
            "compute.instanceGroups.listTagBindings",
            "compute.instanceSettings.get",
            "compute.instanceTemplates.get",
            "compute.instanceTemplates.getIamPolicy",
            "compute.instanceTemplates.list",
            "compute.instances.get",
            "compute.instances.getEffectiveFirewalls",
            "compute.instances.getGuestAttributes",
            "compute.instances.getIamPolicy",
            "compute.instances.getScreenshot",
            "compute.instances.getSerialPortOutput",
            "compute.instances.getShieldedInstanceIdentity",
            "compute.instances.getShieldedVmIdentity",
            "compute.instances.list",
            "compute.instances.listEffectiveTags",
            "compute.instances.listReferrers",
            "compute.instances.listTagBindings",
            "compute.instantSnapshots.get",
            "compute.instantSnapshots.getIamPolicy",
            "compute.instantSnapshots.list",
            "compute.interconnectAttachments.get",
            "compute.interconnectAttachments.list",
            "compute.interconnectAttachments.listEffectiveTags",
            "compute.interconnectAttachments.listTagBindings",
            "compute.interconnectLocations.*",
            "compute.interconnectRemoteLocations.*",
            "compute.interconnects.get",
            "compute.interconnects.list",
            "compute.interconnects.listEffectiveTags",
            "compute.interconnects.listTagBindings",
            "compute.licenseCodes.get",
            "compute.licenseCodes.getIamPolicy",
            "compute.licenseCodes.list",
            "compute.licenses.get",
            "compute.licenses.getIamPolicy",
            "compute.licenses.list",
            "compute.machineImages.get",
            "compute.machineImages.getIamPolicy",
            "compute.machineImages.list",
            "compute.machineTypes.*",
            "compute.multiMig.get",
            "compute.multiMig.list",
            "compute.networkAttachments.get",
            "compute.networkAttachments.getIamPolicy",
            "compute.networkAttachments.list",
            "compute.networkAttachments.listEffectiveTags",
            "compute.networkAttachments.listTagBindings",
            "compute.networkEdgeSecurityServices.get",
            "compute.networkEdgeSecurityServices.list",
            "compute.networkEdgeSecurityServices.listEffectiveTags",
            "compute.networkEdgeSecurityServices.listTagBindings",
            "compute.networkEndpointGroups.get",
            "compute.networkEndpointGroups.list",
            "compute.networkEndpointGroups.listEffectiveTags",
            "compute.networkEndpointGroups.listTagBindings",
            "compute.networkProfiles.*",
            "compute.networks.get",
            "compute.networks.getEffectiveFirewalls",
            "compute.networks.getRegionEffectiveFirewalls",
            "compute.networks.list",
            "compute.networks.listEffectiveTags",
            "compute.networks.listPeeringRoutes",
            "compute.networks.listTagBindings",
            "compute.nodeGroups.get",
            "compute.nodeGroups.getIamPolicy",
            "compute.nodeGroups.list",
            "compute.nodeTemplates.get",
            "compute.nodeTemplates.getIamPolicy",
            "compute.nodeTemplates.list",
            "compute.nodeTypes.*",
            "compute.organizations.listAssociations",
            "compute.packetMirrorings.get",
            "compute.packetMirrorings.list",
            "compute.packetMirrorings.listEffectiveTags",
            "compute.packetMirrorings.listTagBindings",
            "compute.projects.get",
            "compute.publicAdvertisedPrefixes.get",
            "compute.publicAdvertisedPrefixes.list",
            "compute.publicDelegatedPrefixes.get",
            "compute.publicDelegatedPrefixes.list",
            "compute.publicDelegatedPrefixes.listEffectiveTags",
            "compute.publicDelegatedPrefixes.listTagBindings",
            "compute.regionBackendServices.get",
            "compute.regionBackendServices.getIamPolicy",
            "compute.regionBackendServices.list",
            "compute.regionBackendServices.listEffectiveTags",
            "compute.regionBackendServices.listTagBindings",
            "compute.regionFirewallPolicies.get",
            "compute.regionFirewallPolicies.getIamPolicy",
            "compute.regionFirewallPolicies.list",
            "compute.regionFirewallPolicies.listEffectiveTags",
            "compute.regionFirewallPolicies.listTagBindings",
            "compute.regionHealthCheckServices.get",
            "compute.regionHealthCheckServices.list",
            "compute.regionHealthChecks.get",
            "compute.regionHealthChecks.list",
            "compute.regionHealthChecks.listEffectiveTags",
            "compute.regionHealthChecks.listTagBindings",
            "compute.regionNetworkEndpointGroups.get",
            "compute.regionNetworkEndpointGroups.list",
            "compute.regionNetworkEndpointGroups.listEffectiveTags",
            "compute.regionNetworkEndpointGroups.listTagBindings",
            "compute.regionNotificationEndpoints.get",
            "compute.regionNotificationEndpoints.list",
            "compute.regionOperations.get",
            "compute.regionOperations.getIamPolicy",
            "compute.regionOperations.list",
            "compute.regionSecurityPolicies.get",
            "compute.regionSecurityPolicies.list",
            "compute.regionSecurityPolicies.listEffectiveTags",
            "compute.regionSecurityPolicies.listTagBindings",
            "compute.regionSslCertificates.get",
            "compute.regionSslCertificates.list",
            "compute.regionSslCertificates.listEffectiveTags",
            "compute.regionSslCertificates.listTagBindings",
            "compute.regionSslPolicies.get",
            "compute.regionSslPolicies.list",
            "compute.regionSslPolicies.listAvailableFeatures",
            "compute.regionSslPolicies.listEffectiveTags",
            "compute.regionSslPolicies.listTagBindings",
            "compute.regionTargetHttpProxies.get",
            "compute.regionTargetHttpProxies.list",
            "compute.regionTargetHttpProxies.listEffectiveTags",
            "compute.regionTargetHttpProxies.listTagBindings",
            "compute.regionTargetHttpsProxies.get",
            "compute.regionTargetHttpsProxies.list",
            "compute.regionTargetHttpsProxies.listEffectiveTags",
            "compute.regionTargetHttpsProxies.listTagBindings",
            "compute.regionTargetTcpProxies.get",
            "compute.regionTargetTcpProxies.list",
            "compute.regionTargetTcpProxies.listEffectiveTags",
            "compute.regionTargetTcpProxies.listTagBindings",
            "compute.regionUrlMaps.get",
            "compute.regionUrlMaps.list",
            "compute.regionUrlMaps.listEffectiveTags",
            "compute.regionUrlMaps.listTagBindings",
            "compute.regionUrlMaps.validate",
            "compute.regions.*",
            "compute.reservationBlocks.get",
            "compute.reservationBlocks.list",
            "compute.reservations.get",
            "compute.reservations.list",
            "compute.resourcePolicies.get",
            "compute.resourcePolicies.getIamPolicy",
            "compute.resourcePolicies.list",
            "compute.routers.get",
            "compute.routers.getRoutePolicy",
            "compute.routers.list",
            "compute.routers.listBgpRoutes",
            "compute.routers.listEffectiveTags",
            "compute.routers.listRoutePolicies",
            "compute.routers.listTagBindings",
            "compute.routes.get",
            "compute.routes.list",
            "compute.routes.listEffectiveTags",
            "compute.routes.listTagBindings",
            "compute.securityPolicies.get",
            "compute.securityPolicies.list",
            "compute.securityPolicies.listEffectiveTags",
            "compute.securityPolicies.listTagBindings",
            "compute.serviceAttachments.get",
            "compute.serviceAttachments.getIamPolicy",
            "compute.serviceAttachments.list",
            "compute.serviceAttachments.listEffectiveTags",
            "compute.serviceAttachments.listTagBindings",
            "compute.snapshotSettings.get",
            "compute.snapshots.get",
            "compute.snapshots.getIamPolicy",
            "compute.snapshots.list",
            "compute.snapshots.listEffectiveTags",
            "compute.snapshots.listTagBindings",
            "compute.spotAssistants.get",
            "compute.sslCertificates.get",
            "compute.sslCertificates.list",
            "compute.sslCertificates.listEffectiveTags",
            "compute.sslCertificates.listTagBindings",
            "compute.sslPolicies.get",
            "compute.sslPolicies.list",
            "compute.sslPolicies.listAvailableFeatures",
            "compute.sslPolicies.listEffectiveTags",
            "compute.sslPolicies.listTagBindings",
            "compute.storagePools.get",
            "compute.storagePools.getIamPolicy",
            "compute.storagePools.list",
            "compute.subnetworks.get",
            "compute.subnetworks.getIamPolicy",
            "compute.subnetworks.list",
            "compute.subnetworks.listEffectiveTags",
            "compute.subnetworks.listTagBindings",
            "compute.targetGrpcProxies.get",
            "compute.targetGrpcProxies.list",
            "compute.targetGrpcProxies.listEffectiveTags",
            "compute.targetGrpcProxies.listTagBindings",
            "compute.targetHttpProxies.get",
            "compute.targetHttpProxies.list",
            "compute.targetHttpProxies.listEffectiveTags",
            "compute.targetHttpProxies.listTagBindings",
            "compute.targetHttpsProxies.get",
            "compute.targetHttpsProxies.list",
            "compute.targetHttpsProxies.listEffectiveTags",
            "compute.targetHttpsProxies.listTagBindings",
            "compute.targetInstances.get",
            "compute.targetInstances.list",
            "compute.targetInstances.listEffectiveTags",
            "compute.targetInstances.listTagBindings",
            "compute.targetPools.get",
            "compute.targetPools.list",
            "compute.targetPools.listEffectiveTags",
            "compute.targetPools.listTagBindings",
            "compute.targetSslProxies.get",
            "compute.targetSslProxies.list",
            "compute.targetSslProxies.listEffectiveTags",
            "compute.targetSslProxies.listTagBindings",
            "compute.targetTcpProxies.get",
            "compute.targetTcpProxies.list",
            "compute.targetTcpProxies.listEffectiveTags",
            "compute.targetTcpProxies.listTagBindings",
            "compute.targetVpnGateways.get",
            "compute.targetVpnGateways.list",
            "compute.targetVpnGateways.listEffectiveTags",
            "compute.targetVpnGateways.listTagBindings",
            "compute.urlMaps.get",
            "compute.urlMaps.list",
            "compute.urlMaps.listEffectiveTags",
            "compute.urlMaps.listTagBindings",
            "compute.urlMaps.validate",
            "compute.vpnGateways.get",
            "compute.vpnGateways.list",
            "compute.vpnGateways.listEffectiveTags",
            "compute.vpnGateways.listTagBindings",
            "compute.vpnTunnels.get",
            "compute.vpnTunnels.list",
            "compute.vpnTunnels.listEffectiveTags",
            "compute.vpnTunnels.listTagBindings",
            "compute.wireGroups.get",
            "compute.wireGroups.list",
            "compute.zoneOperations.get",
            "compute.zoneOperations.getIamPolicy",
            "compute.zoneOperations.list",
            "compute.zones.*",
            "notebooks.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "serviceusage.quotas.get",
            "serviceusage.services.get",
            "serviceusage.services.list"
          ],
          "title": "Notebooks Admin"
        },
        {
          "description": "Full access to Notebooks all resources through compute API.",
          "id": "roles/notebooks.legacyAdmin",
          "is_beta": false,
          "permissions": [
            "backupdr.backupPlanAssociations.createForComputeInstance",
            "backupdr.backupPlanAssociations.deleteForComputeInstance",
            "backupdr.backupPlanAssociations.list",
            "backupdr.backupPlanAssociations.triggerBackupForComputeInstance",
            "backupdr.backupPlans.get",
            "backupdr.backupPlans.list",
            "backupdr.backupPlans.useForComputeInstance",
            "backupdr.backupVaults.get",
            "backupdr.backupVaults.list",
            "backupdr.locations.list",
            "backupdr.operations.get",
            "backupdr.operations.list",
            "backupdr.serviceConfig.initialize",
            "cloudkms.keyHandles.*",
            "cloudkms.operations.get",
            "cloudkms.projects.showEffectiveAutokeyConfig",
            "compute.*",
            "notebooks.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "serviceusage.quotas.get",
            "serviceusage.services.get",
            "serviceusage.services.list"
          ],
          "title": "Notebooks Legacy Admin"
        },
        {
          "description": "Read-only access to Notebooks all resources through compute API.",
          "id": "roles/notebooks.legacyViewer",
          "is_beta": false,
          "permissions": [
            "compute.acceleratorTypes.*",
            "compute.addresses.get",
            "compute.addresses.list",
            "compute.addresses.listEffectiveTags",
            "compute.addresses.listTagBindings",
            "compute.autoscalers.get",
            "compute.autoscalers.list",
            "compute.backendBuckets.get",
            "compute.backendBuckets.getIamPolicy",
            "compute.backendBuckets.list",
            "compute.backendBuckets.listEffectiveTags",
            "compute.backendBuckets.listTagBindings",
            "compute.backendServices.get",
            "compute.backendServices.getIamPolicy",
            "compute.backendServices.list",
            "compute.backendServices.listEffectiveTags",
            "compute.backendServices.listTagBindings",
            "compute.commitments.get",
            "compute.commitments.list",
            "compute.crossSiteNetworks.get",
            "compute.crossSiteNetworks.list",
            "compute.diskSettings.get",
            "compute.diskTypes.*",
            "compute.disks.get",
            "compute.disks.getIamPolicy",
            "compute.disks.list",
            "compute.disks.listEffectiveTags",
            "compute.disks.listTagBindings",
            "compute.externalVpnGateways.get",
            "compute.externalVpnGateways.list",
            "compute.externalVpnGateways.listEffectiveTags",
            "compute.externalVpnGateways.listTagBindings",
            "compute.firewallPolicies.get",
            "compute.firewallPolicies.getIamPolicy",
            "compute.firewallPolicies.list",
            "compute.firewallPolicies.listEffectiveTags",
            "compute.firewallPolicies.listTagBindings",
            "compute.firewalls.get",
            "compute.firewalls.list",
            "compute.firewalls.listEffectiveTags",
            "compute.firewalls.listTagBindings",
            "compute.forwardingRules.get",
            "compute.forwardingRules.list",
            "compute.forwardingRules.listEffectiveTags",
            "compute.forwardingRules.listTagBindings",
            "compute.futureReservations.get",
            "compute.futureReservations.getIamPolicy",
            "compute.futureReservations.list",
            "compute.globalAddresses.get",
            "compute.globalAddresses.list",
            "compute.globalAddresses.listEffectiveTags",
            "compute.globalAddresses.listTagBindings",
            "compute.globalForwardingRules.get",
            "compute.globalForwardingRules.list",
            "compute.globalForwardingRules.listEffectiveTags",
            "compute.globalForwardingRules.listTagBindings",
            "compute.globalNetworkEndpointGroups.get",
            "compute.globalNetworkEndpointGroups.list",
            "compute.globalNetworkEndpointGroups.listEffectiveTags",
            "compute.globalNetworkEndpointGroups.listTagBindings",
            "compute.globalOperations.get",
            "compute.globalOperations.getIamPolicy",
            "compute.globalOperations.list",
            "compute.globalPublicDelegatedPrefixes.get",
            "compute.globalPublicDelegatedPrefixes.list",
            "compute.healthChecks.get",
            "compute.healthChecks.list",
            "compute.healthChecks.listEffectiveTags",
            "compute.healthChecks.listTagBindings",
            "compute.httpHealthChecks.get",
            "compute.httpHealthChecks.list",
            "compute.httpHealthChecks.listEffectiveTags",
            "compute.httpHealthChecks.listTagBindings",
            "compute.httpsHealthChecks.get",
            "compute.httpsHealthChecks.list",
            "compute.httpsHealthChecks.listEffectiveTags",
            "compute.httpsHealthChecks.listTagBindings",
            "compute.images.get",
            "compute.images.getFromFamily",
            "compute.images.getIamPolicy",
            "compute.images.list",
            "compute.images.listEffectiveTags",
            "compute.images.listTagBindings",
            "compute.instanceGroupManagers.get",
            "compute.instanceGroupManagers.list",
            "compute.instanceGroupManagers.listEffectiveTags",
            "compute.instanceGroupManagers.listTagBindings",
            "compute.instanceGroups.get",
            "compute.instanceGroups.list",
            "compute.instanceGroups.listEffectiveTags",
            "compute.instanceGroups.listTagBindings",
            "compute.instanceSettings.get",
            "compute.instanceTemplates.get",
            "compute.instanceTemplates.getIamPolicy",
            "compute.instanceTemplates.list",
            "compute.instances.get",
            "compute.instances.getEffectiveFirewalls",
            "compute.instances.getGuestAttributes",
            "compute.instances.getIamPolicy",
            "compute.instances.getScreenshot",
            "compute.instances.getSerialPortOutput",
            "compute.instances.getShieldedInstanceIdentity",
            "compute.instances.getShieldedVmIdentity",
            "compute.instances.list",
            "compute.instances.listEffectiveTags",
            "compute.instances.listReferrers",
            "compute.instances.listTagBindings",
            "compute.instantSnapshots.get",
            "compute.instantSnapshots.getIamPolicy",
            "compute.instantSnapshots.list",
            "compute.interconnectAttachments.get",
            "compute.interconnectAttachments.list",
            "compute.interconnectAttachments.listEffectiveTags",
            "compute.interconnectAttachments.listTagBindings",
            "compute.interconnectLocations.*",
            "compute.interconnectRemoteLocations.*",
            "compute.interconnects.get",
            "compute.interconnects.list",
            "compute.interconnects.listEffectiveTags",
            "compute.interconnects.listTagBindings",
            "compute.licenseCodes.get",
            "compute.licenseCodes.getIamPolicy",
            "compute.licenseCodes.list",
            "compute.licenses.get",
            "compute.licenses.getIamPolicy",
            "compute.licenses.list",
            "compute.machineImages.get",
            "compute.machineImages.getIamPolicy",
            "compute.machineImages.list",
            "compute.machineTypes.*",
            "compute.multiMig.get",
            "compute.multiMig.list",
            "compute.networkAttachments.get",
            "compute.networkAttachments.getIamPolicy",
            "compute.networkAttachments.list",
            "compute.networkAttachments.listEffectiveTags",
            "compute.networkAttachments.listTagBindings",
            "compute.networkEdgeSecurityServices.get",
            "compute.networkEdgeSecurityServices.list",
            "compute.networkEdgeSecurityServices.listEffectiveTags",
            "compute.networkEdgeSecurityServices.listTagBindings",
            "compute.networkEndpointGroups.get",
            "compute.networkEndpointGroups.list",
            "compute.networkEndpointGroups.listEffectiveTags",
            "compute.networkEndpointGroups.listTagBindings",
            "compute.networkProfiles.*",
            "compute.networks.get",
            "compute.networks.getEffectiveFirewalls",
            "compute.networks.getRegionEffectiveFirewalls",
            "compute.networks.list",
            "compute.networks.listEffectiveTags",
            "compute.networks.listPeeringRoutes",
            "compute.networks.listTagBindings",
            "compute.nodeGroups.get",
            "compute.nodeGroups.getIamPolicy",
            "compute.nodeGroups.list",
            "compute.nodeTemplates.get",
            "compute.nodeTemplates.getIamPolicy",
            "compute.nodeTemplates.list",
            "compute.nodeTypes.*",
            "compute.organizations.listAssociations",
            "compute.packetMirrorings.get",
            "compute.packetMirrorings.list",
            "compute.packetMirrorings.listEffectiveTags",
            "compute.packetMirrorings.listTagBindings",
            "compute.projects.get",
            "compute.publicAdvertisedPrefixes.get",
            "compute.publicAdvertisedPrefixes.list",
            "compute.publicDelegatedPrefixes.get",
            "compute.publicDelegatedPrefixes.list",
            "compute.publicDelegatedPrefixes.listEffectiveTags",
            "compute.publicDelegatedPrefixes.listTagBindings",
            "compute.regionBackendServices.get",
            "compute.regionBackendServices.getIamPolicy",
            "compute.regionBackendServices.list",
            "compute.regionBackendServices.listEffectiveTags",
            "compute.regionBackendServices.listTagBindings",
            "compute.regionFirewallPolicies.get",
            "compute.regionFirewallPolicies.getIamPolicy",
            "compute.regionFirewallPolicies.list",
            "compute.regionFirewallPolicies.listEffectiveTags",
            "compute.regionFirewallPolicies.listTagBindings",
            "compute.regionHealthCheckServices.get",
            "compute.regionHealthCheckServices.list",
            "compute.regionHealthChecks.get",
            "compute.regionHealthChecks.list",
            "compute.regionHealthChecks.listEffectiveTags",
            "compute.regionHealthChecks.listTagBindings",
            "compute.regionNetworkEndpointGroups.get",
            "compute.regionNetworkEndpointGroups.list",
            "compute.regionNetworkEndpointGroups.listEffectiveTags",
            "compute.regionNetworkEndpointGroups.listTagBindings",
            "compute.regionNotificationEndpoints.get",
            "compute.regionNotificationEndpoints.list",
            "compute.regionOperations.get",
            "compute.regionOperations.getIamPolicy",
            "compute.regionOperations.list",
            "compute.regionSecurityPolicies.get",
            "compute.regionSecurityPolicies.list",
            "compute.regionSecurityPolicies.listEffectiveTags",
            "compute.regionSecurityPolicies.listTagBindings",
            "compute.regionSslCertificates.get",
            "compute.regionSslCertificates.list",
            "compute.regionSslCertificates.listEffectiveTags",
            "compute.regionSslCertificates.listTagBindings",
            "compute.regionSslPolicies.get",
            "compute.regionSslPolicies.list",
            "compute.regionSslPolicies.listAvailableFeatures",
            "compute.regionSslPolicies.listEffectiveTags",
            "compute.regionSslPolicies.listTagBindings",
            "compute.regionTargetHttpProxies.get",
            "compute.regionTargetHttpProxies.list",
            "compute.regionTargetHttpProxies.listEffectiveTags",
            "compute.regionTargetHttpProxies.listTagBindings",
            "compute.regionTargetHttpsProxies.get",
            "compute.regionTargetHttpsProxies.list",
            "compute.regionTargetHttpsProxies.listEffectiveTags",
            "compute.regionTargetHttpsProxies.listTagBindings",
            "compute.regionTargetTcpProxies.get",
            "compute.regionTargetTcpProxies.list",
            "compute.regionTargetTcpProxies.listEffectiveTags",
            "compute.regionTargetTcpProxies.listTagBindings",
            "compute.regionUrlMaps.get",
            "compute.regionUrlMaps.list",
            "compute.regionUrlMaps.listEffectiveTags",
            "compute.regionUrlMaps.listTagBindings",
            "compute.regionUrlMaps.validate",
            "compute.regions.*",
            "compute.reservationBlocks.get",
            "compute.reservationBlocks.list",
            "compute.reservations.get",
            "compute.reservations.list",
            "compute.resourcePolicies.get",
            "compute.resourcePolicies.getIamPolicy",
            "compute.resourcePolicies.list",
            "compute.routers.get",
            "compute.routers.getRoutePolicy",
            "compute.routers.list",
            "compute.routers.listBgpRoutes",
            "compute.routers.listEffectiveTags",
            "compute.routers.listRoutePolicies",
            "compute.routers.listTagBindings",
            "compute.routes.get",
            "compute.routes.list",
            "compute.routes.listEffectiveTags",
            "compute.routes.listTagBindings",
            "compute.securityPolicies.get",
            "compute.securityPolicies.list",
            "compute.securityPolicies.listEffectiveTags",
            "compute.securityPolicies.listTagBindings",
            "compute.serviceAttachments.get",
            "compute.serviceAttachments.getIamPolicy",
            "compute.serviceAttachments.list",
            "compute.serviceAttachments.listEffectiveTags",
            "compute.serviceAttachments.listTagBindings",
            "compute.snapshotSettings.get",
            "compute.snapshots.get",
            "compute.snapshots.getIamPolicy",
            "compute.snapshots.list",
            "compute.snapshots.listEffectiveTags",
            "compute.snapshots.listTagBindings",
            "compute.spotAssistants.get",
            "compute.sslCertificates.get",
            "compute.sslCertificates.list",
            "compute.sslCertificates.listEffectiveTags",
            "compute.sslCertificates.listTagBindings",
            "compute.sslPolicies.get",
            "compute.sslPolicies.list",
            "compute.sslPolicies.listAvailableFeatures",
            "compute.sslPolicies.listEffectiveTags",
            "compute.sslPolicies.listTagBindings",
            "compute.storagePools.get",
            "compute.storagePools.getIamPolicy",
            "compute.storagePools.list",
            "compute.subnetworks.get",
            "compute.subnetworks.getIamPolicy",
            "compute.subnetworks.list",
            "compute.subnetworks.listEffectiveTags",
            "compute.subnetworks.listTagBindings",
            "compute.targetGrpcProxies.get",
            "compute.targetGrpcProxies.list",
            "compute.targetGrpcProxies.listEffectiveTags",
            "compute.targetGrpcProxies.listTagBindings",
            "compute.targetHttpProxies.get",
            "compute.targetHttpProxies.list",
            "compute.targetHttpProxies.listEffectiveTags",
            "compute.targetHttpProxies.listTagBindings",
            "compute.targetHttpsProxies.get",
            "compute.targetHttpsProxies.list",
            "compute.targetHttpsProxies.listEffectiveTags",
            "compute.targetHttpsProxies.listTagBindings",
            "compute.targetInstances.get",
            "compute.targetInstances.list",
            "compute.targetInstances.listEffectiveTags",
            "compute.targetInstances.listTagBindings",
            "compute.targetPools.get",
            "compute.targetPools.list",
            "compute.targetPools.listEffectiveTags",
            "compute.targetPools.listTagBindings",
            "compute.targetSslProxies.get",
            "compute.targetSslProxies.list",
            "compute.targetSslProxies.listEffectiveTags",
            "compute.targetSslProxies.listTagBindings",
            "compute.targetTcpProxies.get",
            "compute.targetTcpProxies.list",
            "compute.targetTcpProxies.listEffectiveTags",
            "compute.targetTcpProxies.listTagBindings",
            "compute.targetVpnGateways.get",
            "compute.targetVpnGateways.list",
            "compute.targetVpnGateways.listEffectiveTags",
            "compute.targetVpnGateways.listTagBindings",
            "compute.urlMaps.get",
            "compute.urlMaps.list",
            "compute.urlMaps.listEffectiveTags",
            "compute.urlMaps.listTagBindings",
            "compute.urlMaps.validate",
            "compute.vpnGateways.get",
            "compute.vpnGateways.list",
            "compute.vpnGateways.listEffectiveTags",
            "compute.vpnGateways.listTagBindings",
            "compute.vpnTunnels.get",
            "compute.vpnTunnels.list",
            "compute.vpnTunnels.listEffectiveTags",
            "compute.vpnTunnels.listTagBindings",
            "compute.wireGroups.get",
            "compute.wireGroups.list",
            "compute.zoneOperations.get",
            "compute.zoneOperations.getIamPolicy",
            "compute.zoneOperations.list",
            "compute.zones.*",
            "notebooks.environments.get",
            "notebooks.environments.getIamPolicy",
            "notebooks.environments.list",
            "notebooks.executions.get",
            "notebooks.executions.getIamPolicy",
            "notebooks.executions.list",
            "notebooks.instances.checkUpgradability",
            "notebooks.instances.get",
            "notebooks.instances.getHealth",
            "notebooks.instances.getIamPolicy",
            "notebooks.instances.list",
            "notebooks.locations.*",
            "notebooks.operations.get",
            "notebooks.operations.list",
            "notebooks.runtimes.get",
            "notebooks.runtimes.getIamPolicy",
            "notebooks.runtimes.list",
            "notebooks.schedules.get",
            "notebooks.schedules.getIamPolicy",
            "notebooks.schedules.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "serviceusage.quotas.get",
            "serviceusage.services.get",
            "serviceusage.services.list"
          ],
          "title": "Notebooks Legacy Viewer"
        },
        {
          "description": "Restricted access for running scheduled Notebooks.",
          "id": "roles/notebooks.runner",
          "is_beta": false,
          "permissions": [
            "aiplatform.notebookExecutionJobs.*",
            "aiplatform.operations.list",
            "aiplatform.pipelineJobs.create",
            "aiplatform.schedules.*",
            "compute.acceleratorTypes.*",
            "compute.addresses.get",
            "compute.addresses.list",
            "compute.addresses.listEffectiveTags",
            "compute.addresses.listTagBindings",
            "compute.autoscalers.get",
            "compute.autoscalers.list",
            "compute.backendBuckets.get",
            "compute.backendBuckets.getIamPolicy",
            "compute.backendBuckets.list",
            "compute.backendBuckets.listEffectiveTags",
            "compute.backendBuckets.listTagBindings",
            "compute.backendServices.get",
            "compute.backendServices.getIamPolicy",
            "compute.backendServices.list",
            "compute.backendServices.listEffectiveTags",
            "compute.backendServices.listTagBindings",
            "compute.commitments.get",
            "compute.commitments.list",
            "compute.crossSiteNetworks.get",
            "compute.crossSiteNetworks.list",
            "compute.diskSettings.get",
            "compute.diskTypes.*",
            "compute.disks.get",
            "compute.disks.getIamPolicy",
            "compute.disks.list",
            "compute.disks.listEffectiveTags",
            "compute.disks.listTagBindings",
            "compute.externalVpnGateways.get",
            "compute.externalVpnGateways.list",
            "compute.externalVpnGateways.listEffectiveTags",
            "compute.externalVpnGateways.listTagBindings",
            "compute.firewallPolicies.get",
            "compute.firewallPolicies.getIamPolicy",
            "compute.firewallPolicies.list",
            "compute.firewallPolicies.listEffectiveTags",
            "compute.firewallPolicies.listTagBindings",
            "compute.firewalls.get",
            "compute.firewalls.list",
            "compute.firewalls.listEffectiveTags",
            "compute.firewalls.listTagBindings",
            "compute.forwardingRules.get",
            "compute.forwardingRules.list",
            "compute.forwardingRules.listEffectiveTags",
            "compute.forwardingRules.listTagBindings",
            "compute.futureReservations.get",
            "compute.futureReservations.getIamPolicy",
            "compute.futureReservations.list",
            "compute.globalAddresses.get",
            "compute.globalAddresses.list",
            "compute.globalAddresses.listEffectiveTags",
            "compute.globalAddresses.listTagBindings",
            "compute.globalForwardingRules.get",
            "compute.globalForwardingRules.list",
            "compute.globalForwardingRules.listEffectiveTags",
            "compute.globalForwardingRules.listTagBindings",
            "compute.globalNetworkEndpointGroups.get",
            "compute.globalNetworkEndpointGroups.list",
            "compute.globalNetworkEndpointGroups.listEffectiveTags",
            "compute.globalNetworkEndpointGroups.listTagBindings",
            "compute.globalOperations.get",
            "compute.globalOperations.getIamPolicy",
            "compute.globalOperations.list",
            "compute.globalPublicDelegatedPrefixes.get",
            "compute.globalPublicDelegatedPrefixes.list",
            "compute.healthChecks.get",
            "compute.healthChecks.list",
            "compute.healthChecks.listEffectiveTags",
            "compute.healthChecks.listTagBindings",
            "compute.httpHealthChecks.get",
            "compute.httpHealthChecks.list",
            "compute.httpHealthChecks.listEffectiveTags",
            "compute.httpHealthChecks.listTagBindings",
            "compute.httpsHealthChecks.get",
            "compute.httpsHealthChecks.list",
            "compute.httpsHealthChecks.listEffectiveTags",
            "compute.httpsHealthChecks.listTagBindings",
            "compute.images.get",
            "compute.images.getFromFamily",
            "compute.images.getIamPolicy",
            "compute.images.list",
            "compute.images.listEffectiveTags",
            "compute.images.listTagBindings",
            "compute.instanceGroupManagers.get",
            "compute.instanceGroupManagers.list",
            "compute.instanceGroupManagers.listEffectiveTags",
            "compute.instanceGroupManagers.listTagBindings",
            "compute.instanceGroups.get",
            "compute.instanceGroups.list",
            "compute.instanceGroups.listEffectiveTags",
            "compute.instanceGroups.listTagBindings",
            "compute.instanceSettings.get",
            "compute.instanceTemplates.get",
            "compute.instanceTemplates.getIamPolicy",
            "compute.instanceTemplates.list",
            "compute.instances.get",
            "compute.instances.getEffectiveFirewalls",
            "compute.instances.getGuestAttributes",
            "compute.instances.getIamPolicy",
            "compute.instances.getScreenshot",
            "compute.instances.getSerialPortOutput",
            "compute.instances.getShieldedInstanceIdentity",
            "compute.instances.getShieldedVmIdentity",
            "compute.instances.list",
            "compute.instances.listEffectiveTags",
            "compute.instances.listReferrers",
            "compute.instances.listTagBindings",
            "compute.instantSnapshots.get",
            "compute.instantSnapshots.getIamPolicy",
            "compute.instantSnapshots.list",
            "compute.interconnectAttachments.get",
            "compute.interconnectAttachments.list",
            "compute.interconnectAttachments.listEffectiveTags",
            "compute.interconnectAttachments.listTagBindings",
            "compute.interconnectLocations.*",
            "compute.interconnectRemoteLocations.*",
            "compute.interconnects.get",
            "compute.interconnects.list",
            "compute.interconnects.listEffectiveTags",
            "compute.interconnects.listTagBindings",
            "compute.licenseCodes.get",
            "compute.licenseCodes.getIamPolicy",
            "compute.licenseCodes.list",
            "compute.licenses.get",
            "compute.licenses.getIamPolicy",
            "compute.licenses.list",
            "compute.machineImages.get",
            "compute.machineImages.getIamPolicy",
            "compute.machineImages.list",
            "compute.machineTypes.*",
            "compute.multiMig.get",
            "compute.multiMig.list",
            "compute.networkAttachments.get",
            "compute.networkAttachments.getIamPolicy",
            "compute.networkAttachments.list",
            "compute.networkAttachments.listEffectiveTags",
            "compute.networkAttachments.listTagBindings",
            "compute.networkEdgeSecurityServices.get",
            "compute.networkEdgeSecurityServices.list",
            "compute.networkEdgeSecurityServices.listEffectiveTags",
            "compute.networkEdgeSecurityServices.listTagBindings",
            "compute.networkEndpointGroups.get",
            "compute.networkEndpointGroups.list",
            "compute.networkEndpointGroups.listEffectiveTags",
            "compute.networkEndpointGroups.listTagBindings",
            "compute.networkProfiles.*",
            "compute.networks.get",
            "compute.networks.getEffectiveFirewalls",
            "compute.networks.getRegionEffectiveFirewalls",
            "compute.networks.list",
            "compute.networks.listEffectiveTags",
            "compute.networks.listPeeringRoutes",
            "compute.networks.listTagBindings",
            "compute.nodeGroups.get",
            "compute.nodeGroups.getIamPolicy",
            "compute.nodeGroups.list",
            "compute.nodeTemplates.get",
            "compute.nodeTemplates.getIamPolicy",
            "compute.nodeTemplates.list",
            "compute.nodeTypes.*",
            "compute.organizations.listAssociations",
            "compute.packetMirrorings.get",
            "compute.packetMirrorings.list",
            "compute.packetMirrorings.listEffectiveTags",
            "compute.packetMirrorings.listTagBindings",
            "compute.projects.get",
            "compute.publicAdvertisedPrefixes.get",
            "compute.publicAdvertisedPrefixes.list",
            "compute.publicDelegatedPrefixes.get",
            "compute.publicDelegatedPrefixes.list",
            "compute.publicDelegatedPrefixes.listEffectiveTags",
            "compute.publicDelegatedPrefixes.listTagBindings",
            "compute.regionBackendServices.get",
            "compute.regionBackendServices.getIamPolicy",
            "compute.regionBackendServices.list",
            "compute.regionBackendServices.listEffectiveTags",
            "compute.regionBackendServices.listTagBindings",
            "compute.regionFirewallPolicies.get",
            "compute.regionFirewallPolicies.getIamPolicy",
            "compute.regionFirewallPolicies.list",
            "compute.regionFirewallPolicies.listEffectiveTags",
            "compute.regionFirewallPolicies.listTagBindings",
            "compute.regionHealthCheckServices.get",
            "compute.regionHealthCheckServices.list",
            "compute.regionHealthChecks.get",
            "compute.regionHealthChecks.list",
            "compute.regionHealthChecks.listEffectiveTags",
            "compute.regionHealthChecks.listTagBindings",
            "compute.regionNetworkEndpointGroups.get",
            "compute.regionNetworkEndpointGroups.list",
            "compute.regionNetworkEndpointGroups.listEffectiveTags",
            "compute.regionNetworkEndpointGroups.listTagBindings",
            "compute.regionNotificationEndpoints.get",
            "compute.regionNotificationEndpoints.list",
            "compute.regionOperations.get",
            "compute.regionOperations.getIamPolicy",
            "compute.regionOperations.list",
            "compute.regionSecurityPolicies.get",
            "compute.regionSecurityPolicies.list",
            "compute.regionSecurityPolicies.listEffectiveTags",
            "compute.regionSecurityPolicies.listTagBindings",
            "compute.regionSslCertificates.get",
            "compute.regionSslCertificates.list",
            "compute.regionSslCertificates.listEffectiveTags",
            "compute.regionSslCertificates.listTagBindings",
            "compute.regionSslPolicies.get",
            "compute.regionSslPolicies.list",
            "compute.regionSslPolicies.listAvailableFeatures",
            "compute.regionSslPolicies.listEffectiveTags",
            "compute.regionSslPolicies.listTagBindings",
            "compute.regionTargetHttpProxies.get",
            "compute.regionTargetHttpProxies.list",
            "compute.regionTargetHttpProxies.listEffectiveTags",
            "compute.regionTargetHttpProxies.listTagBindings",
            "compute.regionTargetHttpsProxies.get",
            "compute.regionTargetHttpsProxies.list",
            "compute.regionTargetHttpsProxies.listEffectiveTags",
            "compute.regionTargetHttpsProxies.listTagBindings",
            "compute.regionTargetTcpProxies.get",
            "compute.regionTargetTcpProxies.list",
            "compute.regionTargetTcpProxies.listEffectiveTags",
            "compute.regionTargetTcpProxies.listTagBindings",
            "compute.regionUrlMaps.get",
            "compute.regionUrlMaps.list",
            "compute.regionUrlMaps.listEffectiveTags",
            "compute.regionUrlMaps.listTagBindings",
            "compute.regionUrlMaps.validate",
            "compute.regions.*",
            "compute.reservationBlocks.get",
            "compute.reservationBlocks.list",
            "compute.reservations.get",
            "compute.reservations.list",
            "compute.resourcePolicies.get",
            "compute.resourcePolicies.getIamPolicy",
            "compute.resourcePolicies.list",
            "compute.routers.get",
            "compute.routers.getRoutePolicy",
            "compute.routers.list",
            "compute.routers.listBgpRoutes",
            "compute.routers.listEffectiveTags",
            "compute.routers.listRoutePolicies",
            "compute.routers.listTagBindings",
            "compute.routes.get",
            "compute.routes.list",
            "compute.routes.listEffectiveTags",
            "compute.routes.listTagBindings",
            "compute.securityPolicies.get",
            "compute.securityPolicies.list",
            "compute.securityPolicies.listEffectiveTags",
            "compute.securityPolicies.listTagBindings",
            "compute.serviceAttachments.get",
            "compute.serviceAttachments.getIamPolicy",
            "compute.serviceAttachments.list",
            "compute.serviceAttachments.listEffectiveTags",
            "compute.serviceAttachments.listTagBindings",
            "compute.snapshotSettings.get",
            "compute.snapshots.get",
            "compute.snapshots.getIamPolicy",
            "compute.snapshots.list",
            "compute.snapshots.listEffectiveTags",
            "compute.snapshots.listTagBindings",
            "compute.spotAssistants.get",
            "compute.sslCertificates.get",
            "compute.sslCertificates.list",
            "compute.sslCertificates.listEffectiveTags",
            "compute.sslCertificates.listTagBindings",
            "compute.sslPolicies.get",
            "compute.sslPolicies.list",
            "compute.sslPolicies.listAvailableFeatures",
            "compute.sslPolicies.listEffectiveTags",
            "compute.sslPolicies.listTagBindings",
            "compute.storagePools.get",
            "compute.storagePools.getIamPolicy",
            "compute.storagePools.list",
            "compute.subnetworks.get",
            "compute.subnetworks.getIamPolicy",
            "compute.subnetworks.list",
            "compute.subnetworks.listEffectiveTags",
            "compute.subnetworks.listTagBindings",
            "compute.targetGrpcProxies.get",
            "compute.targetGrpcProxies.list",
            "compute.targetGrpcProxies.listEffectiveTags",
            "compute.targetGrpcProxies.listTagBindings",
            "compute.targetHttpProxies.get",
            "compute.targetHttpProxies.list",
            "compute.targetHttpProxies.listEffectiveTags",
            "compute.targetHttpProxies.listTagBindings",
            "compute.targetHttpsProxies.get",
            "compute.targetHttpsProxies.list",
            "compute.targetHttpsProxies.listEffectiveTags",
            "compute.targetHttpsProxies.listTagBindings",
            "compute.targetInstances.get",
            "compute.targetInstances.list",
            "compute.targetInstances.listEffectiveTags",
            "compute.targetInstances.listTagBindings",
            "compute.targetPools.get",
            "compute.targetPools.list",
            "compute.targetPools.listEffectiveTags",
            "compute.targetPools.listTagBindings",
            "compute.targetSslProxies.get",
            "compute.targetSslProxies.list",
            "compute.targetSslProxies.listEffectiveTags",
            "compute.targetSslProxies.listTagBindings",
            "compute.targetTcpProxies.get",
            "compute.targetTcpProxies.list",
            "compute.targetTcpProxies.listEffectiveTags",
            "compute.targetTcpProxies.listTagBindings",
            "compute.targetVpnGateways.get",
            "compute.targetVpnGateways.list",
            "compute.targetVpnGateways.listEffectiveTags",
            "compute.targetVpnGateways.listTagBindings",
            "compute.urlMaps.get",
            "compute.urlMaps.list",
            "compute.urlMaps.listEffectiveTags",
            "compute.urlMaps.listTagBindings",
            "compute.urlMaps.validate",
            "compute.vpnGateways.get",
            "compute.vpnGateways.list",
            "compute.vpnGateways.listEffectiveTags",
            "compute.vpnGateways.listTagBindings",
            "compute.vpnTunnels.get",
            "compute.vpnTunnels.list",
            "compute.vpnTunnels.listEffectiveTags",
            "compute.vpnTunnels.listTagBindings",
            "compute.wireGroups.get",
            "compute.wireGroups.list",
            "compute.zoneOperations.get",
            "compute.zoneOperations.getIamPolicy",
            "compute.zoneOperations.list",
            "compute.zones.*",
            "notebooks.environments.get",
            "notebooks.environments.getIamPolicy",
            "notebooks.environments.list",
            "notebooks.executions.create",
            "notebooks.executions.get",
            "notebooks.executions.getIamPolicy",
            "notebooks.executions.list",
            "notebooks.instances.checkUpgradability",
            "notebooks.instances.create",
            "notebooks.instances.get",
            "notebooks.instances.getHealth",
            "notebooks.instances.getIamPolicy",
            "notebooks.instances.list",
            "notebooks.locations.*",
            "notebooks.operations.get",
            "notebooks.operations.list",
            "notebooks.runtimes.create",
            "notebooks.runtimes.get",
            "notebooks.runtimes.getIamPolicy",
            "notebooks.runtimes.list",
            "notebooks.schedules.create",
            "notebooks.schedules.get",
            "notebooks.schedules.getIamPolicy",
            "notebooks.schedules.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "serviceusage.quotas.get",
            "serviceusage.services.get",
            "serviceusage.services.list"
          ],
          "title": "Notebooks Runner"
        },
        {
          "description": "Read-only access to Notebooks, all resources.",
          "id": "roles/notebooks.viewer",
          "is_beta": false,
          "permissions": [
            "aiplatform.notebookExecutionJobs.get",
            "aiplatform.notebookExecutionJobs.list",
            "aiplatform.schedules.get",
            "aiplatform.schedules.list",
            "compute.acceleratorTypes.*",
            "compute.addresses.get",
            "compute.addresses.list",
            "compute.addresses.listEffectiveTags",
            "compute.addresses.listTagBindings",
            "compute.autoscalers.get",
            "compute.autoscalers.list",
            "compute.backendBuckets.get",
            "compute.backendBuckets.getIamPolicy",
            "compute.backendBuckets.list",
            "compute.backendBuckets.listEffectiveTags",
            "compute.backendBuckets.listTagBindings",
            "compute.backendServices.get",
            "compute.backendServices.getIamPolicy",
            "compute.backendServices.list",
            "compute.backendServices.listEffectiveTags",
            "compute.backendServices.listTagBindings",
            "compute.commitments.get",
            "compute.commitments.list",
            "compute.crossSiteNetworks.get",
            "compute.crossSiteNetworks.list",
            "compute.diskSettings.get",
            "compute.diskTypes.*",
            "compute.disks.get",
            "compute.disks.getIamPolicy",
            "compute.disks.list",
            "compute.disks.listEffectiveTags",
            "compute.disks.listTagBindings",
            "compute.externalVpnGateways.get",
            "compute.externalVpnGateways.list",
            "compute.externalVpnGateways.listEffectiveTags",
            "compute.externalVpnGateways.listTagBindings",
            "compute.firewallPolicies.get",
            "compute.firewallPolicies.getIamPolicy",
            "compute.firewallPolicies.list",
            "compute.firewallPolicies.listEffectiveTags",
            "compute.firewallPolicies.listTagBindings",
            "compute.firewalls.get",
            "compute.firewalls.list",
            "compute.firewalls.listEffectiveTags",
            "compute.firewalls.listTagBindings",
            "compute.forwardingRules.get",
            "compute.forwardingRules.list",
            "compute.forwardingRules.listEffectiveTags",
            "compute.forwardingRules.listTagBindings",
            "compute.futureReservations.get",
            "compute.futureReservations.getIamPolicy",
            "compute.futureReservations.list",
            "compute.globalAddresses.get",
            "compute.globalAddresses.list",
            "compute.globalAddresses.listEffectiveTags",
            "compute.globalAddresses.listTagBindings",
            "compute.globalForwardingRules.get",
            "compute.globalForwardingRules.list",
            "compute.globalForwardingRules.listEffectiveTags",
            "compute.globalForwardingRules.listTagBindings",
            "compute.globalNetworkEndpointGroups.get",
            "compute.globalNetworkEndpointGroups.list",
            "compute.globalNetworkEndpointGroups.listEffectiveTags",
            "compute.globalNetworkEndpointGroups.listTagBindings",
            "compute.globalOperations.get",
            "compute.globalOperations.getIamPolicy",
            "compute.globalOperations.list",
            "compute.globalPublicDelegatedPrefixes.get",
            "compute.globalPublicDelegatedPrefixes.list",
            "compute.healthChecks.get",
            "compute.healthChecks.list",
            "compute.healthChecks.listEffectiveTags",
            "compute.healthChecks.listTagBindings",
            "compute.httpHealthChecks.get",
            "compute.httpHealthChecks.list",
            "compute.httpHealthChecks.listEffectiveTags",
            "compute.httpHealthChecks.listTagBindings",
            "compute.httpsHealthChecks.get",
            "compute.httpsHealthChecks.list",
            "compute.httpsHealthChecks.listEffectiveTags",
            "compute.httpsHealthChecks.listTagBindings",
            "compute.images.get",
            "compute.images.getFromFamily",
            "compute.images.getIamPolicy",
            "compute.images.list",
            "compute.images.listEffectiveTags",
            "compute.images.listTagBindings",
            "compute.instanceGroupManagers.get",
            "compute.instanceGroupManagers.list",
            "compute.instanceGroupManagers.listEffectiveTags",
            "compute.instanceGroupManagers.listTagBindings",
            "compute.instanceGroups.get",
            "compute.instanceGroups.list",
            "compute.instanceGroups.listEffectiveTags",
            "compute.instanceGroups.listTagBindings",
            "compute.instanceSettings.get",
            "compute.instanceTemplates.get",
            "compute.instanceTemplates.getIamPolicy",
            "compute.instanceTemplates.list",
            "compute.instances.get",
            "compute.instances.getEffectiveFirewalls",
            "compute.instances.getGuestAttributes",
            "compute.instances.getIamPolicy",
            "compute.instances.getScreenshot",
            "compute.instances.getSerialPortOutput",
            "compute.instances.getShieldedInstanceIdentity",
            "compute.instances.getShieldedVmIdentity",
            "compute.instances.list",
            "compute.instances.listEffectiveTags",
            "compute.instances.listReferrers",
            "compute.instances.listTagBindings",
            "compute.instantSnapshots.get",
            "compute.instantSnapshots.getIamPolicy",
            "compute.instantSnapshots.list",
            "compute.interconnectAttachments.get",
            "compute.interconnectAttachments.list",
            "compute.interconnectAttachments.listEffectiveTags",
            "compute.interconnectAttachments.listTagBindings",
            "compute.interconnectLocations.*",
            "compute.interconnectRemoteLocations.*",
            "compute.interconnects.get",
            "compute.interconnects.list",
            "compute.interconnects.listEffectiveTags",
            "compute.interconnects.listTagBindings",
            "compute.licenseCodes.get",
            "compute.licenseCodes.getIamPolicy",
            "compute.licenseCodes.list",
            "compute.licenses.get",
            "compute.licenses.getIamPolicy",
            "compute.licenses.list",
            "compute.machineImages.get",
            "compute.machineImages.getIamPolicy",
            "compute.machineImages.list",
            "compute.machineTypes.*",
            "compute.multiMig.get",
            "compute.multiMig.list",
            "compute.networkAttachments.get",
            "compute.networkAttachments.getIamPolicy",
            "compute.networkAttachments.list",
            "compute.networkAttachments.listEffectiveTags",
            "compute.networkAttachments.listTagBindings",
            "compute.networkEdgeSecurityServices.get",
            "compute.networkEdgeSecurityServices.list",
            "compute.networkEdgeSecurityServices.listEffectiveTags",
            "compute.networkEdgeSecurityServices.listTagBindings",
            "compute.networkEndpointGroups.get",
            "compute.networkEndpointGroups.list",
            "compute.networkEndpointGroups.listEffectiveTags",
            "compute.networkEndpointGroups.listTagBindings",
            "compute.networkProfiles.*",
            "compute.networks.get",
            "compute.networks.getEffectiveFirewalls",
            "compute.networks.getRegionEffectiveFirewalls",
            "compute.networks.list",
            "compute.networks.listEffectiveTags",
            "compute.networks.listPeeringRoutes",
            "compute.networks.listTagBindings",
            "compute.nodeGroups.get",
            "compute.nodeGroups.getIamPolicy",
            "compute.nodeGroups.list",
            "compute.nodeTemplates.get",
            "compute.nodeTemplates.getIamPolicy",
            "compute.nodeTemplates.list",
            "compute.nodeTypes.*",
            "compute.organizations.listAssociations",
            "compute.packetMirrorings.get",
            "compute.packetMirrorings.list",
            "compute.packetMirrorings.listEffectiveTags",
            "compute.packetMirrorings.listTagBindings",
            "compute.projects.get",
            "compute.publicAdvertisedPrefixes.get",
            "compute.publicAdvertisedPrefixes.list",
            "compute.publicDelegatedPrefixes.get",
            "compute.publicDelegatedPrefixes.list",
            "compute.publicDelegatedPrefixes.listEffectiveTags",
            "compute.publicDelegatedPrefixes.listTagBindings",
            "compute.regionBackendServices.get",
            "compute.regionBackendServices.getIamPolicy",
            "compute.regionBackendServices.list",
            "compute.regionBackendServices.listEffectiveTags",
            "compute.regionBackendServices.listTagBindings",
            "compute.regionFirewallPolicies.get",
            "compute.regionFirewallPolicies.getIamPolicy",
            "compute.regionFirewallPolicies.list",
            "compute.regionFirewallPolicies.listEffectiveTags",
            "compute.regionFirewallPolicies.listTagBindings",
            "compute.regionHealthCheckServices.get",
            "compute.regionHealthCheckServices.list",
            "compute.regionHealthChecks.get",
            "compute.regionHealthChecks.list",
            "compute.regionHealthChecks.listEffectiveTags",
            "compute.regionHealthChecks.listTagBindings",
            "compute.regionNetworkEndpointGroups.get",
            "compute.regionNetworkEndpointGroups.list",
            "compute.regionNetworkEndpointGroups.listEffectiveTags",
            "compute.regionNetworkEndpointGroups.listTagBindings",
            "compute.regionNotificationEndpoints.get",
            "compute.regionNotificationEndpoints.list",
            "compute.regionOperations.get",
            "compute.regionOperations.getIamPolicy",
            "compute.regionOperations.list",
            "compute.regionSecurityPolicies.get",
            "compute.regionSecurityPolicies.list",
            "compute.regionSecurityPolicies.listEffectiveTags",
            "compute.regionSecurityPolicies.listTagBindings",
            "compute.regionSslCertificates.get",
            "compute.regionSslCertificates.list",
            "compute.regionSslCertificates.listEffectiveTags",
            "compute.regionSslCertificates.listTagBindings",
            "compute.regionSslPolicies.get",
            "compute.regionSslPolicies.list",
            "compute.regionSslPolicies.listAvailableFeatures",
            "compute.regionSslPolicies.listEffectiveTags",
            "compute.regionSslPolicies.listTagBindings",
            "compute.regionTargetHttpProxies.get",
            "compute.regionTargetHttpProxies.list",
            "compute.regionTargetHttpProxies.listEffectiveTags",
            "compute.regionTargetHttpProxies.listTagBindings",
            "compute.regionTargetHttpsProxies.get",
            "compute.regionTargetHttpsProxies.list",
            "compute.regionTargetHttpsProxies.listEffectiveTags",
            "compute.regionTargetHttpsProxies.listTagBindings",
            "compute.regionTargetTcpProxies.get",
            "compute.regionTargetTcpProxies.list",
            "compute.regionTargetTcpProxies.listEffectiveTags",
            "compute.regionTargetTcpProxies.listTagBindings",
            "compute.regionUrlMaps.get",
            "compute.regionUrlMaps.list",
            "compute.regionUrlMaps.listEffectiveTags",
            "compute.regionUrlMaps.listTagBindings",
            "compute.regionUrlMaps.validate",
            "compute.regions.*",
            "compute.reservationBlocks.get",
            "compute.reservationBlocks.list",
            "compute.reservations.get",
            "compute.reservations.list",
            "compute.resourcePolicies.get",
            "compute.resourcePolicies.getIamPolicy",
            "compute.resourcePolicies.list",
            "compute.routers.get",
            "compute.routers.getRoutePolicy",
            "compute.routers.list",
            "compute.routers.listBgpRoutes",
            "compute.routers.listEffectiveTags",
            "compute.routers.listRoutePolicies",
            "compute.routers.listTagBindings",
            "compute.routes.get",
            "compute.routes.list",
            "compute.routes.listEffectiveTags",
            "compute.routes.listTagBindings",
            "compute.securityPolicies.get",
            "compute.securityPolicies.list",
            "compute.securityPolicies.listEffectiveTags",
            "compute.securityPolicies.listTagBindings",
            "compute.serviceAttachments.get",
            "compute.serviceAttachments.getIamPolicy",
            "compute.serviceAttachments.list",
            "compute.serviceAttachments.listEffectiveTags",
            "compute.serviceAttachments.listTagBindings",
            "compute.snapshotSettings.get",
            "compute.snapshots.get",
            "compute.snapshots.getIamPolicy",
            "compute.snapshots.list",
            "compute.snapshots.listEffectiveTags",
            "compute.snapshots.listTagBindings",
            "compute.spotAssistants.get",
            "compute.sslCertificates.get",
            "compute.sslCertificates.list",
            "compute.sslCertificates.listEffectiveTags",
            "compute.sslCertificates.listTagBindings",
            "compute.sslPolicies.get",
            "compute.sslPolicies.list",
            "compute.sslPolicies.listAvailableFeatures",
            "compute.sslPolicies.listEffectiveTags",
            "compute.sslPolicies.listTagBindings",
            "compute.storagePools.get",
            "compute.storagePools.getIamPolicy",
            "compute.storagePools.list",
            "compute.subnetworks.get",
            "compute.subnetworks.getIamPolicy",
            "compute.subnetworks.list",
            "compute.subnetworks.listEffectiveTags",
            "compute.subnetworks.listTagBindings",
            "compute.targetGrpcProxies.get",
            "compute.targetGrpcProxies.list",
            "compute.targetGrpcProxies.listEffectiveTags",
            "compute.targetGrpcProxies.listTagBindings",
            "compute.targetHttpProxies.get",
            "compute.targetHttpProxies.list",
            "compute.targetHttpProxies.listEffectiveTags",
            "compute.targetHttpProxies.listTagBindings",
            "compute.targetHttpsProxies.get",
            "compute.targetHttpsProxies.list",
            "compute.targetHttpsProxies.listEffectiveTags",
            "compute.targetHttpsProxies.listTagBindings",
            "compute.targetInstances.get",
            "compute.targetInstances.list",
            "compute.targetInstances.listEffectiveTags",
            "compute.targetInstances.listTagBindings",
            "compute.targetPools.get",
            "compute.targetPools.list",
            "compute.targetPools.listEffectiveTags",
            "compute.targetPools.listTagBindings",
            "compute.targetSslProxies.get",
            "compute.targetSslProxies.list",
            "compute.targetSslProxies.listEffectiveTags",
            "compute.targetSslProxies.listTagBindings",
            "compute.targetTcpProxies.get",
            "compute.targetTcpProxies.list",
            "compute.targetTcpProxies.listEffectiveTags",
            "compute.targetTcpProxies.listTagBindings",
            "compute.targetVpnGateways.get",
            "compute.targetVpnGateways.list",
            "compute.targetVpnGateways.listEffectiveTags",
            "compute.targetVpnGateways.listTagBindings",
            "compute.urlMaps.get",
            "compute.urlMaps.list",
            "compute.urlMaps.listEffectiveTags",
            "compute.urlMaps.listTagBindings",
            "compute.urlMaps.validate",
            "compute.vpnGateways.get",
            "compute.vpnGateways.list",
            "compute.vpnGateways.listEffectiveTags",
            "compute.vpnGateways.listTagBindings",
            "compute.vpnTunnels.get",
            "compute.vpnTunnels.list",
            "compute.vpnTunnels.listEffectiveTags",
            "compute.vpnTunnels.listTagBindings",
            "compute.wireGroups.get",
            "compute.wireGroups.list",
            "compute.zoneOperations.get",
            "compute.zoneOperations.getIamPolicy",
            "compute.zoneOperations.list",
            "compute.zones.*",
            "notebooks.environments.get",
            "notebooks.environments.getIamPolicy",
            "notebooks.environments.list",
            "notebooks.executions.get",
            "notebooks.executions.getIamPolicy",
            "notebooks.executions.list",
            "notebooks.instances.checkUpgradability",
            "notebooks.instances.get",
            "notebooks.instances.getHealth",
            "notebooks.instances.getIamPolicy",
            "notebooks.instances.list",
            "notebooks.locations.*",
            "notebooks.operations.get",
            "notebooks.operations.list",
            "notebooks.runtimes.get",
            "notebooks.runtimes.getIamPolicy",
            "notebooks.runtimes.list",
            "notebooks.schedules.get",
            "notebooks.schedules.getIamPolicy",
            "notebooks.schedules.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "serviceusage.quotas.get",
            "serviceusage.services.get",
            "serviceusage.services.list"
          ],
          "title": "Notebooks Viewer"
        },
        {
          "description": "Provides full access to AI Platform resources, and its jobs, operations, models, and versions.",
          "id": "roles/ml.admin",
          "is_beta": false,
          "permissions": [
            "ml.*",
            "resourcemanager.projects.get"
          ],
          "title": "AI Platform Admin"
        },
        {
          "description": "Provides ability to use AI Platform resources for creating models, versions, jobs for training and prediction, and sending online prediction requests.",
          "id": "roles/ml.developer",
          "is_beta": false,
          "permissions": [
            "ml.jobs.create",
            "ml.jobs.get",
            "ml.jobs.getIamPolicy",
            "ml.jobs.list",
            "ml.locations.*",
            "ml.models.create",
            "ml.models.get",
            "ml.models.getIamPolicy",
            "ml.models.list",
            "ml.models.predict",
            "ml.operations.get",
            "ml.operations.list",
            "ml.projects.getConfig",
            "ml.studies.*",
            "ml.trials.*",
            "ml.versions.get",
            "ml.versions.list",
            "ml.versions.predict",
            "resourcemanager.projects.get"
          ],
          "title": "AI Platform Developer"
        },
        {
          "description": "Provides full access to all permissions for a particular job resource. This role is automatically granted to the user who creates the job.",
          "id": "roles/ml.jobOwner",
          "is_beta": false,
          "permissions": [
            "ml.jobs.*"
          ],
          "title": "AI Platform Job Owner"
        },
        {
          "description": "Provides full access to the model and its versions. This role is automatically granted to the user who creates the model.",
          "id": "roles/ml.modelOwner",
          "is_beta": false,
          "permissions": [
            "ml.models.*",
            "ml.versions.*"
          ],
          "title": "AI Platform Model Owner"
        },
        {
          "description": "Provides permissions to read the model and its versions, and use them for prediction.",
          "id": "roles/ml.modelUser",
          "is_beta": false,
          "permissions": [
            "ml.models.get",
            "ml.models.predict",
            "ml.versions.get",
            "ml.versions.list",
            "ml.versions.predict"
          ],
          "title": "AI Platform Model User"
        },
        {
          "description": "Provides full access to all permissions for a particular operation resource.",
          "id": "roles/ml.operationOwner",
          "is_beta": false,
          "permissions": [
            "ml.operations.*"
          ],
          "title": "AI Platform Operation Owner"
        },
        {
          "description": "Provides read-only access to AI Platform resources.",
          "id": "roles/ml.viewer",
          "is_beta": false,
          "permissions": [
            "ml.jobs.get",
            "ml.jobs.list",
            "ml.locations.*",
            "ml.models.get",
            "ml.models.list",
            "ml.operations.get",
            "ml.operations.list",
            "ml.projects.getConfig",
            "ml.studies.get",
            "ml.studies.getIamPolicy",
            "ml.studies.list",
            "ml.trials.get",
            "ml.trials.list",
            "ml.versions.get",
            "ml.versions.list",
            "resourcemanager.projects.get"
          ],
          "title": "AI Platform Viewer"
        },
        {
          "description": "Administer Data Exchanges and Listings",
          "id": "roles/analyticshub.admin",
          "is_beta": false,
          "permissions": [
            "analyticshub.dataExchanges.create",
            "analyticshub.dataExchanges.delete",
            "analyticshub.dataExchanges.get",
            "analyticshub.dataExchanges.getIamPolicy",
            "analyticshub.dataExchanges.list",
            "analyticshub.dataExchanges.setIamPolicy",
            "analyticshub.dataExchanges.update",
            "analyticshub.dataExchanges.viewSubscriptions",
            "analyticshub.listings.create",
            "analyticshub.listings.delete",
            "analyticshub.listings.get",
            "analyticshub.listings.getIamPolicy",
            "analyticshub.listings.list",
            "analyticshub.listings.setIamPolicy",
            "analyticshub.listings.update",
            "analyticshub.listings.viewSubscriptions",
            "analyticshub.subscriptions.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Analytics Hub Admin"
        },
        {
          "description": "Grants full control over the Listing, including updating, deleting and setting ACLs",
          "id": "roles/analyticshub.listingAdmin",
          "is_beta": false,
          "permissions": [
            "analyticshub.dataExchanges.get",
            "analyticshub.dataExchanges.getIamPolicy",
            "analyticshub.dataExchanges.list",
            "analyticshub.listings.delete",
            "analyticshub.listings.get",
            "analyticshub.listings.getIamPolicy",
            "analyticshub.listings.list",
            "analyticshub.listings.setIamPolicy",
            "analyticshub.listings.update",
            "analyticshub.listings.viewSubscriptions",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Analytics Hub Listing Admin"
        },
        {
          "description": "Can publish to Data Exchanges thus creating Listings",
          "id": "roles/analyticshub.publisher",
          "is_beta": false,
          "permissions": [
            "analyticshub.dataExchanges.get",
            "analyticshub.dataExchanges.getIamPolicy",
            "analyticshub.dataExchanges.list",
            "analyticshub.listings.create",
            "analyticshub.listings.get",
            "analyticshub.listings.getIamPolicy",
            "analyticshub.listings.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Analytics Hub Publisher"
        },
        {
          "description": "Can browse Data Exchanges and subscribe to Listings",
          "id": "roles/analyticshub.subscriber",
          "is_beta": false,
          "permissions": [
            "analyticshub.dataExchanges.get",
            "analyticshub.dataExchanges.getIamPolicy",
            "analyticshub.dataExchanges.list",
            "analyticshub.dataExchanges.subscribe",
            "analyticshub.listings.get",
            "analyticshub.listings.getIamPolicy",
            "analyticshub.listings.list",
            "analyticshub.listings.subscribe",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Analytics Hub Subscriber"
        },
        {
          "description": "Grants full control over the Subscription, including updating and deleting",
          "id": "roles/analyticshub.subscriptionOwner",
          "is_beta": false,
          "permissions": [
            "analyticshub.dataExchanges.get",
            "analyticshub.dataExchanges.getIamPolicy",
            "analyticshub.dataExchanges.list",
            "analyticshub.listings.get",
            "analyticshub.listings.getIamPolicy",
            "analyticshub.listings.list",
            "analyticshub.subscriptions.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Analytics Hub Subscription Owner"
        },
        {
          "description": "Can browse Data Exchanges and Listings",
          "id": "roles/analyticshub.viewer",
          "is_beta": false,
          "permissions": [
            "analyticshub.dataExchanges.get",
            "analyticshub.dataExchanges.getIamPolicy",
            "analyticshub.dataExchanges.list",
            "analyticshub.listings.get",
            "analyticshub.listings.getIamPolicy",
            "analyticshub.listings.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Analytics Hub Viewer"
        },
        {
          "description": "Full access to manage devices.",
          "id": "roles/androidmanagement.user",
          "is_beta": false,
          "permissions": [
            "androidmanagement.enterprises.manage",
            "serviceusage.quotas.get",
            "serviceusage.services.get",
            "serviceusage.services.list"
          ],
          "title": "Android Management User"
        },
        {
          "description": "Admin access to Anthos Multi-cloud resources.",
          "id": "roles/gkemulticloud.admin",
          "is_beta": false,
          "permissions": [
            "gkemulticloud.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Anthos Multi-cloud Admin"
        },
        {
          "description": "Grant access to write cluster telemetry data such as logs, metrics, and resource metadata.",
          "id": "roles/gkemulticloud.telemetryWriter",
          "is_beta": false,
          "permissions": [
            "logging.logEntries.create",
            "logging.logEntries.route",
            "monitoring.metricDescriptors.create",
            "monitoring.metricDescriptors.get",
            "monitoring.metricDescriptors.list",
            "monitoring.monitoredResourceDescriptors.*",
            "monitoring.timeSeries.create",
            "opsconfigmonitoring.resourceMetadata.write"
          ],
          "title": "Anthos Multi-cloud Telemetry Writer"
        },
        {
          "description": "Viewer access to Anthos Multi-cloud resources.",
          "id": "roles/gkemulticloud.viewer",
          "is_beta": false,
          "permissions": [
            "gkemulticloud.attachedClusters.generateInstallManifest",
            "gkemulticloud.attachedClusters.get",
            "gkemulticloud.attachedClusters.list",
            "gkemulticloud.attachedServerConfigs.get",
            "gkemulticloud.awsClusters.generateAccessToken",
            "gkemulticloud.awsClusters.get",
            "gkemulticloud.awsClusters.list",
            "gkemulticloud.awsNodePools.get",
            "gkemulticloud.awsNodePools.list",
            "gkemulticloud.awsServerConfigs.get",
            "gkemulticloud.azureClients.get",
            "gkemulticloud.azureClients.list",
            "gkemulticloud.azureClusters.generateAccessToken",
            "gkemulticloud.azureClusters.get",
            "gkemulticloud.azureClusters.list",
            "gkemulticloud.azureNodePools.get",
            "gkemulticloud.azureNodePools.list",
            "gkemulticloud.azureServerConfigs.get",
            "gkemulticloud.operations.get",
            "gkemulticloud.operations.list",
            "gkemulticloud.operations.wait",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Anthos Multi-cloud Viewer"
        },
        {
          "description": "Full access to ApiGateway and related resources.",
          "id": "roles/apigateway.admin",
          "is_beta": false,
          "permissions": [
            "apigateway.*",
            "monitoring.metricDescriptors.list",
            "monitoring.monitoredResourceDescriptors.get",
            "monitoring.timeSeries.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "servicemanagement.services.get",
            "serviceusage.services.get",
            "serviceusage.services.list"
          ],
          "title": "ApiGateway Admin"
        },
        {
          "description": "Read-only access to ApiGateway and related resources.",
          "id": "roles/apigateway.viewer",
          "is_beta": false,
          "permissions": [
            "apigateway.apiconfigs.get",
            "apigateway.apiconfigs.getIamPolicy",
            "apigateway.apiconfigs.list",
            "apigateway.apis.get",
            "apigateway.apis.getIamPolicy",
            "apigateway.apis.list",
            "apigateway.apis.listEffectiveTags",
            "apigateway.apis.listTagBindings",
            "apigateway.gateways.get",
            "apigateway.gateways.getIamPolicy",
            "apigateway.gateways.list",
            "apigateway.gateways.listEffectiveTags",
            "apigateway.gateways.listTagBindings",
            "apigateway.locations.*",
            "apigateway.operations.get",
            "apigateway.operations.list",
            "monitoring.metricDescriptors.list",
            "monitoring.monitoredResourceDescriptors.get",
            "monitoring.timeSeries.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "servicemanagement.services.get",
            "serviceusage.services.get",
            "serviceusage.services.list"
          ],
          "title": "ApiGateway Viewer"
        },
        {
          "description": "Full access to all apigee resource features",
          "id": "roles/apigee.admin",
          "is_beta": false,
          "permissions": [
            "apigee.*",
            "apihub.*",
            "monitoring.timeSeries.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.getIamPolicy",
            "resourcemanager.projects.list"
          ],
          "title": "Apigee Organization Admin"
        },
        {
          "description": "Curated set of permissions for Apigee Universal Data Collection Agent to manage analytics for an Apigee Organization",
          "id": "roles/apigee.analyticsAgent",
          "is_beta": false,
          "permissions": [
            "apigee.datalocation.get",
            "apigee.environments.getDataLocation",
            "apigee.runtimeconfigs.get"
          ],
          "title": "Apigee Analytics Agent"
        },
        {
          "description": "Analytics editor for an Apigee Organization",
          "id": "roles/apigee.analyticsEditor",
          "is_beta": false,
          "permissions": [
            "apigee.addonsconfig.get",
            "apigee.datacollectors.*",
            "apigee.datastores.*",
            "apigee.entitlements.get",
            "apigee.envgroupattachments.get",
            "apigee.envgroupattachments.list",
            "apigee.envgroups.get",
            "apigee.envgroups.list",
            "apigee.environments.get",
            "apigee.environments.getStats",
            "apigee.environments.list",
            "apigee.exports.*",
            "apigee.hostqueries.*",
            "apigee.hoststats.get",
            "apigee.organizations.get",
            "apigee.organizations.list",
            "apigee.projectorganizations.get",
            "apigee.queries.*",
            "apigee.reports.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Apigee Analytics Editor"
        },
        {
          "description": "Analytics viewer for an Apigee Organization",
          "id": "roles/apigee.analyticsViewer",
          "is_beta": false,
          "permissions": [
            "apigee.addonsconfig.get",
            "apigee.datacollectors.get",
            "apigee.datacollectors.list",
            "apigee.datastores.get",
            "apigee.datastores.list",
            "apigee.entitlements.get",
            "apigee.envgroupattachments.get",
            "apigee.envgroupattachments.list",
            "apigee.envgroups.get",
            "apigee.envgroups.list",
            "apigee.environments.get",
            "apigee.environments.getStats",
            "apigee.environments.list",
            "apigee.exports.get",
            "apigee.exports.list",
            "apigee.hostqueries.get",
            "apigee.hostqueries.list",
            "apigee.hoststats.get",
            "apigee.organizations.get",
            "apigee.organizations.list",
            "apigee.projectorganizations.get",
            "apigee.queries.get",
            "apigee.queries.list",
            "apigee.reports.get",
            "apigee.reports.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Apigee Analytics Viewer"
        },
        {
          "description": "Full read/write access to all apigee API resources",
          "id": "roles/apigee.apiAdminV2",
          "is_beta": false,
          "permissions": [
            "apigee.apiproductattributes.*",
            "apigee.apiproducts.*",
            "apigee.deployments.list",
            "apigee.entitlements.get",
            "apigee.envgroupattachments.get",
            "apigee.envgroupattachments.list",
            "apigee.envgroups.get",
            "apigee.envgroups.list",
            "apigee.environments.get",
            "apigee.environments.getStats",
            "apigee.environments.list",
            "apigee.keyvaluemapentries.*",
            "apigee.keyvaluemaps.*",
            "apigee.organizations.get",
            "apigee.organizations.list",
            "apigee.projectorganizations.get",
            "apigee.proxies.*",
            "apigee.proxyrevisions.*",
            "apigee.sharedflowrevisions.*",
            "apigee.sharedflows.*",
            "apihub.apiHubInstances.get",
            "apihub.apiHubInstances.list",
            "apihub.apiOperations.get",
            "apihub.apiOperations.list",
            "apihub.apis.get",
            "apihub.apis.list",
            "apihub.apis.listEffectiveTags",
            "apihub.apis.listTagBindings",
            "apihub.attributes.get",
            "apihub.attributes.list",
            "apihub.curations.get",
            "apihub.curations.list",
            "apihub.definitions.get",
            "apihub.definitions.list",
            "apihub.dependencies.get",
            "apihub.dependencies.list",
            "apihub.deployments.get",
            "apihub.deployments.list",
            "apihub.deployments.listEffectiveTags",
            "apihub.deployments.listTagBindings",
            "apihub.externalApis.get",
            "apihub.externalApis.list",
            "apihub.hostProjectRegistrations.get",
            "apihub.hostProjectRegistrations.list",
            "apihub.llmEnablements.get",
            "apihub.llmEnablements.list",
            "apihub.locations.searchResources",
            "apihub.operations.get",
            "apihub.operations.list",
            "apihub.plugininstances.get",
            "apihub.plugininstances.list",
            "apihub.plugins.get",
            "apihub.plugins.list",
            "apihub.runTimeProjectAttachments.get",
            "apihub.runTimeProjectAttachments.list",
            "apihub.specs.get",
            "apihub.specs.list",
            "apihub.styleGuides.get",
            "apihub.versions.get",
            "apihub.versions.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Apigee API Admin"
        },
        {
          "description": "Reader of apigee resources",
          "id": "roles/apigee.apiReaderV2",
          "is_beta": false,
          "permissions": [
            "apigee.apiproductattributes.get",
            "apigee.apiproductattributes.list",
            "apigee.apiproducts.get",
            "apigee.apiproducts.list",
            "apigee.entitlements.get",
            "apigee.envgroupattachments.get",
            "apigee.envgroupattachments.list",
            "apigee.envgroups.get",
            "apigee.envgroups.list",
            "apigee.environments.get",
            "apigee.environments.getStats",
            "apigee.environments.list",
            "apigee.keyvaluemapentries.get",
            "apigee.keyvaluemapentries.list",
            "apigee.keyvaluemaps.list",
            "apigee.organizations.get",
            "apigee.organizations.list",
            "apigee.projectorganizations.get",
            "apigee.proxies.get",
            "apigee.proxies.list",
            "apigee.proxyrevisions.deploy",
            "apigee.proxyrevisions.get",
            "apigee.proxyrevisions.list",
            "apigee.proxyrevisions.undeploy",
            "apigee.sharedflowrevisions.deploy",
            "apigee.sharedflowrevisions.get",
            "apigee.sharedflowrevisions.list",
            "apigee.sharedflowrevisions.undeploy",
            "apigee.sharedflows.get",
            "apigee.sharedflows.list",
            "apihub.apiHubInstances.get",
            "apihub.apiHubInstances.list",
            "apihub.apiOperations.get",
            "apihub.apiOperations.list",
            "apihub.apis.get",
            "apihub.apis.list",
            "apihub.apis.listEffectiveTags",
            "apihub.apis.listTagBindings",
            "apihub.attributes.get",
            "apihub.attributes.list",
            "apihub.curations.get",
            "apihub.curations.list",
            "apihub.definitions.get",
            "apihub.definitions.list",
            "apihub.dependencies.get",
            "apihub.dependencies.list",
            "apihub.deployments.get",
            "apihub.deployments.list",
            "apihub.deployments.listEffectiveTags",
            "apihub.deployments.listTagBindings",
            "apihub.externalApis.get",
            "apihub.externalApis.list",
            "apihub.hostProjectRegistrations.get",
            "apihub.hostProjectRegistrations.list",
            "apihub.llmEnablements.get",
            "apihub.llmEnablements.list",
            "apihub.locations.searchResources",
            "apihub.operations.get",
            "apihub.operations.list",
            "apihub.plugininstances.get",
            "apihub.plugininstances.list",
            "apihub.plugins.get",
            "apihub.plugins.list",
            "apihub.runTimeProjectAttachments.get",
            "apihub.runTimeProjectAttachments.list",
            "apihub.specs.get",
            "apihub.specs.list",
            "apihub.styleGuides.get",
            "apihub.versions.get",
            "apihub.versions.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Apigee API Reader"
        },
        {
          "description": "Invoker of deployments in the apigee runtime",
          "id": "roles/apigee.deploymentInvoker",
          "is_beta": false,
          "permissions": [
            "apigee.deployments.invoke"
          ],
          "title": "Apigee Deployment Invoker"
        },
        {
          "description": "Developer admin of apigee resources",
          "id": "roles/apigee.developerAdmin",
          "is_beta": false,
          "permissions": [
            "apigee.apiproductattributes.get",
            "apigee.apiproductattributes.list",
            "apigee.apiproducts.get",
            "apigee.apiproducts.list",
            "apigee.appgroupapps.*",
            "apigee.appgroups.*",
            "apigee.appkeys.*",
            "apigee.apps.*",
            "apigee.datacollectors.*",
            "apigee.developerappattributes.*",
            "apigee.developerapps.*",
            "apigee.developerattributes.*",
            "apigee.developerbalances.*",
            "apigee.developermonetizationconfigs.*",
            "apigee.developers.*",
            "apigee.developersubscriptions.*",
            "apigee.entitlements.get",
            "apigee.environments.get",
            "apigee.environments.getStats",
            "apigee.environments.list",
            "apigee.hoststats.get",
            "apigee.organizations.get",
            "apigee.organizations.list",
            "apigee.projectorganizations.get",
            "apigee.rateplans.get",
            "apigee.rateplans.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.getIamPolicy",
            "resourcemanager.projects.list"
          ],
          "title": "Apigee Developer Admin"
        },
        {
          "description": "Full read/write access to apigee environment resources, including deployments.",
          "id": "roles/apigee.environmentAdmin",
          "is_beta": false,
          "permissions": [
            "apigee.addonsconfig.*",
            "apigee.archivedeployments.*",
            "apigee.datacollectors.get",
            "apigee.datacollectors.list",
            "apigee.deployments.*",
            "apigee.entitlements.get",
            "apigee.envgroupattachments.get",
            "apigee.envgroupattachments.list",
            "apigee.envgroups.get",
            "apigee.envgroups.list",
            "apigee.environments.get",
            "apigee.environments.getIamPolicy",
            "apigee.environments.getStats",
            "apigee.environments.list",
            "apigee.environments.setIamPolicy",
            "apigee.environments.update",
            "apigee.flowhooks.*",
            "apigee.ingressconfigs.get",
            "apigee.keystorealiases.*",
            "apigee.keystores.*",
            "apigee.keyvaluemapentries.*",
            "apigee.keyvaluemaps.*",
            "apigee.maskconfigs.*",
            "apigee.organizations.get",
            "apigee.organizations.list",
            "apigee.projectorganizations.get",
            "apigee.proxies.get",
            "apigee.proxies.list",
            "apigee.proxyrevisions.deploy",
            "apigee.proxyrevisions.get",
            "apigee.proxyrevisions.list",
            "apigee.proxyrevisions.undeploy",
            "apigee.references.*",
            "apigee.resourcefiles.*",
            "apigee.sharedflowrevisions.deploy",
            "apigee.sharedflowrevisions.get",
            "apigee.sharedflowrevisions.list",
            "apigee.sharedflowrevisions.undeploy",
            "apigee.sharedflows.get",
            "apigee.sharedflows.list",
            "apigee.targetservers.*",
            "apigee.traceconfig.*",
            "apigee.traceconfigoverrides.*",
            "apigee.tracesessions.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.getIamPolicy",
            "resourcemanager.projects.list"
          ],
          "title": "Apigee Environment Admin"
        },
        {
          "description": "All permissions related to monetization",
          "id": "roles/apigee.monetizationAdmin",
          "is_beta": false,
          "permissions": [
            "apigee.apiproducts.get",
            "apigee.apiproducts.list",
            "apigee.developerbalances.*",
            "apigee.developermonetizationconfigs.*",
            "apigee.developersubscriptions.*",
            "apigee.entitlements.get",
            "apigee.organizations.get",
            "apigee.organizations.list",
            "apigee.projectorganizations.get",
            "apigee.rateplans.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Apigee Monetization Admin"
        },
        {
          "description": "Portal admin for an Apigee Organization",
          "id": "roles/apigee.portalAdmin",
          "is_beta": false,
          "permissions": [
            "apigee.entitlements.get",
            "apigee.organizations.get",
            "apigee.organizations.list",
            "apigee.portals.*",
            "apigee.projectorganizations.get",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Apigee Portal Admin"
        },
        {
          "description": "Viewer of all apigee resources",
          "id": "roles/apigee.readOnlyAdmin",
          "is_beta": false,
          "permissions": [
            "apigee.addonsconfig.get",
            "apigee.apiproductattributes.get",
            "apigee.apiproductattributes.list",
            "apigee.apiproducts.get",
            "apigee.apiproducts.list",
            "apigee.appgroupapps.get",
            "apigee.appgroupapps.list",
            "apigee.appgroups.get",
            "apigee.appgroups.list",
            "apigee.appkeys.get",
            "apigee.apps.*",
            "apigee.archivedeployments.download",
            "apigee.archivedeployments.get",
            "apigee.archivedeployments.list",
            "apigee.caches.list",
            "apigee.canaryevaluations.get",
            "apigee.datacollectors.get",
            "apigee.datacollectors.list",
            "apigee.datalocation.get",
            "apigee.datastores.get",
            "apigee.datastores.list",
            "apigee.deployments.get",
            "apigee.deployments.list",
            "apigee.developerappattributes.get",
            "apigee.developerappattributes.list",
            "apigee.developerapps.get",
            "apigee.developerapps.list",
            "apigee.developerattributes.get",
            "apigee.developerattributes.list",
            "apigee.developerbalances.get",
            "apigee.developermonetizationconfigs.get",
            "apigee.developers.get",
            "apigee.developers.list",
            "apigee.developersubscriptions.get",
            "apigee.developersubscriptions.list",
            "apigee.dnsZones.get",
            "apigee.dnsZones.list",
            "apigee.endpointattachments.get",
            "apigee.endpointattachments.list",
            "apigee.entitlements.get",
            "apigee.envgroupattachments.get",
            "apigee.envgroupattachments.list",
            "apigee.envgroups.get",
            "apigee.envgroups.list",
            "apigee.environments.get",
            "apigee.environments.getDataLocation",
            "apigee.environments.getIamPolicy",
            "apigee.environments.getStats",
            "apigee.environments.list",
            "apigee.exports.get",
            "apigee.exports.list",
            "apigee.flowhooks.getSharedFlow",
            "apigee.flowhooks.list",
            "apigee.hostqueries.get",
            "apigee.hostqueries.list",
            "apigee.hostsecurityreports.get",
            "apigee.hostsecurityreports.list",
            "apigee.hoststats.get",
            "apigee.ingressconfigs.get",
            "apigee.instanceattachments.get",
            "apigee.instanceattachments.list",
            "apigee.instances.get",
            "apigee.instances.list",
            "apigee.keystorealiases.get",
            "apigee.keystorealiases.list",
            "apigee.keystores.get",
            "apigee.keystores.list",
            "apigee.keyvaluemapentries.get",
            "apigee.keyvaluemapentries.list",
            "apigee.keyvaluemaps.list",
            "apigee.maskconfigs.get",
            "apigee.nataddresses.get",
            "apigee.nataddresses.list",
            "apigee.operations.*",
            "apigee.organizations.get",
            "apigee.organizations.list",
            "apigee.portals.get",
            "apigee.portals.list",
            "apigee.projectorganizations.get",
            "apigee.proxies.get",
            "apigee.proxies.list",
            "apigee.proxyrevisions.get",
            "apigee.proxyrevisions.list",
            "apigee.queries.get",
            "apigee.queries.list",
            "apigee.rateplans.get",
            "apigee.rateplans.list",
            "apigee.references.get",
            "apigee.references.list",
            "apigee.reports.get",
            "apigee.reports.list",
            "apigee.resourcefiles.get",
            "apigee.resourcefiles.list",
            "apigee.runtimeconfigs.get",
            "apigee.securityActions.get",
            "apigee.securityActions.list",
            "apigee.securityActionsConfig.get",
            "apigee.securityAssessmentResults.compute",
            "apigee.securityFeedback.get",
            "apigee.securityFeedback.list",
            "apigee.securityIncidents.get",
            "apigee.securityIncidents.list",
            "apigee.securityMonitoringConditions.get",
            "apigee.securityMonitoringConditions.list",
            "apigee.securityProfileEnvironments.computeScore",
            "apigee.securityProfiles.get",
            "apigee.securityProfiles.list",
            "apigee.securityProfilesV2.get",
            "apigee.securityProfilesV2.list",
            "apigee.securitySettings.get",
            "apigee.securityStats.*",
            "apigee.securityreports.get",
            "apigee.securityreports.list",
            "apigee.setupcontexts.get",
            "apigee.sharedflowrevisions.get",
            "apigee.sharedflowrevisions.list",
            "apigee.sharedflows.get",
            "apigee.sharedflows.list",
            "apigee.spaces.get",
            "apigee.spaces.getIamPolicy",
            "apigee.spaces.list",
            "apigee.targetservers.get",
            "apigee.targetservers.list",
            "apigee.traceconfig.get",
            "apigee.traceconfigoverrides.get",
            "apigee.traceconfigoverrides.list",
            "apigee.tracesessions.get",
            "apigee.tracesessions.list",
            "monitoring.timeSeries.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.getIamPolicy",
            "resourcemanager.projects.list"
          ],
          "title": "Apigee Read-only Admin"
        },
        {
          "description": "Curated set of permissions for a runtime agent to access Apigee Organization resources",
          "id": "roles/apigee.runtimeAgent",
          "is_beta": false,
          "permissions": [
            "apigee.canaryevaluations.*",
            "apigee.entitlements.get",
            "apigee.environments.get",
            "apigee.ingressconfigs.get",
            "apigee.instances.reportStatus",
            "apigee.operations.*",
            "apigee.organizations.get",
            "apigee.projectorganizations.get",
            "apigee.runtimeconfigs.get"
          ],
          "title": "Apigee Runtime Agent"
        },
        {
          "description": "Security admin for an Apigee Organization",
          "id": "roles/apigee.securityAdmin",
          "is_beta": false,
          "permissions": [
            "apigee.addonsconfig.get",
            "apigee.entitlements.get",
            "apigee.envgroupattachments.get",
            "apigee.envgroupattachments.list",
            "apigee.envgroups.get",
            "apigee.envgroups.list",
            "apigee.environments.get",
            "apigee.environments.list",
            "apigee.hostsecurityreports.*",
            "apigee.organizations.get",
            "apigee.organizations.list",
            "apigee.projectorganizations.get",
            "apigee.securityActions.*",
            "apigee.securityActionsConfig.*",
            "apigee.securityAssessmentResults.compute",
            "apigee.securityFeedback.*",
            "apigee.securityIncidents.*",
            "apigee.securityMonitoringConditions.*",
            "apigee.securityProfileEnvironments.*",
            "apigee.securityProfiles.*",
            "apigee.securityProfilesV2.*",
            "apigee.securitySettings.*",
            "apigee.securityStats.*",
            "apigee.securityreports.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Apigee Security Admin"
        },
        {
          "description": "Security viewer for an Apigee Organization",
          "id": "roles/apigee.securityViewer",
          "is_beta": false,
          "permissions": [
            "apigee.addonsconfig.get",
            "apigee.entitlements.get",
            "apigee.envgroupattachments.get",
            "apigee.envgroupattachments.list",
            "apigee.envgroups.get",
            "apigee.envgroups.list",
            "apigee.environments.get",
            "apigee.environments.list",
            "apigee.hostsecurityreports.get",
            "apigee.hostsecurityreports.list",
            "apigee.organizations.get",
            "apigee.organizations.list",
            "apigee.projectorganizations.get",
            "apigee.securityActions.get",
            "apigee.securityActions.list",
            "apigee.securityActionsConfig.get",
            "apigee.securityAssessmentResults.compute",
            "apigee.securityFeedback.get",
            "apigee.securityFeedback.list",
            "apigee.securityIncidents.get",
            "apigee.securityIncidents.list",
            "apigee.securityMonitoringConditions.get",
            "apigee.securityMonitoringConditions.list",
            "apigee.securityProfileEnvironments.computeScore",
            "apigee.securityProfiles.get",
            "apigee.securityProfiles.list",
            "apigee.securityProfilesV2.get",
            "apigee.securityProfilesV2.list",
            "apigee.securitySettings.get",
            "apigee.securityStats.*",
            "apigee.securityreports.get",
            "apigee.securityreports.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Apigee Security Viewer"
        },
        {
          "description": "Provides users granted permissions on an Apigee space the minimum read permissions required to manage resources in that space in the UI.",
          "id": "roles/apigee.spaceConsoleUser",
          "is_beta": false,
          "permissions": [
            "apigee.apps.list",
            "apigee.deployments.list",
            "apigee.entitlements.get",
            "apigee.envgroupattachments.list",
            "apigee.envgroups.list",
            "apigee.environments.get",
            "apigee.environments.list",
            "apigee.instanceattachments.list",
            "apigee.instances.list",
            "apigee.organizations.get",
            "apigee.organizations.list",
            "apigee.projectorganizations.get",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Apigee Space Console User"
        },
        {
          "description": "Provides full access to resources that can be associated with a space. This role is intended to be granted at the space level.",
          "id": "roles/apigee.spaceContentEditor",
          "is_beta": false,
          "permissions": [
            "apigee.apiproductattributes.*",
            "apigee.apiproducts.*",
            "apigee.deployments.get",
            "apigee.deployments.list",
            "apigee.keyvaluemapentries.*",
            "apigee.keyvaluemaps.*",
            "apigee.proxies.*",
            "apigee.proxyrevisions.*",
            "apigee.rateplans.*",
            "apigee.sharedflowrevisions.*",
            "apigee.sharedflows.*",
            "apigee.spaces.get",
            "apigee.spaces.list",
            "apigee.tracesessions.*"
          ],
          "title": "Apigee Space Content Editor"
        },
        {
          "description": "Provides read access to resources that can be associated with a space. This role is intended to be granted at the space level.",
          "id": "roles/apigee.spaceContentViewer",
          "is_beta": false,
          "permissions": [
            "apigee.apiproductattributes.get",
            "apigee.apiproductattributes.list",
            "apigee.apiproducts.get",
            "apigee.apiproducts.list",
            "apigee.deployments.get",
            "apigee.deployments.list",
            "apigee.keyvaluemapentries.get",
            "apigee.keyvaluemapentries.list",
            "apigee.keyvaluemaps.list",
            "apigee.proxies.get",
            "apigee.proxies.list",
            "apigee.proxyrevisions.get",
            "apigee.proxyrevisions.list",
            "apigee.rateplans.get",
            "apigee.rateplans.list",
            "apigee.sharedflowrevisions.get",
            "apigee.sharedflowrevisions.list",
            "apigee.sharedflows.get",
            "apigee.sharedflows.list",
            "apigee.spaces.get",
            "apigee.spaces.list",
            "apigee.tracesessions.get",
            "apigee.tracesessions.list"
          ],
          "title": "Apigee Space Content Viewer"
        },
        {
          "description": "Curated set of permissions for a Synchronizer to manage environments in an Apigee Organization",
          "id": "roles/apigee.synchronizerManager",
          "is_beta": false,
          "permissions": [
            "apigee.environments.get",
            "apigee.environments.manageRuntime",
            "apigee.ingressconfigs.get"
          ],
          "title": "Apigee Synchronizer Manager"
        },
        {
          "description": "Admin of Apigee Connect",
          "id": "roles/apigeeconnect.Admin",
          "is_beta": false,
          "permissions": [
            "apigeeconnect.connections.list"
          ],
          "title": "Apigee Connect Admin"
        },
        {
          "description": "Ability to set up Apigee Connect agent between external clusters and Google.",
          "id": "roles/apigeeconnect.Agent",
          "is_beta": false,
          "permissions": [
            "apigeeconnect.endpoints.connect"
          ],
          "title": "Apigee Connect Agent"
        },
        {
          "description": "Full access to Cloud Apigee Registry Registry and Runtime resources.",
          "id": "roles/apigeeregistry.admin",
          "is_beta": true,
          "permissions": [
            "apigeeregistry.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Cloud Apigee Registry Admin"
        },
        {
          "description": "Edit access to Cloud Apigee Registry Registry resources.",
          "id": "roles/apigeeregistry.editor",
          "is_beta": true,
          "permissions": [
            "apigeeregistry.apis.create",
            "apigeeregistry.apis.delete",
            "apigeeregistry.apis.get",
            "apigeeregistry.apis.getIamPolicy",
            "apigeeregistry.apis.list",
            "apigeeregistry.apis.update",
            "apigeeregistry.artifacts.create",
            "apigeeregistry.artifacts.delete",
            "apigeeregistry.artifacts.get",
            "apigeeregistry.artifacts.getIamPolicy",
            "apigeeregistry.artifacts.list",
            "apigeeregistry.artifacts.update",
            "apigeeregistry.deployments.*",
            "apigeeregistry.specs.create",
            "apigeeregistry.specs.delete",
            "apigeeregistry.specs.get",
            "apigeeregistry.specs.getIamPolicy",
            "apigeeregistry.specs.list",
            "apigeeregistry.specs.update",
            "apigeeregistry.versions.create",
            "apigeeregistry.versions.delete",
            "apigeeregistry.versions.get",
            "apigeeregistry.versions.getIamPolicy",
            "apigeeregistry.versions.list",
            "apigeeregistry.versions.update",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Cloud Apigee Registry Editor"
        },
        {
          "description": "Read-only access to Cloud Apigee Registry Registry resources.",
          "id": "roles/apigeeregistry.viewer",
          "is_beta": true,
          "permissions": [
            "apigeeregistry.apis.get",
            "apigeeregistry.apis.list",
            "apigeeregistry.artifacts.get",
            "apigeeregistry.artifacts.list",
            "apigeeregistry.deployments.get",
            "apigeeregistry.deployments.list",
            "apigeeregistry.specs.get",
            "apigeeregistry.specs.list",
            "apigeeregistry.versions.get",
            "apigeeregistry.versions.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Cloud Apigee Registry Viewer"
        },
        {
          "description": "The role used by Apigee Registry application workers to read and update Apigee Registry Artifacts.",
          "id": "roles/apigeeregistry.worker",
          "is_beta": true,
          "permissions": [
            "apigeeregistry.apis.get",
            "apigeeregistry.apis.list",
            "apigeeregistry.apis.update",
            "apigeeregistry.artifacts.create",
            "apigeeregistry.artifacts.delete",
            "apigeeregistry.artifacts.get",
            "apigeeregistry.artifacts.list",
            "apigeeregistry.artifacts.update",
            "apigeeregistry.deployments.get",
            "apigeeregistry.deployments.list",
            "apigeeregistry.deployments.update",
            "apigeeregistry.specs.get",
            "apigeeregistry.specs.list",
            "apigeeregistry.specs.update",
            "apigeeregistry.versions.get",
            "apigeeregistry.versions.list",
            "apigeeregistry.versions.update",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Cloud Apigee Registry Worker"
        },
        {
          "description": "Read/Write/Modify access to all application configuration and settings.To deploy new versions, a principal must have the Service Account User (roles/iam.serviceAccountUser) role on the assigned App Engine service account, and the Cloud Build Editor (roles/cloudbuild.builds.editor), and Cloud Storage Object Admin (roles/storage.objectAdmin) roles on the project.",
          "id": "roles/appengine.appAdmin",
          "is_beta": false,
          "permissions": [
            "appengine.applications.get",
            "appengine.applications.listRuntimes",
            "appengine.applications.update",
            "appengine.instances.*",
            "appengine.memcache.addKey",
            "appengine.memcache.flush",
            "appengine.memcache.get",
            "appengine.memcache.update",
            "appengine.operations.*",
            "appengine.runtimes.actAsAdmin",
            "appengine.services.*",
            "appengine.versions.create",
            "appengine.versions.delete",
            "appengine.versions.get",
            "appengine.versions.list",
            "appengine.versions.update",
            "artifactregistry.projectsettings.get",
            "artifactregistry.repositories.deleteArtifacts",
            "artifactregistry.repositories.downloadArtifacts",
            "artifactregistry.repositories.uploadArtifacts",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "App Engine Admin"
        },
        {
          "description": "Ability to create the App Engine resource for the project.",
          "id": "roles/appengine.appCreator",
          "is_beta": false,
          "permissions": [
            "appengine.applications.create",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "App Engine Creator"
        },
        {
          "description": "Read-only access to all application configuration and settings.",
          "id": "roles/appengine.appViewer",
          "is_beta": false,
          "permissions": [
            "appengine.applications.get",
            "appengine.applications.listRuntimes",
            "appengine.instances.get",
            "appengine.instances.list",
            "appengine.operations.*",
            "appengine.services.get",
            "appengine.services.list",
            "appengine.versions.get",
            "appengine.versions.list",
            "artifactregistry.projectsettings.get",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "App Engine Viewer"
        },
        {
          "description": "Read-only access to all application configuration, settings, and deployed source code.",
          "id": "roles/appengine.codeViewer",
          "is_beta": false,
          "permissions": [
            "appengine.applications.get",
            "appengine.applications.listRuntimes",
            "appengine.instances.get",
            "appengine.instances.list",
            "appengine.operations.*",
            "appengine.services.get",
            "appengine.services.list",
            "appengine.versions.get",
            "appengine.versions.getFileContents",
            "appengine.versions.list",
            "artifactregistry.projectsettings.get",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "App Engine Code Viewer"
        },
        {
          "description": "Ability to read or manage v2 instances.",
          "id": "roles/appengine.debugger",
          "is_beta": false,
          "permissions": [
            "appengine.applications.get",
            "appengine.applications.listRuntimes",
            "appengine.instances.*",
            "appengine.operations.*",
            "appengine.services.get",
            "appengine.services.list",
            "appengine.versions.get",
            "appengine.versions.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "App Engine Managed VM Debug Access"
        },
        {
          "description": "Read-only access to all application configuration and settings.To deploy new versions, you must also have the Service Account User (roles/iam.serviceAccountUser) role on the assigned App Engine service account, and the Cloud Build Editor (roles/cloudbuild.builds.editor), and Cloud Storage Object Admin (roles/storage.objectAdmin) roles on the project.Cannot modify existing versions other than deleting versions that are not receiving traffic.",
          "id": "roles/appengine.deployer",
          "is_beta": false,
          "permissions": [
            "appengine.applications.get",
            "appengine.applications.listRuntimes",
            "appengine.instances.get",
            "appengine.instances.list",
            "appengine.operations.*",
            "appengine.services.get",
            "appengine.services.list",
            "appengine.versions.create",
            "appengine.versions.delete",
            "appengine.versions.get",
            "appengine.versions.list",
            "artifactregistry.projectsettings.get",
            "artifactregistry.repositories.deleteArtifacts",
            "artifactregistry.repositories.downloadArtifacts",
            "artifactregistry.repositories.uploadArtifacts",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "App Engine Deployer"
        },
        {
          "description": "Can get, set, delete, and flush App Engine Memcache items.",
          "id": "roles/appengine.memcacheDataAdmin",
          "is_beta": false,
          "permissions": [
            "appengine.applications.get",
            "appengine.memcache.addKey",
            "appengine.memcache.flush",
            "appengine.memcache.get",
            "appengine.memcache.update",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "App Engine Memcache Data Admin"
        },
        {
          "description": "Read-only access to all application configuration and settings.Write access to module-level and version-level settings. Cannot deploy a new version.",
          "id": "roles/appengine.serviceAdmin",
          "is_beta": false,
          "permissions": [
            "appengine.applications.get",
            "appengine.applications.listRuntimes",
            "appengine.instances.delete",
            "appengine.instances.get",
            "appengine.instances.list",
            "appengine.operations.*",
            "appengine.services.*",
            "appengine.versions.delete",
            "appengine.versions.get",
            "appengine.versions.list",
            "appengine.versions.update",
            "artifactregistry.projectsettings.get",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "App Engine Service Admin"
        },
        {
          "description": "Administrator access to create and manage repositories.",
          "id": "roles/artifactregistry.admin",
          "is_beta": false,
          "permissions": [
            "artifactregistry.aptartifacts.create",
            "artifactregistry.attachments.*",
            "artifactregistry.dockerimages.*",
            "artifactregistry.files.*",
            "artifactregistry.kfpartifacts.create",
            "artifactregistry.locations.*",
            "artifactregistry.mavenartifacts.*",
            "artifactregistry.npmpackages.*",
            "artifactregistry.packages.*",
            "artifactregistry.projectsettings.*",
            "artifactregistry.pythonpackages.*",
            "artifactregistry.repositories.create",
            "artifactregistry.repositories.createTagBinding",
            "artifactregistry.repositories.delete",
            "artifactregistry.repositories.deleteArtifacts",
            "artifactregistry.repositories.deleteTagBinding",
            "artifactregistry.repositories.downloadArtifacts",
            "artifactregistry.repositories.get",
            "artifactregistry.repositories.getIamPolicy",
            "artifactregistry.repositories.list",
            "artifactregistry.repositories.listEffectiveTags",
            "artifactregistry.repositories.listTagBindings",
            "artifactregistry.repositories.readViaVirtualRepository",
            "artifactregistry.repositories.setIamPolicy",
            "artifactregistry.repositories.update",
            "artifactregistry.repositories.uploadArtifacts",
            "artifactregistry.rules.*",
            "artifactregistry.tags.*",
            "artifactregistry.versions.*",
            "artifactregistry.yumartifacts.create",
            "cloudkms.keyHandles.*",
            "cloudkms.operations.get",
            "cloudkms.projects.showEffectiveAutokeyConfig"
          ],
          "title": "Artifact Registry Administrator"
        },
        {
          "description": "Access to run migration tooling to migrate from Container Registry to Artifact Registry",
          "id": "roles/artifactregistry.containerRegistryMigrationAdmin",
          "is_beta": false,
          "permissions": [
            "artifactregistry.projectsettings.*",
            "artifactregistry.repositories.create",
            "artifactregistry.repositories.downloadArtifacts",
            "artifactregistry.repositories.get",
            "artifactregistry.repositories.getIamPolicy",
            "artifactregistry.repositories.list",
            "artifactregistry.repositories.setIamPolicy",
            "artifactregistry.repositories.uploadArtifacts",
            "cloudasset.assets.analyzeIamPolicy",
            "cloudasset.assets.searchAllIamPolicies",
            "cloudasset.assets.searchAllResources",
            "iam.roles.get",
            "resourcemanager.projects.get",
            "resourcemanager.projects.getIamPolicy",
            "serviceusage.services.use",
            "storage.objects.get",
            "storage.objects.list"
          ],
          "title": "Container Registry -> Artifact Registry Migration Admin"
        },
        {
          "description": "Access to manage artifacts in repositories, as well as create new repositories on push",
          "id": "roles/artifactregistry.createOnPushRepoAdmin",
          "is_beta": false,
          "permissions": [
            "artifactregistry.aptartifacts.create",
            "artifactregistry.attachments.*",
            "artifactregistry.dockerimages.*",
            "artifactregistry.files.*",
            "artifactregistry.kfpartifacts.create",
            "artifactregistry.locations.*",
            "artifactregistry.mavenartifacts.*",
            "artifactregistry.npmpackages.*",
            "artifactregistry.packages.*",
            "artifactregistry.projectsettings.get",
            "artifactregistry.pythonpackages.*",
            "artifactregistry.repositories.createOnPush",
            "artifactregistry.repositories.deleteArtifacts",
            "artifactregistry.repositories.downloadArtifacts",
            "artifactregistry.repositories.get",
            "artifactregistry.repositories.list",
            "artifactregistry.repositories.listEffectiveTags",
            "artifactregistry.repositories.listTagBindings",
            "artifactregistry.repositories.readViaVirtualRepository",
            "artifactregistry.repositories.uploadArtifacts",
            "artifactregistry.rules.*",
            "artifactregistry.tags.*",
            "artifactregistry.versions.*",
            "artifactregistry.yumartifacts.create"
          ],
          "title": "Artifact Registry Create-on-Push Repository Administrator"
        },
        {
          "description": "Access to read and write repository items, as well as create new repositories on push",
          "id": "roles/artifactregistry.createOnPushWriter",
          "is_beta": false,
          "permissions": [
            "artifactregistry.aptartifacts.create",
            "artifactregistry.attachments.create",
            "artifactregistry.attachments.get",
            "artifactregistry.attachments.list",
            "artifactregistry.dockerimages.*",
            "artifactregistry.files.download",
            "artifactregistry.files.get",
            "artifactregistry.files.list",
            "artifactregistry.files.update",
            "artifactregistry.files.upload",
            "artifactregistry.kfpartifacts.create",
            "artifactregistry.locations.*",
            "artifactregistry.mavenartifacts.*",
            "artifactregistry.npmpackages.*",
            "artifactregistry.packages.get",
            "artifactregistry.packages.list",
            "artifactregistry.packages.update",
            "artifactregistry.projectsettings.get",
            "artifactregistry.pythonpackages.*",
            "artifactregistry.repositories.createOnPush",
            "artifactregistry.repositories.downloadArtifacts",
            "artifactregistry.repositories.get",
            "artifactregistry.repositories.list",
            "artifactregistry.repositories.listEffectiveTags",
            "artifactregistry.repositories.listTagBindings",
            "artifactregistry.repositories.readViaVirtualRepository",
            "artifactregistry.repositories.uploadArtifacts",
            "artifactregistry.rules.get",
            "artifactregistry.rules.list",
            "artifactregistry.tags.create",
            "artifactregistry.tags.get",
            "artifactregistry.tags.list",
            "artifactregistry.tags.update",
            "artifactregistry.versions.get",
            "artifactregistry.versions.list",
            "artifactregistry.yumartifacts.create"
          ],
          "title": "Artifact Registry Create-on-Push Writer"
        },
        {
          "description": "Access to read repository items.",
          "id": "roles/artifactregistry.reader",
          "is_beta": false,
          "permissions": [
            "artifactregistry.attachments.get",
            "artifactregistry.attachments.list",
            "artifactregistry.dockerimages.*",
            "artifactregistry.files.download",
            "artifactregistry.files.get",
            "artifactregistry.files.list",
            "artifactregistry.locations.*",
            "artifactregistry.mavenartifacts.*",
            "artifactregistry.npmpackages.*",
            "artifactregistry.packages.get",
            "artifactregistry.packages.list",
            "artifactregistry.projectsettings.get",
            "artifactregistry.pythonpackages.*",
            "artifactregistry.repositories.downloadArtifacts",
            "artifactregistry.repositories.get",
            "artifactregistry.repositories.list",
            "artifactregistry.repositories.listEffectiveTags",
            "artifactregistry.repositories.listTagBindings",
            "artifactregistry.repositories.readViaVirtualRepository",
            "artifactregistry.rules.get",
            "artifactregistry.rules.list",
            "artifactregistry.tags.get",
            "artifactregistry.tags.list",
            "artifactregistry.versions.get",
            "artifactregistry.versions.list"
          ],
          "title": "Artifact Registry Reader"
        },
        {
          "description": "Access to manage artifacts in repositories.",
          "id": "roles/artifactregistry.repoAdmin",
          "is_beta": false,
          "permissions": [
            "artifactregistry.aptartifacts.create",
            "artifactregistry.attachments.*",
            "artifactregistry.dockerimages.*",
            "artifactregistry.files.*",
            "artifactregistry.kfpartifacts.create",
            "artifactregistry.locations.*",
            "artifactregistry.mavenartifacts.*",
            "artifactregistry.npmpackages.*",
            "artifactregistry.packages.*",
            "artifactregistry.projectsettings.get",
            "artifactregistry.pythonpackages.*",
            "artifactregistry.repositories.deleteArtifacts",
            "artifactregistry.repositories.downloadArtifacts",
            "artifactregistry.repositories.get",
            "artifactregistry.repositories.list",
            "artifactregistry.repositories.listEffectiveTags",
            "artifactregistry.repositories.listTagBindings",
            "artifactregistry.repositories.readViaVirtualRepository",
            "artifactregistry.repositories.uploadArtifacts",
            "artifactregistry.rules.*",
            "artifactregistry.tags.*",
            "artifactregistry.versions.*",
            "artifactregistry.yumartifacts.create"
          ],
          "title": "Artifact Registry Repository Administrator"
        },
        {
          "description": "Access to read and write repository items.",
          "id": "roles/artifactregistry.writer",
          "is_beta": false,
          "permissions": [
            "artifactregistry.aptartifacts.create",
            "artifactregistry.attachments.create",
            "artifactregistry.attachments.get",
            "artifactregistry.attachments.list",
            "artifactregistry.dockerimages.*",
            "artifactregistry.files.download",
            "artifactregistry.files.get",
            "artifactregistry.files.list",
            "artifactregistry.files.update",
            "artifactregistry.files.upload",
            "artifactregistry.kfpartifacts.create",
            "artifactregistry.locations.*",
            "artifactregistry.mavenartifacts.*",
            "artifactregistry.npmpackages.*",
            "artifactregistry.packages.get",
            "artifactregistry.packages.list",
            "artifactregistry.packages.update",
            "artifactregistry.projectsettings.get",
            "artifactregistry.pythonpackages.*",
            "artifactregistry.repositories.downloadArtifacts",
            "artifactregistry.repositories.get",
            "artifactregistry.repositories.list",
            "artifactregistry.repositories.listEffectiveTags",
            "artifactregistry.repositories.listTagBindings",
            "artifactregistry.repositories.readViaVirtualRepository",
            "artifactregistry.repositories.uploadArtifacts",
            "artifactregistry.rules.get",
            "artifactregistry.rules.list",
            "artifactregistry.tags.create",
            "artifactregistry.tags.get",
            "artifactregistry.tags.list",
            "artifactregistry.tags.update",
            "artifactregistry.versions.get",
            "artifactregistry.versions.list",
            "artifactregistry.yumartifacts.create"
          ],
          "title": "Artifact Registry Writer"
        },
        {
          "description": "Grants full access to Assured Workloads resources, CRM resources - project/folder and Organization Policy administration",
          "id": "roles/assuredworkloads.admin",
          "is_beta": false,
          "permissions": [
            "assuredworkloads.*",
            "axt.labels.set",
            "bigquery.config.update",
            "logging.settings.update",
            "orgpolicy.policies.*",
            "orgpolicy.policy.*",
            "resourcemanager.folders.create",
            "resourcemanager.folders.get",
            "resourcemanager.folders.list",
            "resourcemanager.organizations.get",
            "resourcemanager.projects.create",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Assured Workloads Administrator"
        },
        {
          "description": "Grants read, write access to Assured Workloads resources, CRM resources - project/folder and Organization Policy administration",
          "id": "roles/assuredworkloads.editor",
          "is_beta": false,
          "permissions": [
            "assuredworkloads.*",
            "axt.labels.set",
            "bigquery.config.update",
            "logging.settings.update",
            "orgpolicy.policies.*",
            "orgpolicy.policy.*",
            "resourcemanager.folders.create",
            "resourcemanager.folders.get",
            "resourcemanager.folders.list",
            "resourcemanager.organizations.get",
            "resourcemanager.projects.create",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Assured Workloads Editor"
        },
        {
          "description": "Grants read access to all Assured Workloads resources and CRM resources - project/folder",
          "id": "roles/assuredworkloads.reader",
          "is_beta": false,
          "permissions": [
            "assuredworkloads.operations.*",
            "assuredworkloads.updates.list",
            "assuredworkloads.violations.get",
            "assuredworkloads.violations.list",
            "assuredworkloads.workload.get",
            "assuredworkloads.workload.list",
            "orgpolicy.policies.list",
            "orgpolicy.policy.get",
            "resourcemanager.folders.get",
            "resourcemanager.folders.list",
            "resourcemanager.organizations.get",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Assured Workloads Reader"
        },
        {
          "description": "Full access to all AutoML resources",
          "id": "roles/automl.admin",
          "is_beta": true,
          "permissions": [
            "automl.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "serviceusage.services.get",
            "serviceusage.services.list"
          ],
          "title": "AutoML Admin"
        },
        {
          "description": "Editor of all AutoML resources",
          "id": "roles/automl.editor",
          "is_beta": true,
          "permissions": [
            "automl.annotationSpecs.*",
            "automl.annotations.*",
            "automl.columnSpecs.*",
            "automl.datasets.create",
            "automl.datasets.delete",
            "automl.datasets.export",
            "automl.datasets.get",
            "automl.datasets.import",
            "automl.datasets.list",
            "automl.datasets.update",
            "automl.examples.*",
            "automl.files.*",
            "automl.humanAnnotationTasks.*",
            "automl.locations.get",
            "automl.locations.list",
            "automl.modelEvaluations.*",
            "automl.models.create",
            "automl.models.delete",
            "automl.models.deploy",
            "automl.models.export",
            "automl.models.get",
            "automl.models.list",
            "automl.models.predict",
            "automl.models.undeploy",
            "automl.operations.*",
            "automl.tableSpecs.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "serviceusage.services.get",
            "serviceusage.services.list"
          ],
          "title": "AutoML Editor"
        },
        {
          "description": "Predict using models",
          "id": "roles/automl.predictor",
          "is_beta": true,
          "permissions": [
            "automl.models.predict",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "AutoML Predictor"
        },
        {
          "description": "Viewer of all AutoML resources",
          "id": "roles/automl.viewer",
          "is_beta": true,
          "permissions": [
            "automl.annotationSpecs.get",
            "automl.annotationSpecs.list",
            "automl.annotations.list",
            "automl.columnSpecs.get",
            "automl.columnSpecs.list",
            "automl.datasets.get",
            "automl.datasets.list",
            "automl.examples.get",
            "automl.examples.list",
            "automl.files.list",
            "automl.humanAnnotationTasks.get",
            "automl.humanAnnotationTasks.list",
            "automl.locations.get",
            "automl.locations.list",
            "automl.modelEvaluations.get",
            "automl.modelEvaluations.list",
            "automl.models.get",
            "automl.models.list",
            "automl.operations.get",
            "automl.operations.list",
            "automl.tableSpecs.get",
            "automl.tableSpecs.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "serviceusage.services.get",
            "serviceusage.services.list"
          ],
          "title": "AutoML Viewer"
        },
        {
          "description": "Provides full access to all Backup and DR resources.",
          "id": "roles/backupdr.admin",
          "is_beta": false,
          "permissions": [
            "backupdr.backupPlanAssociations.*",
            "backupdr.backupPlans.*",
            "backupdr.backupVaults.*",
            "backupdr.bvbackups.*",
            "backupdr.bvdataSources.*",
            "backupdr.compute.restoreFromBackupVault",
            "backupdr.locations.*",
            "backupdr.managementServers.*",
            "backupdr.operations.*",
            "backupdr.serviceConfig.initialize",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Backup and DR Admin"
        },
        {
          "description": "Provides read access to resource backup config. Resource backup config has the metadata of a Google Cloud resource that can be backed up, along with its backup configurations.",
          "id": "roles/backupdr.backupConfigViewer",
          "is_beta": true,
          "permissions": [
            "backupdr.locations.list",
            "backupdr.resourceBackupConfigs.*"
          ],
          "title": "Backup and DR Backup Config Viewer"
        },
        {
          "description": "Allows the user to apply existing backup plans. This role cannot create backup plans or restore from a backup.",
          "id": "roles/backupdr.backupUser",
          "is_beta": false,
          "permissions": [
            "backupdr.backupPlanAssociations.*",
            "backupdr.backupPlans.get",
            "backupdr.backupPlans.list",
            "backupdr.backupPlans.useForComputeInstance",
            "backupdr.backupVaults.get",
            "backupdr.backupVaults.list",
            "backupdr.bvbackups.get",
            "backupdr.bvbackups.list",
            "backupdr.bvdataSources.get",
            "backupdr.bvdataSources.list",
            "backupdr.locations.*",
            "backupdr.managementServers.access",
            "backupdr.managementServers.assignBackupPlans",
            "backupdr.managementServers.createDynamicProtection",
            "backupdr.managementServers.deleteDynamicProtection",
            "backupdr.managementServers.get",
            "backupdr.managementServers.getDynamicProtection",
            "backupdr.managementServers.list",
            "backupdr.managementServers.listDynamicProtection",
            "backupdr.managementServers.manageApplications",
            "backupdr.managementServers.manageBackups",
            "backupdr.managementServers.manageHosts",
            "backupdr.managementServers.viewBackupPlans",
            "backupdr.managementServers.viewReports",
            "backupdr.managementServers.viewStorage",
            "backupdr.managementServers.viewSystem",
            "backupdr.operations.get",
            "backupdr.operations.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Backup and DR Backup User"
        },
        {
          "description": "Allows the Backup Appliance permissions to create and manage backups in a backup vault.",
          "id": "roles/backupdr.backupvaultAccessor",
          "is_beta": false,
          "permissions": [
            "backupdr.backupVaults.get",
            "backupdr.backupVaults.list",
            "backupdr.bvbackups.delete",
            "backupdr.bvbackups.get",
            "backupdr.bvbackups.list",
            "backupdr.bvbackups.update",
            "backupdr.bvdataSources.*",
            "backupdr.operations.*"
          ],
          "title": "Backup and DR Backup Vault Accessor"
        },
        {
          "description": "Allows the Backup Appliance full administrative control of backup vault resources.",
          "id": "roles/backupdr.backupvaultAdmin",
          "is_beta": false,
          "permissions": [
            "backupdr.backupVaults.*",
            "backupdr.bvbackups.*",
            "backupdr.bvdataSources.get",
            "backupdr.bvdataSources.list",
            "backupdr.bvdataSources.update",
            "backupdr.compute.restoreFromBackupVault",
            "backupdr.locations.*",
            "backupdr.operations.*"
          ],
          "title": "Backup and DR Backup Vault Admin"
        },
        {
          "description": "Allows the Backup Appliance permission to list backup vaults in a given project.",
          "id": "roles/backupdr.backupvaultLister",
          "is_beta": false,
          "permissions": [
            "backupdr.backupVaults.list"
          ],
          "title": "Backup and DR Backup Vault Lister"
        },
        {
          "description": "Allows read-only permissions to access backup vault resources and backups.",
          "id": "roles/backupdr.backupvaultViewer",
          "is_beta": false,
          "permissions": [
            "backupdr.backupVaults.get",
            "backupdr.backupVaults.list",
            "backupdr.bvbackups.get",
            "backupdr.bvbackups.list",
            "backupdr.bvdataSources.get",
            "backupdr.bvdataSources.list",
            "backupdr.operations.get",
            "backupdr.operations.list"
          ],
          "title": "Backup and DR Backup Vault Viewer"
        },
        {
          "description": "Allows a Backup and DR service account to store and manage data (backups or metadata) in Cloud Storage.",
          "id": "roles/backupdr.cloudStorageOperator",
          "is_beta": false,
          "permissions": [
            "storage.buckets.create",
            "storage.buckets.get",
            "storage.objects.create",
            "storage.objects.delete",
            "storage.objects.get",
            "storage.objects.list"
          ],
          "title": "Backup and DR Cloud Storage Operator"
        },
        {
          "description": "Allows a Backup and DR service account to discover, back up, and restore Compute Engine VM instances.",
          "id": "roles/backupdr.computeEngineOperator",
          "is_beta": false,
          "permissions": [
            "backupdr.managementServers.createConnection",
            "compute.addresses.list",
            "compute.addresses.use",
            "compute.addresses.useInternal",
            "compute.diskTypes.*",
            "compute.disks.create",
            "compute.disks.createSnapshot",
            "compute.disks.delete",
            "compute.disks.get",
            "compute.disks.setLabels",
            "compute.disks.use",
            "compute.disks.useReadOnly",
            "compute.firewalls.list",
            "compute.globalOperations.get",
            "compute.images.create",
            "compute.images.delete",
            "compute.images.get",
            "compute.images.useReadOnly",
            "compute.instances.attachDisk",
            "compute.instances.create",
            "compute.instances.createTagBinding",
            "compute.instances.delete",
            "compute.instances.detachDisk",
            "compute.instances.get",
            "compute.instances.list",
            "compute.instances.listEffectiveTags",
            "compute.instances.pscInterfaceCreate",
            "compute.instances.setDeletionProtection",
            "compute.instances.setLabels",
            "compute.instances.setMetadata",
            "compute.instances.setServiceAccount",
            "compute.instances.setTags",
            "compute.instances.start",
            "compute.instances.stop",
            "compute.instances.updateDisplayDevice",
            "compute.instances.useReadOnly",
            "compute.machineTypes.*",
            "compute.networks.list",
            "compute.nodeGroups.get",
            "compute.nodeGroups.list",
            "compute.nodeTemplates.get",
            "compute.projects.get",
            "compute.regionOperations.get",
            "compute.regions.*",
            "compute.resourcePolicies.use",
            "compute.snapshots.create",
            "compute.snapshots.delete",
            "compute.snapshots.get",
            "compute.snapshots.setLabels",
            "compute.snapshots.useReadOnly",
            "compute.subnetworks.list",
            "compute.subnetworks.use",
            "compute.subnetworks.useExternalIp",
            "compute.zoneOperations.get",
            "compute.zones.list",
            "iam.serviceAccounts.actAs",
            "iam.serviceAccounts.get",
            "iam.serviceAccounts.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Backup and DR Compute Engine Operator"
        },
        {
          "description": "Grants the Backup and DR management server access role to Backup Appliances.",
          "id": "roles/backupdr.managementServerAccessor",
          "is_beta": false,
          "permissions": [
            "backupdr.managementServers.createConnection"
          ],
          "title": "Backup and DR Management Server Accessor"
        },
        {
          "description": "Allows the user to mount from a backup. This role cannot create a backup plan or restore from a backup.",
          "id": "roles/backupdr.mountUser",
          "is_beta": false,
          "permissions": [
            "backupdr.locations.*",
            "backupdr.managementServers.access",
            "backupdr.managementServers.get",
            "backupdr.managementServers.getDynamicProtection",
            "backupdr.managementServers.list",
            "backupdr.managementServers.listDynamicProtection",
            "backupdr.managementServers.manageApplications",
            "backupdr.managementServers.manageClones",
            "backupdr.managementServers.manageHosts",
            "backupdr.managementServers.manageLiveClones",
            "backupdr.managementServers.manageMirroring",
            "backupdr.managementServers.manageMounts",
            "backupdr.managementServers.manageWorkflows",
            "backupdr.managementServers.refreshWorkflows",
            "backupdr.managementServers.runWorkflows",
            "backupdr.managementServers.viewBackupPlans",
            "backupdr.managementServers.viewReports",
            "backupdr.managementServers.viewStorage",
            "backupdr.managementServers.viewSystem",
            "backupdr.managementServers.viewWorkflows",
            "backupdr.operations.get",
            "backupdr.operations.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Backup and DR Mount User"
        },
        {
          "description": "Allows the user to restore or mount from a backup. This role cannot create a backup plan.",
          "id": "roles/backupdr.restoreUser",
          "is_beta": false,
          "permissions": [
            "backupdr.backupVaults.get",
            "backupdr.backupVaults.list",
            "backupdr.bvbackups.get",
            "backupdr.bvbackups.list",
            "backupdr.bvbackups.restore",
            "backupdr.bvdataSources.get",
            "backupdr.bvdataSources.list",
            "backupdr.compute.restoreFromBackupVault",
            "backupdr.locations.*",
            "backupdr.managementServers.access",
            "backupdr.managementServers.get",
            "backupdr.managementServers.getDynamicProtection",
            "backupdr.managementServers.list",
            "backupdr.managementServers.listDynamicProtection",
            "backupdr.managementServers.manageApplications",
            "backupdr.managementServers.manageClones",
            "backupdr.managementServers.manageHosts",
            "backupdr.managementServers.manageLiveClones",
            "backupdr.managementServers.manageMigrations",
            "backupdr.managementServers.manageMirroring",
            "backupdr.managementServers.manageMounts",
            "backupdr.managementServers.manageRestores",
            "backupdr.managementServers.manageWorkflows",
            "backupdr.managementServers.refreshWorkflows",
            "backupdr.managementServers.runWorkflows",
            "backupdr.managementServers.testFailOvers",
            "backupdr.managementServers.viewBackupPlans",
            "backupdr.managementServers.viewReports",
            "backupdr.managementServers.viewStorage",
            "backupdr.managementServers.viewSystem",
            "backupdr.managementServers.viewWorkflows",
            "backupdr.operations.get",
            "backupdr.operations.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Backup and DR Restore User"
        },
        {
          "description": "Provides access to management console. Granular Backup and DR permissions depend on ACL configuration provided by Backup and DR admin within the management console.",
          "id": "roles/backupdr.user",
          "is_beta": false,
          "permissions": [
            "backupdr.backupPlanAssociations.createForComputeInstance",
            "backupdr.backupPlanAssociations.deleteForComputeInstance",
            "backupdr.managementServers.access",
            "backupdr.managementServers.backupAccess",
            "backupdr.managementServers.get",
            "backupdr.managementServers.getDynamicProtection",
            "backupdr.managementServers.getIamPolicy",
            "backupdr.managementServers.list",
            "backupdr.managementServers.listDynamicProtection",
            "backupdr.managementServers.viewBackupPlans",
            "backupdr.managementServers.viewBackupServers",
            "backupdr.managementServers.viewReports",
            "backupdr.managementServers.viewStorage",
            "backupdr.managementServers.viewSystem",
            "backupdr.managementServers.viewWorkflows",
            "backupdr.operations.get",
            "backupdr.operations.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Backup and DR User"
        },
        {
          "description": "Provides full access to Backup and DR resources except deploying and managing backup infrastructure, expiring backups, changing data sensitivity and configuring on-premises billing.",
          "id": "roles/backupdr.userv2",
          "is_beta": false,
          "permissions": [
            "backupdr.backupPlanAssociations.*",
            "backupdr.backupPlans.*",
            "backupdr.backupVaults.associate",
            "backupdr.backupVaults.get",
            "backupdr.backupVaults.list",
            "backupdr.bvbackups.get",
            "backupdr.bvbackups.list",
            "backupdr.bvbackups.restore",
            "backupdr.bvdataSources.get",
            "backupdr.bvdataSources.list",
            "backupdr.compute.restoreFromBackupVault",
            "backupdr.locations.*",
            "backupdr.managementServers.access",
            "backupdr.managementServers.assignBackupPlans",
            "backupdr.managementServers.backupAccess",
            "backupdr.managementServers.createDynamicProtection",
            "backupdr.managementServers.deleteDynamicProtection",
            "backupdr.managementServers.get",
            "backupdr.managementServers.getDynamicProtection",
            "backupdr.managementServers.getIamPolicy",
            "backupdr.managementServers.list",
            "backupdr.managementServers.listDynamicProtection",
            "backupdr.managementServers.manageApplications",
            "backupdr.managementServers.manageBackupPlans",
            "backupdr.managementServers.manageBackups",
            "backupdr.managementServers.manageClones",
            "backupdr.managementServers.manageHosts",
            "backupdr.managementServers.manageJobs",
            "backupdr.managementServers.manageLiveClones",
            "backupdr.managementServers.manageMigrations",
            "backupdr.managementServers.manageMirroring",
            "backupdr.managementServers.manageMounts",
            "backupdr.managementServers.manageRestores",
            "backupdr.managementServers.manageWorkflows",
            "backupdr.managementServers.refreshWorkflows",
            "backupdr.managementServers.runWorkflows",
            "backupdr.managementServers.testFailOvers",
            "backupdr.managementServers.viewBackupPlans",
            "backupdr.managementServers.viewBackupServers",
            "backupdr.managementServers.viewReports",
            "backupdr.managementServers.viewStorage",
            "backupdr.managementServers.viewSystem",
            "backupdr.managementServers.viewWorkflows",
            "backupdr.operations.get",
            "backupdr.operations.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Backup and DR User V2"
        },
        {
          "description": "Provides read-only access to all Backup and DR resources.",
          "id": "roles/backupdr.viewer",
          "is_beta": false,
          "permissions": [
            "backupdr.backupPlanAssociations.get",
            "backupdr.backupPlanAssociations.list",
            "backupdr.backupPlans.get",
            "backupdr.backupPlans.list",
            "backupdr.backupVaults.get",
            "backupdr.backupVaults.list",
            "backupdr.bvbackups.get",
            "backupdr.bvbackups.list",
            "backupdr.bvdataSources.get",
            "backupdr.bvdataSources.list",
            "backupdr.locations.*",
            "backupdr.managementServers.access",
            "backupdr.managementServers.backupAccess",
            "backupdr.managementServers.get",
            "backupdr.managementServers.getDynamicProtection",
            "backupdr.managementServers.getIamPolicy",
            "backupdr.managementServers.list",
            "backupdr.managementServers.listDynamicProtection",
            "backupdr.managementServers.viewBackupPlans",
            "backupdr.managementServers.viewBackupServers",
            "backupdr.managementServers.viewReports",
            "backupdr.managementServers.viewStorage",
            "backupdr.managementServers.viewSystem",
            "backupdr.managementServers.viewWorkflows",
            "backupdr.operations.get",
            "backupdr.operations.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Backup and DR Viewer"
        },
        {
          "description": "Full access to all Backup for GKE resources.",
          "id": "roles/gkebackup.admin",
          "is_beta": false,
          "permissions": [
            "gkebackup.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Backup for GKE Admin"
        },
        {
          "description": "Allows administrators to manage all BackupPlan and Backup resources.",
          "id": "roles/gkebackup.backupAdmin",
          "is_beta": false,
          "permissions": [
            "gkebackup.backupPlans.*",
            "gkebackup.backups.*",
            "gkebackup.locations.*",
            "gkebackup.operations.get",
            "gkebackup.operations.list",
            "gkebackup.volumeBackups.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Backup for GKE Backup Admin"
        },
        {
          "description": "Allows administrators to manage Backup resources for specific BackupPlans",
          "id": "roles/gkebackup.delegatedBackupAdmin",
          "is_beta": false,
          "permissions": [
            "gkebackup.backupPlans.get",
            "gkebackup.backups.*",
            "gkebackup.volumeBackups.*"
          ],
          "title": "Backup for GKE Delegated Backup Admin"
        },
        {
          "description": "Allows administrators to manage Restore resources for specific RestorePlans",
          "id": "roles/gkebackup.delegatedRestoreAdmin",
          "is_beta": false,
          "permissions": [
            "gkebackup.restorePlans.get",
            "gkebackup.restores.*",
            "gkebackup.volumeRestores.*"
          ],
          "title": "Backup for GKE Delegated Restore Admin"
        },
        {
          "description": "Allows administrators to manage all RestorePlan and Restore resources.",
          "id": "roles/gkebackup.restoreAdmin",
          "is_beta": false,
          "permissions": [
            "gkebackup.backupPlans.get",
            "gkebackup.backupPlans.list",
            "gkebackup.backups.get",
            "gkebackup.backups.getBackupIndex",
            "gkebackup.backups.list",
            "gkebackup.locations.*",
            "gkebackup.operations.get",
            "gkebackup.operations.list",
            "gkebackup.restorePlans.*",
            "gkebackup.restores.*",
            "gkebackup.volumeBackups.*",
            "gkebackup.volumeRestores.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Backup for GKE Restore Admin"
        },
        {
          "description": "Read-only access to all Backup for GKE resources.",
          "id": "roles/gkebackup.viewer",
          "is_beta": false,
          "permissions": [
            "gkebackup.backupPlans.get",
            "gkebackup.backupPlans.getIamPolicy",
            "gkebackup.backupPlans.list",
            "gkebackup.backups.get",
            "gkebackup.backups.getBackupIndex",
            "gkebackup.backups.list",
            "gkebackup.locations.*",
            "gkebackup.operations.get",
            "gkebackup.operations.list",
            "gkebackup.restorePlans.get",
            "gkebackup.restorePlans.getIamPolicy",
            "gkebackup.restorePlans.list",
            "gkebackup.restores.get",
            "gkebackup.restores.list",
            "gkebackup.volumeBackups.*",
            "gkebackup.volumeRestores.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Backup for GKE Viewer"
        },
        {
          "description": "Administrator of Bare Metal Solution resources",
          "id": "roles/baremetalsolution.admin",
          "is_beta": false,
          "permissions": [
            "baremetalsolution.instancequotas.list",
            "baremetalsolution.instances.*",
            "baremetalsolution.luns.*",
            "baremetalsolution.maintenanceevents.*",
            "baremetalsolution.networkquotas.list",
            "baremetalsolution.networks.*",
            "baremetalsolution.nfsshares.*",
            "baremetalsolution.operations.get",
            "baremetalsolution.osimages.list",
            "baremetalsolution.pods.list",
            "baremetalsolution.procurements.get",
            "baremetalsolution.procurements.list",
            "baremetalsolution.skus.list",
            "baremetalsolution.snapshotschedulepolicies.*",
            "baremetalsolution.sshKeys.*",
            "baremetalsolution.storageaggregatepools.list",
            "baremetalsolution.volumequotas.list",
            "baremetalsolution.volumes.*",
            "baremetalsolution.volumesnapshots.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Bare Metal Solution Admin"
        },
        {
          "description": "Editor of Bare Metal Solution resources",
          "id": "roles/baremetalsolution.editor",
          "is_beta": false,
          "permissions": [
            "baremetalsolution.instancequotas.list",
            "baremetalsolution.instances.*",
            "baremetalsolution.luns.*",
            "baremetalsolution.maintenanceevents.*",
            "baremetalsolution.networkquotas.list",
            "baremetalsolution.networks.*",
            "baremetalsolution.nfsshares.*",
            "baremetalsolution.operations.get",
            "baremetalsolution.osimages.list",
            "baremetalsolution.pods.list",
            "baremetalsolution.procurements.get",
            "baremetalsolution.procurements.list",
            "baremetalsolution.skus.list",
            "baremetalsolution.snapshotschedulepolicies.*",
            "baremetalsolution.sshKeys.*",
            "baremetalsolution.storageaggregatepools.list",
            "baremetalsolution.volumequotas.list",
            "baremetalsolution.volumes.*",
            "baremetalsolution.volumesnapshots.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Bare Metal Solution Editor"
        },
        {
          "description": "Admin of Bare Metal Solution Instance resources",
          "id": "roles/baremetalsolution.instancesadmin",
          "is_beta": false,
          "permissions": [
            "baremetalsolution.instances.*",
            "baremetalsolution.operations.get",
            "baremetalsolution.osimages.list",
            "baremetalsolution.pods.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Bare Metal Solution Instances Admin"
        },
        {
          "description": "Viewer of Bare Metal Solution Instance resources",
          "id": "roles/baremetalsolution.instancesviewer",
          "is_beta": false,
          "permissions": [
            "baremetalsolution.instancequotas.list",
            "baremetalsolution.instances.get",
            "baremetalsolution.instances.list",
            "baremetalsolution.operations.get",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Bare Metal Solution Instances Viewer"
        },
        {
          "description": "Administrator of Bare Metal Solution Lun resources",
          "id": "roles/baremetalsolution.lunsadmin",
          "is_beta": false,
          "permissions": [
            "baremetalsolution.luns.get",
            "baremetalsolution.luns.list",
            "baremetalsolution.operations.get"
          ],
          "title": "Luns Admin"
        },
        {
          "description": "Viewer of Bare Metal Solution Lun resources",
          "id": "roles/baremetalsolution.lunsviewer",
          "is_beta": false,
          "permissions": [
            "baremetalsolution.luns.get",
            "baremetalsolution.luns.list",
            "baremetalsolution.operations.get"
          ],
          "title": "Luns Viewer"
        },
        {
          "description": "Administrator of Bare Metal Solution maintenance events resources",
          "id": "roles/baremetalsolution.maintenanceeventsadmin",
          "is_beta": false,
          "permissions": [
            "baremetalsolution.maintenanceevents.*"
          ],
          "title": "Maintenance Events Admin"
        },
        {
          "description": "Editor of Bare Metal Solution maintenance events resources",
          "id": "roles/baremetalsolution.maintenanceeventseditor",
          "is_beta": false,
          "permissions": [
            "baremetalsolution.maintenanceevents.*"
          ],
          "title": "Maintenance Events Editor"
        },
        {
          "description": "Viewer of Bare Metal Solution maintenance events resources",
          "id": "roles/baremetalsolution.maintenanceeventsviewer",
          "is_beta": false,
          "permissions": [
            "baremetalsolution.maintenanceevents.get",
            "baremetalsolution.maintenanceevents.list"
          ],
          "title": "Maintenance Events Viewer"
        },
        {
          "description": "Admin of Bare Metal Solution networks resources",
          "id": "roles/baremetalsolution.networksadmin",
          "is_beta": false,
          "permissions": [
            "baremetalsolution.networkquotas.list",
            "baremetalsolution.networks.*",
            "baremetalsolution.operations.get",
            "baremetalsolution.pods.list"
          ],
          "title": "Networks Admin"
        },
        {
          "description": "Administrator of Bare Metal Solution NFS Share resources",
          "id": "roles/baremetalsolution.nfssharesadmin",
          "is_beta": false,
          "permissions": [
            "baremetalsolution.nfsshares.*",
            "baremetalsolution.operations.get",
            "baremetalsolution.pods.list"
          ],
          "title": "NFS Shares Admin"
        },
        {
          "description": "Editor of Bare Metal Solution NFS Share resources",
          "id": "roles/baremetalsolution.nfsshareseditor",
          "is_beta": false,
          "permissions": [
            "baremetalsolution.nfsshares.*",
            "baremetalsolution.operations.get",
            "baremetalsolution.pods.list"
          ],
          "title": "NFS Shares Editor"
        },
        {
          "description": "Viewer of Bare Metal Solution NFS Share resources",
          "id": "roles/baremetalsolution.nfssharesviewer",
          "is_beta": false,
          "permissions": [
            "baremetalsolution.nfsshares.get",
            "baremetalsolution.nfsshares.list",
            "baremetalsolution.operations.get"
          ],
          "title": "NFS Shares Viewer"
        },
        {
          "description": "Viewer of Bare Metal Solution OS images resources",
          "id": "roles/baremetalsolution.osimagesviewer",
          "is_beta": false,
          "permissions": [
            "baremetalsolution.osimages.list"
          ],
          "title": "OS Images Viewer"
        },
        {
          "description": "Administrator of Bare Metal Solution Procurements",
          "id": "roles/baremetalsolution.procurementsadmin",
          "is_beta": false,
          "permissions": [
            "baremetalsolution.pods.list",
            "baremetalsolution.procurements.*",
            "baremetalsolution.skus.list"
          ],
          "title": "Bare Metal Solution Procurements Admin"
        },
        {
          "description": "Editor of Bare Metal Solution Procurements",
          "id": "roles/baremetalsolution.procurementseditor",
          "is_beta": false,
          "permissions": [
            "baremetalsolution.pods.list",
            "baremetalsolution.procurements.*",
            "baremetalsolution.skus.list"
          ],
          "title": "Bare Metal Solution Procurements Editor"
        },
        {
          "description": "Viewer of Bare Metal Solution Procurements",
          "id": "roles/baremetalsolution.procurementsviewer",
          "is_beta": false,
          "permissions": [
            "baremetalsolution.procurements.get",
            "baremetalsolution.procurements.list",
            "baremetalsolution.skus.list"
          ],
          "title": "Bare Metal Solution Procurements Viewer"
        },
        {
          "description": "Administrator of Bare Metal Solution storage resources",
          "id": "roles/baremetalsolution.storageadmin",
          "is_beta": false,
          "permissions": [
            "baremetalsolution.luns.*",
            "baremetalsolution.nfsshares.*",
            "baremetalsolution.operations.get",
            "baremetalsolution.pods.list",
            "baremetalsolution.snapshotschedulepolicies.*",
            "baremetalsolution.storageaggregatepools.list",
            "baremetalsolution.volumequotas.list",
            "baremetalsolution.volumes.*",
            "baremetalsolution.volumesnapshots.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Bare Metal Solution Storage Admin"
        },
        {
          "description": "Viewer of Bare Metal Solution resources",
          "id": "roles/baremetalsolution.viewer",
          "is_beta": false,
          "permissions": [
            "baremetalsolution.instancequotas.list",
            "baremetalsolution.instances.get",
            "baremetalsolution.instances.list",
            "baremetalsolution.luns.get",
            "baremetalsolution.luns.list",
            "baremetalsolution.maintenanceevents.get",
            "baremetalsolution.maintenanceevents.list",
            "baremetalsolution.networkquotas.list",
            "baremetalsolution.networks.get",
            "baremetalsolution.networks.list",
            "baremetalsolution.nfsshares.get",
            "baremetalsolution.nfsshares.list",
            "baremetalsolution.operations.get",
            "baremetalsolution.osimages.list",
            "baremetalsolution.pods.list",
            "baremetalsolution.procurements.get",
            "baremetalsolution.procurements.list",
            "baremetalsolution.skus.list",
            "baremetalsolution.snapshotschedulepolicies.get",
            "baremetalsolution.snapshotschedulepolicies.list",
            "baremetalsolution.sshKeys.list",
            "baremetalsolution.storageaggregatepools.list",
            "baremetalsolution.volumequotas.list",
            "baremetalsolution.volumes.get",
            "baremetalsolution.volumes.list",
            "baremetalsolution.volumesnapshots.get",
            "baremetalsolution.volumesnapshots.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Bare Metal Solution Viewer"
        },
        {
          "description": "Administrator of Bare Metal Solution volume resources",
          "id": "roles/baremetalsolution.volumesadmin",
          "is_beta": false,
          "permissions": [
            "baremetalsolution.operations.get",
            "baremetalsolution.pods.list",
            "baremetalsolution.volumes.*"
          ],
          "title": "Volume Admin"
        },
        {
          "description": "Editor of Bare Metal Solution volumes resources",
          "id": "roles/baremetalsolution.volumeseditor",
          "is_beta": false,
          "permissions": [
            "baremetalsolution.operations.get",
            "baremetalsolution.pods.list",
            "baremetalsolution.volumequotas.list",
            "baremetalsolution.volumes.create",
            "baremetalsolution.volumes.delete",
            "baremetalsolution.volumes.get",
            "baremetalsolution.volumes.list",
            "baremetalsolution.volumes.rename",
            "baremetalsolution.volumes.resize",
            "baremetalsolution.volumes.update"
          ],
          "title": "Volumes Editor"
        },
        {
          "description": "Administrator of Bare Metal Solution snapshots resources",
          "id": "roles/baremetalsolution.volumesnapshotsadmin",
          "is_beta": false,
          "permissions": [
            "baremetalsolution.operations.get",
            "baremetalsolution.volumesnapshots.*"
          ],
          "title": "Snapshots Admin"
        },
        {
          "description": "Editor of Bare Metal Solution snapshots resources",
          "id": "roles/baremetalsolution.volumesnapshotseditor",
          "is_beta": false,
          "permissions": [
            "baremetalsolution.operations.get",
            "baremetalsolution.volumesnapshots.create",
            "baremetalsolution.volumesnapshots.delete",
            "baremetalsolution.volumesnapshots.get",
            "baremetalsolution.volumesnapshots.list"
          ],
          "title": "Snapshots Editor"
        },
        {
          "description": "Viewer of Bare Metal Solution snapshots resources",
          "id": "roles/baremetalsolution.volumesnapshotsviewer",
          "is_beta": false,
          "permissions": [
            "baremetalsolution.operations.get",
            "baremetalsolution.volumesnapshots.get",
            "baremetalsolution.volumesnapshots.list"
          ],
          "title": "Snapshots Viewer"
        },
        {
          "description": "Viewer of Bare Metal Solution volumes resources",
          "id": "roles/baremetalsolution.volumessviewer",
          "is_beta": false,
          "permissions": [
            "baremetalsolution.operations.get",
            "baremetalsolution.volumes.get",
            "baremetalsolution.volumes.list"
          ],
          "title": "Volumes Viewer"
        },
        {
          "description": "Full access to all Cloud BeyondCorp resources.",
          "id": "roles/beyondcorp.admin",
          "is_beta": true,
          "permissions": [
            "beyondcorp.appConnections.*",
            "beyondcorp.appConnectors.*",
            "beyondcorp.appGateways.*",
            "beyondcorp.clientConnectorServices.create",
            "beyondcorp.clientConnectorServices.delete",
            "beyondcorp.clientConnectorServices.get",
            "beyondcorp.clientConnectorServices.getIamPolicy",
            "beyondcorp.clientConnectorServices.list",
            "beyondcorp.clientConnectorServices.setIamPolicy",
            "beyondcorp.clientConnectorServices.update",
            "beyondcorp.clientGateways.*",
            "beyondcorp.locations.*",
            "beyondcorp.operations.*",
            "beyondcorp.subscriptions.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Cloud BeyondCorp Admin"
        },
        {
          "description": "Full access to all BeyondCorp Client Connector resources.",
          "id": "roles/beyondcorp.clientConnectorAdmin",
          "is_beta": true,
          "permissions": [
            "beyondcorp.clientConnectorServices.create",
            "beyondcorp.clientConnectorServices.delete",
            "beyondcorp.clientConnectorServices.get",
            "beyondcorp.clientConnectorServices.getIamPolicy",
            "beyondcorp.clientConnectorServices.list",
            "beyondcorp.clientConnectorServices.setIamPolicy",
            "beyondcorp.clientConnectorServices.update",
            "beyondcorp.clientGateways.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Cloud BeyondCorp Client Connector Admin"
        },
        {
          "description": "Access Client Connector Service",
          "id": "roles/beyondcorp.clientConnectorServiceUser",
          "is_beta": true,
          "permissions": [
            "beyondcorp.clientConnectorServices.access"
          ],
          "title": "Cloud BeyondCorp Client Connector Service User"
        },
        {
          "description": "Read-only access to all BeyondCorp Client Connector resources.",
          "id": "roles/beyondcorp.clientConnectorViewer",
          "is_beta": true,
          "permissions": [
            "beyondcorp.clientConnectorServices.get",
            "beyondcorp.clientConnectorServices.getIamPolicy",
            "beyondcorp.clientConnectorServices.list",
            "beyondcorp.clientGateways.get",
            "beyondcorp.clientGateways.getIamPolicy",
            "beyondcorp.clientGateways.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Cloud BeyondCorp Client Connector Viewer"
        },
        {
          "description": "Delegates access to all BeyondCorp partner service resources to a BeyondCorp Enterprise partner.",
          "id": "roles/beyondcorp.partnerServiceDelegateAdmin",
          "is_beta": true,
          "permissions": [
            "beyondcorp.operations.*",
            "beyondcorp.partnerTenants.*",
            "beyondcorp.proxyConfigs.*",
            "resourcemanager.organizations.get"
          ],
          "title": "Cloud BeyondCorp Partner Service Delegate Admin"
        },
        {
          "description": "Delegates read-only access to all BeyondCorp partner service resources to a BeyondCorp Enterprise partner.",
          "id": "roles/beyondcorp.partnerServiceDelegateViewer",
          "is_beta": true,
          "permissions": [
            "beyondcorp.partnerTenants.get",
            "beyondcorp.partnerTenants.list",
            "beyondcorp.proxyConfigs.get",
            "beyondcorp.proxyConfigs.list",
            "resourcemanager.organizations.get"
          ],
          "title": "Cloud BeyondCorp Partner Service Delegate Viewer"
        },
        {
          "description": "Full access to all BeyondCorp Subscription resources.",
          "id": "roles/beyondcorp.subscriptionAdmin",
          "is_beta": true,
          "permissions": [
            "beyondcorp.subscriptions.*",
            "resourcemanager.organizations.get"
          ],
          "title": "Cloud BeyondCorp Subscription Admin"
        },
        {
          "description": "Read-only access to all BeyondCorp Subscription resources.",
          "id": "roles/beyondcorp.subscriptionViewer",
          "is_beta": true,
          "permissions": [
            "beyondcorp.subscriptions.get",
            "beyondcorp.subscriptions.list",
            "resourcemanager.organizations.get"
          ],
          "title": "Cloud BeyondCorp Subscription Viewer"
        },
        {
          "description": "Read-only access to all Cloud BeyondCorp resources.",
          "id": "roles/beyondcorp.viewer",
          "is_beta": true,
          "permissions": [
            "beyondcorp.appConnections.get",
            "beyondcorp.appConnections.getIamPolicy",
            "beyondcorp.appConnections.list",
            "beyondcorp.appConnectors.get",
            "beyondcorp.appConnectors.getIamPolicy",
            "beyondcorp.appConnectors.list",
            "beyondcorp.appGateways.get",
            "beyondcorp.appGateways.getIamPolicy",
            "beyondcorp.appGateways.list",
            "beyondcorp.clientConnectorServices.get",
            "beyondcorp.clientConnectorServices.getIamPolicy",
            "beyondcorp.clientConnectorServices.list",
            "beyondcorp.clientGateways.get",
            "beyondcorp.clientGateways.getIamPolicy",
            "beyondcorp.clientGateways.list",
            "beyondcorp.locations.*",
            "beyondcorp.operations.get",
            "beyondcorp.operations.list",
            "beyondcorp.subscriptions.get",
            "beyondcorp.subscriptions.list",
            "resourcemanager.organizations.get",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Cloud BeyondCorp Viewer"
        },
        {
          "description": "Provides permissions to manage all resources within the project. Can manage all data within the project, and can cancel jobs from other users running within the project.",
          "id": "roles/bigquery.admin",
          "is_beta": false,
          "permissions": [
            "bigquery.bireservations.*",
            "bigquery.capacityCommitments.*",
            "bigquery.config.*",
            "bigquery.connections.*",
            "bigquery.dataPolicies.create",
            "bigquery.dataPolicies.delete",
            "bigquery.dataPolicies.get",
            "bigquery.dataPolicies.getIamPolicy",
            "bigquery.dataPolicies.list",
            "bigquery.dataPolicies.setIamPolicy",
            "bigquery.dataPolicies.update",
            "bigquery.datasets.*",
            "bigquery.jobs.*",
            "bigquery.models.*",
            "bigquery.readsessions.*",
            "bigquery.reservationAssignments.*",
            "bigquery.reservations.*",
            "bigquery.routines.*",
            "bigquery.rowAccessPolicies.create",
            "bigquery.rowAccessPolicies.delete",
            "bigquery.rowAccessPolicies.getIamPolicy",
            "bigquery.rowAccessPolicies.list",
            "bigquery.rowAccessPolicies.overrideTimeTravelRestrictions",
            "bigquery.rowAccessPolicies.setIamPolicy",
            "bigquery.rowAccessPolicies.update",
            "bigquery.savedqueries.*",
            "bigquery.tables.*",
            "bigquery.transfers.*",
            "bigquerymigration.translation.translate",
            "cloudkms.keyHandles.*",
            "cloudkms.operations.get",
            "cloudkms.projects.showEffectiveAutokeyConfig",
            "dataform.*",
            "dataplex.projects.search",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "BigQuery Admin"
        },
        {
          "description": "When applied to a table or view, this role provides permissions to:This role cannot be applied to individual models or routines.When applied to a dataset, this role provides permissions to: When applied at the project or organization level, this role can also create new datasets.",
          "id": "roles/bigquery.dataEditor",
          "is_beta": false,
          "permissions": [
            "bigquery.config.get",
            "bigquery.datasets.create",
            "bigquery.datasets.get",
            "bigquery.datasets.getIamPolicy",
            "bigquery.datasets.updateTag",
            "bigquery.models.*",
            "bigquery.routines.*",
            "bigquery.tables.create",
            "bigquery.tables.createIndex",
            "bigquery.tables.createSnapshot",
            "bigquery.tables.delete",
            "bigquery.tables.deleteIndex",
            "bigquery.tables.export",
            "bigquery.tables.get",
            "bigquery.tables.getData",
            "bigquery.tables.getIamPolicy",
            "bigquery.tables.list",
            "bigquery.tables.replicateData",
            "bigquery.tables.restoreSnapshot",
            "bigquery.tables.update",
            "bigquery.tables.updateData",
            "bigquery.tables.updateIndex",
            "bigquery.tables.updateTag",
            "cloudkms.keyHandles.*",
            "cloudkms.operations.get",
            "cloudkms.projects.showEffectiveAutokeyConfig",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "BigQuery Data Editor"
        },
        {
          "description": "When applied to a table or view, this role provides permissions to:This role cannot be applied to individual models or routines.When applied to a dataset, this role provides permissions to: When applied at the project or organization level, this role can also create new datasets.",
          "id": "roles/bigquery.dataOwner",
          "is_beta": false,
          "permissions": [
            "bigquery.config.get",
            "bigquery.dataPolicies.create",
            "bigquery.dataPolicies.delete",
            "bigquery.dataPolicies.get",
            "bigquery.dataPolicies.getIamPolicy",
            "bigquery.dataPolicies.list",
            "bigquery.dataPolicies.setIamPolicy",
            "bigquery.dataPolicies.update",
            "bigquery.datasets.*",
            "bigquery.models.*",
            "bigquery.routines.*",
            "bigquery.rowAccessPolicies.create",
            "bigquery.rowAccessPolicies.delete",
            "bigquery.rowAccessPolicies.getIamPolicy",
            "bigquery.rowAccessPolicies.list",
            "bigquery.rowAccessPolicies.setIamPolicy",
            "bigquery.rowAccessPolicies.update",
            "bigquery.tables.*",
            "cloudkms.keyHandles.*",
            "cloudkms.operations.get",
            "cloudkms.projects.showEffectiveAutokeyConfig",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "BigQuery Data Owner"
        },
        {
          "description": "When applied to a table or view, this role provides permissions to:This role cannot be applied to individual models or routines.When applied to a dataset, this role provides permissions to list all of the resources in the dataset (such as tables, views, snapshots, models, and routines) and to read their data and metadata with applicable APIs and in queries. When applied at the project or organization level, this role can also enumerate all datasets in the project. Additional roles, however, are necessary to allow the running of jobs.",
          "id": "roles/bigquery.dataViewer",
          "is_beta": false,
          "permissions": [
            "bigquery.datasets.get",
            "bigquery.datasets.getIamPolicy",
            "bigquery.models.export",
            "bigquery.models.getData",
            "bigquery.models.getMetadata",
            "bigquery.models.list",
            "bigquery.routines.get",
            "bigquery.routines.list",
            "bigquery.tables.createSnapshot",
            "bigquery.tables.export",
            "bigquery.tables.get",
            "bigquery.tables.getData",
            "bigquery.tables.getIamPolicy",
            "bigquery.tables.list",
            "bigquery.tables.replicateData",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "BigQuery Data Viewer"
        },
        {
          "description": "Access to view filtered table data defined by a row access policy",
          "id": "roles/bigquery.filteredDataViewer",
          "is_beta": false,
          "permissions": [
            "bigquery.rowAccessPolicies.getFilteredData"
          ],
          "title": "BigQuery Filtered Data Viewer"
        },
        {
          "description": "Provides permissions to run jobs, including queries, within the project.",
          "id": "roles/bigquery.jobUser",
          "is_beta": false,
          "permissions": [
            "bigquery.config.get",
            "bigquery.jobs.create",
            "dataform.locations.*",
            "dataform.repositories.create",
            "dataform.repositories.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "BigQuery Job User"
        },
        {
          "description": "When applied to a table or view, this role provides permissions to:This role cannot be applied to individual models or routines.When applied to a dataset, this role provides permissions to:When applied at the project or organization level, this role provides permissions to: Additional roles are necessary to allow the running of jobs.",
          "id": "roles/bigquery.metadataViewer",
          "is_beta": false,
          "permissions": [
            "bigquery.datasets.get",
            "bigquery.datasets.getIamPolicy",
            "bigquery.models.getMetadata",
            "bigquery.models.list",
            "bigquery.routines.get",
            "bigquery.routines.list",
            "bigquery.tables.get",
            "bigquery.tables.getIamPolicy",
            "bigquery.tables.list",
            "dataplex.projects.search",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "BigQuery Metadata Viewer"
        },
        {
          "description": "Administer ObjectRef resources that includes read and write permissions",
          "id": "roles/bigquery.objectRefAdmin",
          "is_beta": false,
          "permissions": [
            "bigquery.objectRefs.*"
          ],
          "title": "BigQuery ObjectRef Admin"
        },
        {
          "description": "Role for reading referenced objects via ObjectRefs in BigQuery",
          "id": "roles/bigquery.objectRefReader",
          "is_beta": false,
          "permissions": [
            "bigquery.objectRefs.read"
          ],
          "title": "BigQuery ObjectRef Reader"
        },
        {
          "description": "Provides the ability to create and use read sessions.",
          "id": "roles/bigquery.readSessionUser",
          "is_beta": false,
          "permissions": [
            "bigquery.readsessions.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "BigQuery Read Session User"
        },
        {
          "description": "Administers BigQuery workloads, including slot assignments, commitments, and reservations.",
          "id": "roles/bigquery.resourceAdmin",
          "is_beta": false,
          "permissions": [
            "bigquery.bireservations.*",
            "bigquery.capacityCommitments.*",
            "bigquery.jobs.get",
            "bigquery.jobs.list",
            "bigquery.jobs.listAll",
            "bigquery.jobs.listExecutionMetadata",
            "bigquery.reservationAssignments.*",
            "bigquery.reservations.*",
            "recommender.bigqueryCapacityCommitmentsInsights.*",
            "recommender.bigqueryCapacityCommitmentsRecommendations.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "BigQuery Resource Admin"
        },
        {
          "description": "Manages BigQuery workloads, but is unable to create or modify slot commitments.",
          "id": "roles/bigquery.resourceEditor",
          "is_beta": false,
          "permissions": [
            "bigquery.bireservations.get",
            "bigquery.capacityCommitments.get",
            "bigquery.capacityCommitments.list",
            "bigquery.jobs.get",
            "bigquery.jobs.list",
            "bigquery.jobs.listAll",
            "bigquery.jobs.listExecutionMetadata",
            "bigquery.reservationAssignments.*",
            "bigquery.reservations.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "BigQuery Resource Editor"
        },
        {
          "description": "Can view BigQuery workloads, but cannot create or modify slot reservations or commitments.",
          "id": "roles/bigquery.resourceViewer",
          "is_beta": false,
          "permissions": [
            "bigquery.bireservations.get",
            "bigquery.capacityCommitments.get",
            "bigquery.capacityCommitments.list",
            "bigquery.jobs.get",
            "bigquery.jobs.list",
            "bigquery.jobs.listAll",
            "bigquery.jobs.listExecutionMetadata",
            "bigquery.reservationAssignments.list",
            "bigquery.reservationAssignments.search",
            "bigquery.reservations.get",
            "bigquery.reservations.list",
            "bigquery.reservations.listFailoverDatasets",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "BigQuery Resource Viewer"
        },
        {
          "description": "Combination role of BigQuery Admin, Dataform Admin, Notebook Runtime Admin and Dataproc Serverless Editor.",
          "id": "roles/bigquery.studioAdmin",
          "is_beta": false,
          "permissions": [
            "aiplatform.notebookRuntimeTemplates.*",
            "aiplatform.notebookRuntimes.*",
            "aiplatform.operations.list",
            "bigquery.bireservations.*",
            "bigquery.capacityCommitments.*",
            "bigquery.config.*",
            "bigquery.connections.*",
            "bigquery.dataPolicies.create",
            "bigquery.dataPolicies.delete",
            "bigquery.dataPolicies.get",
            "bigquery.dataPolicies.getIamPolicy",
            "bigquery.dataPolicies.list",
            "bigquery.dataPolicies.setIamPolicy",
            "bigquery.dataPolicies.update",
            "bigquery.datasets.*",
            "bigquery.jobs.*",
            "bigquery.models.*",
            "bigquery.readsessions.*",
            "bigquery.reservationAssignments.*",
            "bigquery.reservations.*",
            "bigquery.routines.*",
            "bigquery.rowAccessPolicies.create",
            "bigquery.rowAccessPolicies.delete",
            "bigquery.rowAccessPolicies.getIamPolicy",
            "bigquery.rowAccessPolicies.list",
            "bigquery.rowAccessPolicies.overrideTimeTravelRestrictions",
            "bigquery.rowAccessPolicies.setIamPolicy",
            "bigquery.rowAccessPolicies.update",
            "bigquery.savedqueries.*",
            "bigquery.tables.*",
            "bigquery.transfers.*",
            "bigquerymigration.translation.translate",
            "cloudkms.keyHandles.*",
            "cloudkms.operations.get",
            "cloudkms.projects.showEffectiveAutokeyConfig",
            "compute.projects.get",
            "compute.regions.*",
            "compute.reservations.get",
            "compute.reservations.list",
            "compute.zones.*",
            "dataform.*",
            "dataplex.projects.search",
            "dataproc.batches.*",
            "dataproc.operations.cancel",
            "dataproc.operations.delete",
            "dataproc.operations.get",
            "dataproc.operations.list",
            "dataproc.sessionTemplates.*",
            "dataproc.sessions.*",
            "dataprocrm.nodePools.*",
            "dataprocrm.nodes.get",
            "dataprocrm.nodes.heartbeat",
            "dataprocrm.nodes.list",
            "dataprocrm.nodes.update",
            "dataprocrm.operations.get",
            "dataprocrm.operations.list",
            "dataprocrm.workloads.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "BigQuery Studio Admin"
        },
        {
          "description": "Combination role of BigQuery Job User, BigQuery Read Session User, Dataform Code Creator, Notebook Runtime User and Dataproc Serverless Editor.",
          "id": "roles/bigquery.studioUser",
          "is_beta": false,
          "permissions": [
            "aiplatform.notebookRuntimeTemplates.apply",
            "aiplatform.notebookRuntimeTemplates.get",
            "aiplatform.notebookRuntimeTemplates.getIamPolicy",
            "aiplatform.notebookRuntimeTemplates.list",
            "aiplatform.notebookRuntimes.assign",
            "aiplatform.notebookRuntimes.get",
            "aiplatform.notebookRuntimes.list",
            "aiplatform.operations.list",
            "bigquery.config.get",
            "bigquery.jobs.create",
            "bigquery.readsessions.*",
            "compute.projects.get",
            "compute.regions.*",
            "compute.zones.*",
            "dataform.commentThreads.get",
            "dataform.commentThreads.list",
            "dataform.comments.get",
            "dataform.comments.list",
            "dataform.locations.*",
            "dataform.repositories.create",
            "dataform.repositories.list",
            "dataplex.projects.search",
            "dataproc.batches.*",
            "dataproc.operations.cancel",
            "dataproc.operations.delete",
            "dataproc.operations.get",
            "dataproc.operations.list",
            "dataproc.sessionTemplates.*",
            "dataproc.sessions.*",
            "dataprocrm.nodePools.*",
            "dataprocrm.nodes.get",
            "dataprocrm.nodes.heartbeat",
            "dataprocrm.nodes.list",
            "dataprocrm.nodes.update",
            "dataprocrm.operations.get",
            "dataprocrm.operations.list",
            "dataprocrm.workloads.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "BigQuery Studio User"
        },
        {
          "description": "When applied to a dataset, this role provides the ability to read the dataset's metadata and list tables in the dataset.When applied to a project, this role also provides the ability to run jobs, including queries, within the project. A principal with this role can enumerate their own jobs, cancel their own jobs, and enumerate datasets within a project. Additionally, allows the creation of new datasets within the project; the creator is granted the BigQuery Data Owner role (roles/bigquery.dataOwner) on these new datasets.",
          "id": "roles/bigquery.user",
          "is_beta": false,
          "permissions": [
            "bigquery.bireservations.get",
            "bigquery.capacityCommitments.get",
            "bigquery.capacityCommitments.list",
            "bigquery.config.get",
            "bigquery.datasets.create",
            "bigquery.datasets.get",
            "bigquery.datasets.getIamPolicy",
            "bigquery.jobs.create",
            "bigquery.jobs.list",
            "bigquery.models.list",
            "bigquery.readsessions.*",
            "bigquery.reservationAssignments.list",
            "bigquery.reservationAssignments.search",
            "bigquery.reservations.get",
            "bigquery.reservations.list",
            "bigquery.reservations.listFailoverDatasets",
            "bigquery.reservations.use",
            "bigquery.routines.list",
            "bigquery.savedqueries.get",
            "bigquery.savedqueries.list",
            "bigquery.tables.list",
            "bigquery.transfers.get",
            "bigquerymigration.translation.translate",
            "cloudkms.keyHandles.*",
            "cloudkms.operations.get",
            "cloudkms.projects.showEffectiveAutokeyConfig",
            "dataform.locations.*",
            "dataform.repositories.create",
            "dataform.repositories.list",
            "dataplex.projects.search",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "BigQuery User"
        },
        {
          "description": "Role for managing Data Policies in BigQuery",
          "id": "roles/bigquerydatapolicy.admin",
          "is_beta": false,
          "permissions": [
            "bigquery.dataPolicies.create",
            "bigquery.dataPolicies.delete",
            "bigquery.dataPolicies.get",
            "bigquery.dataPolicies.getIamPolicy",
            "bigquery.dataPolicies.list",
            "bigquery.dataPolicies.setIamPolicy",
            "bigquery.dataPolicies.update"
          ],
          "title": "BigQuery Data Policy Admin"
        },
        {
          "description": "Masked read access to sub-resources tagged by the policy tag associated with a data policy, for example, BigQuery columns",
          "id": "roles/bigquerydatapolicy.maskedReader",
          "is_beta": false,
          "permissions": [
            "bigquery.dataPolicies.maskedGet"
          ],
          "title": "Masked Reader"
        },
        {
          "description": "Raw read access to sub-resources associated with a data policy, for example, BigQuery columns",
          "id": "roles/bigquerydatapolicy.rawDataReader",
          "is_beta": true,
          "permissions": [
            "bigquery.dataPolicies.getRawData"
          ],
          "title": "Raw Data Reader"
        },
        {
          "description": "Role for viewing Data Policies in BigQuery",
          "id": "roles/bigquerydatapolicy.viewer",
          "is_beta": false,
          "permissions": [
            "bigquery.dataPolicies.get",
            "bigquery.dataPolicies.list"
          ],
          "title": "BigQuery Data Policy Viewer"
        },
        {
          "description": "Provides access to see and manage all aspects of billing accounts.",
          "id": "roles/billing.admin",
          "is_beta": false,
          "permissions": [
            "billing.accounts.close",
            "billing.accounts.get",
            "billing.accounts.getCarbonInformation",
            "billing.accounts.getIamPolicy",
            "billing.accounts.getPaymentInfo",
            "billing.accounts.getPricing",
            "billing.accounts.getSpendingInformation",
            "billing.accounts.getUsageExportSpec",
            "billing.accounts.list",
            "billing.accounts.move",
            "billing.accounts.redeemPromotion",
            "billing.accounts.removeFromOrganization",
            "billing.accounts.reopen",
            "billing.accounts.setIamPolicy",
            "billing.accounts.update",
            "billing.accounts.updatePaymentInfo",
            "billing.accounts.updateUsageExportSpec",
            "billing.anomalies.*",
            "billing.anomaliesConfigs.*",
            "billing.billingAccountPrice.get",
            "billing.billingAccountPrices.list",
            "billing.billingAccountServices.*",
            "billing.billingAccountSkuGroupSkus.*",
            "billing.billingAccountSkuGroups.*",
            "billing.billingAccountSkus.*",
            "billing.budgets.*",
            "billing.credits.list",
            "billing.finOpsBenchmarkInformation.get",
            "billing.finOpsHealthInformation.get",
            "billing.resourceAssociations.*",
            "billing.subscriptions.*",
            "cloudasset.assets.searchAllResources",
            "cloudnotifications.activities.list",
            "cloudsupport.properties.get",
            "cloudsupport.techCases.*",
            "commerceoffercatalog.*",
            "compute.commitments.*",
            "consumerprocurement.accounts.*",
            "consumerprocurement.consents.check",
            "consumerprocurement.consents.grant",
            "consumerprocurement.consents.list",
            "consumerprocurement.consents.revoke",
            "consumerprocurement.events.*",
            "consumerprocurement.licensePools.*",
            "consumerprocurement.orderAttributions.*",
            "consumerprocurement.orders.*",
            "dataprocessing.datasources.get",
            "dataprocessing.datasources.list",
            "dataprocessing.groupcontrols.get",
            "dataprocessing.groupcontrols.list",
            "logging.logEntries.list",
            "logging.logServiceIndexes.list",
            "logging.logServices.list",
            "logging.logs.list",
            "logging.privateLogEntries.list",
            "recommender.cloudsqlIdleInstanceRecommendations.get",
            "recommender.cloudsqlIdleInstanceRecommendations.list",
            "recommender.cloudsqlOverprovisionedInstanceRecommendations.get",
            "recommender.cloudsqlOverprovisionedInstanceRecommendations.list",
            "recommender.commitmentUtilizationInsights.*",
            "recommender.computeAddressIdleResourceRecommendations.get",
            "recommender.computeAddressIdleResourceRecommendations.list",
            "recommender.computeDiskIdleResourceRecommendations.get",
            "recommender.computeDiskIdleResourceRecommendations.list",
            "recommender.computeImageIdleResourceRecommendations.get",
            "recommender.computeImageIdleResourceRecommendations.list",
            "recommender.computeInstanceGroupManagerMachineTypeRecommendations.get",
            "recommender.computeInstanceGroupManagerMachineTypeRecommendations.list",
            "recommender.computeInstanceIdleResourceRecommendations.get",
            "recommender.computeInstanceIdleResourceRecommendations.list",
            "recommender.computeInstanceMachineTypeRecommendations.get",
            "recommender.computeInstanceMachineTypeRecommendations.list",
            "recommender.costInsights.*",
            "recommender.costRecommendations.*",
            "recommender.resourcemanagerProjectUtilizationRecommendations.get",
            "recommender.resourcemanagerProjectUtilizationRecommendations.list",
            "recommender.spendBasedCommitmentInsights.*",
            "recommender.spendBasedCommitmentRecommendations.*",
            "recommender.spendBasedCommitmentRecommenderConfig.*",
            "recommender.usageCommitmentRecommendations.*",
            "resourcemanager.projects.createBillingAssignment",
            "resourcemanager.projects.deleteBillingAssignment",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Billing Account Administrator"
        },
        {
          "description": "Manage budgets for a billing account, and view, analyze, and export cost information of a billing account.",
          "id": "roles/billing.costsManager",
          "is_beta": false,
          "permissions": [
            "billing.accounts.get",
            "billing.accounts.getIamPolicy",
            "billing.accounts.getSpendingInformation",
            "billing.accounts.getUsageExportSpec",
            "billing.accounts.list",
            "billing.accounts.updateUsageExportSpec",
            "billing.anomalies.get",
            "billing.anomalies.list",
            "billing.anomaliesConfigs.*",
            "billing.budgets.*",
            "billing.resourceAssociations.list",
            "recommender.costInsights.*"
          ],
          "title": "Billing Account Costs Manager"
        },
        {
          "description": "Provides access to create billing accounts.",
          "id": "roles/billing.creator",
          "is_beta": false,
          "permissions": [
            "billing.accounts.create",
            "resourcemanager.organizations.get"
          ],
          "title": "Billing Account Creator"
        },
        {
          "description": "Can interact with billing information scoped to the projects to which the user has cost access.",
          "id": "roles/billing.projectCostsManager",
          "is_beta": false,
          "permissions": [
            "billing.accounts.getIamPolicy",
            "billing.accounts.getSpendingInformationScoped",
            "billing.costRecommendations.listScoped"
          ],
          "title": "Project Billing Costs Manager"
        },
        {
          "description": "When granted in conjunction with the Billing Account User role, provides access to assign a project's billing account or disable its billing.",
          "id": "roles/billing.projectManager",
          "is_beta": false,
          "permissions": [
            "resourcemanager.projects.createBillingAssignment",
            "resourcemanager.projects.deleteBillingAssignment"
          ],
          "title": "Project Billing Manager"
        },
        {
          "description": "When granted in conjunction with the Project Owner role or Project Billing Manager role, provides access to associate projects with billing accounts.",
          "id": "roles/billing.user",
          "is_beta": false,
          "permissions": [
            "billing.accounts.get",
            "billing.accounts.getIamPolicy",
            "billing.accounts.list",
            "billing.accounts.redeemPromotion",
            "billing.credits.list",
            "billing.resourceAssociations.create"
          ],
          "title": "Billing Account User"
        },
        {
          "description": "View billing account cost and pricing information, transactions, and billing and commitment recommendations.",
          "id": "roles/billing.viewer",
          "is_beta": false,
          "permissions": [
            "billing.accounts.get",
            "billing.accounts.getCarbonInformation",
            "billing.accounts.getIamPolicy",
            "billing.accounts.getPaymentInfo",
            "billing.accounts.getPricing",
            "billing.accounts.getSpendingInformation",
            "billing.accounts.getUsageExportSpec",
            "billing.accounts.list",
            "billing.anomalies.get",
            "billing.anomalies.list",
            "billing.anomaliesConfigs.get",
            "billing.billingAccountPrice.get",
            "billing.billingAccountPrices.list",
            "billing.billingAccountServices.*",
            "billing.billingAccountSkuGroupSkus.*",
            "billing.billingAccountSkuGroups.*",
            "billing.billingAccountSkus.*",
            "billing.budgets.get",
            "billing.budgets.list",
            "billing.credits.list",
            "billing.finOpsBenchmarkInformation.get",
            "billing.finOpsHealthInformation.get",
            "billing.resourceAssociations.list",
            "billing.subscriptions.get",
            "billing.subscriptions.list",
            "commerceoffercatalog.*",
            "consumerprocurement.accounts.get",
            "consumerprocurement.accounts.list",
            "consumerprocurement.consents.check",
            "consumerprocurement.consents.list",
            "consumerprocurement.orderAttributions.get",
            "consumerprocurement.orderAttributions.list",
            "consumerprocurement.orders.get",
            "consumerprocurement.orders.list",
            "dataprocessing.datasources.get",
            "dataprocessing.datasources.list",
            "dataprocessing.groupcontrols.get",
            "dataprocessing.groupcontrols.list",
            "recommender.commitmentUtilizationInsights.get",
            "recommender.commitmentUtilizationInsights.list",
            "recommender.costInsights.get",
            "recommender.costInsights.list",
            "recommender.costRecommendations.*",
            "recommender.spendBasedCommitmentInsights.get",
            "recommender.spendBasedCommitmentInsights.list",
            "recommender.spendBasedCommitmentRecommendations.get",
            "recommender.spendBasedCommitmentRecommendations.list",
            "recommender.spendBasedCommitmentRecommenderConfig.get",
            "recommender.usageCommitmentRecommendations.get",
            "recommender.usageCommitmentRecommendations.list"
          ],
          "title": "Billing Account Viewer"
        },
        {
          "description": "Administrator of Binary Authorization Attestors",
          "id": "roles/binaryauthorization.attestorsAdmin",
          "is_beta": false,
          "permissions": [
            "binaryauthorization.attestors.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Binary Authorization Attestor Admin"
        },
        {
          "description": "Editor of Binary Authorization Attestors",
          "id": "roles/binaryauthorization.attestorsEditor",
          "is_beta": false,
          "permissions": [
            "binaryauthorization.attestors.create",
            "binaryauthorization.attestors.delete",
            "binaryauthorization.attestors.get",
            "binaryauthorization.attestors.list",
            "binaryauthorization.attestors.update",
            "binaryauthorization.attestors.verifyImageAttested",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Binary Authorization Attestor Editor"
        },
        {
          "description": "Caller of Binary Authorization Attestors VerifyImageAttested",
          "id": "roles/binaryauthorization.attestorsVerifier",
          "is_beta": false,
          "permissions": [
            "binaryauthorization.attestors.get",
            "binaryauthorization.attestors.list",
            "binaryauthorization.attestors.verifyImageAttested",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Binary Authorization Attestor Image Verifier"
        },
        {
          "description": "Viewer of Binary Authorization Attestors",
          "id": "roles/binaryauthorization.attestorsViewer",
          "is_beta": false,
          "permissions": [
            "binaryauthorization.attestors.get",
            "binaryauthorization.attestors.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Binary Authorization Attestor Viewer"
        },
        {
          "description": "Administrator of Binary Authorization Policy",
          "id": "roles/binaryauthorization.policyAdmin",
          "is_beta": false,
          "permissions": [
            "binaryauthorization.continuousValidationConfig.*",
            "binaryauthorization.platformPolicies.*",
            "binaryauthorization.policy.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Binary Authorization Policy Administrator"
        },
        {
          "description": "Editor of Binary Authorization Policy",
          "id": "roles/binaryauthorization.policyEditor",
          "is_beta": false,
          "permissions": [
            "binaryauthorization.continuousValidationConfig.get",
            "binaryauthorization.continuousValidationConfig.update",
            "binaryauthorization.platformPolicies.*",
            "binaryauthorization.policy.evaluatePolicy",
            "binaryauthorization.policy.get",
            "binaryauthorization.policy.update",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Binary Authorization Policy Editor"
        },
        {
          "description": "Evaluator of Binary Authorization Policy",
          "id": "roles/binaryauthorization.policyEvaluator",
          "is_beta": false,
          "permissions": [
            "binaryauthorization.platformPolicies.evaluatePolicy",
            "binaryauthorization.platformPolicies.get",
            "binaryauthorization.platformPolicies.list",
            "binaryauthorization.policy.evaluatePolicy",
            "binaryauthorization.policy.get",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Binary Authorization Policy Evaluator"
        },
        {
          "description": "Viewer of Binary Authorization Policy",
          "id": "roles/binaryauthorization.policyViewer",
          "is_beta": false,
          "permissions": [
            "binaryauthorization.continuousValidationConfig.get",
            "binaryauthorization.platformPolicies.get",
            "binaryauthorization.platformPolicies.list",
            "binaryauthorization.policy.get",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Binary Authorization Policy Viewer"
        },
        {
          "description": "Full access to all CA Service resources.",
          "id": "roles/privateca.admin",
          "is_beta": false,
          "permissions": [
            "privateca.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "storage.buckets.create"
          ],
          "title": "CA Service Admin"
        },
        {
          "description": "Read-only access to all CA Service resources.",
          "id": "roles/privateca.auditor",
          "is_beta": false,
          "permissions": [
            "privateca.caPools.get",
            "privateca.caPools.getIamPolicy",
            "privateca.caPools.list",
            "privateca.certificateAuthorities.get",
            "privateca.certificateAuthorities.getIamPolicy",
            "privateca.certificateAuthorities.list",
            "privateca.certificateRevocationLists.get",
            "privateca.certificateRevocationLists.getIamPolicy",
            "privateca.certificateRevocationLists.list",
            "privateca.certificateTemplates.get",
            "privateca.certificateTemplates.getIamPolicy",
            "privateca.certificateTemplates.list",
            "privateca.certificates.get",
            "privateca.certificates.getIamPolicy",
            "privateca.certificates.list",
            "privateca.locations.*",
            "privateca.operations.get",
            "privateca.operations.list",
            "privateca.reusableConfigs.get",
            "privateca.reusableConfigs.getIamPolicy",
            "privateca.reusableConfigs.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "CA Service Auditor"
        },
        {
          "description": "Create and manage CAs, revoke certificates, create certificates templates, and read-only access for CA Service resources.",
          "id": "roles/privateca.caManager",
          "is_beta": false,
          "permissions": [
            "privateca.caPools.create",
            "privateca.caPools.createTagBinding",
            "privateca.caPools.delete",
            "privateca.caPools.deleteTagBinding",
            "privateca.caPools.get",
            "privateca.caPools.getIamPolicy",
            "privateca.caPools.list",
            "privateca.caPools.listEffectiveTags",
            "privateca.caPools.listTagBindings",
            "privateca.caPools.update",
            "privateca.certificateAuthorities.create",
            "privateca.certificateAuthorities.delete",
            "privateca.certificateAuthorities.get",
            "privateca.certificateAuthorities.getIamPolicy",
            "privateca.certificateAuthorities.list",
            "privateca.certificateAuthorities.update",
            "privateca.certificateRevocationLists.get",
            "privateca.certificateRevocationLists.getIamPolicy",
            "privateca.certificateRevocationLists.list",
            "privateca.certificateRevocationLists.update",
            "privateca.certificateTemplates.create",
            "privateca.certificateTemplates.createTagBinding",
            "privateca.certificateTemplates.delete",
            "privateca.certificateTemplates.deleteTagBinding",
            "privateca.certificateTemplates.get",
            "privateca.certificateTemplates.getIamPolicy",
            "privateca.certificateTemplates.list",
            "privateca.certificateTemplates.listEffectiveTags",
            "privateca.certificateTemplates.listTagBindings",
            "privateca.certificateTemplates.update",
            "privateca.certificates.get",
            "privateca.certificates.getIamPolicy",
            "privateca.certificates.list",
            "privateca.certificates.update",
            "privateca.locations.*",
            "privateca.operations.get",
            "privateca.operations.list",
            "privateca.reusableConfigs.create",
            "privateca.reusableConfigs.delete",
            "privateca.reusableConfigs.get",
            "privateca.reusableConfigs.getIamPolicy",
            "privateca.reusableConfigs.list",
            "privateca.reusableConfigs.update",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "storage.buckets.create"
          ],
          "title": "CA Service Operation Manager"
        },
        {
          "description": "Create certificates and read-only access for CA Service resources.",
          "id": "roles/privateca.certificateManager",
          "is_beta": false,
          "permissions": [
            "privateca.caPools.get",
            "privateca.caPools.getIamPolicy",
            "privateca.caPools.list",
            "privateca.caPools.listEffectiveTags",
            "privateca.caPools.listTagBindings",
            "privateca.certificateAuthorities.get",
            "privateca.certificateAuthorities.getIamPolicy",
            "privateca.certificateAuthorities.list",
            "privateca.certificateRevocationLists.get",
            "privateca.certificateRevocationLists.getIamPolicy",
            "privateca.certificateRevocationLists.list",
            "privateca.certificateTemplates.get",
            "privateca.certificateTemplates.getIamPolicy",
            "privateca.certificateTemplates.list",
            "privateca.certificateTemplates.listEffectiveTags",
            "privateca.certificateTemplates.listTagBindings",
            "privateca.certificates.create",
            "privateca.certificates.get",
            "privateca.certificates.getIamPolicy",
            "privateca.certificates.list",
            "privateca.locations.*",
            "privateca.operations.get",
            "privateca.operations.list",
            "privateca.reusableConfigs.get",
            "privateca.reusableConfigs.getIamPolicy",
            "privateca.reusableConfigs.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "CA Service Certificate Manager"
        },
        {
          "description": "Request certificates from CA Service.",
          "id": "roles/privateca.certificateRequester",
          "is_beta": false,
          "permissions": [
            "privateca.certificates.create"
          ],
          "title": "CA Service Certificate Requester"
        },
        {
          "description": "Read CA Pools in CA Service.",
          "id": "roles/privateca.poolReader",
          "is_beta": false,
          "permissions": [
            "privateca.caPools.get"
          ],
          "title": "CA Service Pool Reader"
        },
        {
          "description": "Read, list and use certificate templates.",
          "id": "roles/privateca.templateUser",
          "is_beta": false,
          "permissions": [
            "privateca.certificateTemplates.get",
            "privateca.certificateTemplates.list",
            "privateca.certificateTemplates.use"
          ],
          "title": "CA Service Certificate Template User"
        },
        {
          "description": "Request certificates from CA Service with caller's identity.",
          "id": "roles/privateca.workloadCertificateRequester",
          "is_beta": false,
          "permissions": [
            "privateca.certificates.createForSelf"
          ],
          "title": "CA Service Workload Certificate Requester"
        },
        {
          "description": "Edit access to Certificate Manager all resources.",
          "id": "roles/certificatemanager.editor",
          "is_beta": false,
          "permissions": [
            "certificatemanager.certissuanceconfigs.create",
            "certificatemanager.certissuanceconfigs.get",
            "certificatemanager.certissuanceconfigs.list",
            "certificatemanager.certissuanceconfigs.update",
            "certificatemanager.certissuanceconfigs.use",
            "certificatemanager.certmapentries.create",
            "certificatemanager.certmapentries.get",
            "certificatemanager.certmapentries.list",
            "certificatemanager.certmapentries.update",
            "certificatemanager.certmaps.create",
            "certificatemanager.certmaps.get",
            "certificatemanager.certmaps.list",
            "certificatemanager.certmaps.update",
            "certificatemanager.certmaps.use",
            "certificatemanager.certs.create",
            "certificatemanager.certs.get",
            "certificatemanager.certs.list",
            "certificatemanager.certs.update",
            "certificatemanager.certs.use",
            "certificatemanager.dnsauthorizations.create",
            "certificatemanager.dnsauthorizations.get",
            "certificatemanager.dnsauthorizations.list",
            "certificatemanager.dnsauthorizations.update",
            "certificatemanager.dnsauthorizations.use",
            "certificatemanager.locations.*",
            "certificatemanager.operations.get",
            "certificatemanager.operations.list",
            "certificatemanager.trustconfigs.create",
            "certificatemanager.trustconfigs.get",
            "certificatemanager.trustconfigs.list",
            "certificatemanager.trustconfigs.update",
            "certificatemanager.trustconfigs.use",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Certificate Manager Editor"
        },
        {
          "description": "Full access to Certificate Manager all resources.",
          "id": "roles/certificatemanager.owner",
          "is_beta": false,
          "permissions": [
            "certificatemanager.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Certificate Manager Owner"
        },
        {
          "description": "Read-only access to Certificate Manager all resources.",
          "id": "roles/certificatemanager.viewer",
          "is_beta": false,
          "permissions": [
            "certificatemanager.certissuanceconfigs.get",
            "certificatemanager.certissuanceconfigs.list",
            "certificatemanager.certissuanceconfigs.listEffectiveTags",
            "certificatemanager.certissuanceconfigs.listTagBindings",
            "certificatemanager.certmapentries.get",
            "certificatemanager.certmapentries.list",
            "certificatemanager.certmapentries.listEffectiveTags",
            "certificatemanager.certmapentries.listTagBindings",
            "certificatemanager.certmaps.get",
            "certificatemanager.certmaps.list",
            "certificatemanager.certmaps.listEffectiveTags",
            "certificatemanager.certmaps.listTagBindings",
            "certificatemanager.certs.get",
            "certificatemanager.certs.list",
            "certificatemanager.certs.listEffectiveTags",
            "certificatemanager.certs.listTagBindings",
            "certificatemanager.dnsauthorizations.get",
            "certificatemanager.dnsauthorizations.list",
            "certificatemanager.dnsauthorizations.listEffectiveTags",
            "certificatemanager.dnsauthorizations.listTagBindings",
            "certificatemanager.locations.*",
            "certificatemanager.operations.get",
            "certificatemanager.operations.list",
            "certificatemanager.trustconfigs.get",
            "certificatemanager.trustconfigs.list",
            "certificatemanager.trustconfigs.listEffectiveTags",
            "certificatemanager.trustconfigs.listTagBindings",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Certificate Manager Viewer"
        },
        {
          "description": "Can view and modify app configurations",
          "id": "roles/chat.owner",
          "is_beta": false,
          "permissions": [
            "chat.*"
          ],
          "title": "Chat Apps Owner"
        },
        {
          "description": "Can view app configurations",
          "id": "roles/chat.reader",
          "is_beta": false,
          "permissions": [
            "chat.bots.get"
          ],
          "title": "Chat Apps Viewer"
        },
        {
          "description": "Full access to the Chronicle API services, including global settings.",
          "id": "roles/chronicle.admin",
          "is_beta": false,
          "permissions": [
            "chronicle.ais.*",
            "chronicle.analyticValues.list",
            "chronicle.analytics.list",
            "chronicle.bigQueryAccess.provide",
            "chronicle.bigQueryExport.*",
            "chronicle.cases.countPriorities",
            "chronicle.collectors.*",
            "chronicle.conversations.*",
            "chronicle.curatedRuleSetCategories.*",
            "chronicle.curatedRuleSetDeployments.*",
            "chronicle.curatedRuleSets.*",
            "chronicle.curatedRules.*",
            "chronicle.dashboardCharts.*",
            "chronicle.dashboardQueries.*",
            "chronicle.dashboards.*",
            "chronicle.dataAccessLabels.*",
            "chronicle.dataAccessScopes.*",
            "chronicle.dataExports.*",
            "chronicle.dataTableOperationErrors.get",
            "chronicle.dataTableRows.*",
            "chronicle.dataTables.*",
            "chronicle.dataTaps.*",
            "chronicle.enrichmentControls.*",
            "chronicle.entities.*",
            "chronicle.entityRiskScores.queryEntityRiskScores",
            "chronicle.errorNotificationConfigs.*",
            "chronicle.events.*",
            "chronicle.extensionValidationReports.*",
            "chronicle.feedServiceAccounts.fetch",
            "chronicle.feedSourceTypeSchemas.list",
            "chronicle.feeds.*",
            "chronicle.findingsGraphs.*",
            "chronicle.findingsRefinementDeployments.*",
            "chronicle.findingsRefinements.*",
            "chronicle.forwarders.*",
            "chronicle.globalDataAccessScopes.permit",
            "chronicle.ingestionLogLabels.*",
            "chronicle.ingestionLogNamespaces.*",
            "chronicle.instances.generateCollectionAgentAuth",
            "chronicle.instances.generateSoarAuthJwt",
            "chronicle.instances.generateWorkspaceConnectionToken",
            "chronicle.instances.get",
            "chronicle.instances.logTypeClassifier",
            "chronicle.instances.report",
            "chronicle.iocMatches.*",
            "chronicle.iocState.*",
            "chronicle.iocs.*",
            "chronicle.legacies.*",
            "chronicle.logTypeSchemas.list",
            "chronicle.logTypes.list",
            "chronicle.logs.*",
            "chronicle.messages.*",
            "chronicle.multitenantDirectories.get",
            "chronicle.nativeDashboards.*",
            "chronicle.operations.*",
            "chronicle.parserExtensions.*",
            "chronicle.parsers.*",
            "chronicle.parsingErrors.list",
            "chronicle.preferenceSets.*",
            "chronicle.referenceLists.*",
            "chronicle.retrohunts.*",
            "chronicle.riskConfigs.*",
            "chronicle.ruleDeployments.*",
            "chronicle.ruleExecutionErrors.list",
            "chronicle.rules.*",
            "chronicle.searchQueries.*",
            "chronicle.validationErrors.list",
            "chronicle.validationReports.get",
            "chronicle.watchlists.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Chronicle API Admin"
        },
        {
          "description": "Grants elevated access to control the lifecycle of the Chronicle instance and its data.",
          "id": "roles/chronicle.dataGovernor",
          "is_beta": true,
          "permissions": [
            "chronicle.instances.delete",
            "chronicle.instances.undelete",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Chronicle API Data Governor"
        },
        {
          "description": "Modify Access to Chronicle API resources.",
          "id": "roles/chronicle.editor",
          "is_beta": false,
          "permissions": [
            "chronicle.ais.*",
            "chronicle.analyticValues.list",
            "chronicle.analytics.list",
            "chronicle.bigQueryExport.get",
            "chronicle.cases.countPriorities",
            "chronicle.collectors.get",
            "chronicle.collectors.list",
            "chronicle.conversations.*",
            "chronicle.curatedRuleSetCategories.*",
            "chronicle.curatedRuleSetDeployments.*",
            "chronicle.curatedRuleSets.*",
            "chronicle.curatedRules.*",
            "chronicle.dashboardCharts.*",
            "chronicle.dashboardQueries.*",
            "chronicle.dashboards.*",
            "chronicle.dataAccessScopes.list",
            "chronicle.dataExports.*",
            "chronicle.dataTableOperationErrors.get",
            "chronicle.dataTableRows.*",
            "chronicle.dataTables.*",
            "chronicle.dataTaps.*",
            "chronicle.enrichmentControls.get",
            "chronicle.enrichmentControls.list",
            "chronicle.entities.*",
            "chronicle.entityRiskScores.queryEntityRiskScores",
            "chronicle.errorNotificationConfigs.get",
            "chronicle.errorNotificationConfigs.list",
            "chronicle.events.*",
            "chronicle.findingsGraphs.*",
            "chronicle.findingsRefinementDeployments.*",
            "chronicle.findingsRefinements.*",
            "chronicle.forwarders.generate",
            "chronicle.forwarders.get",
            "chronicle.forwarders.list",
            "chronicle.globalDataAccessScopes.permit",
            "chronicle.ingestionLogLabels.*",
            "chronicle.ingestionLogNamespaces.*",
            "chronicle.instances.generateCollectionAgentAuth",
            "chronicle.instances.generateSoarAuthJwt",
            "chronicle.instances.get",
            "chronicle.instances.logTypeClassifier",
            "chronicle.instances.report",
            "chronicle.iocMatches.*",
            "chronicle.iocState.*",
            "chronicle.iocs.*",
            "chronicle.legacies.*",
            "chronicle.logTypeSchemas.list",
            "chronicle.logs.*",
            "chronicle.messages.*",
            "chronicle.multitenantDirectories.get",
            "chronicle.nativeDashboards.*",
            "chronicle.operations.*",
            "chronicle.preferenceSets.*",
            "chronicle.referenceLists.*",
            "chronicle.retrohunts.*",
            "chronicle.riskConfigs.*",
            "chronicle.ruleDeployments.*",
            "chronicle.ruleExecutionErrors.list",
            "chronicle.rules.create",
            "chronicle.rules.get",
            "chronicle.rules.list",
            "chronicle.rules.listRevisions",
            "chronicle.rules.update",
            "chronicle.rules.verifyRuleText",
            "chronicle.searchQueries.*",
            "chronicle.watchlists.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Chronicle API Editor"
        },
        {
          "description": "Full access to Chronicle Federation features.",
          "id": "roles/chronicle.federationAdmin",
          "is_beta": true,
          "permissions": [
            "chronicle.federationGroups.*",
            "chronicle.instances.permitFederationAccess",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Chronicle API Federation Admin"
        },
        {
          "description": "Readonly access to Chronicle Federation Features.",
          "id": "roles/chronicle.federationViewer",
          "is_beta": true,
          "permissions": [
            "chronicle.federationGroups.get",
            "chronicle.federationGroups.list",
            "chronicle.instances.permitFederationAccess",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Chronicle API Federation Viewer"
        },
        {
          "description": "Grants global access to data i.e. all data can be accessed.",
          "id": "roles/chronicle.globalDataAccess",
          "is_beta": true,
          "permissions": [
            "chronicle.globalDataAccessScopes.permit"
          ],
          "title": "Chronicle API Global Data Access"
        },
        {
          "description": "Grants read-only access to Chronicle API resources, excluding Rules and Retrohunts.",
          "id": "roles/chronicle.limitedViewer",
          "is_beta": false,
          "permissions": [
            "chronicle.analyticValues.list",
            "chronicle.analytics.list",
            "chronicle.cases.countPriorities",
            "chronicle.conversations.get",
            "chronicle.conversations.list",
            "chronicle.dashboardCharts.*",
            "chronicle.dashboardQueries.*",
            "chronicle.dashboards.get",
            "chronicle.dashboards.list",
            "chronicle.dashboards.schedule",
            "chronicle.dataAccessScopes.list",
            "chronicle.entities.find",
            "chronicle.entities.findRelatedEntities",
            "chronicle.entities.get",
            "chronicle.entities.queryEntityRiskScoreModifications",
            "chronicle.entities.searchEntities",
            "chronicle.entities.summarize",
            "chronicle.entities.summarizeFromQuery",
            "chronicle.entityRiskScores.queryEntityRiskScores",
            "chronicle.errorNotificationConfigs.get",
            "chronicle.errorNotificationConfigs.list",
            "chronicle.events.batchGet",
            "chronicle.events.findUdmFieldValues",
            "chronicle.events.get",
            "chronicle.events.queryProductSourceStats",
            "chronicle.events.searchRawLogs",
            "chronicle.events.udmSearch",
            "chronicle.events.validateQuery",
            "chronicle.findingsGraphs.*",
            "chronicle.findingsRefinementDeployments.get",
            "chronicle.findingsRefinementDeployments.list",
            "chronicle.findingsRefinements.computeActivity",
            "chronicle.findingsRefinements.computeAllActivities",
            "chronicle.findingsRefinements.get",
            "chronicle.findingsRefinements.list",
            "chronicle.findingsRefinements.test",
            "chronicle.globalDataAccessScopes.permit",
            "chronicle.ingestionLogLabels.*",
            "chronicle.ingestionLogNamespaces.*",
            "chronicle.instances.get",
            "chronicle.legacies.legacyBatchGetCases",
            "chronicle.legacies.legacyFetchAlertsView",
            "chronicle.legacies.legacyFetchUdmSearchCsv",
            "chronicle.legacies.legacyFetchUdmSearchView",
            "chronicle.legacies.legacyFindAssetEvents",
            "chronicle.legacies.legacyFindRawLogs",
            "chronicle.legacies.legacyFindUdmEvents",
            "chronicle.legacies.legacyGetAlert",
            "chronicle.legacies.legacySearchArtifactEvents",
            "chronicle.legacies.legacySearchArtifactIoCDetails",
            "chronicle.legacies.legacySearchAssetEvents",
            "chronicle.legacies.legacySearchCustomerStats",
            "chronicle.legacies.legacySearchDomainsRecentlyRegistered",
            "chronicle.legacies.legacySearchDomainsTimingStats",
            "chronicle.legacies.legacySearchEnterpriseWideAlerts",
            "chronicle.legacies.legacySearchEnterpriseWideIoCs",
            "chronicle.legacies.legacySearchFindings",
            "chronicle.legacies.legacySearchIngestionStats",
            "chronicle.legacies.legacySearchIoCInsights",
            "chronicle.legacies.legacySearchRawLogs",
            "chronicle.legacies.legacySearchUserEvents",
            "chronicle.logTypeSchemas.list",
            "chronicle.logs.export",
            "chronicle.logs.get",
            "chronicle.logs.list",
            "chronicle.messages.get",
            "chronicle.messages.list",
            "chronicle.multitenantDirectories.get",
            "chronicle.nativeDashboards.get",
            "chronicle.nativeDashboards.list",
            "chronicle.operations.get",
            "chronicle.operations.list",
            "chronicle.operations.streamSearch",
            "chronicle.operations.wait",
            "chronicle.preferenceSets.*",
            "chronicle.searchQueries.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Chronicle API Limited Viewer"
        },
        {
          "description": "Grants access to data controlled by Data Access Scopes. Intended to be refined by IAM Conditions.",
          "id": "roles/chronicle.restrictedDataAccess",
          "is_beta": true,
          "permissions": [
            "chronicle.dataAccessScopes.permit"
          ],
          "title": "Chronicle API Restricted Data Access"
        },
        {
          "description": "Grants readonly access to Chronicle API resources without global data access scope.",
          "id": "roles/chronicle.restrictedDataAccessViewer",
          "is_beta": true,
          "permissions": [
            "chronicle.ais.*",
            "chronicle.dashboardCharts.*",
            "chronicle.dashboardQueries.*",
            "chronicle.dataAccessScopes.list",
            "chronicle.dataTableRows.get",
            "chronicle.dataTableRows.list",
            "chronicle.dataTables.get",
            "chronicle.dataTables.list",
            "chronicle.entities.find",
            "chronicle.entities.findRelatedEntities",
            "chronicle.entities.get",
            "chronicle.entities.list",
            "chronicle.entities.searchEntities",
            "chronicle.entities.summarize",
            "chronicle.entities.summarizeFromQuery",
            "chronicle.events.batchGet",
            "chronicle.events.findUdmFieldValues",
            "chronicle.events.get",
            "chronicle.events.queryProductSourceStats",
            "chronicle.events.searchRawLogs",
            "chronicle.events.udmSearch",
            "chronicle.events.validateQuery",
            "chronicle.findingsGraphs.*",
            "chronicle.instances.generateCollectionAgentAuth",
            "chronicle.instances.generateSoarAuthJwt",
            "chronicle.instances.get",
            "chronicle.instances.report",
            "chronicle.legacies.legacyBatchGetCases",
            "chronicle.legacies.legacyFetchAlertsView",
            "chronicle.legacies.legacyFetchUdmSearchCsv",
            "chronicle.legacies.legacyFetchUdmSearchView",
            "chronicle.legacies.legacyFindAssetEvents",
            "chronicle.legacies.legacyFindRawLogs",
            "chronicle.legacies.legacyFindUdmEvents",
            "chronicle.legacies.legacyGetAlert",
            "chronicle.legacies.legacyGetRuleCounts",
            "chronicle.legacies.legacyGetRulesTrends",
            "chronicle.legacies.legacyRunTestRule",
            "chronicle.legacies.legacySearchArtifactEvents",
            "chronicle.legacies.legacySearchArtifactIoCDetails",
            "chronicle.legacies.legacySearchAssetEvents",
            "chronicle.legacies.legacySearchCustomerStats",
            "chronicle.legacies.legacySearchDomainsRecentlyRegistered",
            "chronicle.legacies.legacySearchDomainsTimingStats",
            "chronicle.legacies.legacySearchFindings",
            "chronicle.legacies.legacySearchIngestionStats",
            "chronicle.legacies.legacySearchIoCInsights",
            "chronicle.legacies.legacySearchRawLogs",
            "chronicle.legacies.legacySearchRuleDetectionCountBuckets",
            "chronicle.legacies.legacySearchRuleDetectionEvents",
            "chronicle.legacies.legacySearchRuleResults",
            "chronicle.legacies.legacySearchRulesAlerts",
            "chronicle.legacies.legacySearchUserEvents",
            "chronicle.logs.get",
            "chronicle.logs.list",
            "chronicle.multitenantDirectories.get",
            "chronicle.nativeDashboards.get",
            "chronicle.nativeDashboards.list",
            "chronicle.operations.get",
            "chronicle.operations.list",
            "chronicle.operations.streamSearch",
            "chronicle.operations.wait",
            "chronicle.preferenceSets.*",
            "chronicle.referenceLists.get",
            "chronicle.referenceLists.list",
            "chronicle.referenceLists.verifyReferenceList",
            "chronicle.retrohunts.get",
            "chronicle.retrohunts.list",
            "chronicle.ruleDeployments.get",
            "chronicle.ruleDeployments.list",
            "chronicle.ruleExecutionErrors.list",
            "chronicle.rules.get",
            "chronicle.rules.list",
            "chronicle.rules.listRevisions",
            "chronicle.rules.verifyRuleText",
            "chronicle.searchQueries.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Chronicle API Restricted Data Access Viewer"
        },
        {
          "description": "Grants admin access to Chronicle SOAR.",
          "id": "roles/chronicle.soarAdmin",
          "is_beta": true,
          "permissions": [
            "chronicle.cases.countPriorities",
            "chronicle.instances.soarAdmin",
            "cloudasset.assets.exportResource",
            "cloudasset.assets.queryAccessPolicy",
            "cloudasset.assets.queryIamPolicy",
            "cloudasset.assets.queryOSInventories",
            "cloudasset.assets.queryResource",
            "cloudasset.assets.searchAllIamPolicies",
            "cloudasset.assets.searchAllResources",
            "cloudasset.assets.searchEnrichmentResourceOwners",
            "resourcemanager.organizations.get",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "securitycenter.attackpaths.list",
            "securitycenter.exposurepathexplan.get",
            "securitycenter.findings.bulkMuteUpdate",
            "securitycenter.findings.group",
            "securitycenter.findings.list",
            "securitycenter.findings.listFindingPropertyNames",
            "securitycenter.findings.setMute",
            "securitycenter.findings.setState",
            "securitycenter.findings.update",
            "securitycenter.findingsecuritymarks.update",
            "securitycenter.simulations.get",
            "securitycenter.userinterfacemetadata.get",
            "securitycenter.valuedresources.list"
          ],
          "title": "Chronicle SOAR Admin"
        },
        {
          "description": "Grants threat manager access to Chronicle SOAR.",
          "id": "roles/chronicle.soarThreatManager",
          "is_beta": true,
          "permissions": [
            "chronicle.instances.soarThreatManager",
            "cloudasset.assets.exportResource",
            "cloudasset.assets.queryAccessPolicy",
            "cloudasset.assets.queryIamPolicy",
            "cloudasset.assets.queryOSInventories",
            "cloudasset.assets.queryResource",
            "cloudasset.assets.searchAllIamPolicies",
            "cloudasset.assets.searchAllResources",
            "cloudasset.assets.searchEnrichmentResourceOwners",
            "resourcemanager.organizations.get",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "securitycenter.attackpaths.list",
            "securitycenter.exposurepathexplan.get",
            "securitycenter.findings.bulkMuteUpdate",
            "securitycenter.findings.group",
            "securitycenter.findings.list",
            "securitycenter.findings.listFindingPropertyNames",
            "securitycenter.findings.setMute",
            "securitycenter.findings.setState",
            "securitycenter.findings.update",
            "securitycenter.findingsecuritymarks.update",
            "securitycenter.simulations.get",
            "securitycenter.userinterfacemetadata.get",
            "securitycenter.valuedresources.list"
          ],
          "title": "Chronicle SOAR Threat Manager"
        },
        {
          "description": "Grants vulnerability manager access to Chronicle SOAR.",
          "id": "roles/chronicle.soarVulnerabilityManager",
          "is_beta": true,
          "permissions": [
            "chronicle.instances.soarVulnerabilityManager",
            "cloudasset.assets.exportResource",
            "cloudasset.assets.queryAccessPolicy",
            "cloudasset.assets.queryIamPolicy",
            "cloudasset.assets.queryOSInventories",
            "cloudasset.assets.queryResource",
            "cloudasset.assets.searchAllIamPolicies",
            "cloudasset.assets.searchAllResources",
            "cloudasset.assets.searchEnrichmentResourceOwners",
            "resourcemanager.organizations.get",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "securitycenter.attackpaths.list",
            "securitycenter.exposurepathexplan.get",
            "securitycenter.findings.bulkMuteUpdate",
            "securitycenter.findings.group",
            "securitycenter.findings.list",
            "securitycenter.findings.listFindingPropertyNames",
            "securitycenter.findings.setMute",
            "securitycenter.findings.setState",
            "securitycenter.findings.update",
            "securitycenter.findingsecuritymarks.update",
            "securitycenter.simulations.get",
            "securitycenter.userinterfacemetadata.get",
            "securitycenter.valuedresources.list"
          ],
          "title": "Chronicle SOAR Vulnerability Manager"
        },
        {
          "description": "Read-only access to the Chronicle API resources.",
          "id": "roles/chronicle.viewer",
          "is_beta": false,
          "permissions": [
            "chronicle.ais.*",
            "chronicle.analyticValues.list",
            "chronicle.analytics.list",
            "chronicle.bigQueryExport.get",
            "chronicle.cases.countPriorities",
            "chronicle.collectors.get",
            "chronicle.collectors.list",
            "chronicle.conversations.get",
            "chronicle.conversations.list",
            "chronicle.curatedRuleSetCategories.*",
            "chronicle.curatedRuleSetDeployments.get",
            "chronicle.curatedRuleSetDeployments.list",
            "chronicle.curatedRuleSets.*",
            "chronicle.curatedRules.*",
            "chronicle.dashboardCharts.*",
            "chronicle.dashboardQueries.*",
            "chronicle.dashboards.get",
            "chronicle.dashboards.list",
            "chronicle.dashboards.schedule",
            "chronicle.dataAccessScopes.list",
            "chronicle.dataExports.fetchLogTypesAvailableForExport",
            "chronicle.dataExports.get",
            "chronicle.dataTableOperationErrors.get",
            "chronicle.dataTableRows.get",
            "chronicle.dataTableRows.list",
            "chronicle.dataTables.get",
            "chronicle.dataTables.list",
            "chronicle.dataTaps.get",
            "chronicle.dataTaps.list",
            "chronicle.enrichmentControls.get",
            "chronicle.enrichmentControls.list",
            "chronicle.entities.find",
            "chronicle.entities.findRelatedEntities",
            "chronicle.entities.get",
            "chronicle.entities.list",
            "chronicle.entities.queryEntityRiskScoreModifications",
            "chronicle.entities.searchEntities",
            "chronicle.entities.summarize",
            "chronicle.entities.summarizeFromQuery",
            "chronicle.entityRiskScores.queryEntityRiskScores",
            "chronicle.errorNotificationConfigs.get",
            "chronicle.errorNotificationConfigs.list",
            "chronicle.events.batchGet",
            "chronicle.events.findUdmFieldValues",
            "chronicle.events.get",
            "chronicle.events.queryProductSourceStats",
            "chronicle.events.searchRawLogs",
            "chronicle.events.udmSearch",
            "chronicle.events.validateQuery",
            "chronicle.findingsGraphs.*",
            "chronicle.findingsRefinementDeployments.get",
            "chronicle.findingsRefinementDeployments.list",
            "chronicle.findingsRefinements.computeActivity",
            "chronicle.findingsRefinements.computeAllActivities",
            "chronicle.findingsRefinements.get",
            "chronicle.findingsRefinements.list",
            "chronicle.findingsRefinements.test",
            "chronicle.forwarders.generate",
            "chronicle.forwarders.get",
            "chronicle.forwarders.list",
            "chronicle.globalDataAccessScopes.permit",
            "chronicle.ingestionLogLabels.*",
            "chronicle.ingestionLogNamespaces.*",
            "chronicle.instances.generateCollectionAgentAuth",
            "chronicle.instances.generateSoarAuthJwt",
            "chronicle.instances.get",
            "chronicle.instances.logTypeClassifier",
            "chronicle.instances.report",
            "chronicle.iocMatches.*",
            "chronicle.iocState.get",
            "chronicle.iocs.*",
            "chronicle.legacies.legacyBatchGetCases",
            "chronicle.legacies.legacyFetchAlertsView",
            "chronicle.legacies.legacyFetchUdmSearchCsv",
            "chronicle.legacies.legacyFetchUdmSearchView",
            "chronicle.legacies.legacyFindAssetEvents",
            "chronicle.legacies.legacyFindRawLogs",
            "chronicle.legacies.legacyFindUdmEvents",
            "chronicle.legacies.legacyGetAlert",
            "chronicle.legacies.legacyGetCuratedRulesTrends",
            "chronicle.legacies.legacyGetDetection",
            "chronicle.legacies.legacyGetEventForDetection",
            "chronicle.legacies.legacyGetRuleCounts",
            "chronicle.legacies.legacyGetRulesTrends",
            "chronicle.legacies.legacyRunTestRule",
            "chronicle.legacies.legacySearchArtifactEvents",
            "chronicle.legacies.legacySearchArtifactIoCDetails",
            "chronicle.legacies.legacySearchAssetEvents",
            "chronicle.legacies.legacySearchCuratedDetections",
            "chronicle.legacies.legacySearchCustomerStats",
            "chronicle.legacies.legacySearchDetections",
            "chronicle.legacies.legacySearchDomainsRecentlyRegistered",
            "chronicle.legacies.legacySearchDomainsTimingStats",
            "chronicle.legacies.legacySearchEnterpriseWideAlerts",
            "chronicle.legacies.legacySearchEnterpriseWideIoCs",
            "chronicle.legacies.legacySearchFindings",
            "chronicle.legacies.legacySearchIngestionStats",
            "chronicle.legacies.legacySearchIoCInsights",
            "chronicle.legacies.legacySearchRawLogs",
            "chronicle.legacies.legacySearchRuleDetectionCountBuckets",
            "chronicle.legacies.legacySearchRuleDetectionEvents",
            "chronicle.legacies.legacySearchRuleResults",
            "chronicle.legacies.legacySearchRulesAlerts",
            "chronicle.legacies.legacySearchUserEvents",
            "chronicle.legacies.legacyStreamDetectionAlerts",
            "chronicle.legacies.legacyTestRuleStreaming",
            "chronicle.logTypeSchemas.list",
            "chronicle.logs.export",
            "chronicle.logs.get",
            "chronicle.logs.list",
            "chronicle.messages.get",
            "chronicle.messages.list",
            "chronicle.multitenantDirectories.get",
            "chronicle.nativeDashboards.get",
            "chronicle.nativeDashboards.list",
            "chronicle.operations.get",
            "chronicle.operations.list",
            "chronicle.operations.streamSearch",
            "chronicle.operations.wait",
            "chronicle.preferenceSets.*",
            "chronicle.referenceLists.get",
            "chronicle.referenceLists.list",
            "chronicle.referenceLists.verifyReferenceList",
            "chronicle.retrohunts.get",
            "chronicle.retrohunts.list",
            "chronicle.riskConfigs.get",
            "chronicle.ruleDeployments.get",
            "chronicle.ruleDeployments.list",
            "chronicle.ruleExecutionErrors.list",
            "chronicle.rules.get",
            "chronicle.rules.list",
            "chronicle.rules.listRevisions",
            "chronicle.rules.verifyRuleText",
            "chronicle.searchQueries.*",
            "chronicle.watchlists.get",
            "chronicle.watchlists.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Chronicle API Viewer"
        },
        {
          "description": "Full access to Cloud AlloyDB all resources.",
          "id": "roles/alloydb.admin",
          "is_beta": true,
          "permissions": [
            "alloydb.*",
            "cloudaicompanion.entitlements.get",
            "cloudkms.keyHandles.*",
            "cloudkms.operations.get",
            "cloudkms.projects.showEffectiveAutokeyConfig",
            "recommender.alloydbClusterPerformanceInsights.*",
            "recommender.alloydbClusterPerformanceRecommendations.*",
            "recommender.alloydbClusterReliabilityInsights.*",
            "recommender.alloydbClusterReliabilityRecommendations.*",
            "recommender.alloydbInstanceSecurityInsights.*",
            "recommender.alloydbInstanceSecurityRecommendations.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Cloud AlloyDB Admin"
        },
        {
          "description": "Connectivity access to Cloud AlloyDB instances.",
          "id": "roles/alloydb.client",
          "is_beta": true,
          "permissions": [
            "alloydb.clusters.generateClientCertificate",
            "alloydb.clusters.get",
            "alloydb.instances.connect",
            "alloydb.instances.get",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Cloud AlloyDB Client"
        },
        {
          "description": "Role allowing access to login as a database user.",
          "id": "roles/alloydb.databaseUser",
          "is_beta": true,
          "permissions": [
            "alloydb.clusters.get",
            "alloydb.instances.executeSql",
            "alloydb.instances.get",
            "alloydb.users.login",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Cloud AlloyDB Database User"
        },
        {
          "description": "Read-only access to Cloud AlloyDB all resources.",
          "id": "roles/alloydb.viewer",
          "is_beta": true,
          "permissions": [
            "alloydb.backups.get",
            "alloydb.backups.list",
            "alloydb.backups.listEffectiveTags",
            "alloydb.backups.listTagBindings",
            "alloydb.clusters.export",
            "alloydb.clusters.get",
            "alloydb.clusters.list",
            "alloydb.clusters.listEffectiveTags",
            "alloydb.clusters.listTagBindings",
            "alloydb.databases.list",
            "alloydb.instances.get",
            "alloydb.instances.list",
            "alloydb.locations.*",
            "alloydb.operations.get",
            "alloydb.operations.list",
            "alloydb.supportedDatabaseFlags.*",
            "alloydb.users.get",
            "alloydb.users.list",
            "cloudaicompanion.entitlements.get",
            "recommender.alloydbClusterPerformanceInsights.get",
            "recommender.alloydbClusterPerformanceInsights.list",
            "recommender.alloydbClusterPerformanceRecommendations.get",
            "recommender.alloydbClusterPerformanceRecommendations.list",
            "recommender.alloydbClusterReliabilityInsights.get",
            "recommender.alloydbClusterReliabilityInsights.list",
            "recommender.alloydbClusterReliabilityRecommendations.get",
            "recommender.alloydbClusterReliabilityRecommendations.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Cloud AlloyDB Viewer"
        },
        {
          "description": "Full access to cloud assets metadata",
          "id": "roles/cloudasset.owner",
          "is_beta": false,
          "permissions": [
            "cloudasset.assets.analyzeIamPolicy",
            "cloudasset.assets.analyzeMove",
            "cloudasset.assets.analyzeOrgPolicy",
            "cloudasset.assets.exportAccessLevel",
            "cloudasset.assets.exportAccessPolicy",
            "cloudasset.assets.exportAiplatformBatchPredictionJobs",
            "cloudasset.assets.exportAiplatformCustomJobs",
            "cloudasset.assets.exportAiplatformDataLabelingJobs",
            "cloudasset.assets.exportAiplatformDatasets",
            "cloudasset.assets.exportAiplatformEndpoints",
            "cloudasset.assets.exportAiplatformHyperparameterTuningJobs",
            "cloudasset.assets.exportAiplatformMetadataStores",
            "cloudasset.assets.exportAiplatformModelDeploymentMonitoringJobs",
            "cloudasset.assets.exportAiplatformModels",
            "cloudasset.assets.exportAiplatformPipelineJobs",
            "cloudasset.assets.exportAiplatformSpecialistPools",
            "cloudasset.assets.exportAiplatformTrainingPipelines",
            "cloudasset.assets.exportAllAccessPolicy",
            "cloudasset.assets.exportAnthosConnectedCluster",
            "cloudasset.assets.exportAnthosedgeCluster",
            "cloudasset.assets.exportApigatewayApi",
            "cloudasset.assets.exportApigatewayApiConfig",
            "cloudasset.assets.exportApigatewayGateway",
            "cloudasset.assets.exportApikeysKeys",
            "cloudasset.assets.exportAppengineApplications",
            "cloudasset.assets.exportAppengineServices",
            "cloudasset.assets.exportAppengineVersions",
            "cloudasset.assets.exportArtifactregistryDockerImages",
            "cloudasset.assets.exportArtifactregistryRepositories",
            "cloudasset.assets.exportAssuredWorkloadsWorkloads",
            "cloudasset.assets.exportBeyondCorpApiGateways",
            "cloudasset.assets.exportBeyondCorpAppConnections",
            "cloudasset.assets.exportBeyondCorpAppConnectors",
            "cloudasset.assets.exportBeyondCorpAppGateways",
            "cloudasset.assets.exportBeyondCorpClientConnectorServices",
            "cloudasset.assets.exportBeyondCorpClientGateways",
            "cloudasset.assets.exportBigqueryDatasets",
            "cloudasset.assets.exportBigqueryModels",
            "cloudasset.assets.exportBigqueryTables",
            "cloudasset.assets.exportBigtableAppProfile",
            "cloudasset.assets.exportBigtableBackup",
            "cloudasset.assets.exportBigtableCluster",
            "cloudasset.assets.exportBigtableInstance",
            "cloudasset.assets.exportBigtableTable",
            "cloudasset.assets.exportCloudAssetFeeds",
            "cloudasset.assets.exportCloudDeployDeliveryPipelines",
            "cloudasset.assets.exportCloudDeployReleases",
            "cloudasset.assets.exportCloudDeployRollouts",
            "cloudasset.assets.exportCloudDeployTargets",
            "cloudasset.assets.exportCloudDocumentAIEvaluation",
            "cloudasset.assets.exportCloudDocumentAIHumanReviewConfig",
            "cloudasset.assets.exportCloudDocumentAILabelerPool",
            "cloudasset.assets.exportCloudDocumentAIProcessor",
            "cloudasset.assets.exportCloudDocumentAIProcessorVersion",
            "cloudasset.assets.exportCloudbillingBillingAccounts",
            "cloudasset.assets.exportCloudbillingProjectBillingInfos",
            "cloudasset.assets.exportCloudfunctionsFunctions",
            "cloudasset.assets.exportCloudfunctionsGen2Functions",
            "cloudasset.assets.exportCloudkmsCryptoKeyVersions",
            "cloudasset.assets.exportCloudkmsCryptoKeys",
            "cloudasset.assets.exportCloudkmsEkmConnections",
            "cloudasset.assets.exportCloudkmsImportJobs",
            "cloudasset.assets.exportCloudkmsKeyRings",
            "cloudasset.assets.exportCloudmemcacheInstances",
            "cloudasset.assets.exportCloudresourcemanagerFolders",
            "cloudasset.assets.exportCloudresourcemanagerOrganizations",
            "cloudasset.assets.exportCloudresourcemanagerProjects",
            "cloudasset.assets.exportCloudresourcemanagerTagBindings",
            "cloudasset.assets.exportCloudresourcemanagerTagKeys",
            "cloudasset.assets.exportCloudresourcemanagerTagValues",
            "cloudasset.assets.exportComposerEnvironments",
            "cloudasset.assets.exportComputeAddress",
            "cloudasset.assets.exportComputeAutoscalers",
            "cloudasset.assets.exportComputeBackendBuckets",
            "cloudasset.assets.exportComputeBackendServices",
            "cloudasset.assets.exportComputeCommitments",
            "cloudasset.assets.exportComputeDisks",
            "cloudasset.assets.exportComputeExternalVpnGateways",
            "cloudasset.assets.exportComputeFirewallPolicies",
            "cloudasset.assets.exportComputeFirewalls",
            "cloudasset.assets.exportComputeForwardingRules",
            "cloudasset.assets.exportComputeGlobalAddress",
            "cloudasset.assets.exportComputeGlobalForwardingRules",
            "cloudasset.assets.exportComputeHealthChecks",
            "cloudasset.assets.exportComputeHttpHealthChecks",
            "cloudasset.assets.exportComputeHttpsHealthChecks",
            "cloudasset.assets.exportComputeImages",
            "cloudasset.assets.exportComputeInstanceGroupManagers",
            "cloudasset.assets.exportComputeInstanceGroups",
            "cloudasset.assets.exportComputeInstanceTemplates",
            "cloudasset.assets.exportComputeInstances",
            "cloudasset.assets.exportComputeInterconnect",
            "cloudasset.assets.exportComputeInterconnectAttachment",
            "cloudasset.assets.exportComputeLicenses",
            "cloudasset.assets.exportComputeNetworkEndpointGroups",
            "cloudasset.assets.exportComputeNetworks",
            "cloudasset.assets.exportComputeNodeGroups",
            "cloudasset.assets.exportComputeNodeTemplates",
            "cloudasset.assets.exportComputePacketMirrorings",
            "cloudasset.assets.exportComputeProjects",
            "cloudasset.assets.exportComputeRegionAutoscaler",
            "cloudasset.assets.exportComputeRegionBackendServices",
            "cloudasset.assets.exportComputeRegionDisk",
            "cloudasset.assets.exportComputeRegionInstanceGroup",
            "cloudasset.assets.exportComputeRegionInstanceGroupManager",
            "cloudasset.assets.exportComputeReservations",
            "cloudasset.assets.exportComputeResourcePolicies",
            "cloudasset.assets.exportComputeRouters",
            "cloudasset.assets.exportComputeRoutes",
            "cloudasset.assets.exportComputeSecurityPolicy",
            "cloudasset.assets.exportComputeServiceAttachments",
            "cloudasset.assets.exportComputeSnapshots",
            "cloudasset.assets.exportComputeSslCertificates",
            "cloudasset.assets.exportComputeSslPolicies",
            "cloudasset.assets.exportComputeSubnetworks",
            "cloudasset.assets.exportComputeTargetHttpProxies",
            "cloudasset.assets.exportComputeTargetHttpsProxies",
            "cloudasset.assets.exportComputeTargetInstances",
            "cloudasset.assets.exportComputeTargetPools",
            "cloudasset.assets.exportComputeTargetSslProxies",
            "cloudasset.assets.exportComputeTargetTcpProxies",
            "cloudasset.assets.exportComputeTargetVpnGateways",
            "cloudasset.assets.exportComputeUrlMaps",
            "cloudasset.assets.exportComputeVpnGateways",
            "cloudasset.assets.exportComputeVpnTunnels",
            "cloudasset.assets.exportConnectorsConnections",
            "cloudasset.assets.exportConnectorsConnectorVersions",
            "cloudasset.assets.exportConnectorsConnectors",
            "cloudasset.assets.exportConnectorsProviders",
            "cloudasset.assets.exportConnectorsRuntimeConfigs",
            "cloudasset.assets.exportContainerAppsDeployment",
            "cloudasset.assets.exportContainerAppsReplicaSets",
            "cloudasset.assets.exportContainerBatchJobs",
            "cloudasset.assets.exportContainerClusterrole",
            "cloudasset.assets.exportContainerClusterrolebinding",
            "cloudasset.assets.exportContainerClusters",
            "cloudasset.assets.exportContainerExtensionsIngresses",
            "cloudasset.assets.exportContainerJobs",
            "cloudasset.assets.exportContainerNamespace",
            "cloudasset.assets.exportContainerNetworkingIngresses",
            "cloudasset.assets.exportContainerNetworkingNetworkPolicies",
            "cloudasset.assets.exportContainerNode",
            "cloudasset.assets.exportContainerNodepool",
            "cloudasset.assets.exportContainerPod",
            "cloudasset.assets.exportContainerReplicaSets",
            "cloudasset.assets.exportContainerRole",
            "cloudasset.assets.exportContainerRolebinding",
            "cloudasset.assets.exportContainerServices",
            "cloudasset.assets.exportContainerregistryImage",
            "cloudasset.assets.exportDataMigrationConnectionProfiles",
            "cloudasset.assets.exportDataMigrationMigrationJobs",
            "cloudasset.assets.exportDataflowJobs",
            "cloudasset.assets.exportDatafusionInstance",
            "cloudasset.assets.exportDataplexAssets",
            "cloudasset.assets.exportDataplexLakes",
            "cloudasset.assets.exportDataplexTasks",
            "cloudasset.assets.exportDataplexZones",
            "cloudasset.assets.exportDataprocAutoscalingPolicies",
            "cloudasset.assets.exportDataprocBatches",
            "cloudasset.assets.exportDataprocClusters",
            "cloudasset.assets.exportDataprocJobs",
            "cloudasset.assets.exportDataprocSessions",
            "cloudasset.assets.exportDataprocWorkflowTemplates",
            "cloudasset.assets.exportDatastreamConnectionProfile",
            "cloudasset.assets.exportDatastreamPrivateConnection",
            "cloudasset.assets.exportDatastreamStream",
            "cloudasset.assets.exportDialogflowAgents",
            "cloudasset.assets.exportDialogflowConversationProfiles",
            "cloudasset.assets.exportDialogflowKnowledgeBases",
            "cloudasset.assets.exportDialogflowLocationSettings",
            "cloudasset.assets.exportDlpDeidentifyTemplates",
            "cloudasset.assets.exportDlpDlpJobs",
            "cloudasset.assets.exportDlpInspectTemplates",
            "cloudasset.assets.exportDlpJobTriggers",
            "cloudasset.assets.exportDlpStoredInfoTypes",
            "cloudasset.assets.exportDnsManagedZones",
            "cloudasset.assets.exportDnsPolicies",
            "cloudasset.assets.exportDomainsRegistrations",
            "cloudasset.assets.exportEventarcTriggers",
            "cloudasset.assets.exportFileBackups",
            "cloudasset.assets.exportFileInstances",
            "cloudasset.assets.exportFirebaseAppInfos",
            "cloudasset.assets.exportFirebaseProjects",
            "cloudasset.assets.exportFirestoreDatabases",
            "cloudasset.assets.exportGKEHubFeatures",
            "cloudasset.assets.exportGKEHubMemberships",
            "cloudasset.assets.exportGameservicesGameServerClusters",
            "cloudasset.assets.exportGameservicesGameServerConfigs",
            "cloudasset.assets.exportGameservicesGameServerDeployments",
            "cloudasset.assets.exportGameservicesRealms",
            "cloudasset.assets.exportGkeBackupBackupPlans",
            "cloudasset.assets.exportGkeBackupBackups",
            "cloudasset.assets.exportGkeBackupRestorePlans",
            "cloudasset.assets.exportGkeBackupRestores",
            "cloudasset.assets.exportGkeBackupVolumeBackups",
            "cloudasset.assets.exportGkeBackupVolumeRestores",
            "cloudasset.assets.exportHealthcareConsentStores",
            "cloudasset.assets.exportHealthcareDatasets",
            "cloudasset.assets.exportHealthcareDicomStores",
            "cloudasset.assets.exportHealthcareFhirStores",
            "cloudasset.assets.exportHealthcareHl7V2Stores",
            "cloudasset.assets.exportIamPolicy",
            "cloudasset.assets.exportIamRoles",
            "cloudasset.assets.exportIamServiceAccountKeys",
            "cloudasset.assets.exportIamServiceAccounts",
            "cloudasset.assets.exportIapTunnel",
            "cloudasset.assets.exportIapTunnelInstances",
            "cloudasset.assets.exportIapTunnelZones",
            "cloudasset.assets.exportIapWeb",
            "cloudasset.assets.exportIapWebServiceVersion",
            "cloudasset.assets.exportIapWebServices",
            "cloudasset.assets.exportIapWebType",
            "cloudasset.assets.exportIdsEndpoints",
            "cloudasset.assets.exportIntegrationsAuthConfigs",
            "cloudasset.assets.exportIntegrationsCertificates",
            "cloudasset.assets.exportIntegrationsExecutions",
            "cloudasset.assets.exportIntegrationsIntegrationVersions",
            "cloudasset.assets.exportIntegrationsIntegrations",
            "cloudasset.assets.exportIntegrationsSfdcChannels",
            "cloudasset.assets.exportIntegrationsSfdcInstances",
            "cloudasset.assets.exportIntegrationsSuspensions",
            "cloudasset.assets.exportLoggingLogMetrics",
            "cloudasset.assets.exportLoggingLogSinks",
            "cloudasset.assets.exportManagedidentitiesDomain",
            "cloudasset.assets.exportMetastoreBackups",
            "cloudasset.assets.exportMetastoreMetadataImports",
            "cloudasset.assets.exportMetastoreServices",
            "cloudasset.assets.exportMonitoringAlertPolicies",
            "cloudasset.assets.exportNetworkConnectivityHubs",
            "cloudasset.assets.exportNetworkConnectivitySpokes",
            "cloudasset.assets.exportNetworkManagementConnectivityTests",
            "cloudasset.assets.exportNetworkServicesEndpointPolicies",
            "cloudasset.assets.exportNetworkServicesGateways",
            "cloudasset.assets.exportNetworkServicesGrpcRoutes",
            "cloudasset.assets.exportNetworkServicesHttpRoutes",
            "cloudasset.assets.exportNetworkServicesMeshes",
            "cloudasset.assets.exportNetworkServicesServiceBindings",
            "cloudasset.assets.exportNetworkServicesTcpRoutes",
            "cloudasset.assets.exportNetworkServicesTlsRoutes",
            "cloudasset.assets.exportOSConfigOSPolicyAssignmentReports",
            "cloudasset.assets.exportOSConfigOSPolicyAssignments",
            "cloudasset.assets.exportOSConfigVulnerabilityReports",
            "cloudasset.assets.exportOSInventories",
            "cloudasset.assets.exportOrgPolicy",
            "cloudasset.assets.exportPatchDeployments",
            "cloudasset.assets.exportPubsubSnapshots",
            "cloudasset.assets.exportPubsubSubscriptions",
            "cloudasset.assets.exportPubsubTopics",
            "cloudasset.assets.exportRedisInstances",
            "cloudasset.assets.exportResource",
            "cloudasset.assets.exportSecretManagerSecretVersions",
            "cloudasset.assets.exportSecretManagerSecrets",
            "cloudasset.assets.exportServiceDirectoryNamespaces",
            "cloudasset.assets.exportServicePerimeter",
            "cloudasset.assets.exportServiceconsumermanagementConsumerProperty",
            "cloudasset.assets.exportServiceconsumermanagementConsumerQuotaLimits",
            "cloudasset.assets.exportServiceconsumermanagementConsumers",
            "cloudasset.assets.exportServiceconsumermanagementProducerOverrides",
            "cloudasset.assets.exportServiceconsumermanagementTenancyUnits",
            "cloudasset.assets.exportServiceconsumermanagementVisibility",
            "cloudasset.assets.exportServicemanagementServices",
            "cloudasset.assets.exportServiceusageAdminOverrides",
            "cloudasset.assets.exportServiceusageConsumerOverrides",
            "cloudasset.assets.exportServiceusageServices",
            "cloudasset.assets.exportSpannerBackups",
            "cloudasset.assets.exportSpannerDatabases",
            "cloudasset.assets.exportSpannerInstances",
            "cloudasset.assets.exportSpeakerIdPhrases",
            "cloudasset.assets.exportSpeakerIdSettings",
            "cloudasset.assets.exportSpeakerIdSpeakers",
            "cloudasset.assets.exportSpeechCustomClasses",
            "cloudasset.assets.exportSpeechPhraseSets",
            "cloudasset.assets.exportSqladminBackupRuns",
            "cloudasset.assets.exportSqladminInstances",
            "cloudasset.assets.exportStorageBuckets",
            "cloudasset.assets.exportTpuNodes",
            "cloudasset.assets.exportVpcaccessConnector",
            "cloudasset.assets.listAccessLevel",
            "cloudasset.assets.listAccessPolicy",
            "cloudasset.assets.listAiplatformBatchPredictionJobs",
            "cloudasset.assets.listAiplatformCustomJobs",
            "cloudasset.assets.listAiplatformDataLabelingJobs",
            "cloudasset.assets.listAiplatformDatasets",
            "cloudasset.assets.listAiplatformEndpoints",
            "cloudasset.assets.listAiplatformHyperparameterTuningJobs",
            "cloudasset.assets.listAiplatformMetadataStores",
            "cloudasset.assets.listAiplatformModelDeploymentMonitoringJobs",
            "cloudasset.assets.listAiplatformModels",
            "cloudasset.assets.listAiplatformPipelineJobs",
            "cloudasset.assets.listAiplatformSpecialistPools",
            "cloudasset.assets.listAiplatformTrainingPipelines",
            "cloudasset.assets.listAllAccessPolicy",
            "cloudasset.assets.listAnthosConnectedCluster",
            "cloudasset.assets.listAnthosedgeCluster",
            "cloudasset.assets.listApigatewayApi",
            "cloudasset.assets.listApigatewayApiConfig",
            "cloudasset.assets.listApigatewayGateway",
            "cloudasset.assets.listApikeysKeys",
            "cloudasset.assets.listAppengineApplications",
            "cloudasset.assets.listAppengineServices",
            "cloudasset.assets.listAppengineVersions",
            "cloudasset.assets.listArtifactregistryDockerImages",
            "cloudasset.assets.listArtifactregistryRepositories",
            "cloudasset.assets.listAssuredWorkloadsWorkloads",
            "cloudasset.assets.listBeyondCorpApiGateways",
            "cloudasset.assets.listBeyondCorpAppConnections",
            "cloudasset.assets.listBeyondCorpAppConnectors",
            "cloudasset.assets.listBeyondCorpAppGateways",
            "cloudasset.assets.listBeyondCorpClientConnectorServices",
            "cloudasset.assets.listBeyondCorpClientGateways",
            "cloudasset.assets.listBigqueryDatasets",
            "cloudasset.assets.listBigqueryModels",
            "cloudasset.assets.listBigqueryTables",
            "cloudasset.assets.listBigtableAppProfile",
            "cloudasset.assets.listBigtableBackup",
            "cloudasset.assets.listBigtableCluster",
            "cloudasset.assets.listBigtableInstance",
            "cloudasset.assets.listBigtableTable",
            "cloudasset.assets.listCloudAssetFeeds",
            "cloudasset.assets.listCloudDeployDeliveryPipelines",
            "cloudasset.assets.listCloudDeployReleases",
            "cloudasset.assets.listCloudDeployRollouts",
            "cloudasset.assets.listCloudDeployTargets",
            "cloudasset.assets.listCloudDocumentAIEvaluation",
            "cloudasset.assets.listCloudDocumentAIHumanReviewConfig",
            "cloudasset.assets.listCloudDocumentAILabelerPool",
            "cloudasset.assets.listCloudDocumentAIProcessor",
            "cloudasset.assets.listCloudDocumentAIProcessorVersion",
            "cloudasset.assets.listCloudbillingBillingAccounts",
            "cloudasset.assets.listCloudbillingProjectBillingInfos",
            "cloudasset.assets.listCloudfunctionsFunctions",
            "cloudasset.assets.listCloudfunctionsGen2Functions",
            "cloudasset.assets.listCloudkmsCryptoKeyVersions",
            "cloudasset.assets.listCloudkmsCryptoKeys",
            "cloudasset.assets.listCloudkmsEkmConnections",
            "cloudasset.assets.listCloudkmsImportJobs",
            "cloudasset.assets.listCloudkmsKeyRings",
            "cloudasset.assets.listCloudmemcacheInstances",
            "cloudasset.assets.listCloudresourcemanagerFolders",
            "cloudasset.assets.listCloudresourcemanagerOrganizations",
            "cloudasset.assets.listCloudresourcemanagerProjects",
            "cloudasset.assets.listCloudresourcemanagerTagBindings",
            "cloudasset.assets.listCloudresourcemanagerTagKeys",
            "cloudasset.assets.listCloudresourcemanagerTagValues",
            "cloudasset.assets.listComposerEnvironments",
            "cloudasset.assets.listComputeAddress",
            "cloudasset.assets.listComputeAutoscalers",
            "cloudasset.assets.listComputeBackendBuckets",
            "cloudasset.assets.listComputeBackendServices",
            "cloudasset.assets.listComputeCommitments",
            "cloudasset.assets.listComputeDisks",
            "cloudasset.assets.listComputeExternalVpnGateways",
            "cloudasset.assets.listComputeFirewallPolicies",
            "cloudasset.assets.listComputeFirewalls",
            "cloudasset.assets.listComputeForwardingRules",
            "cloudasset.assets.listComputeGlobalAddress",
            "cloudasset.assets.listComputeGlobalForwardingRules",
            "cloudasset.assets.listComputeHealthChecks",
            "cloudasset.assets.listComputeHttpHealthChecks",
            "cloudasset.assets.listComputeHttpsHealthChecks",
            "cloudasset.assets.listComputeImages",
            "cloudasset.assets.listComputeInstanceGroupManagers",
            "cloudasset.assets.listComputeInstanceGroups",
            "cloudasset.assets.listComputeInstanceTemplates",
            "cloudasset.assets.listComputeInstances",
            "cloudasset.assets.listComputeInterconnect",
            "cloudasset.assets.listComputeInterconnectAttachment",
            "cloudasset.assets.listComputeLicenses",
            "cloudasset.assets.listComputeNetworkEndpointGroups",
            "cloudasset.assets.listComputeNetworks",
            "cloudasset.assets.listComputeNodeGroups",
            "cloudasset.assets.listComputeNodeTemplates",
            "cloudasset.assets.listComputePacketMirrorings",
            "cloudasset.assets.listComputeProjects",
            "cloudasset.assets.listComputeRegionAutoscaler",
            "cloudasset.assets.listComputeRegionBackendServices",
            "cloudasset.assets.listComputeRegionDisk",
            "cloudasset.assets.listComputeRegionInstanceGroup",
            "cloudasset.assets.listComputeRegionInstanceGroupManager",
            "cloudasset.assets.listComputeReservations",
            "cloudasset.assets.listComputeResourcePolicies",
            "cloudasset.assets.listComputeRouters",
            "cloudasset.assets.listComputeRoutes",
            "cloudasset.assets.listComputeSecurityPolicy",
            "cloudasset.assets.listComputeServiceAttachments",
            "cloudasset.assets.listComputeSnapshots",
            "cloudasset.assets.listComputeSslCertificates",
            "cloudasset.assets.listComputeSslPolicies",
            "cloudasset.assets.listComputeSubnetworks",
            "cloudasset.assets.listComputeTargetHttpProxies",
            "cloudasset.assets.listComputeTargetHttpsProxies",
            "cloudasset.assets.listComputeTargetInstances",
            "cloudasset.assets.listComputeTargetPools",
            "cloudasset.assets.listComputeTargetSslProxies",
            "cloudasset.assets.listComputeTargetTcpProxies",
            "cloudasset.assets.listComputeTargetVpnGateways",
            "cloudasset.assets.listComputeUrlMaps",
            "cloudasset.assets.listComputeVpnGateways",
            "cloudasset.assets.listComputeVpnTunnels",
            "cloudasset.assets.listConnectorsConnections",
            "cloudasset.assets.listConnectorsConnectorVersions",
            "cloudasset.assets.listConnectorsConnectors",
            "cloudasset.assets.listConnectorsProviders",
            "cloudasset.assets.listConnectorsRuntimeConfigs",
            "cloudasset.assets.listContainerAppsDeployment",
            "cloudasset.assets.listContainerAppsReplicaSets",
            "cloudasset.assets.listContainerBatchJobs",
            "cloudasset.assets.listContainerClusterrole",
            "cloudasset.assets.listContainerClusterrolebinding",
            "cloudasset.assets.listContainerClusters",
            "cloudasset.assets.listContainerExtensionsIngresses",
            "cloudasset.assets.listContainerJobs",
            "cloudasset.assets.listContainerNamespace",
            "cloudasset.assets.listContainerNetworkingIngresses",
            "cloudasset.assets.listContainerNetworkingNetworkPolicies",
            "cloudasset.assets.listContainerNode",
            "cloudasset.assets.listContainerNodepool",
            "cloudasset.assets.listContainerPod",
            "cloudasset.assets.listContainerReplicaSets",
            "cloudasset.assets.listContainerRole",
            "cloudasset.assets.listContainerRolebinding",
            "cloudasset.assets.listContainerServices",
            "cloudasset.assets.listContainerregistryImage",
            "cloudasset.assets.listDataMigrationConnectionProfiles",
            "cloudasset.assets.listDataMigrationMigrationJobs",
            "cloudasset.assets.listDataflowJobs",
            "cloudasset.assets.listDatafusionInstance",
            "cloudasset.assets.listDataplexAssets",
            "cloudasset.assets.listDataplexLakes",
            "cloudasset.assets.listDataplexTasks",
            "cloudasset.assets.listDataplexZones",
            "cloudasset.assets.listDataprocAutoscalingPolicies",
            "cloudasset.assets.listDataprocBatches",
            "cloudasset.assets.listDataprocClusters",
            "cloudasset.assets.listDataprocJobs",
            "cloudasset.assets.listDataprocSessions",
            "cloudasset.assets.listDataprocWorkflowTemplates",
            "cloudasset.assets.listDatastreamConnectionProfile",
            "cloudasset.assets.listDatastreamPrivateConnection",
            "cloudasset.assets.listDatastreamStream",
            "cloudasset.assets.listDialogflowAgents",
            "cloudasset.assets.listDialogflowConversationProfiles",
            "cloudasset.assets.listDialogflowKnowledgeBases",
            "cloudasset.assets.listDialogflowLocationSettings",
            "cloudasset.assets.listDlpDeidentifyTemplates",
            "cloudasset.assets.listDlpDlpJobs",
            "cloudasset.assets.listDlpInspectTemplates",
            "cloudasset.assets.listDlpJobTriggers",
            "cloudasset.assets.listDlpStoredInfoTypes",
            "cloudasset.assets.listDnsManagedZones",
            "cloudasset.assets.listDnsPolicies",
            "cloudasset.assets.listDomainsRegistrations",
            "cloudasset.assets.listEventarcTriggers",
            "cloudasset.assets.listFileBackups",
            "cloudasset.assets.listFileInstances",
            "cloudasset.assets.listFirebaseAppInfos",
            "cloudasset.assets.listFirebaseProjects",
            "cloudasset.assets.listFirestoreDatabases",
            "cloudasset.assets.listGKEHubFeatures",
            "cloudasset.assets.listGKEHubMemberships",
            "cloudasset.assets.listGameservicesGameServerClusters",
            "cloudasset.assets.listGameservicesGameServerConfigs",
            "cloudasset.assets.listGameservicesGameServerDeployments",
            "cloudasset.assets.listGameservicesRealms",
            "cloudasset.assets.listGkeBackupBackupPlans",
            "cloudasset.assets.listGkeBackupBackups",
            "cloudasset.assets.listGkeBackupRestorePlans",
            "cloudasset.assets.listGkeBackupRestores",
            "cloudasset.assets.listGkeBackupVolumeBackups",
            "cloudasset.assets.listGkeBackupVolumeRestores",
            "cloudasset.assets.listHealthcareConsentStores",
            "cloudasset.assets.listHealthcareDatasets",
            "cloudasset.assets.listHealthcareDicomStores",
            "cloudasset.assets.listHealthcareFhirStores",
            "cloudasset.assets.listHealthcareHl7V2Stores",
            "cloudasset.assets.listIamPolicy",
            "cloudasset.assets.listIamRoles",
            "cloudasset.assets.listIamServiceAccountKeys",
            "cloudasset.assets.listIamServiceAccounts",
            "cloudasset.assets.listIapTunnel",
            "cloudasset.assets.listIapTunnelInstances",
            "cloudasset.assets.listIapTunnelZones",
            "cloudasset.assets.listIapWeb",
            "cloudasset.assets.listIapWebServiceVersion",
            "cloudasset.assets.listIapWebServices",
            "cloudasset.assets.listIapWebType",
            "cloudasset.assets.listIdsEndpoints",
            "cloudasset.assets.listIntegrationsAuthConfigs",
            "cloudasset.assets.listIntegrationsCertificates",
            "cloudasset.assets.listIntegrationsExecutions",
            "cloudasset.assets.listIntegrationsIntegrationVersions",
            "cloudasset.assets.listIntegrationsIntegrations",
            "cloudasset.assets.listIntegrationsSfdcChannels",
            "cloudasset.assets.listIntegrationsSfdcInstances",
            "cloudasset.assets.listIntegrationsSuspensions",
            "cloudasset.assets.listLoggingLogMetrics",
            "cloudasset.assets.listLoggingLogSinks",
            "cloudasset.assets.listManagedidentitiesDomain",
            "cloudasset.assets.listMetastoreBackups",
            "cloudasset.assets.listMetastoreMetadataImports",
            "cloudasset.assets.listMetastoreServices",
            "cloudasset.assets.listMonitoringAlertPolicies",
            "cloudasset.assets.listNetworkConnectivityHubs",
            "cloudasset.assets.listNetworkConnectivitySpokes",
            "cloudasset.assets.listNetworkManagementConnectivityTests",
            "cloudasset.assets.listNetworkServicesEndpointPolicies",
            "cloudasset.assets.listNetworkServicesGateways",
            "cloudasset.assets.listNetworkServicesGrpcRoutes",
            "cloudasset.assets.listNetworkServicesHttpRoutes",
            "cloudasset.assets.listNetworkServicesMeshes",
            "cloudasset.assets.listNetworkServicesServiceBindings",
            "cloudasset.assets.listNetworkServicesTcpRoutes",
            "cloudasset.assets.listNetworkServicesTlsRoutes",
            "cloudasset.assets.listOSConfigOSPolicyAssignmentReports",
            "cloudasset.assets.listOSConfigOSPolicyAssignments",
            "cloudasset.assets.listOSConfigVulnerabilityReports",
            "cloudasset.assets.listOSInventories",
            "cloudasset.assets.listOrgPolicy",
            "cloudasset.assets.listPatchDeployments",
            "cloudasset.assets.listPubsubSnapshots",
            "cloudasset.assets.listPubsubSubscriptions",
            "cloudasset.assets.listPubsubTopics",
            "cloudasset.assets.listRedisInstances",
            "cloudasset.assets.listResource",
            "cloudasset.assets.listRunDomainMapping",
            "cloudasset.assets.listRunRevision",
            "cloudasset.assets.listRunService",
            "cloudasset.assets.listSecretManagerSecretVersions",
            "cloudasset.assets.listSecretManagerSecrets",
            "cloudasset.assets.listServiceDirectoryNamespaces",
            "cloudasset.assets.listServicePerimeter",
            "cloudasset.assets.listServiceconsumermanagementConsumerProperty",
            "cloudasset.assets.listServiceconsumermanagementConsumerQuotaLimits",
            "cloudasset.assets.listServiceconsumermanagementConsumers",
            "cloudasset.assets.listServiceconsumermanagementProducerOverrides",
            "cloudasset.assets.listServiceconsumermanagementTenancyUnits",
            "cloudasset.assets.listServiceconsumermanagementVisibility",
            "cloudasset.assets.listServicemanagementServices",
            "cloudasset.assets.listServiceusageAdminOverrides",
            "cloudasset.assets.listServiceusageConsumerOverrides",
            "cloudasset.assets.listServiceusageServices",
            "cloudasset.assets.listSpannerBackups",
            "cloudasset.assets.listSpannerDatabases",
            "cloudasset.assets.listSpannerInstances",
            "cloudasset.assets.listSpeakerIdPhrases",
            "cloudasset.assets.listSpeakerIdSettings",
            "cloudasset.assets.listSpeakerIdSpeakers",
            "cloudasset.assets.listSpeechCustomClasses",
            "cloudasset.assets.listSpeechPhraseSets",
            "cloudasset.assets.listSqladminBackupRuns",
            "cloudasset.assets.listSqladminInstances",
            "cloudasset.assets.listStorageBuckets",
            "cloudasset.assets.listTpuNodes",
            "cloudasset.assets.listVpcaccessConnector",
            "cloudasset.assets.queryAccessPolicy",
            "cloudasset.assets.queryIamPolicy",
            "cloudasset.assets.queryOSInventories",
            "cloudasset.assets.queryResource",
            "cloudasset.assets.searchAllIamPolicies",
            "cloudasset.assets.searchAllResources",
            "cloudasset.feeds.*",
            "cloudasset.othercloudconnections.*",
            "cloudasset.savedqueries.*",
            "recommender.cloudAssetInsights.*",
            "recommender.locations.*"
          ],
          "title": "Cloud Asset Owner"
        },
        {
          "description": "Read only access to cloud assets metadata",
          "id": "roles/cloudasset.viewer",
          "is_beta": false,
          "permissions": [
            "cloudasset.assets.analyzeIamPolicy",
            "cloudasset.assets.analyzeMove",
            "cloudasset.assets.analyzeOrgPolicy",
            "cloudasset.assets.exportAccessLevel",
            "cloudasset.assets.exportAccessPolicy",
            "cloudasset.assets.exportAiplatformBatchPredictionJobs",
            "cloudasset.assets.exportAiplatformCustomJobs",
            "cloudasset.assets.exportAiplatformDataLabelingJobs",
            "cloudasset.assets.exportAiplatformDatasets",
            "cloudasset.assets.exportAiplatformEndpoints",
            "cloudasset.assets.exportAiplatformHyperparameterTuningJobs",
            "cloudasset.assets.exportAiplatformMetadataStores",
            "cloudasset.assets.exportAiplatformModelDeploymentMonitoringJobs",
            "cloudasset.assets.exportAiplatformModels",
            "cloudasset.assets.exportAiplatformPipelineJobs",
            "cloudasset.assets.exportAiplatformSpecialistPools",
            "cloudasset.assets.exportAiplatformTrainingPipelines",
            "cloudasset.assets.exportAllAccessPolicy",
            "cloudasset.assets.exportAnthosConnectedCluster",
            "cloudasset.assets.exportAnthosedgeCluster",
            "cloudasset.assets.exportApigatewayApi",
            "cloudasset.assets.exportApigatewayApiConfig",
            "cloudasset.assets.exportApigatewayGateway",
            "cloudasset.assets.exportApikeysKeys",
            "cloudasset.assets.exportAppengineApplications",
            "cloudasset.assets.exportAppengineServices",
            "cloudasset.assets.exportAppengineVersions",
            "cloudasset.assets.exportArtifactregistryDockerImages",
            "cloudasset.assets.exportArtifactregistryRepositories",
            "cloudasset.assets.exportAssuredWorkloadsWorkloads",
            "cloudasset.assets.exportBeyondCorpApiGateways",
            "cloudasset.assets.exportBeyondCorpAppConnections",
            "cloudasset.assets.exportBeyondCorpAppConnectors",
            "cloudasset.assets.exportBeyondCorpAppGateways",
            "cloudasset.assets.exportBeyondCorpClientConnectorServices",
            "cloudasset.assets.exportBeyondCorpClientGateways",
            "cloudasset.assets.exportBigqueryDatasets",
            "cloudasset.assets.exportBigqueryModels",
            "cloudasset.assets.exportBigqueryTables",
            "cloudasset.assets.exportBigtableAppProfile",
            "cloudasset.assets.exportBigtableBackup",
            "cloudasset.assets.exportBigtableCluster",
            "cloudasset.assets.exportBigtableInstance",
            "cloudasset.assets.exportBigtableTable",
            "cloudasset.assets.exportCloudAssetFeeds",
            "cloudasset.assets.exportCloudDeployDeliveryPipelines",
            "cloudasset.assets.exportCloudDeployReleases",
            "cloudasset.assets.exportCloudDeployRollouts",
            "cloudasset.assets.exportCloudDeployTargets",
            "cloudasset.assets.exportCloudDocumentAIEvaluation",
            "cloudasset.assets.exportCloudDocumentAIHumanReviewConfig",
            "cloudasset.assets.exportCloudDocumentAILabelerPool",
            "cloudasset.assets.exportCloudDocumentAIProcessor",
            "cloudasset.assets.exportCloudDocumentAIProcessorVersion",
            "cloudasset.assets.exportCloudbillingBillingAccounts",
            "cloudasset.assets.exportCloudbillingProjectBillingInfos",
            "cloudasset.assets.exportCloudfunctionsFunctions",
            "cloudasset.assets.exportCloudfunctionsGen2Functions",
            "cloudasset.assets.exportCloudkmsCryptoKeyVersions",
            "cloudasset.assets.exportCloudkmsCryptoKeys",
            "cloudasset.assets.exportCloudkmsEkmConnections",
            "cloudasset.assets.exportCloudkmsImportJobs",
            "cloudasset.assets.exportCloudkmsKeyRings",
            "cloudasset.assets.exportCloudmemcacheInstances",
            "cloudasset.assets.exportCloudresourcemanagerFolders",
            "cloudasset.assets.exportCloudresourcemanagerOrganizations",
            "cloudasset.assets.exportCloudresourcemanagerProjects",
            "cloudasset.assets.exportCloudresourcemanagerTagBindings",
            "cloudasset.assets.exportCloudresourcemanagerTagKeys",
            "cloudasset.assets.exportCloudresourcemanagerTagValues",
            "cloudasset.assets.exportComposerEnvironments",
            "cloudasset.assets.exportComputeAddress",
            "cloudasset.assets.exportComputeAutoscalers",
            "cloudasset.assets.exportComputeBackendBuckets",
            "cloudasset.assets.exportComputeBackendServices",
            "cloudasset.assets.exportComputeCommitments",
            "cloudasset.assets.exportComputeDisks",
            "cloudasset.assets.exportComputeExternalVpnGateways",
            "cloudasset.assets.exportComputeFirewallPolicies",
            "cloudasset.assets.exportComputeFirewalls",
            "cloudasset.assets.exportComputeForwardingRules",
            "cloudasset.assets.exportComputeGlobalAddress",
            "cloudasset.assets.exportComputeGlobalForwardingRules",
            "cloudasset.assets.exportComputeHealthChecks",
            "cloudasset.assets.exportComputeHttpHealthChecks",
            "cloudasset.assets.exportComputeHttpsHealthChecks",
            "cloudasset.assets.exportComputeImages",
            "cloudasset.assets.exportComputeInstanceGroupManagers",
            "cloudasset.assets.exportComputeInstanceGroups",
            "cloudasset.assets.exportComputeInstanceTemplates",
            "cloudasset.assets.exportComputeInstances",
            "cloudasset.assets.exportComputeInterconnect",
            "cloudasset.assets.exportComputeInterconnectAttachment",
            "cloudasset.assets.exportComputeLicenses",
            "cloudasset.assets.exportComputeNetworkEndpointGroups",
            "cloudasset.assets.exportComputeNetworks",
            "cloudasset.assets.exportComputeNodeGroups",
            "cloudasset.assets.exportComputeNodeTemplates",
            "cloudasset.assets.exportComputePacketMirrorings",
            "cloudasset.assets.exportComputeProjects",
            "cloudasset.assets.exportComputeRegionAutoscaler",
            "cloudasset.assets.exportComputeRegionBackendServices",
            "cloudasset.assets.exportComputeRegionDisk",
            "cloudasset.assets.exportComputeRegionInstanceGroup",
            "cloudasset.assets.exportComputeRegionInstanceGroupManager",
            "cloudasset.assets.exportComputeReservations",
            "cloudasset.assets.exportComputeResourcePolicies",
            "cloudasset.assets.exportComputeRouters",
            "cloudasset.assets.exportComputeRoutes",
            "cloudasset.assets.exportComputeSecurityPolicy",
            "cloudasset.assets.exportComputeServiceAttachments",
            "cloudasset.assets.exportComputeSnapshots",
            "cloudasset.assets.exportComputeSslCertificates",
            "cloudasset.assets.exportComputeSslPolicies",
            "cloudasset.assets.exportComputeSubnetworks",
            "cloudasset.assets.exportComputeTargetHttpProxies",
            "cloudasset.assets.exportComputeTargetHttpsProxies",
            "cloudasset.assets.exportComputeTargetInstances",
            "cloudasset.assets.exportComputeTargetPools",
            "cloudasset.assets.exportComputeTargetSslProxies",
            "cloudasset.assets.exportComputeTargetTcpProxies",
            "cloudasset.assets.exportComputeTargetVpnGateways",
            "cloudasset.assets.exportComputeUrlMaps",
            "cloudasset.assets.exportComputeVpnGateways",
            "cloudasset.assets.exportComputeVpnTunnels",
            "cloudasset.assets.exportConnectorsConnections",
            "cloudasset.assets.exportConnectorsConnectorVersions",
            "cloudasset.assets.exportConnectorsConnectors",
            "cloudasset.assets.exportConnectorsProviders",
            "cloudasset.assets.exportConnectorsRuntimeConfigs",
            "cloudasset.assets.exportContainerAppsDeployment",
            "cloudasset.assets.exportContainerAppsReplicaSets",
            "cloudasset.assets.exportContainerBatchJobs",
            "cloudasset.assets.exportContainerClusterrole",
            "cloudasset.assets.exportContainerClusterrolebinding",
            "cloudasset.assets.exportContainerClusters",
            "cloudasset.assets.exportContainerExtensionsIngresses",
            "cloudasset.assets.exportContainerJobs",
            "cloudasset.assets.exportContainerNamespace",
            "cloudasset.assets.exportContainerNetworkingIngresses",
            "cloudasset.assets.exportContainerNetworkingNetworkPolicies",
            "cloudasset.assets.exportContainerNode",
            "cloudasset.assets.exportContainerNodepool",
            "cloudasset.assets.exportContainerPod",
            "cloudasset.assets.exportContainerReplicaSets",
            "cloudasset.assets.exportContainerRole",
            "cloudasset.assets.exportContainerRolebinding",
            "cloudasset.assets.exportContainerServices",
            "cloudasset.assets.exportContainerregistryImage",
            "cloudasset.assets.exportDataMigrationConnectionProfiles",
            "cloudasset.assets.exportDataMigrationMigrationJobs",
            "cloudasset.assets.exportDataflowJobs",
            "cloudasset.assets.exportDatafusionInstance",
            "cloudasset.assets.exportDataplexAssets",
            "cloudasset.assets.exportDataplexLakes",
            "cloudasset.assets.exportDataplexTasks",
            "cloudasset.assets.exportDataplexZones",
            "cloudasset.assets.exportDataprocAutoscalingPolicies",
            "cloudasset.assets.exportDataprocBatches",
            "cloudasset.assets.exportDataprocClusters",
            "cloudasset.assets.exportDataprocJobs",
            "cloudasset.assets.exportDataprocSessions",
            "cloudasset.assets.exportDataprocWorkflowTemplates",
            "cloudasset.assets.exportDatastreamConnectionProfile",
            "cloudasset.assets.exportDatastreamPrivateConnection",
            "cloudasset.assets.exportDatastreamStream",
            "cloudasset.assets.exportDialogflowAgents",
            "cloudasset.assets.exportDialogflowConversationProfiles",
            "cloudasset.assets.exportDialogflowKnowledgeBases",
            "cloudasset.assets.exportDialogflowLocationSettings",
            "cloudasset.assets.exportDlpDeidentifyTemplates",
            "cloudasset.assets.exportDlpDlpJobs",
            "cloudasset.assets.exportDlpInspectTemplates",
            "cloudasset.assets.exportDlpJobTriggers",
            "cloudasset.assets.exportDlpStoredInfoTypes",
            "cloudasset.assets.exportDnsManagedZones",
            "cloudasset.assets.exportDnsPolicies",
            "cloudasset.assets.exportDomainsRegistrations",
            "cloudasset.assets.exportEventarcTriggers",
            "cloudasset.assets.exportFileBackups",
            "cloudasset.assets.exportFileInstances",
            "cloudasset.assets.exportFirebaseAppInfos",
            "cloudasset.assets.exportFirebaseProjects",
            "cloudasset.assets.exportFirestoreDatabases",
            "cloudasset.assets.exportGKEHubFeatures",
            "cloudasset.assets.exportGKEHubMemberships",
            "cloudasset.assets.exportGameservicesGameServerClusters",
            "cloudasset.assets.exportGameservicesGameServerConfigs",
            "cloudasset.assets.exportGameservicesGameServerDeployments",
            "cloudasset.assets.exportGameservicesRealms",
            "cloudasset.assets.exportGkeBackupBackupPlans",
            "cloudasset.assets.exportGkeBackupBackups",
            "cloudasset.assets.exportGkeBackupRestorePlans",
            "cloudasset.assets.exportGkeBackupRestores",
            "cloudasset.assets.exportGkeBackupVolumeBackups",
            "cloudasset.assets.exportGkeBackupVolumeRestores",
            "cloudasset.assets.exportHealthcareConsentStores",
            "cloudasset.assets.exportHealthcareDatasets",
            "cloudasset.assets.exportHealthcareDicomStores",
            "cloudasset.assets.exportHealthcareFhirStores",
            "cloudasset.assets.exportHealthcareHl7V2Stores",
            "cloudasset.assets.exportIamPolicy",
            "cloudasset.assets.exportIamRoles",
            "cloudasset.assets.exportIamServiceAccountKeys",
            "cloudasset.assets.exportIamServiceAccounts",
            "cloudasset.assets.exportIapTunnel",
            "cloudasset.assets.exportIapTunnelInstances",
            "cloudasset.assets.exportIapTunnelZones",
            "cloudasset.assets.exportIapWeb",
            "cloudasset.assets.exportIapWebServiceVersion",
            "cloudasset.assets.exportIapWebServices",
            "cloudasset.assets.exportIapWebType",
            "cloudasset.assets.exportIdsEndpoints",
            "cloudasset.assets.exportIntegrationsAuthConfigs",
            "cloudasset.assets.exportIntegrationsCertificates",
            "cloudasset.assets.exportIntegrationsExecutions",
            "cloudasset.assets.exportIntegrationsIntegrationVersions",
            "cloudasset.assets.exportIntegrationsIntegrations",
            "cloudasset.assets.exportIntegrationsSfdcChannels",
            "cloudasset.assets.exportIntegrationsSfdcInstances",
            "cloudasset.assets.exportIntegrationsSuspensions",
            "cloudasset.assets.exportLoggingLogMetrics",
            "cloudasset.assets.exportLoggingLogSinks",
            "cloudasset.assets.exportManagedidentitiesDomain",
            "cloudasset.assets.exportMetastoreBackups",
            "cloudasset.assets.exportMetastoreMetadataImports",
            "cloudasset.assets.exportMetastoreServices",
            "cloudasset.assets.exportMonitoringAlertPolicies",
            "cloudasset.assets.exportNetworkConnectivityHubs",
            "cloudasset.assets.exportNetworkConnectivitySpokes",
            "cloudasset.assets.exportNetworkManagementConnectivityTests",
            "cloudasset.assets.exportNetworkServicesEndpointPolicies",
            "cloudasset.assets.exportNetworkServicesGateways",
            "cloudasset.assets.exportNetworkServicesGrpcRoutes",
            "cloudasset.assets.exportNetworkServicesHttpRoutes",
            "cloudasset.assets.exportNetworkServicesMeshes",
            "cloudasset.assets.exportNetworkServicesServiceBindings",
            "cloudasset.assets.exportNetworkServicesTcpRoutes",
            "cloudasset.assets.exportNetworkServicesTlsRoutes",
            "cloudasset.assets.exportOSConfigOSPolicyAssignmentReports",
            "cloudasset.assets.exportOSConfigOSPolicyAssignments",
            "cloudasset.assets.exportOSConfigVulnerabilityReports",
            "cloudasset.assets.exportOSInventories",
            "cloudasset.assets.exportOrgPolicy",
            "cloudasset.assets.exportPatchDeployments",
            "cloudasset.assets.exportPubsubSnapshots",
            "cloudasset.assets.exportPubsubSubscriptions",
            "cloudasset.assets.exportPubsubTopics",
            "cloudasset.assets.exportRedisInstances",
            "cloudasset.assets.exportResource",
            "cloudasset.assets.exportSecretManagerSecretVersions",
            "cloudasset.assets.exportSecretManagerSecrets",
            "cloudasset.assets.exportServiceDirectoryNamespaces",
            "cloudasset.assets.exportServicePerimeter",
            "cloudasset.assets.exportServiceconsumermanagementConsumerProperty",
            "cloudasset.assets.exportServiceconsumermanagementConsumerQuotaLimits",
            "cloudasset.assets.exportServiceconsumermanagementConsumers",
            "cloudasset.assets.exportServiceconsumermanagementProducerOverrides",
            "cloudasset.assets.exportServiceconsumermanagementTenancyUnits",
            "cloudasset.assets.exportServiceconsumermanagementVisibility",
            "cloudasset.assets.exportServicemanagementServices",
            "cloudasset.assets.exportServiceusageAdminOverrides",
            "cloudasset.assets.exportServiceusageConsumerOverrides",
            "cloudasset.assets.exportServiceusageServices",
            "cloudasset.assets.exportSpannerBackups",
            "cloudasset.assets.exportSpannerDatabases",
            "cloudasset.assets.exportSpannerInstances",
            "cloudasset.assets.exportSpeakerIdPhrases",
            "cloudasset.assets.exportSpeakerIdSettings",
            "cloudasset.assets.exportSpeakerIdSpeakers",
            "cloudasset.assets.exportSpeechCustomClasses",
            "cloudasset.assets.exportSpeechPhraseSets",
            "cloudasset.assets.exportSqladminBackupRuns",
            "cloudasset.assets.exportSqladminInstances",
            "cloudasset.assets.exportStorageBuckets",
            "cloudasset.assets.exportTpuNodes",
            "cloudasset.assets.exportVpcaccessConnector",
            "cloudasset.assets.listAccessLevel",
            "cloudasset.assets.listAccessPolicy",
            "cloudasset.assets.listAiplatformBatchPredictionJobs",
            "cloudasset.assets.listAiplatformCustomJobs",
            "cloudasset.assets.listAiplatformDataLabelingJobs",
            "cloudasset.assets.listAiplatformDatasets",
            "cloudasset.assets.listAiplatformEndpoints",
            "cloudasset.assets.listAiplatformHyperparameterTuningJobs",
            "cloudasset.assets.listAiplatformMetadataStores",
            "cloudasset.assets.listAiplatformModelDeploymentMonitoringJobs",
            "cloudasset.assets.listAiplatformModels",
            "cloudasset.assets.listAiplatformPipelineJobs",
            "cloudasset.assets.listAiplatformSpecialistPools",
            "cloudasset.assets.listAiplatformTrainingPipelines",
            "cloudasset.assets.listAllAccessPolicy",
            "cloudasset.assets.listAnthosConnectedCluster",
            "cloudasset.assets.listAnthosedgeCluster",
            "cloudasset.assets.listApigatewayApi",
            "cloudasset.assets.listApigatewayApiConfig",
            "cloudasset.assets.listApigatewayGateway",
            "cloudasset.assets.listApikeysKeys",
            "cloudasset.assets.listAppengineApplications",
            "cloudasset.assets.listAppengineServices",
            "cloudasset.assets.listAppengineVersions",
            "cloudasset.assets.listArtifactregistryDockerImages",
            "cloudasset.assets.listArtifactregistryRepositories",
            "cloudasset.assets.listAssuredWorkloadsWorkloads",
            "cloudasset.assets.listBeyondCorpApiGateways",
            "cloudasset.assets.listBeyondCorpAppConnections",
            "cloudasset.assets.listBeyondCorpAppConnectors",
            "cloudasset.assets.listBeyondCorpAppGateways",
            "cloudasset.assets.listBeyondCorpClientConnectorServices",
            "cloudasset.assets.listBeyondCorpClientGateways",
            "cloudasset.assets.listBigqueryDatasets",
            "cloudasset.assets.listBigqueryModels",
            "cloudasset.assets.listBigqueryTables",
            "cloudasset.assets.listBigtableAppProfile",
            "cloudasset.assets.listBigtableBackup",
            "cloudasset.assets.listBigtableCluster",
            "cloudasset.assets.listBigtableInstance",
            "cloudasset.assets.listBigtableTable",
            "cloudasset.assets.listCloudAssetFeeds",
            "cloudasset.assets.listCloudDeployDeliveryPipelines",
            "cloudasset.assets.listCloudDeployReleases",
            "cloudasset.assets.listCloudDeployRollouts",
            "cloudasset.assets.listCloudDeployTargets",
            "cloudasset.assets.listCloudDocumentAIEvaluation",
            "cloudasset.assets.listCloudDocumentAIHumanReviewConfig",
            "cloudasset.assets.listCloudDocumentAILabelerPool",
            "cloudasset.assets.listCloudDocumentAIProcessor",
            "cloudasset.assets.listCloudDocumentAIProcessorVersion",
            "cloudasset.assets.listCloudbillingBillingAccounts",
            "cloudasset.assets.listCloudbillingProjectBillingInfos",
            "cloudasset.assets.listCloudfunctionsFunctions",
            "cloudasset.assets.listCloudfunctionsGen2Functions",
            "cloudasset.assets.listCloudkmsCryptoKeyVersions",
            "cloudasset.assets.listCloudkmsCryptoKeys",
            "cloudasset.assets.listCloudkmsEkmConnections",
            "cloudasset.assets.listCloudkmsImportJobs",
            "cloudasset.assets.listCloudkmsKeyRings",
            "cloudasset.assets.listCloudmemcacheInstances",
            "cloudasset.assets.listCloudresourcemanagerFolders",
            "cloudasset.assets.listCloudresourcemanagerOrganizations",
            "cloudasset.assets.listCloudresourcemanagerProjects",
            "cloudasset.assets.listCloudresourcemanagerTagBindings",
            "cloudasset.assets.listCloudresourcemanagerTagKeys",
            "cloudasset.assets.listCloudresourcemanagerTagValues",
            "cloudasset.assets.listComposerEnvironments",
            "cloudasset.assets.listComputeAddress",
            "cloudasset.assets.listComputeAutoscalers",
            "cloudasset.assets.listComputeBackendBuckets",
            "cloudasset.assets.listComputeBackendServices",
            "cloudasset.assets.listComputeCommitments",
            "cloudasset.assets.listComputeDisks",
            "cloudasset.assets.listComputeExternalVpnGateways",
            "cloudasset.assets.listComputeFirewallPolicies",
            "cloudasset.assets.listComputeFirewalls",
            "cloudasset.assets.listComputeForwardingRules",
            "cloudasset.assets.listComputeGlobalAddress",
            "cloudasset.assets.listComputeGlobalForwardingRules",
            "cloudasset.assets.listComputeHealthChecks",
            "cloudasset.assets.listComputeHttpHealthChecks",
            "cloudasset.assets.listComputeHttpsHealthChecks",
            "cloudasset.assets.listComputeImages",
            "cloudasset.assets.listComputeInstanceGroupManagers",
            "cloudasset.assets.listComputeInstanceGroups",
            "cloudasset.assets.listComputeInstanceTemplates",
            "cloudasset.assets.listComputeInstances",
            "cloudasset.assets.listComputeInterconnect",
            "cloudasset.assets.listComputeInterconnectAttachment",
            "cloudasset.assets.listComputeLicenses",
            "cloudasset.assets.listComputeNetworkEndpointGroups",
            "cloudasset.assets.listComputeNetworks",
            "cloudasset.assets.listComputeNodeGroups",
            "cloudasset.assets.listComputeNodeTemplates",
            "cloudasset.assets.listComputePacketMirrorings",
            "cloudasset.assets.listComputeProjects",
            "cloudasset.assets.listComputeRegionAutoscaler",
            "cloudasset.assets.listComputeRegionBackendServices",
            "cloudasset.assets.listComputeRegionDisk",
            "cloudasset.assets.listComputeRegionInstanceGroup",
            "cloudasset.assets.listComputeRegionInstanceGroupManager",
            "cloudasset.assets.listComputeReservations",
            "cloudasset.assets.listComputeResourcePolicies",
            "cloudasset.assets.listComputeRouters",
            "cloudasset.assets.listComputeRoutes",
            "cloudasset.assets.listComputeSecurityPolicy",
            "cloudasset.assets.listComputeServiceAttachments",
            "cloudasset.assets.listComputeSnapshots",
            "cloudasset.assets.listComputeSslCertificates",
            "cloudasset.assets.listComputeSslPolicies",
            "cloudasset.assets.listComputeSubnetworks",
            "cloudasset.assets.listComputeTargetHttpProxies",
            "cloudasset.assets.listComputeTargetHttpsProxies",
            "cloudasset.assets.listComputeTargetInstances",
            "cloudasset.assets.listComputeTargetPools",
            "cloudasset.assets.listComputeTargetSslProxies",
            "cloudasset.assets.listComputeTargetTcpProxies",
            "cloudasset.assets.listComputeTargetVpnGateways",
            "cloudasset.assets.listComputeUrlMaps",
            "cloudasset.assets.listComputeVpnGateways",
            "cloudasset.assets.listComputeVpnTunnels",
            "cloudasset.assets.listConnectorsConnections",
            "cloudasset.assets.listConnectorsConnectorVersions",
            "cloudasset.assets.listConnectorsConnectors",
            "cloudasset.assets.listConnectorsProviders",
            "cloudasset.assets.listConnectorsRuntimeConfigs",
            "cloudasset.assets.listContainerAppsDeployment",
            "cloudasset.assets.listContainerAppsReplicaSets",
            "cloudasset.assets.listContainerBatchJobs",
            "cloudasset.assets.listContainerClusterrole",
            "cloudasset.assets.listContainerClusterrolebinding",
            "cloudasset.assets.listContainerClusters",
            "cloudasset.assets.listContainerExtensionsIngresses",
            "cloudasset.assets.listContainerJobs",
            "cloudasset.assets.listContainerNamespace",
            "cloudasset.assets.listContainerNetworkingIngresses",
            "cloudasset.assets.listContainerNetworkingNetworkPolicies",
            "cloudasset.assets.listContainerNode",
            "cloudasset.assets.listContainerNodepool",
            "cloudasset.assets.listContainerPod",
            "cloudasset.assets.listContainerReplicaSets",
            "cloudasset.assets.listContainerRole",
            "cloudasset.assets.listContainerRolebinding",
            "cloudasset.assets.listContainerServices",
            "cloudasset.assets.listContainerregistryImage",
            "cloudasset.assets.listDataMigrationConnectionProfiles",
            "cloudasset.assets.listDataMigrationMigrationJobs",
            "cloudasset.assets.listDataflowJobs",
            "cloudasset.assets.listDatafusionInstance",
            "cloudasset.assets.listDataplexAssets",
            "cloudasset.assets.listDataplexLakes",
            "cloudasset.assets.listDataplexTasks",
            "cloudasset.assets.listDataplexZones",
            "cloudasset.assets.listDataprocAutoscalingPolicies",
            "cloudasset.assets.listDataprocBatches",
            "cloudasset.assets.listDataprocClusters",
            "cloudasset.assets.listDataprocJobs",
            "cloudasset.assets.listDataprocSessions",
            "cloudasset.assets.listDataprocWorkflowTemplates",
            "cloudasset.assets.listDatastreamConnectionProfile",
            "cloudasset.assets.listDatastreamPrivateConnection",
            "cloudasset.assets.listDatastreamStream",
            "cloudasset.assets.listDialogflowAgents",
            "cloudasset.assets.listDialogflowConversationProfiles",
            "cloudasset.assets.listDialogflowKnowledgeBases",
            "cloudasset.assets.listDialogflowLocationSettings",
            "cloudasset.assets.listDlpDeidentifyTemplates",
            "cloudasset.assets.listDlpDlpJobs",
            "cloudasset.assets.listDlpInspectTemplates",
            "cloudasset.assets.listDlpJobTriggers",
            "cloudasset.assets.listDlpStoredInfoTypes",
            "cloudasset.assets.listDnsManagedZones",
            "cloudasset.assets.listDnsPolicies",
            "cloudasset.assets.listDomainsRegistrations",
            "cloudasset.assets.listEventarcTriggers",
            "cloudasset.assets.listFileBackups",
            "cloudasset.assets.listFileInstances",
            "cloudasset.assets.listFirebaseAppInfos",
            "cloudasset.assets.listFirebaseProjects",
            "cloudasset.assets.listFirestoreDatabases",
            "cloudasset.assets.listGKEHubFeatures",
            "cloudasset.assets.listGKEHubMemberships",
            "cloudasset.assets.listGameservicesGameServerClusters",
            "cloudasset.assets.listGameservicesGameServerConfigs",
            "cloudasset.assets.listGameservicesGameServerDeployments",
            "cloudasset.assets.listGameservicesRealms",
            "cloudasset.assets.listGkeBackupBackupPlans",
            "cloudasset.assets.listGkeBackupBackups",
            "cloudasset.assets.listGkeBackupRestorePlans",
            "cloudasset.assets.listGkeBackupRestores",
            "cloudasset.assets.listGkeBackupVolumeBackups",
            "cloudasset.assets.listGkeBackupVolumeRestores",
            "cloudasset.assets.listHealthcareConsentStores",
            "cloudasset.assets.listHealthcareDatasets",
            "cloudasset.assets.listHealthcareDicomStores",
            "cloudasset.assets.listHealthcareFhirStores",
            "cloudasset.assets.listHealthcareHl7V2Stores",
            "cloudasset.assets.listIamPolicy",
            "cloudasset.assets.listIamRoles",
            "cloudasset.assets.listIamServiceAccountKeys",
            "cloudasset.assets.listIamServiceAccounts",
            "cloudasset.assets.listIapTunnel",
            "cloudasset.assets.listIapTunnelInstances",
            "cloudasset.assets.listIapTunnelZones",
            "cloudasset.assets.listIapWeb",
            "cloudasset.assets.listIapWebServiceVersion",
            "cloudasset.assets.listIapWebServices",
            "cloudasset.assets.listIapWebType",
            "cloudasset.assets.listIdsEndpoints",
            "cloudasset.assets.listIntegrationsAuthConfigs",
            "cloudasset.assets.listIntegrationsCertificates",
            "cloudasset.assets.listIntegrationsExecutions",
            "cloudasset.assets.listIntegrationsIntegrationVersions",
            "cloudasset.assets.listIntegrationsIntegrations",
            "cloudasset.assets.listIntegrationsSfdcChannels",
            "cloudasset.assets.listIntegrationsSfdcInstances",
            "cloudasset.assets.listIntegrationsSuspensions",
            "cloudasset.assets.listLoggingLogMetrics",
            "cloudasset.assets.listLoggingLogSinks",
            "cloudasset.assets.listManagedidentitiesDomain",
            "cloudasset.assets.listMetastoreBackups",
            "cloudasset.assets.listMetastoreMetadataImports",
            "cloudasset.assets.listMetastoreServices",
            "cloudasset.assets.listMonitoringAlertPolicies",
            "cloudasset.assets.listNetworkConnectivityHubs",
            "cloudasset.assets.listNetworkConnectivitySpokes",
            "cloudasset.assets.listNetworkManagementConnectivityTests",
            "cloudasset.assets.listNetworkServicesEndpointPolicies",
            "cloudasset.assets.listNetworkServicesGateways",
            "cloudasset.assets.listNetworkServicesGrpcRoutes",
            "cloudasset.assets.listNetworkServicesHttpRoutes",
            "cloudasset.assets.listNetworkServicesMeshes",
            "cloudasset.assets.listNetworkServicesServiceBindings",
            "cloudasset.assets.listNetworkServicesTcpRoutes",
            "cloudasset.assets.listNetworkServicesTlsRoutes",
            "cloudasset.assets.listOSConfigOSPolicyAssignmentReports",
            "cloudasset.assets.listOSConfigOSPolicyAssignments",
            "cloudasset.assets.listOSConfigVulnerabilityReports",
            "cloudasset.assets.listOSInventories",
            "cloudasset.assets.listOrgPolicy",
            "cloudasset.assets.listPatchDeployments",
            "cloudasset.assets.listPubsubSnapshots",
            "cloudasset.assets.listPubsubSubscriptions",
            "cloudasset.assets.listPubsubTopics",
            "cloudasset.assets.listRedisInstances",
            "cloudasset.assets.listResource",
            "cloudasset.assets.listRunDomainMapping",
            "cloudasset.assets.listRunRevision",
            "cloudasset.assets.listRunService",
            "cloudasset.assets.listSecretManagerSecretVersions",
            "cloudasset.assets.listSecretManagerSecrets",
            "cloudasset.assets.listServiceDirectoryNamespaces",
            "cloudasset.assets.listServicePerimeter",
            "cloudasset.assets.listServiceconsumermanagementConsumerProperty",
            "cloudasset.assets.listServiceconsumermanagementConsumerQuotaLimits",
            "cloudasset.assets.listServiceconsumermanagementConsumers",
            "cloudasset.assets.listServiceconsumermanagementProducerOverrides",
            "cloudasset.assets.listServiceconsumermanagementTenancyUnits",
            "cloudasset.assets.listServiceconsumermanagementVisibility",
            "cloudasset.assets.listServicemanagementServices",
            "cloudasset.assets.listServiceusageAdminOverrides",
            "cloudasset.assets.listServiceusageConsumerOverrides",
            "cloudasset.assets.listServiceusageServices",
            "cloudasset.assets.listSpannerBackups",
            "cloudasset.assets.listSpannerDatabases",
            "cloudasset.assets.listSpannerInstances",
            "cloudasset.assets.listSpeakerIdPhrases",
            "cloudasset.assets.listSpeakerIdSettings",
            "cloudasset.assets.listSpeakerIdSpeakers",
            "cloudasset.assets.listSpeechCustomClasses",
            "cloudasset.assets.listSpeechPhraseSets",
            "cloudasset.assets.listSqladminBackupRuns",
            "cloudasset.assets.listSqladminInstances",
            "cloudasset.assets.listStorageBuckets",
            "cloudasset.assets.listTpuNodes",
            "cloudasset.assets.listVpcaccessConnector",
            "cloudasset.assets.queryAccessPolicy",
            "cloudasset.assets.queryIamPolicy",
            "cloudasset.assets.queryOSInventories",
            "cloudasset.assets.queryResource",
            "cloudasset.assets.searchAllIamPolicies",
            "cloudasset.assets.searchAllResources",
            "cloudasset.othercloudconnections.get",
            "cloudasset.othercloudconnections.list",
            "cloudasset.othercloudconnections.verify",
            "recommender.cloudAssetInsights.get",
            "recommender.cloudAssetInsights.list",
            "recommender.locations.*"
          ],
          "title": "Cloud Asset Viewer"
        },
        {
          "description": "Administers all Bigtable instances within a project, including the data stored within tables. Can create new instances. Intended for project administrators.",
          "id": "roles/bigtable.admin",
          "is_beta": false,
          "permissions": [
            "bigtable.*",
            "cloudkms.keyHandles.*",
            "cloudkms.operations.get",
            "cloudkms.projects.showEffectiveAutokeyConfig",
            "monitoring.metricDescriptors.get",
            "monitoring.metricDescriptors.list",
            "monitoring.timeSeries.*",
            "resourcemanager.projects.get"
          ],
          "title": "Bigtable Administrator"
        },
        {
          "description": "Provides read-only access to the data stored within Bigtable tables. Intended for data scientists, dashboard generators, and other data-analysis scenarios.",
          "id": "roles/bigtable.reader",
          "is_beta": false,
          "permissions": [
            "bigtable.appProfiles.get",
            "bigtable.appProfiles.list",
            "bigtable.authorizedViews.get",
            "bigtable.authorizedViews.list",
            "bigtable.authorizedViews.readRows",
            "bigtable.authorizedViews.sampleRowKeys",
            "bigtable.backups.get",
            "bigtable.backups.list",
            "bigtable.clusters.get",
            "bigtable.clusters.list",
            "bigtable.hotTablets.list",
            "bigtable.instances.executeQuery",
            "bigtable.instances.get",
            "bigtable.instances.list",
            "bigtable.instances.ping",
            "bigtable.keyvisualizer.*",
            "bigtable.locations.list",
            "bigtable.logicalViews.get",
            "bigtable.logicalViews.list",
            "bigtable.logicalViews.readRows",
            "bigtable.materializedViews.get",
            "bigtable.materializedViews.list",
            "bigtable.materializedViews.readRows",
            "bigtable.materializedViews.sampleRowKeys",
            "bigtable.tables.checkConsistency",
            "bigtable.tables.generateConsistencyToken",
            "bigtable.tables.get",
            "bigtable.tables.list",
            "bigtable.tables.readRows",
            "bigtable.tables.sampleRowKeys",
            "monitoring.metricDescriptors.get",
            "monitoring.metricDescriptors.list",
            "monitoring.timeSeries.*",
            "resourcemanager.projects.get"
          ],
          "title": "Bigtable Reader"
        },
        {
          "description": "Provides read-write access to the data stored within Bigtable tables. Intended for application developers or service accounts.",
          "id": "roles/bigtable.user",
          "is_beta": false,
          "permissions": [
            "bigtable.appProfiles.get",
            "bigtable.appProfiles.list",
            "bigtable.authorizedViews.get",
            "bigtable.authorizedViews.list",
            "bigtable.authorizedViews.mutateRows",
            "bigtable.authorizedViews.readRows",
            "bigtable.authorizedViews.sampleRowKeys",
            "bigtable.backups.get",
            "bigtable.backups.list",
            "bigtable.clusters.get",
            "bigtable.clusters.list",
            "bigtable.hotTablets.list",
            "bigtable.instances.executeQuery",
            "bigtable.instances.get",
            "bigtable.instances.list",
            "bigtable.instances.ping",
            "bigtable.keyvisualizer.*",
            "bigtable.locations.list",
            "bigtable.logicalViews.get",
            "bigtable.logicalViews.list",
            "bigtable.logicalViews.readRows",
            "bigtable.materializedViews.get",
            "bigtable.materializedViews.list",
            "bigtable.materializedViews.readRows",
            "bigtable.materializedViews.sampleRowKeys",
            "bigtable.tables.checkConsistency",
            "bigtable.tables.generateConsistencyToken",
            "bigtable.tables.get",
            "bigtable.tables.list",
            "bigtable.tables.mutateRows",
            "bigtable.tables.readRows",
            "bigtable.tables.sampleRowKeys",
            "monitoring.metricDescriptors.get",
            "monitoring.metricDescriptors.list",
            "monitoring.timeSeries.*",
            "resourcemanager.projects.get"
          ],
          "title": "Bigtable User"
        },
        {
          "description": "Provides no data access. Intended as a minimal set of permissions to access the Google Cloud console for Bigtable.",
          "id": "roles/bigtable.viewer",
          "is_beta": false,
          "permissions": [
            "bigtable.appProfiles.get",
            "bigtable.appProfiles.list",
            "bigtable.authorizedViews.get",
            "bigtable.authorizedViews.list",
            "bigtable.backups.get",
            "bigtable.backups.list",
            "bigtable.clusters.get",
            "bigtable.clusters.list",
            "bigtable.hotTablets.list",
            "bigtable.instances.get",
            "bigtable.instances.list",
            "bigtable.instances.listEffectiveTags",
            "bigtable.instances.listTagBindings",
            "bigtable.locations.list",
            "bigtable.logicalViews.get",
            "bigtable.logicalViews.list",
            "bigtable.materializedViews.get",
            "bigtable.materializedViews.list",
            "bigtable.tables.checkConsistency",
            "bigtable.tables.generateConsistencyToken",
            "bigtable.tables.get",
            "bigtable.tables.list",
            "monitoring.metricDescriptors.get",
            "monitoring.metricDescriptors.list",
            "monitoring.timeSeries.list",
            "resourcemanager.projects.get"
          ],
          "title": "Bigtable Viewer"
        },
        {
          "description": "Can approve or reject pending builds.",
          "id": "roles/cloudbuild.builds.approver",
          "is_beta": false,
          "permissions": [
            "cloudbuild.builds.approve",
            "cloudbuild.builds.get",
            "cloudbuild.builds.list",
            "cloudbuild.locations.*",
            "cloudbuild.operations.*",
            "remotebuildexecution.blobs.get",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Cloud Build Approver"
        },
        {
          "description": "Provides access to perform builds.",
          "id": "roles/cloudbuild.builds.builder",
          "is_beta": false,
          "permissions": [
            "artifactregistry.aptartifacts.create",
            "artifactregistry.attachments.create",
            "artifactregistry.attachments.get",
            "artifactregistry.attachments.list",
            "artifactregistry.dockerimages.*",
            "artifactregistry.files.download",
            "artifactregistry.files.get",
            "artifactregistry.files.list",
            "artifactregistry.files.update",
            "artifactregistry.files.upload",
            "artifactregistry.kfpartifacts.create",
            "artifactregistry.locations.*",
            "artifactregistry.mavenartifacts.*",
            "artifactregistry.npmpackages.*",
            "artifactregistry.packages.get",
            "artifactregistry.packages.list",
            "artifactregistry.packages.update",
            "artifactregistry.projectsettings.get",
            "artifactregistry.pythonpackages.*",
            "artifactregistry.repositories.createOnPush",
            "artifactregistry.repositories.deleteArtifacts",
            "artifactregistry.repositories.downloadArtifacts",
            "artifactregistry.repositories.get",
            "artifactregistry.repositories.list",
            "artifactregistry.repositories.listEffectiveTags",
            "artifactregistry.repositories.listTagBindings",
            "artifactregistry.repositories.readViaVirtualRepository",
            "artifactregistry.repositories.uploadArtifacts",
            "artifactregistry.rules.get",
            "artifactregistry.rules.list",
            "artifactregistry.tags.create",
            "artifactregistry.tags.get",
            "artifactregistry.tags.list",
            "artifactregistry.tags.update",
            "artifactregistry.versions.get",
            "artifactregistry.versions.list",
            "artifactregistry.yumartifacts.create",
            "cloudbuild.builds.create",
            "cloudbuild.builds.get",
            "cloudbuild.builds.list",
            "cloudbuild.builds.update",
            "cloudbuild.locations.*",
            "cloudbuild.operations.*",
            "cloudbuild.workerpools.use",
            "containeranalysis.occurrences.create",
            "containeranalysis.occurrences.delete",
            "containeranalysis.occurrences.get",
            "containeranalysis.occurrences.list",
            "containeranalysis.occurrences.update",
            "logging.logEntries.create",
            "logging.logEntries.list",
            "logging.views.access",
            "pubsub.topics.create",
            "pubsub.topics.publish",
            "remotebuildexecution.blobs.get",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "source.repos.get",
            "source.repos.list",
            "storage.buckets.create",
            "storage.buckets.get",
            "storage.buckets.list",
            "storage.objects.create",
            "storage.objects.delete",
            "storage.objects.get",
            "storage.objects.list",
            "storage.objects.update"
          ],
          "title": "Cloud Build Service Account"
        },
        {
          "description": "Provides access to create and cancel builds.",
          "id": "roles/cloudbuild.builds.editor",
          "is_beta": false,
          "permissions": [
            "cloudbuild.builds.create",
            "cloudbuild.builds.get",
            "cloudbuild.builds.list",
            "cloudbuild.builds.update",
            "cloudbuild.locations.*",
            "cloudbuild.operations.*",
            "remotebuildexecution.blobs.get",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Cloud Build Editor"
        },
        {
          "description": "Provides access to view builds.",
          "id": "roles/cloudbuild.builds.viewer",
          "is_beta": false,
          "permissions": [
            "cloudbuild.builds.get",
            "cloudbuild.builds.list",
            "cloudbuild.locations.*",
            "cloudbuild.operations.*",
            "remotebuildexecution.blobs.get",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Cloud Build Viewer"
        },
        {
          "description": "Can manage connections and repositories.",
          "id": "roles/cloudbuild.connectionAdmin",
          "is_beta": false,
          "permissions": [
            "cloudbuild.connections.*",
            "cloudbuild.operations.*",
            "cloudbuild.repositories.create",
            "cloudbuild.repositories.delete",
            "cloudbuild.repositories.fetchGitRefs",
            "cloudbuild.repositories.get",
            "cloudbuild.repositories.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Cloud Build Connection Admin"
        },
        {
          "description": "Can view and list connections and repositories.",
          "id": "roles/cloudbuild.connectionViewer",
          "is_beta": false,
          "permissions": [
            "cloudbuild.connections.fetchLinkableRepositories",
            "cloudbuild.connections.get",
            "cloudbuild.connections.getIamPolicy",
            "cloudbuild.connections.list",
            "cloudbuild.repositories.fetchGitRefs",
            "cloudbuild.repositories.get",
            "cloudbuild.repositories.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Cloud Build Connection Viewer"
        },
        {
          "description": "Can update Integrations",
          "id": "roles/cloudbuild.integrationsEditor",
          "is_beta": false,
          "permissions": [
            "cloudbuild.integrations.get",
            "cloudbuild.integrations.list",
            "cloudbuild.integrations.update",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Cloud Build Integrations Editor"
        },
        {
          "description": "Can create/delete Integrations",
          "id": "roles/cloudbuild.integrationsOwner",
          "is_beta": false,
          "permissions": [
            "cloudbuild.integrations.*",
            "compute.firewalls.create",
            "compute.firewalls.get",
            "compute.firewalls.list",
            "compute.networks.get",
            "compute.networks.updatePolicy",
            "compute.regions.get",
            "compute.subnetworks.get",
            "compute.subnetworks.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Cloud Build Integrations Owner"
        },
        {
          "description": "Can view Integrations",
          "id": "roles/cloudbuild.integrationsViewer",
          "is_beta": false,
          "permissions": [
            "cloudbuild.integrations.get",
            "cloudbuild.integrations.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Cloud Build Integrations Viewer"
        },
        {
          "description": "Can view the connection and access its read-only token.",
          "id": "roles/cloudbuild.readTokenAccessor",
          "is_beta": false,
          "permissions": [
            "cloudbuild.connections.get",
            "cloudbuild.repositories.accessReadToken",
            "cloudbuild.repositories.get"
          ],
          "title": "Cloud Build Read Only Token Accessor"
        },
        {
          "description": "Can view the connection and access its read/write and read-only tokens.",
          "id": "roles/cloudbuild.tokenAccessor",
          "is_beta": false,
          "permissions": [
            "cloudbuild.connections.get",
            "cloudbuild.repositories.accessReadToken",
            "cloudbuild.repositories.accessReadWriteToken",
            "cloudbuild.repositories.get",
            "cloudbuild.repositories.list"
          ],
          "title": "Cloud Build Token Accessor"
        },
        {
          "description": "Can update and view WorkerPools",
          "id": "roles/cloudbuild.workerPoolEditor",
          "is_beta": false,
          "permissions": [
            "cloudbuild.workerpools.get",
            "cloudbuild.workerpools.list",
            "cloudbuild.workerpools.update",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Cloud Build WorkerPool Editor"
        },
        {
          "description": "Can create, delete, update, and view WorkerPools",
          "id": "roles/cloudbuild.workerPoolOwner",
          "is_beta": false,
          "permissions": [
            "cloudbuild.workerpools.create",
            "cloudbuild.workerpools.delete",
            "cloudbuild.workerpools.get",
            "cloudbuild.workerpools.list",
            "cloudbuild.workerpools.update",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Cloud Build WorkerPool Owner"
        },
        {
          "description": "Can run builds in the WorkerPool",
          "id": "roles/cloudbuild.workerPoolUser",
          "is_beta": false,
          "permissions": [
            "cloudbuild.workerpools.use"
          ],
          "title": "Cloud Build WorkerPool User"
        },
        {
          "description": "Can view WorkerPools",
          "id": "roles/cloudbuild.workerPoolViewer",
          "is_beta": false,
          "permissions": [
            "cloudbuild.workerpools.get",
            "cloudbuild.workerpools.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Cloud Build WorkerPool Viewer"
        },
        {
          "description": "Cloud Composer v2 API Service Agent Extension is a supplementary role required to manage Composer v2 environments.",
          "id": "roles/composer.ServiceAgentV2Ext",
          "is_beta": false,
          "permissions": [
            "iam.serviceAccounts.getIamPolicy",
            "iam.serviceAccounts.setIamPolicy"
          ],
          "title": "Cloud Composer v2 API Service Agent Extension"
        },
        {
          "description": "Provides full control of Cloud Composer resources.",
          "id": "roles/composer.admin",
          "is_beta": false,
          "permissions": [
            "cloudkms.keyHandles.*",
            "cloudkms.operations.get",
            "cloudkms.projects.showEffectiveAutokeyConfig",
            "composer.*",
            "serviceusage.quotas.get",
            "serviceusage.services.get",
            "serviceusage.services.list"
          ],
          "title": "Composer Administrator"
        },
        {
          "description": "Provides full control of Cloud Composer resources and of the objects in all project buckets.",
          "id": "roles/composer.environmentAndStorageObjectAdmin",
          "is_beta": false,
          "permissions": [
            "cloudkms.keyHandles.*",
            "cloudkms.operations.get",
            "cloudkms.projects.showEffectiveAutokeyConfig",
            "composer.*",
            "orgpolicy.policy.get",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "serviceusage.quotas.get",
            "serviceusage.services.get",
            "serviceusage.services.list",
            "storage.folders.*",
            "storage.managedFolders.create",
            "storage.managedFolders.delete",
            "storage.managedFolders.get",
            "storage.managedFolders.list",
            "storage.multipartUploads.*",
            "storage.objects.*"
          ],
          "title": "Environment and Storage Object Administrator"
        },
        {
          "description": "Read and use access to Cloud Composer resources and read access to Cloud Storage objects.",
          "id": "roles/composer.environmentAndStorageObjectUser",
          "is_beta": false,
          "permissions": [
            "composer.dags.*",
            "composer.environments.get",
            "composer.environments.list",
            "composer.imageversions.list",
            "composer.operations.get",
            "composer.operations.list",
            "composer.userworkloadsconfigmaps.get",
            "composer.userworkloadsconfigmaps.list",
            "composer.userworkloadssecrets.get",
            "composer.userworkloadssecrets.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "serviceusage.quotas.get",
            "serviceusage.services.get",
            "serviceusage.services.list",
            "storage.folders.get",
            "storage.folders.list",
            "storage.managedFolders.get",
            "storage.managedFolders.list",
            "storage.objects.get",
            "storage.objects.list"
          ],
          "title": "Environment and Storage Object User"
        },
        {
          "description": "Provides the permissions necessary to list and get Cloud Composer environments and operations. Provides read-only access to objects in all project buckets.",
          "id": "roles/composer.environmentAndStorageObjectViewer",
          "is_beta": false,
          "permissions": [
            "composer.dags.*",
            "composer.environments.get",
            "composer.environments.list",
            "composer.imageversions.list",
            "composer.operations.get",
            "composer.operations.list",
            "composer.userworkloadsconfigmaps.get",
            "composer.userworkloadsconfigmaps.list",
            "composer.userworkloadssecrets.get",
            "composer.userworkloadssecrets.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "serviceusage.quotas.get",
            "serviceusage.services.get",
            "serviceusage.services.list",
            "storage.folders.get",
            "storage.folders.list",
            "storage.managedFolders.get",
            "storage.managedFolders.list",
            "storage.objects.get",
            "storage.objects.list"
          ],
          "title": "Environment and Storage Object Viewer"
        },
        {
          "description": "Role that should be assigned to Composer Agent service account in Shared VPC host project",
          "id": "roles/composer.sharedVpcAgent",
          "is_beta": false,
          "permissions": [
            "compute.networkAttachments.create",
            "compute.networkAttachments.delete",
            "compute.networkAttachments.get",
            "compute.networkAttachments.update",
            "compute.networks.access",
            "compute.networks.addPeering",
            "compute.networks.get",
            "compute.networks.list",
            "compute.networks.listPeeringRoutes",
            "compute.networks.removePeering",
            "compute.networks.updatePeering",
            "compute.networks.use",
            "compute.networks.useExternalIp",
            "compute.projects.get",
            "compute.regions.*",
            "compute.subnetworks.get",
            "compute.subnetworks.list",
            "compute.subnetworks.use",
            "compute.subnetworks.useExternalIp",
            "compute.zones.*",
            "dns.managedZones.get",
            "dns.managedZones.list",
            "dns.networks.targetWithPeeringZone"
          ],
          "title": "Composer Shared VPC Agent"
        },
        {
          "description": "Provides the permissions necessary to list and get Cloud Composer environments and operations.",
          "id": "roles/composer.user",
          "is_beta": false,
          "permissions": [
            "composer.dags.*",
            "composer.environments.get",
            "composer.environments.list",
            "composer.imageversions.list",
            "composer.operations.get",
            "composer.operations.list",
            "composer.userworkloadsconfigmaps.get",
            "composer.userworkloadsconfigmaps.list",
            "composer.userworkloadssecrets.get",
            "composer.userworkloadssecrets.list",
            "serviceusage.quotas.get",
            "serviceusage.services.get",
            "serviceusage.services.list"
          ],
          "title": "Composer User"
        },
        {
          "description": "Provides the permissions necessary to run a Cloud Composer environment VM. Intended for service accounts.",
          "id": "roles/composer.worker",
          "is_beta": false,
          "permissions": [
            "artifactregistry.*",
            "cloudbuild.builds.create",
            "cloudbuild.builds.get",
            "cloudbuild.builds.list",
            "cloudbuild.builds.update",
            "cloudbuild.locations.*",
            "cloudbuild.operations.*",
            "cloudbuild.workerpools.use",
            "cloudkms.keyHandles.*",
            "cloudkms.operations.get",
            "cloudkms.projects.showEffectiveAutokeyConfig",
            "composer.environments.get",
            "container.*",
            "containeranalysis.occurrences.create",
            "containeranalysis.occurrences.delete",
            "containeranalysis.occurrences.get",
            "containeranalysis.occurrences.list",
            "containeranalysis.occurrences.update",
            "datalineage.events.create",
            "datalineage.processes.create",
            "datalineage.processes.get",
            "datalineage.processes.update",
            "datalineage.runs.create",
            "datalineage.runs.get",
            "datalineage.runs.update",
            "logging.logEntries.create",
            "logging.logEntries.list",
            "logging.logEntries.route",
            "logging.views.access",
            "monitoring.metricDescriptors.create",
            "monitoring.metricDescriptors.get",
            "monitoring.metricDescriptors.list",
            "monitoring.monitoredResourceDescriptors.*",
            "monitoring.timeSeries.*",
            "orgpolicy.policy.get",
            "pubsub.schemas.attach",
            "pubsub.schemas.commit",
            "pubsub.schemas.create",
            "pubsub.schemas.delete",
            "pubsub.schemas.get",
            "pubsub.schemas.list",
            "pubsub.schemas.listRevisions",
            "pubsub.schemas.rollback",
            "pubsub.schemas.validate",
            "pubsub.snapshots.create",
            "pubsub.snapshots.delete",
            "pubsub.snapshots.get",
            "pubsub.snapshots.list",
            "pubsub.snapshots.seek",
            "pubsub.snapshots.update",
            "pubsub.subscriptions.consume",
            "pubsub.subscriptions.create",
            "pubsub.subscriptions.delete",
            "pubsub.subscriptions.get",
            "pubsub.subscriptions.list",
            "pubsub.subscriptions.update",
            "pubsub.topics.attachSubscription",
            "pubsub.topics.create",
            "pubsub.topics.delete",
            "pubsub.topics.detachSubscription",
            "pubsub.topics.get",
            "pubsub.topics.list",
            "pubsub.topics.publish",
            "pubsub.topics.update",
            "pubsub.topics.updateTag",
            "recommender.containerDiagnosisInsights.*",
            "recommender.containerDiagnosisRecommendations.*",
            "recommender.locations.*",
            "recommender.networkAnalyzerGkeConnectivityInsights.*",
            "recommender.networkAnalyzerGkeIpAddressInsights.*",
            "remotebuildexecution.blobs.get",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "serviceusage.quotas.get",
            "serviceusage.services.get",
            "serviceusage.services.list",
            "source.repos.get",
            "source.repos.list",
            "storage.buckets.create",
            "storage.buckets.get",
            "storage.buckets.list",
            "storage.folders.*",
            "storage.managedFolders.create",
            "storage.managedFolders.delete",
            "storage.managedFolders.get",
            "storage.managedFolders.list",
            "storage.multipartUploads.*",
            "storage.objects.*"
          ],
          "title": "Composer Worker"
        },
        {
          "description": "Full access to all resources of Connectors Service.",
          "id": "roles/connectors.admin",
          "is_beta": false,
          "permissions": [
            "connectors.actions.*",
            "connectors.connections.create",
            "connectors.connections.delete",
            "connectors.connections.executeSqlQuery",
            "connectors.connections.generateOpenAPISpec",
            "connectors.connections.get",
            "connectors.connections.getConnectionSchemaMetadata",
            "connectors.connections.getIamPolicy",
            "connectors.connections.getRuntimeActionSchema",
            "connectors.connections.getRuntimeEntitySchema",
            "connectors.connections.list",
            "connectors.connections.setIamPolicy",
            "connectors.connections.update",
            "connectors.connectors.*",
            "connectors.customConnectorVersions.*",
            "connectors.customConnectors.*",
            "connectors.endpointAttachments.*",
            "connectors.entities.*",
            "connectors.entityTypes.list",
            "connectors.eventSubscriptions.*",
            "connectors.eventtypes.*",
            "connectors.locations.*",
            "connectors.managedZones.*",
            "connectors.operations.*",
            "connectors.providers.*",
            "connectors.regionalSettings.*",
            "connectors.runtimeconfig.get",
            "connectors.schemaMetadata.refresh",
            "connectors.settings.*",
            "connectors.versions.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "secretmanager.secrets.getIamPolicy"
          ],
          "title": "Connector Admin"
        },
        {
          "description": "Custom Connector  is a global resource which creates custom connector within the given target project. This role grants Admin access to Custom Connector resources",
          "id": "roles/connectors.customConnectorAdmin",
          "is_beta": false,
          "permissions": [
            "connectors.customConnectorVersions.*",
            "connectors.customConnectors.*",
            "connectors.locations.*"
          ],
          "title": "Custom Connectors Admin"
        },
        {
          "description": "Custom Connector  is a global resource which creates custom connector within the given target project. This role grants Read-only access to Custom Connector & Custom Connector Version resources.",
          "id": "roles/connectors.customConnectorViewer",
          "is_beta": false,
          "permissions": [
            "connectors.customConnectorVersions.get",
            "connectors.customConnectorVersions.getIamPolicy",
            "connectors.customConnectorVersions.list",
            "connectors.customConnectors.get",
            "connectors.customConnectors.getIamPolicy",
            "connectors.customConnectors.list",
            "connectors.locations.*"
          ],
          "title": "Custom Connector Viewer"
        },
        {
          "description": "Endpoint Attachment is a regional resource which creates PSC connection endpoint for the given PSC Service Attachment. This role grants Admin access to Connectors Endpoint Attachment resources.",
          "id": "roles/connectors.endpointAttachmentAdmin",
          "is_beta": false,
          "permissions": [
            "connectors.endpointAttachments.*",
            "connectors.locations.*"
          ],
          "title": "Connectors Endpoint Attachment Admin"
        },
        {
          "description": "Endpoint Attachment is a regional resource which creates PSC connection endpoint for the given PSC Service Attachment. This role grants Read-only access to Connectors Endpoint Attachment resources",
          "id": "roles/connectors.endpointAttachmentViewer",
          "is_beta": false,
          "permissions": [
            "connectors.endpointAttachments.get",
            "connectors.endpointAttachments.getIamPolicy",
            "connectors.endpointAttachments.list",
            "connectors.locations.*"
          ],
          "title": "Connectors Endpoint Attachment Viewer"
        },
        {
          "description": "Event Subscription is a regional resource which creates subscriptions on events for a given connection within the given target project. This role grants Admin access to Connectors Subscription resources",
          "id": "roles/connectors.eventSubscriptionAdmin",
          "is_beta": false,
          "permissions": [
            "connectors.eventSubscriptions.*"
          ],
          "title": "Connectors Event Subscriptions Admin"
        },
        {
          "description": "Event Subscription is a regional resource which creates subscriptions on events for a given connection within the given target project. This role grants Read-only access to Event Subscription resources.",
          "id": "roles/connectors.eventSubscriptionViewer",
          "is_beta": false,
          "permissions": [
            "connectors.eventSubscriptions.get",
            "connectors.eventSubscriptions.list"
          ],
          "title": "Connectors Event Subscriptions Viewer"
        },
        {
          "description": "Full Access to invoke all operations on Connections.",
          "id": "roles/connectors.invoker",
          "is_beta": false,
          "permissions": [
            "connectors.actions.*",
            "connectors.connections.executeSqlQuery",
            "connectors.entities.*",
            "connectors.entityTypes.list"
          ],
          "title": "Connector Invoker"
        },
        {
          "description": "Full Access to listen events by connections.",
          "id": "roles/connectors.listener",
          "is_beta": false,
          "permissions": [
            "connectors.connections.listenEvent"
          ],
          "title": "Connector Event Listener"
        },
        {
          "description": "Managed Zone is a global resource which creates Cloud DNS Peering Zone with the given target project. This role grants Admin access to Connectors Managed Zone resources",
          "id": "roles/connectors.managedZoneAdmin",
          "is_beta": false,
          "permissions": [
            "connectors.locations.*",
            "connectors.managedZones.*"
          ],
          "title": "Connectors Managed Zone Admin"
        },
        {
          "description": "Managed Zone is a global resource which creates Cloud DNS Peering Zone with the given target project. This role grants Read-only access to Connectors Managed Zone resources.",
          "id": "roles/connectors.managedZoneViewer",
          "is_beta": false,
          "permissions": [
            "connectors.locations.*",
            "connectors.managedZones.get",
            "connectors.managedZones.getIamPolicy",
            "connectors.managedZones.list"
          ],
          "title": "Connectors Managed Zone Viewer"
        },
        {
          "description": "Read-only access to Connectors all resources.",
          "id": "roles/connectors.viewer",
          "is_beta": false,
          "permissions": [
            "connectors.connections.generateOpenAPISpec",
            "connectors.connections.get",
            "connectors.connections.getConnectionSchemaMetadata",
            "connectors.connections.getIamPolicy",
            "connectors.connections.getRuntimeActionSchema",
            "connectors.connections.getRuntimeEntitySchema",
            "connectors.connections.list",
            "connectors.connectors.*",
            "connectors.customConnectorVersions.get",
            "connectors.customConnectorVersions.getIamPolicy",
            "connectors.customConnectorVersions.list",
            "connectors.customConnectors.get",
            "connectors.customConnectors.getIamPolicy",
            "connectors.customConnectors.list",
            "connectors.endpointAttachments.get",
            "connectors.endpointAttachments.getIamPolicy",
            "connectors.endpointAttachments.list",
            "connectors.eventSubscriptions.get",
            "connectors.eventSubscriptions.list",
            "connectors.eventtypes.*",
            "connectors.locations.*",
            "connectors.managedZones.get",
            "connectors.managedZones.getIamPolicy",
            "connectors.managedZones.list",
            "connectors.operations.get",
            "connectors.operations.list",
            "connectors.providers.*",
            "connectors.regionalSettings.get",
            "connectors.runtimeconfig.get",
            "connectors.settings.get",
            "connectors.versions.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Connectors Viewer"
        },
        {
          "description": "Read-only access to Cloud Data Fusion Instances. Use it on instance level along with the namespace grants to provide access to the specific namespace.",
          "id": "roles/datafusion.accessor",
          "is_beta": true,
          "permissions": [
            "datafusion.instances.get",
            "datafusion.instances.getIamPolicy",
            "datafusion.instances.list",
            "datafusion.instances.listEffectiveTags",
            "datafusion.instances.listTagBindings",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Cloud Data Fusion Accessor"
        },
        {
          "description": "Full access to Cloud Data Fusion Instances, Namespaces and related resources.",
          "id": "roles/datafusion.admin",
          "is_beta": false,
          "permissions": [
            "datafusion.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Cloud Data Fusion Admin"
        },
        {
          "description": "Access Cloud Data Fusion Instances, develop and run pipelines.",
          "id": "roles/datafusion.developer",
          "is_beta": true,
          "permissions": [
            "datafusion.artifacts.get",
            "datafusion.artifacts.list",
            "datafusion.instances.get",
            "datafusion.instances.getIamPolicy",
            "datafusion.instances.list",
            "datafusion.instances.listEffectiveTags",
            "datafusion.instances.listTagBindings",
            "datafusion.locations.*",
            "datafusion.namespaces.get",
            "datafusion.namespaces.getIamPolicy",
            "datafusion.namespaces.list",
            "datafusion.namespaces.provisionCredential",
            "datafusion.namespaces.readRepository",
            "datafusion.namespaces.update",
            "datafusion.namespaces.writeRepository",
            "datafusion.operations.get",
            "datafusion.operations.list",
            "datafusion.pipelineConnections.get",
            "datafusion.pipelineConnections.list",
            "datafusion.pipelineConnections.use",
            "datafusion.pipelines.*",
            "datafusion.profiles.get",
            "datafusion.profiles.list",
            "datafusion.secureKeys.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Cloud Data Fusion Developer"
        },
        {
          "description": "Access Cloud Data Fusion Instances, operate namespaces and related resources.",
          "id": "roles/datafusion.operator",
          "is_beta": true,
          "permissions": [
            "datafusion.artifacts.*",
            "datafusion.instances.get",
            "datafusion.instances.getIamPolicy",
            "datafusion.instances.list",
            "datafusion.instances.listEffectiveTags",
            "datafusion.instances.listTagBindings",
            "datafusion.locations.*",
            "datafusion.namespaces.get",
            "datafusion.namespaces.getIamPolicy",
            "datafusion.namespaces.list",
            "datafusion.namespaces.provisionCredential",
            "datafusion.namespaces.readRepository",
            "datafusion.namespaces.setServiceAccount",
            "datafusion.namespaces.unsetServiceAccount",
            "datafusion.namespaces.update",
            "datafusion.namespaces.updateRepositoryMetadata",
            "datafusion.namespaces.writeRepository",
            "datafusion.operations.get",
            "datafusion.operations.list",
            "datafusion.pipelineConnections.get",
            "datafusion.pipelineConnections.list",
            "datafusion.pipelineConnections.use",
            "datafusion.pipelines.create",
            "datafusion.pipelines.delete",
            "datafusion.pipelines.execute",
            "datafusion.pipelines.get",
            "datafusion.pipelines.list",
            "datafusion.pipelines.update",
            "datafusion.profiles.*",
            "datafusion.secureKeys.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Cloud Data Fusion Operator"
        },
        {
          "description": "Access to Cloud Data Fusion runtime resources.",
          "id": "roles/datafusion.runner",
          "is_beta": false,
          "permissions": [
            "datafusion.instances.runtime"
          ],
          "title": "Cloud Data Fusion Runner"
        },
        {
          "description": "Read-only access to Cloud Data Fusion Instances, Namespaces and related resources.",
          "id": "roles/datafusion.viewer",
          "is_beta": false,
          "permissions": [
            "datafusion.artifacts.get",
            "datafusion.artifacts.list",
            "datafusion.instances.get",
            "datafusion.instances.getIamPolicy",
            "datafusion.instances.list",
            "datafusion.instances.listEffectiveTags",
            "datafusion.instances.listTagBindings",
            "datafusion.locations.*",
            "datafusion.namespaces.get",
            "datafusion.namespaces.getIamPolicy",
            "datafusion.namespaces.list",
            "datafusion.operations.get",
            "datafusion.operations.list",
            "datafusion.pipelineConnections.get",
            "datafusion.pipelineConnections.list",
            "datafusion.pipelines.get",
            "datafusion.pipelines.list",
            "datafusion.profiles.get",
            "datafusion.profiles.list",
            "datafusion.secureKeys.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Cloud Data Fusion Viewer"
        },
        {
          "description": "Full access to all Data Labeling resources",
          "id": "roles/datalabeling.admin",
          "is_beta": true,
          "permissions": [
            "datalabeling.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Data Labeling Service Admin"
        },
        {
          "description": "Editor of all Data Labeling resources",
          "id": "roles/datalabeling.editor",
          "is_beta": true,
          "permissions": [
            "datalabeling.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Data Labeling Service Editor"
        },
        {
          "description": "Viewer of all Data Labeling resources",
          "id": "roles/datalabeling.viewer",
          "is_beta": true,
          "permissions": [
            "datalabeling.annotateddatasets.get",
            "datalabeling.annotateddatasets.list",
            "datalabeling.annotationspecsets.get",
            "datalabeling.annotationspecsets.list",
            "datalabeling.dataitems.*",
            "datalabeling.datasets.get",
            "datalabeling.datasets.list",
            "datalabeling.examples.*",
            "datalabeling.instructions.get",
            "datalabeling.instructions.list",
            "datalabeling.operations.get",
            "datalabeling.operations.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Data Labeling Service Viewer"
        },
        {
          "description": "Full access to Dataplex resources, except Dataplex Catalog.",
          "id": "roles/dataplex.admin",
          "is_beta": false,
          "permissions": [
            "cloudasset.assets.analyzeIamPolicy",
            "cloudasset.assets.searchAllIamPolicies",
            "cloudasset.assets.searchAllResources",
            "dataplex.assetActions.list",
            "dataplex.assets.create",
            "dataplex.assets.delete",
            "dataplex.assets.get",
            "dataplex.assets.getIamPolicy",
            "dataplex.assets.list",
            "dataplex.assets.setIamPolicy",
            "dataplex.assets.update",
            "dataplex.content.*",
            "dataplex.dataAttributeBindings.*",
            "dataplex.dataAttributes.*",
            "dataplex.dataTaxonomies.*",
            "dataplex.datascans.*",
            "dataplex.encryptionConfig.*",
            "dataplex.entities.*",
            "dataplex.entryGroups.export",
            "dataplex.entryGroups.import",
            "dataplex.environments.*",
            "dataplex.lakeActions.list",
            "dataplex.lakes.*",
            "dataplex.locations.*",
            "dataplex.metadataJobs.*",
            "dataplex.operations.*",
            "dataplex.partitions.*",
            "dataplex.tasks.*",
            "dataplex.zoneActions.list",
            "dataplex.zones.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Dataplex Administrator"
        },
        {
          "description": "Grants access to creating and managing Aspect Types. Does not give the right to create/modify Entries.",
          "id": "roles/dataplex.aspectTypeOwner",
          "is_beta": false,
          "permissions": [
            "datacatalog.migrationConfig.get",
            "dataplex.aspectTypes.*",
            "dataplex.operations.get",
            "dataplex.projects.search",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Dataplex Aspect Type Owner"
        },
        {
          "description": "Grants access to use Aspect Types to create/modify Entries with the corresponding aspects.",
          "id": "roles/dataplex.aspectTypeUser",
          "is_beta": false,
          "permissions": [
            "datacatalog.migrationConfig.get",
            "dataplex.aspectTypes.get",
            "dataplex.aspectTypes.list",
            "dataplex.aspectTypes.use",
            "dataplex.projects.search",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Dataplex Aspect Type User"
        },
        {
          "description": "Full access on DataAttribute Bindig resources.",
          "id": "roles/dataplex.bindingAdmin",
          "is_beta": false,
          "permissions": [
            "dataplex.dataAttributeBindings.*"
          ],
          "title": "Dataplex Binding Administrator"
        },
        {
          "description": "Has full access to Catalog resources.",
          "id": "roles/dataplex.catalogAdmin",
          "is_beta": false,
          "permissions": [
            "datacatalog.migrationConfig.get",
            "dataplex.aspectTypes.*",
            "dataplex.entries.*",
            "dataplex.entryGroups.*",
            "dataplex.entryTypes.*",
            "dataplex.operations.get",
            "dataplex.projects.search",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Dataplex Catalog Admin"
        },
        {
          "description": "Has write access to Catalog resources. Cannot set IAM policies on resources",
          "id": "roles/dataplex.catalogEditor",
          "is_beta": false,
          "permissions": [
            "datacatalog.migrationConfig.get",
            "dataplex.aspectTypes.create",
            "dataplex.aspectTypes.delete",
            "dataplex.aspectTypes.get",
            "dataplex.aspectTypes.getIamPolicy",
            "dataplex.aspectTypes.list",
            "dataplex.aspectTypes.update",
            "dataplex.aspectTypes.use",
            "dataplex.entries.*",
            "dataplex.entryGroups.create",
            "dataplex.entryGroups.delete",
            "dataplex.entryGroups.get",
            "dataplex.entryGroups.getIamPolicy",
            "dataplex.entryGroups.list",
            "dataplex.entryGroups.update",
            "dataplex.entryGroups.useContactsAspect",
            "dataplex.entryGroups.useGenericAspect",
            "dataplex.entryGroups.useGenericEntry",
            "dataplex.entryGroups.useOverviewAspect",
            "dataplex.entryGroups.useSchemaAspect",
            "dataplex.entryTypes.create",
            "dataplex.entryTypes.delete",
            "dataplex.entryTypes.get",
            "dataplex.entryTypes.getIamPolicy",
            "dataplex.entryTypes.list",
            "dataplex.entryTypes.update",
            "dataplex.entryTypes.use",
            "dataplex.operations.get",
            "dataplex.projects.search",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Dataplex Catalog Editor"
        },
        {
          "description": "Has read access to Catalog resources: Entry Groups, Entry Types, Aspect Types, Entry Link Types, Entries and Entry Links. Can view IAM policies on Catalog resources.",
          "id": "roles/dataplex.catalogViewer",
          "is_beta": false,
          "permissions": [
            "datacatalog.migrationConfig.get",
            "dataplex.aspectTypes.get",
            "dataplex.aspectTypes.getIamPolicy",
            "dataplex.aspectTypes.list",
            "dataplex.entries.get",
            "dataplex.entries.list",
            "dataplex.entryGroups.get",
            "dataplex.entryGroups.getIamPolicy",
            "dataplex.entryGroups.list",
            "dataplex.entryTypes.get",
            "dataplex.entryTypes.getIamPolicy",
            "dataplex.entryTypes.list",
            "dataplex.projects.search",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Dataplex Catalog Viewer"
        },
        {
          "description": "Owner access to data. To be granted to Dataplex resources Lake, Zone or Asset only.",
          "id": "roles/dataplex.dataOwner",
          "is_beta": false,
          "permissions": [
            "dataplex.assets.ownData",
            "dataplex.assets.readData",
            "dataplex.assets.writeData"
          ],
          "title": "Dataplex Data Owner"
        },
        {
          "description": "Read only access to data. To be granted to Dataplex resources Lake, Zone or Asset only.",
          "id": "roles/dataplex.dataReader",
          "is_beta": false,
          "permissions": [
            "dataplex.assets.readData"
          ],
          "title": "Dataplex Data Reader"
        },
        {
          "description": "Full access to DataScan resources.",
          "id": "roles/dataplex.dataScanAdmin",
          "is_beta": false,
          "permissions": [
            "dataplex.datascans.*",
            "dataplex.operations.get",
            "dataplex.operations.list"
          ],
          "title": "Dataplex DataScan Administrator"
        },
        {
          "description": "Access to create new DataScan resources.",
          "id": "roles/dataplex.dataScanCreator",
          "is_beta": false,
          "permissions": [
            "dataplex.datascans.create",
            "dataplex.datascans.get",
            "dataplex.datascans.list",
            "dataplex.operations.get"
          ],
          "title": "Dataplex DataScan Creator"
        },
        {
          "description": "Read access to DataScan resources and additional contents.",
          "id": "roles/dataplex.dataScanDataViewer",
          "is_beta": false,
          "permissions": [
            "dataplex.datascans.get",
            "dataplex.datascans.getData",
            "dataplex.datascans.getIamPolicy",
            "dataplex.datascans.list"
          ],
          "title": "Dataplex DataScan DataViewer"
        },
        {
          "description": "Write access to DataScan resources.",
          "id": "roles/dataplex.dataScanEditor",
          "is_beta": false,
          "permissions": [
            "dataplex.datascans.create",
            "dataplex.datascans.delete",
            "dataplex.datascans.get",
            "dataplex.datascans.getData",
            "dataplex.datascans.getIamPolicy",
            "dataplex.datascans.list",
            "dataplex.datascans.run",
            "dataplex.datascans.update",
            "dataplex.operations.get",
            "dataplex.operations.list"
          ],
          "title": "Dataplex DataScan Editor"
        },
        {
          "description": "Read access to DataScan resources.",
          "id": "roles/dataplex.dataScanViewer",
          "is_beta": false,
          "permissions": [
            "dataplex.datascans.get",
            "dataplex.datascans.getIamPolicy",
            "dataplex.datascans.list"
          ],
          "title": "Dataplex DataScan Viewer"
        },
        {
          "description": "Write access to data. To be granted to Dataplex resources Lake, Zone or Asset only.",
          "id": "roles/dataplex.dataWriter",
          "is_beta": false,
          "permissions": [
            "dataplex.assets.writeData"
          ],
          "title": "Dataplex Data Writer"
        },
        {
          "description": "Allows running data analytics workloads in a lake.",
          "id": "roles/dataplex.developer",
          "is_beta": false,
          "permissions": [
            "dataplex.content.*",
            "dataplex.environments.execute",
            "dataplex.environments.get",
            "dataplex.environments.list",
            "dataplex.tasks.cancel",
            "dataplex.tasks.create",
            "dataplex.tasks.delete",
            "dataplex.tasks.get",
            "dataplex.tasks.list",
            "dataplex.tasks.run",
            "dataplex.tasks.update"
          ],
          "title": "Dataplex Developer"
        },
        {
          "description": "Write access to Dataplex resources.",
          "id": "roles/dataplex.editor",
          "is_beta": false,
          "permissions": [
            "cloudasset.assets.analyzeIamPolicy",
            "dataplex.assetActions.list",
            "dataplex.assets.create",
            "dataplex.assets.delete",
            "dataplex.assets.get",
            "dataplex.assets.getIamPolicy",
            "dataplex.assets.list",
            "dataplex.assets.update",
            "dataplex.content.delete",
            "dataplex.content.get",
            "dataplex.content.getIamPolicy",
            "dataplex.content.list",
            "dataplex.dataAttributeBindings.create",
            "dataplex.dataAttributeBindings.delete",
            "dataplex.dataAttributeBindings.get",
            "dataplex.dataAttributeBindings.getIamPolicy",
            "dataplex.dataAttributeBindings.list",
            "dataplex.dataAttributeBindings.update",
            "dataplex.dataAttributes.bind",
            "dataplex.dataAttributes.create",
            "dataplex.dataAttributes.delete",
            "dataplex.dataAttributes.get",
            "dataplex.dataAttributes.getIamPolicy",
            "dataplex.dataAttributes.list",
            "dataplex.dataAttributes.update",
            "dataplex.dataTaxonomies.configureDataAccess",
            "dataplex.dataTaxonomies.configureResourceAccess",
            "dataplex.dataTaxonomies.create",
            "dataplex.dataTaxonomies.delete",
            "dataplex.dataTaxonomies.get",
            "dataplex.dataTaxonomies.getIamPolicy",
            "dataplex.dataTaxonomies.list",
            "dataplex.dataTaxonomies.update",
            "dataplex.datascans.create",
            "dataplex.datascans.delete",
            "dataplex.datascans.get",
            "dataplex.datascans.getIamPolicy",
            "dataplex.datascans.list",
            "dataplex.datascans.run",
            "dataplex.datascans.update",
            "dataplex.environments.create",
            "dataplex.environments.delete",
            "dataplex.environments.get",
            "dataplex.environments.getIamPolicy",
            "dataplex.environments.list",
            "dataplex.environments.update",
            "dataplex.lakeActions.list",
            "dataplex.lakes.create",
            "dataplex.lakes.delete",
            "dataplex.lakes.get",
            "dataplex.lakes.getIamPolicy",
            "dataplex.lakes.list",
            "dataplex.lakes.update",
            "dataplex.operations.*",
            "dataplex.tasks.cancel",
            "dataplex.tasks.create",
            "dataplex.tasks.delete",
            "dataplex.tasks.get",
            "dataplex.tasks.getIamPolicy",
            "dataplex.tasks.list",
            "dataplex.tasks.run",
            "dataplex.tasks.update",
            "dataplex.zoneActions.list",
            "dataplex.zones.create",
            "dataplex.zones.delete",
            "dataplex.zones.get",
            "dataplex.zones.getIamPolicy",
            "dataplex.zones.list",
            "dataplex.zones.update"
          ],
          "title": "Dataplex Editor"
        },
        {
          "description": "Gives user permissions to manage encryption config.",
          "id": "roles/dataplex.encryptionAdmin",
          "is_beta": false,
          "permissions": [
            "dataplex.encryptionConfig.*",
            "dataplex.operations.get",
            "dataplex.operations.list"
          ],
          "title": "Dataplex Encryption Admin"
        },
        {
          "description": "Grants access to export this entry group for Metadata Job processing.",
          "id": "roles/dataplex.entryGroupExporter",
          "is_beta": false,
          "permissions": [
            "dataplex.entryGroups.export",
            "dataplex.entryGroups.get",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Dataplex Entry Group Exporter"
        },
        {
          "description": "Grants access to import this entry group for Metadata Job processing.",
          "id": "roles/dataplex.entryGroupImporter",
          "is_beta": false,
          "permissions": [
            "dataplex.entryGroups.get",
            "dataplex.entryGroups.import",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Dataplex Entry Group Importer"
        },
        {
          "description": "Owns Entry Groups and Entries inside of them.",
          "id": "roles/dataplex.entryGroupOwner",
          "is_beta": false,
          "permissions": [
            "datacatalog.migrationConfig.get",
            "dataplex.aspectTypes.get",
            "dataplex.aspectTypes.list",
            "dataplex.aspectTypes.use",
            "dataplex.entries.*",
            "dataplex.entryGroups.*",
            "dataplex.entryTypes.get",
            "dataplex.entryTypes.list",
            "dataplex.entryTypes.use",
            "dataplex.operations.get",
            "dataplex.projects.search",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Dataplex Entry Group Owner"
        },
        {
          "description": "Owns Metadata Entries and EntryLinks.",
          "id": "roles/dataplex.entryOwner",
          "is_beta": false,
          "permissions": [
            "datacatalog.migrationConfig.get",
            "dataplex.aspectTypes.get",
            "dataplex.aspectTypes.list",
            "dataplex.aspectTypes.use",
            "dataplex.entries.*",
            "dataplex.entryGroups.get",
            "dataplex.entryGroups.useContactsAspect",
            "dataplex.entryGroups.useGenericAspect",
            "dataplex.entryGroups.useGenericEntry",
            "dataplex.entryGroups.useOverviewAspect",
            "dataplex.entryGroups.useSchemaAspect",
            "dataplex.entryTypes.get",
            "dataplex.entryTypes.list",
            "dataplex.entryTypes.use",
            "dataplex.projects.search",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Dataplex Entry and EntryLink Owner"
        },
        {
          "description": "Grants access to creating and managing Entry Types. Does not give the right to create/modify Entries.",
          "id": "roles/dataplex.entryTypeOwner",
          "is_beta": false,
          "permissions": [
            "datacatalog.migrationConfig.get",
            "dataplex.entryTypes.*",
            "dataplex.operations.get",
            "dataplex.projects.search",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Dataplex Entry Type Owner"
        },
        {
          "description": "Grants access to use Entry Types to create/modify Entries of those types.",
          "id": "roles/dataplex.entryTypeUser",
          "is_beta": false,
          "permissions": [
            "datacatalog.migrationConfig.get",
            "dataplex.entryTypes.get",
            "dataplex.entryTypes.list",
            "dataplex.entryTypes.use",
            "dataplex.projects.search",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Dataplex Entry Type User"
        },
        {
          "description": "Grants access to creating and managing Metadata Jobs. Does not give the right to create/modify Entry Groups.",
          "id": "roles/dataplex.metadataJobOwner",
          "is_beta": false,
          "permissions": [
            "dataplex.metadataJobs.*",
            "dataplex.operations.get",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Dataplex Metadata Job Owner"
        },
        {
          "description": "Read access to Metadata Job resources.",
          "id": "roles/dataplex.metadataJobViewer",
          "is_beta": false,
          "permissions": [
            "dataplex.metadataJobs.get",
            "dataplex.metadataJobs.list",
            "dataplex.operations.get",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Dataplex Metadata Job Viewer"
        },
        {
          "description": "Read only access to metadata.",
          "id": "roles/dataplex.metadataReader",
          "is_beta": false,
          "permissions": [
            "dataplex.assets.get",
            "dataplex.assets.list",
            "dataplex.entities.get",
            "dataplex.entities.list",
            "dataplex.partitions.get",
            "dataplex.partitions.list",
            "dataplex.zones.get",
            "dataplex.zones.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Dataplex Metadata Reader"
        },
        {
          "description": "Write and Read access to metadata.",
          "id": "roles/dataplex.metadataWriter",
          "is_beta": false,
          "permissions": [
            "dataplex.assets.get",
            "dataplex.assets.list",
            "dataplex.entities.*",
            "dataplex.partitions.*",
            "dataplex.zones.get",
            "dataplex.zones.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Dataplex Metadata Writer"
        },
        {
          "description": "Permissions configure ResourceAccess and DataAccess Specs on Data Attributes.",
          "id": "roles/dataplex.securityAdmin",
          "is_beta": false,
          "permissions": [
            "dataplex.dataTaxonomies.configureDataAccess",
            "dataplex.dataTaxonomies.configureResourceAccess"
          ],
          "title": "Dataplex Security Administrator"
        },
        {
          "description": "Owner access to data.  Should not be used directly. This role is granted by Dataplex to managed resources like Cloud Storage buckets, BigQuery datasets etc.",
          "id": "roles/dataplex.storageDataOwner",
          "is_beta": false,
          "permissions": [
            "bigquery.datasets.get",
            "bigquery.models.create",
            "bigquery.models.delete",
            "bigquery.models.export",
            "bigquery.models.getData",
            "bigquery.models.getMetadata",
            "bigquery.models.list",
            "bigquery.models.updateData",
            "bigquery.models.updateMetadata",
            "bigquery.routines.create",
            "bigquery.routines.delete",
            "bigquery.routines.get",
            "bigquery.routines.list",
            "bigquery.routines.update",
            "bigquery.tables.create",
            "bigquery.tables.createSnapshot",
            "bigquery.tables.delete",
            "bigquery.tables.deleteSnapshot",
            "bigquery.tables.export",
            "bigquery.tables.get",
            "bigquery.tables.getData",
            "bigquery.tables.list",
            "bigquery.tables.restoreSnapshot",
            "bigquery.tables.update",
            "bigquery.tables.updateData",
            "storage.buckets.get",
            "storage.objects.create",
            "storage.objects.delete",
            "storage.objects.get",
            "storage.objects.list",
            "storage.objects.update"
          ],
          "title": "Dataplex Storage Data Owner"
        },
        {
          "description": "Read only access to data. Should not be used directly. This role is granted by Dataplex to managed resources like Cloud Storage buckets, BigQuery datasets etc.",
          "id": "roles/dataplex.storageDataReader",
          "is_beta": false,
          "permissions": [
            "bigquery.datasets.get",
            "bigquery.models.export",
            "bigquery.models.getData",
            "bigquery.models.getMetadata",
            "bigquery.models.list",
            "bigquery.routines.get",
            "bigquery.routines.list",
            "bigquery.tables.export",
            "bigquery.tables.get",
            "bigquery.tables.getData",
            "bigquery.tables.list",
            "storage.buckets.get",
            "storage.objects.get",
            "storage.objects.list"
          ],
          "title": "Dataplex Storage Data Reader"
        },
        {
          "description": "Write access to data. Should not be used directly. This role is granted by Dataplex to managed resources like Cloud Storage buckets, BigQuery datasets etc.",
          "id": "roles/dataplex.storageDataWriter",
          "is_beta": false,
          "permissions": [
            "bigquery.tables.updateData",
            "storage.objects.create",
            "storage.objects.delete",
            "storage.objects.update"
          ],
          "title": "Dataplex Storage Data Writer"
        },
        {
          "description": "Full access to DataTaxonomy, DataAttribute resources.",
          "id": "roles/dataplex.taxonomyAdmin",
          "is_beta": false,
          "permissions": [
            "dataplex.dataAttributes.*",
            "dataplex.dataTaxonomies.create",
            "dataplex.dataTaxonomies.delete",
            "dataplex.dataTaxonomies.get",
            "dataplex.dataTaxonomies.getIamPolicy",
            "dataplex.dataTaxonomies.list",
            "dataplex.dataTaxonomies.setIamPolicy",
            "dataplex.dataTaxonomies.update"
          ],
          "title": "Dataplex Taxonomy Administrator"
        },
        {
          "description": "Read access on DataTaxonomy, DataAttribute resources.",
          "id": "roles/dataplex.taxonomyViewer",
          "is_beta": false,
          "permissions": [
            "dataplex.dataAttributes.get",
            "dataplex.dataAttributes.getIamPolicy",
            "dataplex.dataAttributes.list",
            "dataplex.dataTaxonomies.get",
            "dataplex.dataTaxonomies.getIamPolicy",
            "dataplex.dataTaxonomies.list"
          ],
          "title": "Dataplex Taxonomy Viewer"
        },
        {
          "description": "Read access to Dataplex resources.",
          "id": "roles/dataplex.viewer",
          "is_beta": false,
          "permissions": [
            "cloudasset.assets.analyzeIamPolicy",
            "dataplex.assetActions.list",
            "dataplex.assets.get",
            "dataplex.assets.getIamPolicy",
            "dataplex.assets.list",
            "dataplex.content.get",
            "dataplex.content.getIamPolicy",
            "dataplex.content.list",
            "dataplex.dataAttributeBindings.get",
            "dataplex.dataAttributeBindings.getIamPolicy",
            "dataplex.dataAttributeBindings.list",
            "dataplex.dataAttributes.get",
            "dataplex.dataAttributes.getIamPolicy",
            "dataplex.dataAttributes.list",
            "dataplex.dataTaxonomies.get",
            "dataplex.dataTaxonomies.getIamPolicy",
            "dataplex.dataTaxonomies.list",
            "dataplex.datascans.get",
            "dataplex.datascans.getIamPolicy",
            "dataplex.datascans.list",
            "dataplex.environments.get",
            "dataplex.environments.getIamPolicy",
            "dataplex.environments.list",
            "dataplex.lakeActions.list",
            "dataplex.lakes.get",
            "dataplex.lakes.getIamPolicy",
            "dataplex.lakes.list",
            "dataplex.operations.get",
            "dataplex.operations.list",
            "dataplex.tasks.get",
            "dataplex.tasks.getIamPolicy",
            "dataplex.tasks.list",
            "dataplex.zoneActions.list",
            "dataplex.zones.get",
            "dataplex.zones.getIamPolicy",
            "dataplex.zones.list"
          ],
          "title": "Dataplex Viewer"
        },
        {
          "description": "Provides permissions to register the debug target, read active breakpoints, and report breakpoint results.",
          "id": "roles/clouddebugger.agent",
          "is_beta": true,
          "permissions": [
            "clouddebugger.breakpoints.list",
            "clouddebugger.breakpoints.listActive",
            "clouddebugger.breakpoints.update",
            "clouddebugger.debuggees.create"
          ],
          "title": "Cloud Debugger Agent"
        },
        {
          "description": "Provides permissions to create, view, list, and delete breakpoints (snapshots & logpoints) as well as list debug targets (debuggees).",
          "id": "roles/clouddebugger.user",
          "is_beta": true,
          "permissions": [
            "clouddebugger.breakpoints.create",
            "clouddebugger.breakpoints.delete",
            "clouddebugger.breakpoints.get",
            "clouddebugger.breakpoints.list",
            "clouddebugger.debuggees.list"
          ],
          "title": "Cloud Debugger User"
        },
        {
          "description": "Full control of Cloud Deploy resources.",
          "id": "roles/clouddeploy.admin",
          "is_beta": false,
          "permissions": [
            "clouddeploy.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Cloud Deploy Admin"
        },
        {
          "description": "Permission to approve or reject rollouts.",
          "id": "roles/clouddeploy.approver",
          "is_beta": false,
          "permissions": [
            "clouddeploy.config.get",
            "clouddeploy.jobRuns.get",
            "clouddeploy.jobRuns.list",
            "clouddeploy.locations.*",
            "clouddeploy.operations.*",
            "clouddeploy.rollouts.approve",
            "clouddeploy.rollouts.get",
            "clouddeploy.rollouts.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Cloud Deploy Approver"
        },
        {
          "description": "Permission to manage CustomTargetType resources",
          "id": "roles/clouddeploy.customTargetTypeAdmin",
          "is_beta": false,
          "permissions": [
            "clouddeploy.config.get",
            "clouddeploy.customTargetTypes.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Cloud Deploy Custom Target Type Admin"
        },
        {
          "description": "Permission to manage deployment configuration without permission to access operational resources, such as targets.",
          "id": "roles/clouddeploy.developer",
          "is_beta": false,
          "permissions": [
            "clouddeploy.automationRuns.get",
            "clouddeploy.automationRuns.list",
            "clouddeploy.automations.get",
            "clouddeploy.automations.list",
            "clouddeploy.config.get",
            "clouddeploy.deliveryPipelines.create",
            "clouddeploy.deliveryPipelines.createTagBinding",
            "clouddeploy.deliveryPipelines.delete",
            "clouddeploy.deliveryPipelines.deleteTagBinding",
            "clouddeploy.deliveryPipelines.get",
            "clouddeploy.deliveryPipelines.getIamPolicy",
            "clouddeploy.deliveryPipelines.list",
            "clouddeploy.deliveryPipelines.listEffectiveTags",
            "clouddeploy.deliveryPipelines.listTagBindings",
            "clouddeploy.deliveryPipelines.update",
            "clouddeploy.deployPolicies.get",
            "clouddeploy.deployPolicies.list",
            "clouddeploy.jobRuns.get",
            "clouddeploy.jobRuns.list",
            "clouddeploy.locations.*",
            "clouddeploy.operations.*",
            "clouddeploy.releases.*",
            "clouddeploy.rollouts.get",
            "clouddeploy.rollouts.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Cloud Deploy Developer"
        },
        {
          "description": "Permission to execute Cloud Deploy work without permission to deliver to a target.",
          "id": "roles/clouddeploy.jobRunner",
          "is_beta": false,
          "permissions": [
            "clouddeploy.config.get",
            "logging.logEntries.create",
            "storage.objects.create",
            "storage.objects.get",
            "storage.objects.list"
          ],
          "title": "Cloud Deploy Runner"
        },
        {
          "description": "Permission to manage deployment configuration.",
          "id": "roles/clouddeploy.operator",
          "is_beta": false,
          "permissions": [
            "clouddeploy.automationRuns.*",
            "clouddeploy.automations.*",
            "clouddeploy.config.get",
            "clouddeploy.customTargetTypes.get",
            "clouddeploy.customTargetTypes.getIamPolicy",
            "clouddeploy.customTargetTypes.list",
            "clouddeploy.deliveryPipelines.create",
            "clouddeploy.deliveryPipelines.createTagBinding",
            "clouddeploy.deliveryPipelines.delete",
            "clouddeploy.deliveryPipelines.deleteTagBinding",
            "clouddeploy.deliveryPipelines.get",
            "clouddeploy.deliveryPipelines.getIamPolicy",
            "clouddeploy.deliveryPipelines.list",
            "clouddeploy.deliveryPipelines.listEffectiveTags",
            "clouddeploy.deliveryPipelines.listTagBindings",
            "clouddeploy.deliveryPipelines.update",
            "clouddeploy.deployPolicies.get",
            "clouddeploy.deployPolicies.getIamPolicy",
            "clouddeploy.deployPolicies.list",
            "clouddeploy.jobRuns.*",
            "clouddeploy.locations.*",
            "clouddeploy.operations.*",
            "clouddeploy.releases.*",
            "clouddeploy.rollouts.advance",
            "clouddeploy.rollouts.cancel",
            "clouddeploy.rollouts.create",
            "clouddeploy.rollouts.get",
            "clouddeploy.rollouts.ignoreJob",
            "clouddeploy.rollouts.list",
            "clouddeploy.rollouts.retryJob",
            "clouddeploy.rollouts.rollback",
            "clouddeploy.targets.create",
            "clouddeploy.targets.createTagBinding",
            "clouddeploy.targets.delete",
            "clouddeploy.targets.deleteTagBinding",
            "clouddeploy.targets.get",
            "clouddeploy.targets.getIamPolicy",
            "clouddeploy.targets.list",
            "clouddeploy.targets.listEffectiveTags",
            "clouddeploy.targets.listTagBindings",
            "clouddeploy.targets.update",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Cloud Deploy Operator"
        },
        {
          "description": "Permission to manage Deploy Policies.",
          "id": "roles/clouddeploy.policyAdmin",
          "is_beta": true,
          "permissions": [
            "clouddeploy.deployPolicies.*",
            "clouddeploy.locations.*",
            "clouddeploy.operations.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Cloud Deploy Policy Admin"
        },
        {
          "description": "Permission to override Deploy Policies.",
          "id": "roles/clouddeploy.policyOverrider",
          "is_beta": true,
          "permissions": [
            "clouddeploy.deployPolicies.get",
            "clouddeploy.deployPolicies.list",
            "clouddeploy.deployPolicies.override",
            "clouddeploy.locations.*",
            "clouddeploy.operations.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Cloud Deploy Policy Overrider"
        },
        {
          "description": "Permission to create Cloud Deploy releases and rollouts.",
          "id": "roles/clouddeploy.releaser",
          "is_beta": false,
          "permissions": [
            "clouddeploy.config.get",
            "clouddeploy.customTargetTypes.get",
            "clouddeploy.deliveryPipelines.get",
            "clouddeploy.jobRuns.get",
            "clouddeploy.jobRuns.list",
            "clouddeploy.locations.*",
            "clouddeploy.operations.*",
            "clouddeploy.releases.create",
            "clouddeploy.releases.get",
            "clouddeploy.releases.list",
            "clouddeploy.rollouts.advance",
            "clouddeploy.rollouts.cancel",
            "clouddeploy.rollouts.create",
            "clouddeploy.rollouts.get",
            "clouddeploy.rollouts.list",
            "clouddeploy.rollouts.rollback",
            "clouddeploy.targets.get",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Cloud Deploy Releaser"
        },
        {
          "description": "Can view Cloud Deploy resources.",
          "id": "roles/clouddeploy.viewer",
          "is_beta": false,
          "permissions": [
            "clouddeploy.automationRuns.get",
            "clouddeploy.automationRuns.list",
            "clouddeploy.automations.get",
            "clouddeploy.automations.list",
            "clouddeploy.config.get",
            "clouddeploy.customTargetTypes.get",
            "clouddeploy.customTargetTypes.getIamPolicy",
            "clouddeploy.customTargetTypes.list",
            "clouddeploy.deliveryPipelines.get",
            "clouddeploy.deliveryPipelines.getIamPolicy",
            "clouddeploy.deliveryPipelines.list",
            "clouddeploy.deliveryPipelines.listEffectiveTags",
            "clouddeploy.deliveryPipelines.listTagBindings",
            "clouddeploy.deployPolicies.get",
            "clouddeploy.deployPolicies.getIamPolicy",
            "clouddeploy.deployPolicies.list",
            "clouddeploy.jobRuns.get",
            "clouddeploy.jobRuns.list",
            "clouddeploy.locations.*",
            "clouddeploy.operations.get",
            "clouddeploy.operations.list",
            "clouddeploy.releases.get",
            "clouddeploy.releases.list",
            "clouddeploy.rollouts.get",
            "clouddeploy.rollouts.list",
            "clouddeploy.targets.get",
            "clouddeploy.targets.getIamPolicy",
            "clouddeploy.targets.list",
            "clouddeploy.targets.listEffectiveTags",
            "clouddeploy.targets.listTagBindings",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Cloud Deploy Viewer"
        },
        {
          "description": "Administer DLP including jobs and templates.",
          "id": "roles/dlp.admin",
          "is_beta": false,
          "permissions": [
            "dlp.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "serviceusage.services.use"
          ],
          "title": "DLP Administrator"
        },
        {
          "description": "Edit DLP analyze risk templates.",
          "id": "roles/dlp.analyzeRiskTemplatesEditor",
          "is_beta": false,
          "permissions": [
            "dlp.analyzeRiskTemplates.*"
          ],
          "title": "DLP Analyze Risk Templates Editor"
        },
        {
          "description": "Read DLP analyze risk templates.",
          "id": "roles/dlp.analyzeRiskTemplatesReader",
          "is_beta": false,
          "permissions": [
            "dlp.analyzeRiskTemplates.get",
            "dlp.analyzeRiskTemplates.list"
          ],
          "title": "DLP Analyze Risk Templates Reader"
        },
        {
          "description": "Read DLP column profiles.",
          "id": "roles/dlp.columnDataProfilesReader",
          "is_beta": false,
          "permissions": [
            "dlp.columnDataProfiles.*"
          ],
          "title": "DLP Column Data Profiles Reader"
        },
        {
          "description": "Manage DLP Connections.",
          "id": "roles/dlp.connectionsAdmin",
          "is_beta": false,
          "permissions": [
            "dlp.connections.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "DLP Connections Admin"
        },
        {
          "description": "View DLP Connections.",
          "id": "roles/dlp.connectionsReader",
          "is_beta": false,
          "permissions": [
            "dlp.connections.get",
            "dlp.connections.list",
            "dlp.connections.search"
          ],
          "title": "DLP Connections Viewer"
        },
        {
          "description": "Manage DLP profiles.",
          "id": "roles/dlp.dataProfilesAdmin",
          "is_beta": false,
          "permissions": [
            "dlp.charts.get",
            "dlp.columnDataProfiles.*",
            "dlp.fileStoreProfiles.*",
            "dlp.projectDataProfiles.*",
            "dlp.tableDataProfiles.*"
          ],
          "title": "DLP Data Profiles Admin"
        },
        {
          "description": "Read DLP profiles.",
          "id": "roles/dlp.dataProfilesReader",
          "is_beta": false,
          "permissions": [
            "dlp.charts.get",
            "dlp.columnDataProfiles.*",
            "dlp.fileStoreProfiles.get",
            "dlp.fileStoreProfiles.list",
            "dlp.projectDataProfiles.*",
            "dlp.tableDataProfiles.get",
            "dlp.tableDataProfiles.list"
          ],
          "title": "DLP Data Profiles Reader"
        },
        {
          "description": "Edit DLP de-identify templates.",
          "id": "roles/dlp.deidentifyTemplatesEditor",
          "is_beta": false,
          "permissions": [
            "dlp.deidentifyTemplates.*"
          ],
          "title": "DLP De-identify Templates Editor"
        },
        {
          "description": "Read DLP de-identify templates.",
          "id": "roles/dlp.deidentifyTemplatesReader",
          "is_beta": false,
          "permissions": [
            "dlp.deidentifyTemplates.get",
            "dlp.deidentifyTemplates.list"
          ],
          "title": "DLP De-identify Templates Reader"
        },
        {
          "description": "Manage DLP Cost Estimates.",
          "id": "roles/dlp.estimatesAdmin",
          "is_beta": false,
          "permissions": [
            "dlp.estimates.*"
          ],
          "title": "DLP Cost Estimation"
        },
        {
          "description": "Manage DLP file store profiles.",
          "id": "roles/dlp.fileStoreProfilesAdmin",
          "is_beta": false,
          "permissions": [
            "dlp.fileStoreProfiles.*"
          ],
          "title": "DLP File Store Data Profiles Admin"
        },
        {
          "description": "Read DLP file store profiles.",
          "id": "roles/dlp.fileStoreProfilesReader",
          "is_beta": false,
          "permissions": [
            "dlp.charts.get",
            "dlp.fileStoreProfiles.get",
            "dlp.fileStoreProfiles.list"
          ],
          "title": "DLP File Store Data Profiles Reader"
        },
        {
          "description": "Read DLP stored findings.",
          "id": "roles/dlp.inspectFindingsReader",
          "is_beta": false,
          "permissions": [
            "dlp.inspectFindings.list"
          ],
          "title": "DLP Inspect Findings Reader"
        },
        {
          "description": "Edit DLP inspect templates.",
          "id": "roles/dlp.inspectTemplatesEditor",
          "is_beta": false,
          "permissions": [
            "dlp.inspectTemplates.*"
          ],
          "title": "DLP Inspect Templates Editor"
        },
        {
          "description": "Read DLP inspect templates.",
          "id": "roles/dlp.inspectTemplatesReader",
          "is_beta": false,
          "permissions": [
            "dlp.inspectTemplates.get",
            "dlp.inspectTemplates.list"
          ],
          "title": "DLP Inspect Templates Reader"
        },
        {
          "description": "Edit job triggers configurations.",
          "id": "roles/dlp.jobTriggersEditor",
          "is_beta": false,
          "permissions": [
            "dlp.jobTriggers.*"
          ],
          "title": "DLP Job Triggers Editor"
        },
        {
          "description": "Read job triggers.",
          "id": "roles/dlp.jobTriggersReader",
          "is_beta": false,
          "permissions": [
            "dlp.jobTriggers.get",
            "dlp.jobTriggers.list"
          ],
          "title": "DLP Job Triggers Reader"
        },
        {
          "description": "Edit and create jobs",
          "id": "roles/dlp.jobsEditor",
          "is_beta": false,
          "permissions": [
            "dlp.jobs.*",
            "dlp.kms.encrypt"
          ],
          "title": "DLP Jobs Editor"
        },
        {
          "description": "Read jobs",
          "id": "roles/dlp.jobsReader",
          "is_beta": false,
          "permissions": [
            "dlp.jobs.get",
            "dlp.jobs.list"
          ],
          "title": "DLP Jobs Reader"
        },
        {
          "description": "Permissions needed by the DLP service account to generate data profiles within an organization or folder.",
          "id": "roles/dlp.orgdriver",
          "is_beta": false,
          "permissions": [
            "aiplatform.agentExamples.get",
            "aiplatform.agentExamples.list",
            "aiplatform.agents.get",
            "aiplatform.agents.list",
            "aiplatform.annotationSpecs.get",
            "aiplatform.annotationSpecs.list",
            "aiplatform.annotations.get",
            "aiplatform.annotations.list",
            "aiplatform.apps.get",
            "aiplatform.apps.list",
            "aiplatform.artifacts.get",
            "aiplatform.artifacts.list",
            "aiplatform.batchPredictionJobs.get",
            "aiplatform.batchPredictionJobs.list",
            "aiplatform.cacheConfigs.get",
            "aiplatform.cachedContents.get",
            "aiplatform.cachedContents.list",
            "aiplatform.consents.get",
            "aiplatform.contexts.get",
            "aiplatform.contexts.list",
            "aiplatform.contexts.queryContextLineageSubgraph",
            "aiplatform.customJobs.get",
            "aiplatform.customJobs.list",
            "aiplatform.dataItems.get",
            "aiplatform.dataItems.list",
            "aiplatform.dataLabelingJobs.get",
            "aiplatform.dataLabelingJobs.list",
            "aiplatform.datasetVersions.get",
            "aiplatform.datasetVersions.list",
            "aiplatform.datasets.get",
            "aiplatform.datasets.list",
            "aiplatform.deploymentResourcePools.get",
            "aiplatform.deploymentResourcePools.list",
            "aiplatform.deploymentResourcePools.queryDeployedModels",
            "aiplatform.edgeDeploymentJobs.get",
            "aiplatform.edgeDeploymentJobs.list",
            "aiplatform.edgeDeviceDebugInfo.get",
            "aiplatform.edgeDevices.get",
            "aiplatform.edgeDevices.list",
            "aiplatform.endpoints.get",
            "aiplatform.endpoints.list",
            "aiplatform.entityTypes.get",
            "aiplatform.entityTypes.list",
            "aiplatform.executions.get",
            "aiplatform.executions.list",
            "aiplatform.executions.queryExecutionInputsAndOutputs",
            "aiplatform.extensions.get",
            "aiplatform.extensions.list",
            "aiplatform.featureGroups.get",
            "aiplatform.featureGroups.list",
            "aiplatform.featureOnlineStores.get",
            "aiplatform.featureOnlineStores.list",
            "aiplatform.featureViewSyncs.*",
            "aiplatform.featureViews.fetchFeatureValues",
            "aiplatform.featureViews.get",
            "aiplatform.featureViews.list",
            "aiplatform.featureViews.searchNearestEntities",
            "aiplatform.features.get",
            "aiplatform.features.list",
            "aiplatform.featurestores.get",
            "aiplatform.featurestores.list",
            "aiplatform.humanInTheLoops.get",
            "aiplatform.humanInTheLoops.list",
            "aiplatform.hyperparameterTuningJobs.get",
            "aiplatform.hyperparameterTuningJobs.list",
            "aiplatform.indexEndpoints.get",
            "aiplatform.indexEndpoints.list",
            "aiplatform.indexEndpoints.queryVectors",
            "aiplatform.indexes.get",
            "aiplatform.indexes.list",
            "aiplatform.locations.get",
            "aiplatform.locations.list",
            "aiplatform.metadataSchemas.get",
            "aiplatform.metadataSchemas.list",
            "aiplatform.metadataStores.get",
            "aiplatform.metadataStores.list",
            "aiplatform.modelDeploymentMonitoringJobs.get",
            "aiplatform.modelDeploymentMonitoringJobs.list",
            "aiplatform.modelDeploymentMonitoringJobs.searchStatsAnomalies",
            "aiplatform.modelEvaluationSlices.get",
            "aiplatform.modelEvaluationSlices.list",
            "aiplatform.modelEvaluations.get",
            "aiplatform.modelEvaluations.list",
            "aiplatform.modelMonitoringJobs.get",
            "aiplatform.modelMonitoringJobs.list",
            "aiplatform.modelMonitors.get",
            "aiplatform.modelMonitors.list",
            "aiplatform.modelMonitors.searchModelMonitoringAlerts",
            "aiplatform.modelMonitors.searchModelMonitoringStats",
            "aiplatform.models.get",
            "aiplatform.models.list",
            "aiplatform.nasJobs.get",
            "aiplatform.nasJobs.list",
            "aiplatform.nasTrialDetails.*",
            "aiplatform.notebookExecutionJobs.get",
            "aiplatform.notebookExecutionJobs.list",
            "aiplatform.notebookRuntimeTemplates.get",
            "aiplatform.notebookRuntimeTemplates.list",
            "aiplatform.notebookRuntimes.get",
            "aiplatform.notebookRuntimes.list",
            "aiplatform.operations.list",
            "aiplatform.persistentResources.get",
            "aiplatform.persistentResources.list",
            "aiplatform.pipelineJobs.get",
            "aiplatform.pipelineJobs.list",
            "aiplatform.provisionedThroughputRevisions.*",
            "aiplatform.provisionedThroughputs.get",
            "aiplatform.provisionedThroughputs.list",
            "aiplatform.ragCorpora.get",
            "aiplatform.ragCorpora.list",
            "aiplatform.ragCorpora.query",
            "aiplatform.ragFiles.get",
            "aiplatform.ragFiles.list",
            "aiplatform.reasoningEngines.get",
            "aiplatform.reasoningEngines.list",
            "aiplatform.reasoningEngines.query",
            "aiplatform.schedules.get",
            "aiplatform.schedules.list",
            "aiplatform.sessions.get",
            "aiplatform.sessions.list",
            "aiplatform.specialistPools.get",
            "aiplatform.specialistPools.list",
            "aiplatform.specialistPools.update",
            "aiplatform.studies.get",
            "aiplatform.studies.list",
            "aiplatform.tensorboardExperiments.get",
            "aiplatform.tensorboardExperiments.list",
            "aiplatform.tensorboardRuns.get",
            "aiplatform.tensorboardRuns.list",
            "aiplatform.tensorboardTimeSeries.batchRead",
            "aiplatform.tensorboardTimeSeries.get",
            "aiplatform.tensorboardTimeSeries.list",
            "aiplatform.tensorboardTimeSeries.read",
            "aiplatform.tensorboards.get",
            "aiplatform.tensorboards.list",
            "aiplatform.trainingPipelines.get",
            "aiplatform.trainingPipelines.list",
            "aiplatform.trials.get",
            "aiplatform.trials.list",
            "aiplatform.tuningJobs.get",
            "aiplatform.tuningJobs.list",
            "alloydb.backups.createTagBinding",
            "alloydb.backups.deleteTagBinding",
            "alloydb.backups.get",
            "alloydb.backups.list",
            "alloydb.backups.listEffectiveTags",
            "alloydb.backups.listTagBindings",
            "alloydb.clusters.createTagBinding",
            "alloydb.clusters.deleteTagBinding",
            "alloydb.clusters.export",
            "alloydb.clusters.generateClientCertificate",
            "alloydb.clusters.get",
            "alloydb.clusters.list",
            "alloydb.clusters.listEffectiveTags",
            "alloydb.clusters.listTagBindings",
            "alloydb.databases.list",
            "alloydb.instances.connect",
            "alloydb.instances.executeSql",
            "alloydb.instances.get",
            "alloydb.instances.list",
            "alloydb.locations.*",
            "alloydb.operations.get",
            "alloydb.operations.list",
            "alloydb.supportedDatabaseFlags.*",
            "alloydb.users.get",
            "alloydb.users.list",
            "alloydb.users.login",
            "apigateway.apis.createTagBinding",
            "apigateway.apis.deleteTagBinding",
            "apigateway.apis.listEffectiveTags",
            "apigateway.apis.listTagBindings",
            "apigateway.gateways.createTagBinding",
            "apigateway.gateways.deleteTagBinding",
            "apigateway.gateways.listEffectiveTags",
            "apigateway.gateways.listTagBindings",
            "apihub.apis.createTagBinding",
            "apihub.apis.deleteTagBinding",
            "apihub.apis.listEffectiveTags",
            "apihub.apis.listTagBindings",
            "apihub.deployments.createTagBinding",
            "apihub.deployments.deleteTagBinding",
            "apihub.deployments.listEffectiveTags",
            "apihub.deployments.listTagBindings",
            "artifactregistry.repositories.createTagBinding",
            "artifactregistry.repositories.deleteTagBinding",
            "artifactregistry.repositories.listEffectiveTags",
            "artifactregistry.repositories.listTagBindings",
            "bigquery.bireservations.get",
            "bigquery.capacityCommitments.get",
            "bigquery.capacityCommitments.list",
            "bigquery.config.get",
            "bigquery.connections.updateTag",
            "bigquery.datasets.create",
            "bigquery.datasets.createTagBinding",
            "bigquery.datasets.deleteTagBinding",
            "bigquery.datasets.get",
            "bigquery.datasets.getIamPolicy",
            "bigquery.datasets.listEffectiveTags",
            "bigquery.datasets.listTagBindings",
            "bigquery.datasets.updateTag",
            "bigquery.jobs.create",
            "bigquery.jobs.get",
            "bigquery.jobs.list",
            "bigquery.jobs.listAll",
            "bigquery.jobs.listExecutionMetadata",
            "bigquery.models.*",
            "bigquery.readsessions.*",
            "bigquery.reservationAssignments.list",
            "bigquery.reservationAssignments.search",
            "bigquery.reservations.get",
            "bigquery.reservations.list",
            "bigquery.reservations.listFailoverDatasets",
            "bigquery.reservations.use",
            "bigquery.routines.*",
            "bigquery.savedqueries.get",
            "bigquery.savedqueries.list",
            "bigquery.tables.create",
            "bigquery.tables.createIndex",
            "bigquery.tables.createSnapshot",
            "bigquery.tables.createTagBinding",
            "bigquery.tables.delete",
            "bigquery.tables.deleteIndex",
            "bigquery.tables.deleteTagBinding",
            "bigquery.tables.export",
            "bigquery.tables.get",
            "bigquery.tables.getData",
            "bigquery.tables.getIamPolicy",
            "bigquery.tables.list",
            "bigquery.tables.listEffectiveTags",
            "bigquery.tables.listTagBindings",
            "bigquery.tables.replicateData",
            "bigquery.tables.restoreSnapshot",
            "bigquery.tables.update",
            "bigquery.tables.updateData",
            "bigquery.tables.updateIndex",
            "bigquery.tables.updateTag",
            "bigquery.transfers.get",
            "bigquerymigration.translation.translate",
            "bigtable.authorizedViews.createTagBinding",
            "bigtable.authorizedViews.deleteTagBinding",
            "bigtable.authorizedViews.listEffectiveTags",
            "bigtable.authorizedViews.listTagBindings",
            "bigtable.instances.createTagBinding",
            "bigtable.instances.deleteTagBinding",
            "bigtable.instances.listEffectiveTags",
            "bigtable.instances.listTagBindings",
            "certificatemanager.certissuanceconfigs.createTagBinding",
            "certificatemanager.certissuanceconfigs.deleteTagBinding",
            "certificatemanager.certissuanceconfigs.listEffectiveTags",
            "certificatemanager.certissuanceconfigs.listTagBindings",
            "certificatemanager.certmapentries.createTagBinding",
            "certificatemanager.certmapentries.deleteTagBinding",
            "certificatemanager.certmapentries.listEffectiveTags",
            "certificatemanager.certmapentries.listTagBindings",
            "certificatemanager.certmaps.createTagBinding",
            "certificatemanager.certmaps.deleteTagBinding",
            "certificatemanager.certmaps.listEffectiveTags",
            "certificatemanager.certmaps.listTagBindings",
            "certificatemanager.certs.createTagBinding",
            "certificatemanager.certs.deleteTagBinding",
            "certificatemanager.certs.listEffectiveTags",
            "certificatemanager.certs.listTagBindings",
            "certificatemanager.dnsauthorizations.createTagBinding",
            "certificatemanager.dnsauthorizations.deleteTagBinding",
            "certificatemanager.dnsauthorizations.listEffectiveTags",
            "certificatemanager.dnsauthorizations.listTagBindings",
            "certificatemanager.trustconfigs.createTagBinding",
            "certificatemanager.trustconfigs.deleteTagBinding",
            "certificatemanager.trustconfigs.listEffectiveTags",
            "certificatemanager.trustconfigs.listTagBindings",
            "cloudaicompanion.entitlements.get",
            "cloudasset.assets.analyzeIamPolicy",
            "cloudasset.assets.analyzeMove",
            "cloudasset.assets.analyzeOrgPolicy",
            "cloudasset.assets.exportAccessLevel",
            "cloudasset.assets.exportAccessPolicy",
            "cloudasset.assets.exportAiplatformBatchPredictionJobs",
            "cloudasset.assets.exportAiplatformCustomJobs",
            "cloudasset.assets.exportAiplatformDataLabelingJobs",
            "cloudasset.assets.exportAiplatformDatasets",
            "cloudasset.assets.exportAiplatformEndpoints",
            "cloudasset.assets.exportAiplatformHyperparameterTuningJobs",
            "cloudasset.assets.exportAiplatformMetadataStores",
            "cloudasset.assets.exportAiplatformModelDeploymentMonitoringJobs",
            "cloudasset.assets.exportAiplatformModels",
            "cloudasset.assets.exportAiplatformPipelineJobs",
            "cloudasset.assets.exportAiplatformSpecialistPools",
            "cloudasset.assets.exportAiplatformTrainingPipelines",
            "cloudasset.assets.exportAllAccessPolicy",
            "cloudasset.assets.exportAnthosConnectedCluster",
            "cloudasset.assets.exportAnthosedgeCluster",
            "cloudasset.assets.exportApigatewayApi",
            "cloudasset.assets.exportApigatewayApiConfig",
            "cloudasset.assets.exportApigatewayGateway",
            "cloudasset.assets.exportApikeysKeys",
            "cloudasset.assets.exportAppengineApplications",
            "cloudasset.assets.exportAppengineServices",
            "cloudasset.assets.exportAppengineVersions",
            "cloudasset.assets.exportArtifactregistryDockerImages",
            "cloudasset.assets.exportArtifactregistryRepositories",
            "cloudasset.assets.exportAssuredWorkloadsWorkloads",
            "cloudasset.assets.exportBeyondCorpApiGateways",
            "cloudasset.assets.exportBeyondCorpAppConnections",
            "cloudasset.assets.exportBeyondCorpAppConnectors",
            "cloudasset.assets.exportBeyondCorpAppGateways",
            "cloudasset.assets.exportBeyondCorpClientConnectorServices",
            "cloudasset.assets.exportBeyondCorpClientGateways",
            "cloudasset.assets.exportBigqueryDatasets",
            "cloudasset.assets.exportBigqueryModels",
            "cloudasset.assets.exportBigqueryTables",
            "cloudasset.assets.exportBigtableAppProfile",
            "cloudasset.assets.exportBigtableBackup",
            "cloudasset.assets.exportBigtableCluster",
            "cloudasset.assets.exportBigtableInstance",
            "cloudasset.assets.exportBigtableTable",
            "cloudasset.assets.exportCloudAssetFeeds",
            "cloudasset.assets.exportCloudDeployDeliveryPipelines",
            "cloudasset.assets.exportCloudDeployReleases",
            "cloudasset.assets.exportCloudDeployRollouts",
            "cloudasset.assets.exportCloudDeployTargets",
            "cloudasset.assets.exportCloudDocumentAIEvaluation",
            "cloudasset.assets.exportCloudDocumentAIHumanReviewConfig",
            "cloudasset.assets.exportCloudDocumentAILabelerPool",
            "cloudasset.assets.exportCloudDocumentAIProcessor",
            "cloudasset.assets.exportCloudDocumentAIProcessorVersion",
            "cloudasset.assets.exportCloudbillingBillingAccounts",
            "cloudasset.assets.exportCloudbillingProjectBillingInfos",
            "cloudasset.assets.exportCloudfunctionsFunctions",
            "cloudasset.assets.exportCloudfunctionsGen2Functions",
            "cloudasset.assets.exportCloudkmsCryptoKeyVersions",
            "cloudasset.assets.exportCloudkmsCryptoKeys",
            "cloudasset.assets.exportCloudkmsEkmConnections",
            "cloudasset.assets.exportCloudkmsImportJobs",
            "cloudasset.assets.exportCloudkmsKeyRings",
            "cloudasset.assets.exportCloudmemcacheInstances",
            "cloudasset.assets.exportCloudresourcemanagerFolders",
            "cloudasset.assets.exportCloudresourcemanagerOrganizations",
            "cloudasset.assets.exportCloudresourcemanagerProjects",
            "cloudasset.assets.exportCloudresourcemanagerTagBindings",
            "cloudasset.assets.exportCloudresourcemanagerTagKeys",
            "cloudasset.assets.exportCloudresourcemanagerTagValues",
            "cloudasset.assets.exportComposerEnvironments",
            "cloudasset.assets.exportComputeAddress",
            "cloudasset.assets.exportComputeAutoscalers",
            "cloudasset.assets.exportComputeBackendBuckets",
            "cloudasset.assets.exportComputeBackendServices",
            "cloudasset.assets.exportComputeCommitments",
            "cloudasset.assets.exportComputeDisks",
            "cloudasset.assets.exportComputeExternalVpnGateways",
            "cloudasset.assets.exportComputeFirewallPolicies",
            "cloudasset.assets.exportComputeFirewalls",
            "cloudasset.assets.exportComputeForwardingRules",
            "cloudasset.assets.exportComputeGlobalAddress",
            "cloudasset.assets.exportComputeGlobalForwardingRules",
            "cloudasset.assets.exportComputeHealthChecks",
            "cloudasset.assets.exportComputeHttpHealthChecks",
            "cloudasset.assets.exportComputeHttpsHealthChecks",
            "cloudasset.assets.exportComputeImages",
            "cloudasset.assets.exportComputeInstanceGroupManagers",
            "cloudasset.assets.exportComputeInstanceGroups",
            "cloudasset.assets.exportComputeInstanceTemplates",
            "cloudasset.assets.exportComputeInstances",
            "cloudasset.assets.exportComputeInterconnect",
            "cloudasset.assets.exportComputeInterconnectAttachment",
            "cloudasset.assets.exportComputeLicenses",
            "cloudasset.assets.exportComputeNetworkEndpointGroups",
            "cloudasset.assets.exportComputeNetworks",
            "cloudasset.assets.exportComputeNodeGroups",
            "cloudasset.assets.exportComputeNodeTemplates",
            "cloudasset.assets.exportComputePacketMirrorings",
            "cloudasset.assets.exportComputeProjects",
            "cloudasset.assets.exportComputeRegionAutoscaler",
            "cloudasset.assets.exportComputeRegionBackendServices",
            "cloudasset.assets.exportComputeRegionDisk",
            "cloudasset.assets.exportComputeRegionInstanceGroup",
            "cloudasset.assets.exportComputeRegionInstanceGroupManager",
            "cloudasset.assets.exportComputeReservations",
            "cloudasset.assets.exportComputeResourcePolicies",
            "cloudasset.assets.exportComputeRouters",
            "cloudasset.assets.exportComputeRoutes",
            "cloudasset.assets.exportComputeSecurityPolicy",
            "cloudasset.assets.exportComputeServiceAttachments",
            "cloudasset.assets.exportComputeSnapshots",
            "cloudasset.assets.exportComputeSslCertificates",
            "cloudasset.assets.exportComputeSslPolicies",
            "cloudasset.assets.exportComputeSubnetworks",
            "cloudasset.assets.exportComputeTargetHttpProxies",
            "cloudasset.assets.exportComputeTargetHttpsProxies",
            "cloudasset.assets.exportComputeTargetInstances",
            "cloudasset.assets.exportComputeTargetPools",
            "cloudasset.assets.exportComputeTargetSslProxies",
            "cloudasset.assets.exportComputeTargetTcpProxies",
            "cloudasset.assets.exportComputeTargetVpnGateways",
            "cloudasset.assets.exportComputeUrlMaps",
            "cloudasset.assets.exportComputeVpnGateways",
            "cloudasset.assets.exportComputeVpnTunnels",
            "cloudasset.assets.exportConnectorsConnections",
            "cloudasset.assets.exportConnectorsConnectorVersions",
            "cloudasset.assets.exportConnectorsConnectors",
            "cloudasset.assets.exportConnectorsProviders",
            "cloudasset.assets.exportConnectorsRuntimeConfigs",
            "cloudasset.assets.exportContainerAppsDeployment",
            "cloudasset.assets.exportContainerAppsReplicaSets",
            "cloudasset.assets.exportContainerBatchJobs",
            "cloudasset.assets.exportContainerClusterrole",
            "cloudasset.assets.exportContainerClusterrolebinding",
            "cloudasset.assets.exportContainerClusters",
            "cloudasset.assets.exportContainerExtensionsIngresses",
            "cloudasset.assets.exportContainerJobs",
            "cloudasset.assets.exportContainerNamespace",
            "cloudasset.assets.exportContainerNetworkingIngresses",
            "cloudasset.assets.exportContainerNetworkingNetworkPolicies",
            "cloudasset.assets.exportContainerNode",
            "cloudasset.assets.exportContainerNodepool",
            "cloudasset.assets.exportContainerPod",
            "cloudasset.assets.exportContainerReplicaSets",
            "cloudasset.assets.exportContainerRole",
            "cloudasset.assets.exportContainerRolebinding",
            "cloudasset.assets.exportContainerServices",
            "cloudasset.assets.exportContainerregistryImage",
            "cloudasset.assets.exportDataMigrationConnectionProfiles",
            "cloudasset.assets.exportDataMigrationMigrationJobs",
            "cloudasset.assets.exportDataflowJobs",
            "cloudasset.assets.exportDatafusionInstance",
            "cloudasset.assets.exportDataplexAssets",
            "cloudasset.assets.exportDataplexLakes",
            "cloudasset.assets.exportDataplexTasks",
            "cloudasset.assets.exportDataplexZones",
            "cloudasset.assets.exportDataprocAutoscalingPolicies",
            "cloudasset.assets.exportDataprocBatches",
            "cloudasset.assets.exportDataprocClusters",
            "cloudasset.assets.exportDataprocJobs",
            "cloudasset.assets.exportDataprocSessions",
            "cloudasset.assets.exportDataprocWorkflowTemplates",
            "cloudasset.assets.exportDatastreamConnectionProfile",
            "cloudasset.assets.exportDatastreamPrivateConnection",
            "cloudasset.assets.exportDatastreamStream",
            "cloudasset.assets.exportDialogflowAgents",
            "cloudasset.assets.exportDialogflowConversationProfiles",
            "cloudasset.assets.exportDialogflowKnowledgeBases",
            "cloudasset.assets.exportDialogflowLocationSettings",
            "cloudasset.assets.exportDlpDeidentifyTemplates",
            "cloudasset.assets.exportDlpDlpJobs",
            "cloudasset.assets.exportDlpInspectTemplates",
            "cloudasset.assets.exportDlpJobTriggers",
            "cloudasset.assets.exportDlpStoredInfoTypes",
            "cloudasset.assets.exportDnsManagedZones",
            "cloudasset.assets.exportDnsPolicies",
            "cloudasset.assets.exportDomainsRegistrations",
            "cloudasset.assets.exportEventarcTriggers",
            "cloudasset.assets.exportFileBackups",
            "cloudasset.assets.exportFileInstances",
            "cloudasset.assets.exportFirebaseAppInfos",
            "cloudasset.assets.exportFirebaseProjects",
            "cloudasset.assets.exportFirestoreDatabases",
            "cloudasset.assets.exportGKEHubFeatures",
            "cloudasset.assets.exportGKEHubMemberships",
            "cloudasset.assets.exportGameservicesGameServerClusters",
            "cloudasset.assets.exportGameservicesGameServerConfigs",
            "cloudasset.assets.exportGameservicesGameServerDeployments",
            "cloudasset.assets.exportGameservicesRealms",
            "cloudasset.assets.exportGkeBackupBackupPlans",
            "cloudasset.assets.exportGkeBackupBackups",
            "cloudasset.assets.exportGkeBackupRestorePlans",
            "cloudasset.assets.exportGkeBackupRestores",
            "cloudasset.assets.exportGkeBackupVolumeBackups",
            "cloudasset.assets.exportGkeBackupVolumeRestores",
            "cloudasset.assets.exportHealthcareConsentStores",
            "cloudasset.assets.exportHealthcareDatasets",
            "cloudasset.assets.exportHealthcareDicomStores",
            "cloudasset.assets.exportHealthcareFhirStores",
            "cloudasset.assets.exportHealthcareHl7V2Stores",
            "cloudasset.assets.exportIamPolicy",
            "cloudasset.assets.exportIamRoles",
            "cloudasset.assets.exportIamServiceAccountKeys",
            "cloudasset.assets.exportIamServiceAccounts",
            "cloudasset.assets.exportIapTunnel",
            "cloudasset.assets.exportIapTunnelInstances",
            "cloudasset.assets.exportIapTunnelZones",
            "cloudasset.assets.exportIapWeb",
            "cloudasset.assets.exportIapWebServiceVersion",
            "cloudasset.assets.exportIapWebServices",
            "cloudasset.assets.exportIapWebType",
            "cloudasset.assets.exportIdsEndpoints",
            "cloudasset.assets.exportIntegrationsAuthConfigs",
            "cloudasset.assets.exportIntegrationsCertificates",
            "cloudasset.assets.exportIntegrationsExecutions",
            "cloudasset.assets.exportIntegrationsIntegrationVersions",
            "cloudasset.assets.exportIntegrationsIntegrations",
            "cloudasset.assets.exportIntegrationsSfdcChannels",
            "cloudasset.assets.exportIntegrationsSfdcInstances",
            "cloudasset.assets.exportIntegrationsSuspensions",
            "cloudasset.assets.exportLoggingLogMetrics",
            "cloudasset.assets.exportLoggingLogSinks",
            "cloudasset.assets.exportManagedidentitiesDomain",
            "cloudasset.assets.exportMetastoreBackups",
            "cloudasset.assets.exportMetastoreMetadataImports",
            "cloudasset.assets.exportMetastoreServices",
            "cloudasset.assets.exportMonitoringAlertPolicies",
            "cloudasset.assets.exportNetworkConnectivityHubs",
            "cloudasset.assets.exportNetworkConnectivitySpokes",
            "cloudasset.assets.exportNetworkManagementConnectivityTests",
            "cloudasset.assets.exportNetworkServicesEndpointPolicies",
            "cloudasset.assets.exportNetworkServicesGateways",
            "cloudasset.assets.exportNetworkServicesGrpcRoutes",
            "cloudasset.assets.exportNetworkServicesHttpRoutes",
            "cloudasset.assets.exportNetworkServicesMeshes",
            "cloudasset.assets.exportNetworkServicesServiceBindings",
            "cloudasset.assets.exportNetworkServicesTcpRoutes",
            "cloudasset.assets.exportNetworkServicesTlsRoutes",
            "cloudasset.assets.exportOSConfigOSPolicyAssignmentReports",
            "cloudasset.assets.exportOSConfigOSPolicyAssignments",
            "cloudasset.assets.exportOSConfigVulnerabilityReports",
            "cloudasset.assets.exportOSInventories",
            "cloudasset.assets.exportOrgPolicy",
            "cloudasset.assets.exportPatchDeployments",
            "cloudasset.assets.exportPubsubSnapshots",
            "cloudasset.assets.exportPubsubSubscriptions",
            "cloudasset.assets.exportPubsubTopics",
            "cloudasset.assets.exportRedisInstances",
            "cloudasset.assets.exportResource",
            "cloudasset.assets.exportSecretManagerSecretVersions",
            "cloudasset.assets.exportSecretManagerSecrets",
            "cloudasset.assets.exportServiceDirectoryNamespaces",
            "cloudasset.assets.exportServicePerimeter",
            "cloudasset.assets.exportServiceconsumermanagementConsumerProperty",
            "cloudasset.assets.exportServiceconsumermanagementConsumerQuotaLimits",
            "cloudasset.assets.exportServiceconsumermanagementConsumers",
            "cloudasset.assets.exportServiceconsumermanagementProducerOverrides",
            "cloudasset.assets.exportServiceconsumermanagementTenancyUnits",
            "cloudasset.assets.exportServiceconsumermanagementVisibility",
            "cloudasset.assets.exportServicemanagementServices",
            "cloudasset.assets.exportServiceusageAdminOverrides",
            "cloudasset.assets.exportServiceusageConsumerOverrides",
            "cloudasset.assets.exportServiceusageServices",
            "cloudasset.assets.exportSpannerBackups",
            "cloudasset.assets.exportSpannerDatabases",
            "cloudasset.assets.exportSpannerInstances",
            "cloudasset.assets.exportSpeakerIdPhrases",
            "cloudasset.assets.exportSpeakerIdSettings",
            "cloudasset.assets.exportSpeakerIdSpeakers",
            "cloudasset.assets.exportSpeechCustomClasses",
            "cloudasset.assets.exportSpeechPhraseSets",
            "cloudasset.assets.exportSqladminBackupRuns",
            "cloudasset.assets.exportSqladminInstances",
            "cloudasset.assets.exportStorageBuckets",
            "cloudasset.assets.exportTpuNodes",
            "cloudasset.assets.exportVpcaccessConnector",
            "cloudasset.assets.listAccessLevel",
            "cloudasset.assets.listAccessPolicy",
            "cloudasset.assets.listAiplatformBatchPredictionJobs",
            "cloudasset.assets.listAiplatformCustomJobs",
            "cloudasset.assets.listAiplatformDataLabelingJobs",
            "cloudasset.assets.listAiplatformDatasets",
            "cloudasset.assets.listAiplatformEndpoints",
            "cloudasset.assets.listAiplatformHyperparameterTuningJobs",
            "cloudasset.assets.listAiplatformMetadataStores",
            "cloudasset.assets.listAiplatformModelDeploymentMonitoringJobs",
            "cloudasset.assets.listAiplatformModels",
            "cloudasset.assets.listAiplatformPipelineJobs",
            "cloudasset.assets.listAiplatformSpecialistPools",
            "cloudasset.assets.listAiplatformTrainingPipelines",
            "cloudasset.assets.listAllAccessPolicy",
            "cloudasset.assets.listAnthosConnectedCluster",
            "cloudasset.assets.listAnthosedgeCluster",
            "cloudasset.assets.listApigatewayApi",
            "cloudasset.assets.listApigatewayApiConfig",
            "cloudasset.assets.listApigatewayGateway",
            "cloudasset.assets.listApikeysKeys",
            "cloudasset.assets.listAppengineApplications",
            "cloudasset.assets.listAppengineServices",
            "cloudasset.assets.listAppengineVersions",
            "cloudasset.assets.listArtifactregistryDockerImages",
            "cloudasset.assets.listArtifactregistryRepositories",
            "cloudasset.assets.listAssuredWorkloadsWorkloads",
            "cloudasset.assets.listBeyondCorpApiGateways",
            "cloudasset.assets.listBeyondCorpAppConnections",
            "cloudasset.assets.listBeyondCorpAppConnectors",
            "cloudasset.assets.listBeyondCorpAppGateways",
            "cloudasset.assets.listBeyondCorpClientConnectorServices",
            "cloudasset.assets.listBeyondCorpClientGateways",
            "cloudasset.assets.listBigqueryDatasets",
            "cloudasset.assets.listBigqueryModels",
            "cloudasset.assets.listBigqueryTables",
            "cloudasset.assets.listBigtableAppProfile",
            "cloudasset.assets.listBigtableBackup",
            "cloudasset.assets.listBigtableCluster",
            "cloudasset.assets.listBigtableInstance",
            "cloudasset.assets.listBigtableTable",
            "cloudasset.assets.listCloudAssetFeeds",
            "cloudasset.assets.listCloudDeployDeliveryPipelines",
            "cloudasset.assets.listCloudDeployReleases",
            "cloudasset.assets.listCloudDeployRollouts",
            "cloudasset.assets.listCloudDeployTargets",
            "cloudasset.assets.listCloudDocumentAIEvaluation",
            "cloudasset.assets.listCloudDocumentAIHumanReviewConfig",
            "cloudasset.assets.listCloudDocumentAILabelerPool",
            "cloudasset.assets.listCloudDocumentAIProcessor",
            "cloudasset.assets.listCloudDocumentAIProcessorVersion",
            "cloudasset.assets.listCloudbillingBillingAccounts",
            "cloudasset.assets.listCloudbillingProjectBillingInfos",
            "cloudasset.assets.listCloudfunctionsFunctions",
            "cloudasset.assets.listCloudfunctionsGen2Functions",
            "cloudasset.assets.listCloudkmsCryptoKeyVersions",
            "cloudasset.assets.listCloudkmsCryptoKeys",
            "cloudasset.assets.listCloudkmsEkmConnections",
            "cloudasset.assets.listCloudkmsImportJobs",
            "cloudasset.assets.listCloudkmsKeyRings",
            "cloudasset.assets.listCloudmemcacheInstances",
            "cloudasset.assets.listCloudresourcemanagerFolders",
            "cloudasset.assets.listCloudresourcemanagerOrganizations",
            "cloudasset.assets.listCloudresourcemanagerProjects",
            "cloudasset.assets.listCloudresourcemanagerTagBindings",
            "cloudasset.assets.listCloudresourcemanagerTagKeys",
            "cloudasset.assets.listCloudresourcemanagerTagValues",
            "cloudasset.assets.listComposerEnvironments",
            "cloudasset.assets.listComputeAddress",
            "cloudasset.assets.listComputeAutoscalers",
            "cloudasset.assets.listComputeBackendBuckets",
            "cloudasset.assets.listComputeBackendServices",
            "cloudasset.assets.listComputeCommitments",
            "cloudasset.assets.listComputeDisks",
            "cloudasset.assets.listComputeExternalVpnGateways",
            "cloudasset.assets.listComputeFirewallPolicies",
            "cloudasset.assets.listComputeFirewalls",
            "cloudasset.assets.listComputeForwardingRules",
            "cloudasset.assets.listComputeGlobalAddress",
            "cloudasset.assets.listComputeGlobalForwardingRules",
            "cloudasset.assets.listComputeHealthChecks",
            "cloudasset.assets.listComputeHttpHealthChecks",
            "cloudasset.assets.listComputeHttpsHealthChecks",
            "cloudasset.assets.listComputeImages",
            "cloudasset.assets.listComputeInstanceGroupManagers",
            "cloudasset.assets.listComputeInstanceGroups",
            "cloudasset.assets.listComputeInstanceTemplates",
            "cloudasset.assets.listComputeInstances",
            "cloudasset.assets.listComputeInterconnect",
            "cloudasset.assets.listComputeInterconnectAttachment",
            "cloudasset.assets.listComputeLicenses",
            "cloudasset.assets.listComputeNetworkEndpointGroups",
            "cloudasset.assets.listComputeNetworks",
            "cloudasset.assets.listComputeNodeGroups",
            "cloudasset.assets.listComputeNodeTemplates",
            "cloudasset.assets.listComputePacketMirrorings",
            "cloudasset.assets.listComputeProjects",
            "cloudasset.assets.listComputeRegionAutoscaler",
            "cloudasset.assets.listComputeRegionBackendServices",
            "cloudasset.assets.listComputeRegionDisk",
            "cloudasset.assets.listComputeRegionInstanceGroup",
            "cloudasset.assets.listComputeRegionInstanceGroupManager",
            "cloudasset.assets.listComputeReservations",
            "cloudasset.assets.listComputeResourcePolicies",
            "cloudasset.assets.listComputeRouters",
            "cloudasset.assets.listComputeRoutes",
            "cloudasset.assets.listComputeSecurityPolicy",
            "cloudasset.assets.listComputeServiceAttachments",
            "cloudasset.assets.listComputeSnapshots",
            "cloudasset.assets.listComputeSslCertificates",
            "cloudasset.assets.listComputeSslPolicies",
            "cloudasset.assets.listComputeSubnetworks",
            "cloudasset.assets.listComputeTargetHttpProxies",
            "cloudasset.assets.listComputeTargetHttpsProxies",
            "cloudasset.assets.listComputeTargetInstances",
            "cloudasset.assets.listComputeTargetPools",
            "cloudasset.assets.listComputeTargetSslProxies",
            "cloudasset.assets.listComputeTargetTcpProxies",
            "cloudasset.assets.listComputeTargetVpnGateways",
            "cloudasset.assets.listComputeUrlMaps",
            "cloudasset.assets.listComputeVpnGateways",
            "cloudasset.assets.listComputeVpnTunnels",
            "cloudasset.assets.listConnectorsConnections",
            "cloudasset.assets.listConnectorsConnectorVersions",
            "cloudasset.assets.listConnectorsConnectors",
            "cloudasset.assets.listConnectorsProviders",
            "cloudasset.assets.listConnectorsRuntimeConfigs",
            "cloudasset.assets.listContainerAppsDeployment",
            "cloudasset.assets.listContainerAppsReplicaSets",
            "cloudasset.assets.listContainerBatchJobs",
            "cloudasset.assets.listContainerClusterrole",
            "cloudasset.assets.listContainerClusterrolebinding",
            "cloudasset.assets.listContainerClusters",
            "cloudasset.assets.listContainerExtensionsIngresses",
            "cloudasset.assets.listContainerJobs",
            "cloudasset.assets.listContainerNamespace",
            "cloudasset.assets.listContainerNetworkingIngresses",
            "cloudasset.assets.listContainerNetworkingNetworkPolicies",
            "cloudasset.assets.listContainerNode",
            "cloudasset.assets.listContainerNodepool",
            "cloudasset.assets.listContainerPod",
            "cloudasset.assets.listContainerReplicaSets",
            "cloudasset.assets.listContainerRole",
            "cloudasset.assets.listContainerRolebinding",
            "cloudasset.assets.listContainerServices",
            "cloudasset.assets.listContainerregistryImage",
            "cloudasset.assets.listDataMigrationConnectionProfiles",
            "cloudasset.assets.listDataMigrationMigrationJobs",
            "cloudasset.assets.listDataflowJobs",
            "cloudasset.assets.listDatafusionInstance",
            "cloudasset.assets.listDataplexAssets",
            "cloudasset.assets.listDataplexLakes",
            "cloudasset.assets.listDataplexTasks",
            "cloudasset.assets.listDataplexZones",
            "cloudasset.assets.listDataprocAutoscalingPolicies",
            "cloudasset.assets.listDataprocBatches",
            "cloudasset.assets.listDataprocClusters",
            "cloudasset.assets.listDataprocJobs",
            "cloudasset.assets.listDataprocSessions",
            "cloudasset.assets.listDataprocWorkflowTemplates",
            "cloudasset.assets.listDatastreamConnectionProfile",
            "cloudasset.assets.listDatastreamPrivateConnection",
            "cloudasset.assets.listDatastreamStream",
            "cloudasset.assets.listDialogflowAgents",
            "cloudasset.assets.listDialogflowConversationProfiles",
            "cloudasset.assets.listDialogflowKnowledgeBases",
            "cloudasset.assets.listDialogflowLocationSettings",
            "cloudasset.assets.listDlpDeidentifyTemplates",
            "cloudasset.assets.listDlpDlpJobs",
            "cloudasset.assets.listDlpInspectTemplates",
            "cloudasset.assets.listDlpJobTriggers",
            "cloudasset.assets.listDlpStoredInfoTypes",
            "cloudasset.assets.listDnsManagedZones",
            "cloudasset.assets.listDnsPolicies",
            "cloudasset.assets.listDomainsRegistrations",
            "cloudasset.assets.listEventarcTriggers",
            "cloudasset.assets.listFileBackups",
            "cloudasset.assets.listFileInstances",
            "cloudasset.assets.listFirebaseAppInfos",
            "cloudasset.assets.listFirebaseProjects",
            "cloudasset.assets.listFirestoreDatabases",
            "cloudasset.assets.listGKEHubFeatures",
            "cloudasset.assets.listGKEHubMemberships",
            "cloudasset.assets.listGameservicesGameServerClusters",
            "cloudasset.assets.listGameservicesGameServerConfigs",
            "cloudasset.assets.listGameservicesGameServerDeployments",
            "cloudasset.assets.listGameservicesRealms",
            "cloudasset.assets.listGkeBackupBackupPlans",
            "cloudasset.assets.listGkeBackupBackups",
            "cloudasset.assets.listGkeBackupRestorePlans",
            "cloudasset.assets.listGkeBackupRestores",
            "cloudasset.assets.listGkeBackupVolumeBackups",
            "cloudasset.assets.listGkeBackupVolumeRestores",
            "cloudasset.assets.listHealthcareConsentStores",
            "cloudasset.assets.listHealthcareDatasets",
            "cloudasset.assets.listHealthcareDicomStores",
            "cloudasset.assets.listHealthcareFhirStores",
            "cloudasset.assets.listHealthcareHl7V2Stores",
            "cloudasset.assets.listIamPolicy",
            "cloudasset.assets.listIamRoles",
            "cloudasset.assets.listIamServiceAccountKeys",
            "cloudasset.assets.listIamServiceAccounts",
            "cloudasset.assets.listIapTunnel",
            "cloudasset.assets.listIapTunnelInstances",
            "cloudasset.assets.listIapTunnelZones",
            "cloudasset.assets.listIapWeb",
            "cloudasset.assets.listIapWebServiceVersion",
            "cloudasset.assets.listIapWebServices",
            "cloudasset.assets.listIapWebType",
            "cloudasset.assets.listIdsEndpoints",
            "cloudasset.assets.listIntegrationsAuthConfigs",
            "cloudasset.assets.listIntegrationsCertificates",
            "cloudasset.assets.listIntegrationsExecutions",
            "cloudasset.assets.listIntegrationsIntegrationVersions",
            "cloudasset.assets.listIntegrationsIntegrations",
            "cloudasset.assets.listIntegrationsSfdcChannels",
            "cloudasset.assets.listIntegrationsSfdcInstances",
            "cloudasset.assets.listIntegrationsSuspensions",
            "cloudasset.assets.listLoggingLogMetrics",
            "cloudasset.assets.listLoggingLogSinks",
            "cloudasset.assets.listManagedidentitiesDomain",
            "cloudasset.assets.listMetastoreBackups",
            "cloudasset.assets.listMetastoreMetadataImports",
            "cloudasset.assets.listMetastoreServices",
            "cloudasset.assets.listMonitoringAlertPolicies",
            "cloudasset.assets.listNetworkConnectivityHubs",
            "cloudasset.assets.listNetworkConnectivitySpokes",
            "cloudasset.assets.listNetworkManagementConnectivityTests",
            "cloudasset.assets.listNetworkServicesEndpointPolicies",
            "cloudasset.assets.listNetworkServicesGateways",
            "cloudasset.assets.listNetworkServicesGrpcRoutes",
            "cloudasset.assets.listNetworkServicesHttpRoutes",
            "cloudasset.assets.listNetworkServicesMeshes",
            "cloudasset.assets.listNetworkServicesServiceBindings",
            "cloudasset.assets.listNetworkServicesTcpRoutes",
            "cloudasset.assets.listNetworkServicesTlsRoutes",
            "cloudasset.assets.listOSConfigOSPolicyAssignmentReports",
            "cloudasset.assets.listOSConfigOSPolicyAssignments",
            "cloudasset.assets.listOSConfigVulnerabilityReports",
            "cloudasset.assets.listOSInventories",
            "cloudasset.assets.listOrgPolicy",
            "cloudasset.assets.listPatchDeployments",
            "cloudasset.assets.listPubsubSnapshots",
            "cloudasset.assets.listPubsubSubscriptions",
            "cloudasset.assets.listPubsubTopics",
            "cloudasset.assets.listRedisInstances",
            "cloudasset.assets.listResource",
            "cloudasset.assets.listRunDomainMapping",
            "cloudasset.assets.listRunRevision",
            "cloudasset.assets.listRunService",
            "cloudasset.assets.listSecretManagerSecretVersions",
            "cloudasset.assets.listSecretManagerSecrets",
            "cloudasset.assets.listServiceDirectoryNamespaces",
            "cloudasset.assets.listServicePerimeter",
            "cloudasset.assets.listServiceconsumermanagementConsumerProperty",
            "cloudasset.assets.listServiceconsumermanagementConsumerQuotaLimits",
            "cloudasset.assets.listServiceconsumermanagementConsumers",
            "cloudasset.assets.listServiceconsumermanagementProducerOverrides",
            "cloudasset.assets.listServiceconsumermanagementTenancyUnits",
            "cloudasset.assets.listServiceconsumermanagementVisibility",
            "cloudasset.assets.listServicemanagementServices",
            "cloudasset.assets.listServiceusageAdminOverrides",
            "cloudasset.assets.listServiceusageConsumerOverrides",
            "cloudasset.assets.listServiceusageServices",
            "cloudasset.assets.listSpannerBackups",
            "cloudasset.assets.listSpannerDatabases",
            "cloudasset.assets.listSpannerInstances",
            "cloudasset.assets.listSpeakerIdPhrases",
            "cloudasset.assets.listSpeakerIdSettings",
            "cloudasset.assets.listSpeakerIdSpeakers",
            "cloudasset.assets.listSpeechCustomClasses",
            "cloudasset.assets.listSpeechPhraseSets",
            "cloudasset.assets.listSqladminBackupRuns",
            "cloudasset.assets.listSqladminInstances",
            "cloudasset.assets.listStorageBuckets",
            "cloudasset.assets.listTpuNodes",
            "cloudasset.assets.listVpcaccessConnector",
            "cloudasset.assets.queryAccessPolicy",
            "cloudasset.assets.queryIamPolicy",
            "cloudasset.assets.queryOSInventories",
            "cloudasset.assets.queryResource",
            "cloudasset.assets.searchAllIamPolicies",
            "cloudasset.assets.searchAllResources",
            "cloudasset.othercloudconnections.get",
            "cloudasset.othercloudconnections.list",
            "cloudasset.othercloudconnections.verify",
            "clouddeploy.deliveryPipelines.createTagBinding",
            "clouddeploy.deliveryPipelines.deleteTagBinding",
            "clouddeploy.deliveryPipelines.listEffectiveTags",
            "clouddeploy.deliveryPipelines.listTagBindings",
            "clouddeploy.targets.createTagBinding",
            "clouddeploy.targets.deleteTagBinding",
            "clouddeploy.targets.listEffectiveTags",
            "clouddeploy.targets.listTagBindings",
            "cloudkms.keyHandles.*",
            "cloudkms.keyRings.createTagBinding",
            "cloudkms.keyRings.deleteTagBinding",
            "cloudkms.keyRings.listEffectiveTags",
            "cloudkms.keyRings.listTagBindings",
            "cloudkms.operations.get",
            "cloudkms.projects.showEffectiveAutokeyConfig",
            "cloudsql.instances.connect",
            "cloudsql.instances.createTagBinding",
            "cloudsql.instances.deleteTagBinding",
            "cloudsql.instances.get",
            "cloudsql.instances.listEffectiveTags",
            "cloudsql.instances.listTagBindings",
            "cloudsql.instances.login",
            "compute.addresses.createTagBinding",
            "compute.addresses.deleteTagBinding",
            "compute.addresses.listEffectiveTags",
            "compute.addresses.listTagBindings",
            "compute.backendBuckets.createTagBinding",
            "compute.backendBuckets.deleteTagBinding",
            "compute.backendBuckets.listEffectiveTags",
            "compute.backendBuckets.listTagBindings",
            "compute.backendServices.createTagBinding",
            "compute.backendServices.deleteTagBinding",
            "compute.backendServices.listEffectiveTags",
            "compute.backendServices.listTagBindings",
            "compute.disks.createTagBinding",
            "compute.disks.deleteTagBinding",
            "compute.disks.listEffectiveTags",
            "compute.disks.listTagBindings",
            "compute.externalVpnGateways.createTagBinding",
            "compute.externalVpnGateways.deleteTagBinding",
            "compute.externalVpnGateways.listEffectiveTags",
            "compute.externalVpnGateways.listTagBindings",
            "compute.firewallPolicies.createTagBinding",
            "compute.firewallPolicies.deleteTagBinding",
            "compute.firewallPolicies.listEffectiveTags",
            "compute.firewallPolicies.listTagBindings",
            "compute.firewalls.createTagBinding",
            "compute.firewalls.deleteTagBinding",
            "compute.firewalls.listEffectiveTags",
            "compute.firewalls.listTagBindings",
            "compute.forwardingRules.createTagBinding",
            "compute.forwardingRules.deleteTagBinding",
            "compute.forwardingRules.listEffectiveTags",
            "compute.forwardingRules.listTagBindings",
            "compute.globalAddresses.createTagBinding",
            "compute.globalAddresses.deleteTagBinding",
            "compute.globalAddresses.listEffectiveTags",
            "compute.globalAddresses.listTagBindings",
            "compute.globalForwardingRules.createTagBinding",
            "compute.globalForwardingRules.deleteTagBinding",
            "compute.globalForwardingRules.listEffectiveTags",
            "compute.globalForwardingRules.listTagBindings",
            "compute.globalNetworkEndpointGroups.createTagBinding",
            "compute.globalNetworkEndpointGroups.deleteTagBinding",
            "compute.globalNetworkEndpointGroups.listEffectiveTags",
            "compute.globalNetworkEndpointGroups.listTagBindings",
            "compute.healthChecks.createTagBinding",
            "compute.healthChecks.deleteTagBinding",
            "compute.healthChecks.listEffectiveTags",
            "compute.healthChecks.listTagBindings",
            "compute.httpHealthChecks.createTagBinding",
            "compute.httpHealthChecks.deleteTagBinding",
            "compute.httpHealthChecks.listEffectiveTags",
            "compute.httpHealthChecks.listTagBindings",
            "compute.httpsHealthChecks.createTagBinding",
            "compute.httpsHealthChecks.deleteTagBinding",
            "compute.httpsHealthChecks.listEffectiveTags",
            "compute.httpsHealthChecks.listTagBindings",
            "compute.images.createTagBinding",
            "compute.images.deleteTagBinding",
            "compute.images.listEffectiveTags",
            "compute.images.listTagBindings",
            "compute.instanceGroupManagers.createTagBinding",
            "compute.instanceGroupManagers.deleteTagBinding",
            "compute.instanceGroupManagers.listEffectiveTags",
            "compute.instanceGroupManagers.listTagBindings",
            "compute.instanceGroups.createTagBinding",
            "compute.instanceGroups.deleteTagBinding",
            "compute.instanceGroups.listEffectiveTags",
            "compute.instanceGroups.listTagBindings",
            "compute.instances.createTagBinding",
            "compute.instances.deleteTagBinding",
            "compute.instances.listEffectiveTags",
            "compute.instances.listTagBindings",
            "compute.interconnectAttachments.createTagBinding",
            "compute.interconnectAttachments.deleteTagBinding",
            "compute.interconnectAttachments.listEffectiveTags",
            "compute.interconnectAttachments.listTagBindings",
            "compute.interconnects.createTagBinding",
            "compute.interconnects.deleteTagBinding",
            "compute.interconnects.listEffectiveTags",
            "compute.interconnects.listTagBindings",
            "compute.networkAttachments.createTagBinding",
            "compute.networkAttachments.deleteTagBinding",
            "compute.networkAttachments.listEffectiveTags",
            "compute.networkAttachments.listTagBindings",
            "compute.networkEdgeSecurityServices.createTagBinding",
            "compute.networkEdgeSecurityServices.deleteTagBinding",
            "compute.networkEdgeSecurityServices.listEffectiveTags",
            "compute.networkEdgeSecurityServices.listTagBindings",
            "compute.networkEndpointGroups.createTagBinding",
            "compute.networkEndpointGroups.deleteTagBinding",
            "compute.networkEndpointGroups.listEffectiveTags",
            "compute.networkEndpointGroups.listTagBindings",
            "compute.networks.createTagBinding",
            "compute.networks.deleteTagBinding",
            "compute.networks.listEffectiveTags",
            "compute.networks.listTagBindings",
            "compute.packetMirrorings.createTagBinding",
            "compute.packetMirrorings.deleteTagBinding",
            "compute.packetMirrorings.listEffectiveTags",
            "compute.packetMirrorings.listTagBindings",
            "compute.publicDelegatedPrefixes.createTagBinding",
            "compute.publicDelegatedPrefixes.deleteTagBinding",
            "compute.publicDelegatedPrefixes.listEffectiveTags",
            "compute.publicDelegatedPrefixes.listTagBindings",
            "compute.regionBackendServices.createTagBinding",
            "compute.regionBackendServices.deleteTagBinding",
            "compute.regionBackendServices.listEffectiveTags",
            "compute.regionBackendServices.listTagBindings",
            "compute.regionFirewallPolicies.createTagBinding",
            "compute.regionFirewallPolicies.deleteTagBinding",
            "compute.regionFirewallPolicies.listEffectiveTags",
            "compute.regionFirewallPolicies.listTagBindings",
            "compute.regionHealthChecks.createTagBinding",
            "compute.regionHealthChecks.deleteTagBinding",
            "compute.regionHealthChecks.listEffectiveTags",
            "compute.regionHealthChecks.listTagBindings",
            "compute.regionNetworkEndpointGroups.createTagBinding",
            "compute.regionNetworkEndpointGroups.deleteTagBinding",
            "compute.regionNetworkEndpointGroups.listEffectiveTags",
            "compute.regionNetworkEndpointGroups.listTagBindings",
            "compute.regionSecurityPolicies.createTagBinding",
            "compute.regionSecurityPolicies.deleteTagBinding",
            "compute.regionSecurityPolicies.listEffectiveTags",
            "compute.regionSecurityPolicies.listTagBindings",
            "compute.regionSslCertificates.createTagBinding",
            "compute.regionSslCertificates.deleteTagBinding",
            "compute.regionSslCertificates.listEffectiveTags",
            "compute.regionSslCertificates.listTagBindings",
            "compute.regionSslPolicies.createTagBinding",
            "compute.regionSslPolicies.deleteTagBinding",
            "compute.regionSslPolicies.listEffectiveTags",
            "compute.regionSslPolicies.listTagBindings",
            "compute.regionTargetHttpProxies.createTagBinding",
            "compute.regionTargetHttpProxies.deleteTagBinding",
            "compute.regionTargetHttpProxies.listEffectiveTags",
            "compute.regionTargetHttpProxies.listTagBindings",
            "compute.regionTargetHttpsProxies.createTagBinding",
            "compute.regionTargetHttpsProxies.deleteTagBinding",
            "compute.regionTargetHttpsProxies.listEffectiveTags",
            "compute.regionTargetHttpsProxies.listTagBindings",
            "compute.regionTargetTcpProxies.createTagBinding",
            "compute.regionTargetTcpProxies.deleteTagBinding",
            "compute.regionTargetTcpProxies.listEffectiveTags",
            "compute.regionTargetTcpProxies.listTagBindings",
            "compute.regionUrlMaps.createTagBinding",
            "compute.regionUrlMaps.deleteTagBinding",
            "compute.regionUrlMaps.listEffectiveTags",
            "compute.regionUrlMaps.listTagBindings",
            "compute.routers.createTagBinding",
            "compute.routers.deleteTagBinding",
            "compute.routers.listEffectiveTags",
            "compute.routers.listTagBindings",
            "compute.routes.createTagBinding",
            "compute.routes.deleteTagBinding",
            "compute.routes.listEffectiveTags",
            "compute.routes.listTagBindings",
            "compute.securityPolicies.createTagBinding",
            "compute.securityPolicies.deleteTagBinding",
            "compute.securityPolicies.listEffectiveTags",
            "compute.securityPolicies.listTagBindings",
            "compute.serviceAttachments.createTagBinding",
            "compute.serviceAttachments.deleteTagBinding",
            "compute.serviceAttachments.listEffectiveTags",
            "compute.serviceAttachments.listTagBindings",
            "compute.snapshots.createTagBinding",
            "compute.snapshots.deleteTagBinding",
            "compute.snapshots.listEffectiveTags",
            "compute.snapshots.listTagBindings",
            "compute.sslCertificates.createTagBinding",
            "compute.sslCertificates.deleteTagBinding",
            "compute.sslCertificates.listEffectiveTags",
            "compute.sslCertificates.listTagBindings",
            "compute.sslPolicies.createTagBinding",
            "compute.sslPolicies.deleteTagBinding",
            "compute.sslPolicies.listEffectiveTags",
            "compute.sslPolicies.listTagBindings",
            "compute.subnetworks.createTagBinding",
            "compute.subnetworks.deleteTagBinding",
            "compute.subnetworks.listEffectiveTags",
            "compute.subnetworks.listTagBindings",
            "compute.targetGrpcProxies.createTagBinding",
            "compute.targetGrpcProxies.deleteTagBinding",
            "compute.targetGrpcProxies.listEffectiveTags",
            "compute.targetGrpcProxies.listTagBindings",
            "compute.targetHttpProxies.createTagBinding",
            "compute.targetHttpProxies.deleteTagBinding",
            "compute.targetHttpProxies.listEffectiveTags",
            "compute.targetHttpProxies.listTagBindings",
            "compute.targetHttpsProxies.createTagBinding",
            "compute.targetHttpsProxies.deleteTagBinding",
            "compute.targetHttpsProxies.listEffectiveTags",
            "compute.targetHttpsProxies.listTagBindings",
            "compute.targetInstances.createTagBinding",
            "compute.targetInstances.deleteTagBinding",
            "compute.targetInstances.listEffectiveTags",
            "compute.targetInstances.listTagBindings",
            "compute.targetPools.createTagBinding",
            "compute.targetPools.deleteTagBinding",
            "compute.targetPools.listEffectiveTags",
            "compute.targetPools.listTagBindings",
            "compute.targetSslProxies.createTagBinding",
            "compute.targetSslProxies.deleteTagBinding",
            "compute.targetSslProxies.listEffectiveTags",
            "compute.targetSslProxies.listTagBindings",
            "compute.targetTcpProxies.createTagBinding",
            "compute.targetTcpProxies.deleteTagBinding",
            "compute.targetTcpProxies.listEffectiveTags",
            "compute.targetTcpProxies.listTagBindings",
            "compute.targetVpnGateways.createTagBinding",
            "compute.targetVpnGateways.deleteTagBinding",
            "compute.targetVpnGateways.listEffectiveTags",
            "compute.targetVpnGateways.listTagBindings",
            "compute.urlMaps.createTagBinding",
            "compute.urlMaps.deleteTagBinding",
            "compute.urlMaps.listEffectiveTags",
            "compute.urlMaps.listTagBindings",
            "compute.vpnGateways.createTagBinding",
            "compute.vpnGateways.deleteTagBinding",
            "compute.vpnGateways.listEffectiveTags",
            "compute.vpnGateways.listTagBindings",
            "compute.vpnTunnels.createTagBinding",
            "compute.vpnTunnels.deleteTagBinding",
            "compute.vpnTunnels.listEffectiveTags",
            "compute.vpnTunnels.listTagBindings",
            "container.clusters.createTagBinding",
            "container.clusters.deleteTagBinding",
            "container.clusters.listEffectiveTags",
            "container.clusters.listTagBindings",
            "datacatalog.categories.fineGrainedGet",
            "datacatalog.entries.updateTag",
            "datacatalog.entryGroups.updateTag",
            "datacatalog.tagTemplates.create",
            "datacatalog.tagTemplates.get",
            "datacatalog.tagTemplates.getTag",
            "datacatalog.tagTemplates.use",
            "dataform.locations.*",
            "dataform.repositories.create",
            "dataform.repositories.list",
            "datafusion.instances.createTagBinding",
            "datafusion.instances.deleteTagBinding",
            "datafusion.instances.listEffectiveTags",
            "datafusion.instances.listTagBindings",
            "dataplex.entries.get",
            "dataplex.projects.search",
            "datastore.databases.createTagBinding",
            "datastore.databases.deleteTagBinding",
            "datastore.databases.listEffectiveTags",
            "datastore.databases.listTagBindings",
            "datastream.connectionProfiles.createTagBinding",
            "datastream.connectionProfiles.deleteTagBinding",
            "datastream.connectionProfiles.listEffectiveTags",
            "datastream.connectionProfiles.listTagBindings",
            "datastream.privateConnections.createTagBinding",
            "datastream.privateConnections.deleteTagBinding",
            "datastream.privateConnections.listEffectiveTags",
            "datastream.privateConnections.listTagBindings",
            "datastream.streams.createTagBinding",
            "datastream.streams.deleteTagBinding",
            "datastream.streams.listEffectiveTags",
            "datastream.streams.listTagBindings",
            "dlp.*",
            "domains.registrations.createTagBinding",
            "domains.registrations.deleteTagBinding",
            "domains.registrations.listEffectiveTags",
            "domains.registrations.listTagBindings",
            "file.backups.createTagBinding",
            "file.backups.deleteTagBinding",
            "file.backups.listEffectiveTags",
            "file.backups.listTagBindings",
            "file.instances.createTagBinding",
            "file.instances.deleteTagBinding",
            "file.instances.listEffectiveTags",
            "file.instances.listTagBindings",
            "file.snapshots.createTagBinding",
            "file.snapshots.deleteTagBinding",
            "file.snapshots.listEffectiveTags",
            "file.snapshots.listTagBindings",
            "iam.serviceAccounts.createTagBinding",
            "iam.serviceAccounts.deleteTagBinding",
            "iam.serviceAccounts.listEffectiveTags",
            "iam.serviceAccounts.listTagBindings",
            "logging.buckets.createTagBinding",
            "logging.buckets.deleteTagBinding",
            "logging.buckets.listEffectiveTags",
            "logging.buckets.listTagBindings",
            "managedidentities.domains.createTagBinding",
            "managedidentities.domains.deleteTagBinding",
            "managedidentities.domains.listEffectiveTags",
            "managedidentities.domains.listTagBindings",
            "monitoring.alertPolicies.createTagBinding",
            "monitoring.alertPolicies.deleteTagBinding",
            "monitoring.alertPolicies.listEffectiveTags",
            "monitoring.alertPolicies.listTagBindings",
            "privateca.caPools.createTagBinding",
            "privateca.caPools.deleteTagBinding",
            "privateca.caPools.listEffectiveTags",
            "privateca.caPools.listTagBindings",
            "privateca.certificateTemplates.createTagBinding",
            "privateca.certificateTemplates.deleteTagBinding",
            "privateca.certificateTemplates.listEffectiveTags",
            "privateca.certificateTemplates.listTagBindings",
            "pubsub.topics.updateTag",
            "recommender.alloydbClusterPerformanceInsights.get",
            "recommender.alloydbClusterPerformanceInsights.list",
            "recommender.alloydbClusterPerformanceRecommendations.get",
            "recommender.alloydbClusterPerformanceRecommendations.list",
            "recommender.alloydbClusterReliabilityInsights.get",
            "recommender.alloydbClusterReliabilityInsights.list",
            "recommender.alloydbClusterReliabilityRecommendations.get",
            "recommender.alloydbClusterReliabilityRecommendations.list",
            "recommender.cloudAssetInsights.get",
            "recommender.cloudAssetInsights.list",
            "recommender.locations.*",
            "redis.instances.createTagBinding",
            "redis.instances.deleteTagBinding",
            "redis.instances.listEffectiveTags",
            "redis.instances.listTagBindings",
            "resourcemanager.hierarchyNodes.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "resourcemanager.tagKeys.get",
            "resourcemanager.tagKeys.list",
            "resourcemanager.tagValueBindings.*",
            "resourcemanager.tagValues.get",
            "resourcemanager.tagValues.list",
            "run.jobs.createTagBinding",
            "run.jobs.deleteTagBinding",
            "run.jobs.listEffectiveTags",
            "run.jobs.listTagBindings",
            "run.services.createTagBinding",
            "run.services.deleteTagBinding",
            "run.services.listEffectiveTags",
            "run.services.listTagBindings",
            "secretmanager.secrets.createTagBinding",
            "secretmanager.secrets.deleteTagBinding",
            "secretmanager.secrets.listEffectiveTags",
            "secretmanager.secrets.listTagBindings",
            "serviceusage.services.use",
            "spanner.instances.createTagBinding",
            "spanner.instances.deleteTagBinding",
            "spanner.instances.listEffectiveTags",
            "spanner.instances.listTagBindings",
            "storage.buckets.createTagBinding",
            "storage.buckets.deleteTagBinding",
            "storage.buckets.get",
            "storage.buckets.getIamPolicy",
            "storage.buckets.listEffectiveTags",
            "storage.buckets.listTagBindings",
            "storage.folders.get",
            "storage.folders.list",
            "storage.managedFolders.get",
            "storage.managedFolders.list",
            "storage.objects.get",
            "storage.objects.getIamPolicy",
            "storage.objects.list",
            "transcoder.jobTemplates.createTagBinding",
            "transcoder.jobTemplates.deleteTagBinding",
            "transcoder.jobTemplates.listEffectiveTags",
            "transcoder.jobTemplates.listTagBindings",
            "transcoder.jobs.createTagBinding",
            "transcoder.jobs.deleteTagBinding",
            "transcoder.jobs.listEffectiveTags",
            "transcoder.jobs.listTagBindings",
            "workflows.workflows.createTagBinding",
            "workflows.workflows.deleteTagBinding",
            "workflows.workflows.listEffectiveTags",
            "workflows.workflows.listTagBindings",
            "workstations.workstationClusters.createTagBinding",
            "workstations.workstationClusters.deleteTagBinding",
            "workstations.workstationClusters.listEffectiveTags",
            "workstations.workstationClusters.listTagBindings"
          ],
          "title": "DLP Organization Data Profiles Driver"
        },
        {
          "description": "Read DLP project profiles.",
          "id": "roles/dlp.projectDataProfilesReader",
          "is_beta": false,
          "permissions": [
            "dlp.projectDataProfiles.*"
          ],
          "title": "DLP Project Data Profiles Reader"
        },
        {
          "description": "Permissions needed by the DLP service account to generate data profiles within a project.",
          "id": "roles/dlp.projectdriver",
          "is_beta": false,
          "permissions": [
            "aiplatform.agentExamples.get",
            "aiplatform.agentExamples.list",
            "aiplatform.agents.get",
            "aiplatform.agents.list",
            "aiplatform.annotationSpecs.get",
            "aiplatform.annotationSpecs.list",
            "aiplatform.annotations.get",
            "aiplatform.annotations.list",
            "aiplatform.apps.get",
            "aiplatform.apps.list",
            "aiplatform.artifacts.get",
            "aiplatform.artifacts.list",
            "aiplatform.batchPredictionJobs.get",
            "aiplatform.batchPredictionJobs.list",
            "aiplatform.cacheConfigs.get",
            "aiplatform.cachedContents.get",
            "aiplatform.cachedContents.list",
            "aiplatform.consents.get",
            "aiplatform.contexts.get",
            "aiplatform.contexts.list",
            "aiplatform.contexts.queryContextLineageSubgraph",
            "aiplatform.customJobs.get",
            "aiplatform.customJobs.list",
            "aiplatform.dataItems.get",
            "aiplatform.dataItems.list",
            "aiplatform.dataLabelingJobs.get",
            "aiplatform.dataLabelingJobs.list",
            "aiplatform.datasetVersions.get",
            "aiplatform.datasetVersions.list",
            "aiplatform.datasets.get",
            "aiplatform.datasets.list",
            "aiplatform.deploymentResourcePools.get",
            "aiplatform.deploymentResourcePools.list",
            "aiplatform.deploymentResourcePools.queryDeployedModels",
            "aiplatform.edgeDeploymentJobs.get",
            "aiplatform.edgeDeploymentJobs.list",
            "aiplatform.edgeDeviceDebugInfo.get",
            "aiplatform.edgeDevices.get",
            "aiplatform.edgeDevices.list",
            "aiplatform.endpoints.get",
            "aiplatform.endpoints.list",
            "aiplatform.entityTypes.get",
            "aiplatform.entityTypes.list",
            "aiplatform.executions.get",
            "aiplatform.executions.list",
            "aiplatform.executions.queryExecutionInputsAndOutputs",
            "aiplatform.extensions.get",
            "aiplatform.extensions.list",
            "aiplatform.featureGroups.get",
            "aiplatform.featureGroups.list",
            "aiplatform.featureOnlineStores.get",
            "aiplatform.featureOnlineStores.list",
            "aiplatform.featureViewSyncs.*",
            "aiplatform.featureViews.fetchFeatureValues",
            "aiplatform.featureViews.get",
            "aiplatform.featureViews.list",
            "aiplatform.featureViews.searchNearestEntities",
            "aiplatform.features.get",
            "aiplatform.features.list",
            "aiplatform.featurestores.get",
            "aiplatform.featurestores.list",
            "aiplatform.humanInTheLoops.get",
            "aiplatform.humanInTheLoops.list",
            "aiplatform.hyperparameterTuningJobs.get",
            "aiplatform.hyperparameterTuningJobs.list",
            "aiplatform.indexEndpoints.get",
            "aiplatform.indexEndpoints.list",
            "aiplatform.indexEndpoints.queryVectors",
            "aiplatform.indexes.get",
            "aiplatform.indexes.list",
            "aiplatform.locations.get",
            "aiplatform.locations.list",
            "aiplatform.metadataSchemas.get",
            "aiplatform.metadataSchemas.list",
            "aiplatform.metadataStores.get",
            "aiplatform.metadataStores.list",
            "aiplatform.modelDeploymentMonitoringJobs.get",
            "aiplatform.modelDeploymentMonitoringJobs.list",
            "aiplatform.modelDeploymentMonitoringJobs.searchStatsAnomalies",
            "aiplatform.modelEvaluationSlices.get",
            "aiplatform.modelEvaluationSlices.list",
            "aiplatform.modelEvaluations.get",
            "aiplatform.modelEvaluations.list",
            "aiplatform.modelMonitoringJobs.get",
            "aiplatform.modelMonitoringJobs.list",
            "aiplatform.modelMonitors.get",
            "aiplatform.modelMonitors.list",
            "aiplatform.modelMonitors.searchModelMonitoringAlerts",
            "aiplatform.modelMonitors.searchModelMonitoringStats",
            "aiplatform.models.get",
            "aiplatform.models.list",
            "aiplatform.nasJobs.get",
            "aiplatform.nasJobs.list",
            "aiplatform.nasTrialDetails.*",
            "aiplatform.notebookExecutionJobs.get",
            "aiplatform.notebookExecutionJobs.list",
            "aiplatform.notebookRuntimeTemplates.get",
            "aiplatform.notebookRuntimeTemplates.list",
            "aiplatform.notebookRuntimes.get",
            "aiplatform.notebookRuntimes.list",
            "aiplatform.operations.list",
            "aiplatform.persistentResources.get",
            "aiplatform.persistentResources.list",
            "aiplatform.pipelineJobs.get",
            "aiplatform.pipelineJobs.list",
            "aiplatform.provisionedThroughputRevisions.*",
            "aiplatform.provisionedThroughputs.get",
            "aiplatform.provisionedThroughputs.list",
            "aiplatform.ragCorpora.get",
            "aiplatform.ragCorpora.list",
            "aiplatform.ragCorpora.query",
            "aiplatform.ragFiles.get",
            "aiplatform.ragFiles.list",
            "aiplatform.reasoningEngines.get",
            "aiplatform.reasoningEngines.list",
            "aiplatform.reasoningEngines.query",
            "aiplatform.schedules.get",
            "aiplatform.schedules.list",
            "aiplatform.sessions.get",
            "aiplatform.sessions.list",
            "aiplatform.specialistPools.get",
            "aiplatform.specialistPools.list",
            "aiplatform.specialistPools.update",
            "aiplatform.studies.get",
            "aiplatform.studies.list",
            "aiplatform.tensorboardExperiments.get",
            "aiplatform.tensorboardExperiments.list",
            "aiplatform.tensorboardRuns.get",
            "aiplatform.tensorboardRuns.list",
            "aiplatform.tensorboardTimeSeries.batchRead",
            "aiplatform.tensorboardTimeSeries.get",
            "aiplatform.tensorboardTimeSeries.list",
            "aiplatform.tensorboardTimeSeries.read",
            "aiplatform.tensorboards.get",
            "aiplatform.tensorboards.list",
            "aiplatform.trainingPipelines.get",
            "aiplatform.trainingPipelines.list",
            "aiplatform.trials.get",
            "aiplatform.trials.list",
            "aiplatform.tuningJobs.get",
            "aiplatform.tuningJobs.list",
            "alloydb.backups.createTagBinding",
            "alloydb.backups.deleteTagBinding",
            "alloydb.backups.get",
            "alloydb.backups.list",
            "alloydb.backups.listEffectiveTags",
            "alloydb.backups.listTagBindings",
            "alloydb.clusters.createTagBinding",
            "alloydb.clusters.deleteTagBinding",
            "alloydb.clusters.export",
            "alloydb.clusters.generateClientCertificate",
            "alloydb.clusters.get",
            "alloydb.clusters.list",
            "alloydb.clusters.listEffectiveTags",
            "alloydb.clusters.listTagBindings",
            "alloydb.databases.list",
            "alloydb.instances.connect",
            "alloydb.instances.executeSql",
            "alloydb.instances.get",
            "alloydb.instances.list",
            "alloydb.locations.*",
            "alloydb.operations.get",
            "alloydb.operations.list",
            "alloydb.supportedDatabaseFlags.*",
            "alloydb.users.get",
            "alloydb.users.list",
            "alloydb.users.login",
            "apigateway.apis.createTagBinding",
            "apigateway.apis.deleteTagBinding",
            "apigateway.apis.listEffectiveTags",
            "apigateway.apis.listTagBindings",
            "apigateway.gateways.createTagBinding",
            "apigateway.gateways.deleteTagBinding",
            "apigateway.gateways.listEffectiveTags",
            "apigateway.gateways.listTagBindings",
            "apihub.apis.createTagBinding",
            "apihub.apis.deleteTagBinding",
            "apihub.apis.listEffectiveTags",
            "apihub.apis.listTagBindings",
            "apihub.deployments.createTagBinding",
            "apihub.deployments.deleteTagBinding",
            "apihub.deployments.listEffectiveTags",
            "apihub.deployments.listTagBindings",
            "artifactregistry.repositories.createTagBinding",
            "artifactregistry.repositories.deleteTagBinding",
            "artifactregistry.repositories.listEffectiveTags",
            "artifactregistry.repositories.listTagBindings",
            "bigquery.bireservations.get",
            "bigquery.capacityCommitments.get",
            "bigquery.capacityCommitments.list",
            "bigquery.config.get",
            "bigquery.connections.updateTag",
            "bigquery.datasets.create",
            "bigquery.datasets.createTagBinding",
            "bigquery.datasets.deleteTagBinding",
            "bigquery.datasets.get",
            "bigquery.datasets.getIamPolicy",
            "bigquery.datasets.listEffectiveTags",
            "bigquery.datasets.listTagBindings",
            "bigquery.datasets.updateTag",
            "bigquery.jobs.create",
            "bigquery.jobs.get",
            "bigquery.jobs.list",
            "bigquery.jobs.listAll",
            "bigquery.jobs.listExecutionMetadata",
            "bigquery.models.*",
            "bigquery.readsessions.*",
            "bigquery.reservationAssignments.list",
            "bigquery.reservationAssignments.search",
            "bigquery.reservations.get",
            "bigquery.reservations.list",
            "bigquery.reservations.listFailoverDatasets",
            "bigquery.reservations.use",
            "bigquery.routines.*",
            "bigquery.savedqueries.get",
            "bigquery.savedqueries.list",
            "bigquery.tables.create",
            "bigquery.tables.createIndex",
            "bigquery.tables.createSnapshot",
            "bigquery.tables.createTagBinding",
            "bigquery.tables.delete",
            "bigquery.tables.deleteIndex",
            "bigquery.tables.deleteTagBinding",
            "bigquery.tables.export",
            "bigquery.tables.get",
            "bigquery.tables.getData",
            "bigquery.tables.getIamPolicy",
            "bigquery.tables.list",
            "bigquery.tables.listEffectiveTags",
            "bigquery.tables.listTagBindings",
            "bigquery.tables.replicateData",
            "bigquery.tables.restoreSnapshot",
            "bigquery.tables.update",
            "bigquery.tables.updateData",
            "bigquery.tables.updateIndex",
            "bigquery.tables.updateTag",
            "bigquery.transfers.get",
            "bigquerymigration.translation.translate",
            "bigtable.authorizedViews.createTagBinding",
            "bigtable.authorizedViews.deleteTagBinding",
            "bigtable.authorizedViews.listEffectiveTags",
            "bigtable.authorizedViews.listTagBindings",
            "bigtable.instances.createTagBinding",
            "bigtable.instances.deleteTagBinding",
            "bigtable.instances.listEffectiveTags",
            "bigtable.instances.listTagBindings",
            "certificatemanager.certissuanceconfigs.createTagBinding",
            "certificatemanager.certissuanceconfigs.deleteTagBinding",
            "certificatemanager.certissuanceconfigs.listEffectiveTags",
            "certificatemanager.certissuanceconfigs.listTagBindings",
            "certificatemanager.certmapentries.createTagBinding",
            "certificatemanager.certmapentries.deleteTagBinding",
            "certificatemanager.certmapentries.listEffectiveTags",
            "certificatemanager.certmapentries.listTagBindings",
            "certificatemanager.certmaps.createTagBinding",
            "certificatemanager.certmaps.deleteTagBinding",
            "certificatemanager.certmaps.listEffectiveTags",
            "certificatemanager.certmaps.listTagBindings",
            "certificatemanager.certs.createTagBinding",
            "certificatemanager.certs.deleteTagBinding",
            "certificatemanager.certs.listEffectiveTags",
            "certificatemanager.certs.listTagBindings",
            "certificatemanager.dnsauthorizations.createTagBinding",
            "certificatemanager.dnsauthorizations.deleteTagBinding",
            "certificatemanager.dnsauthorizations.listEffectiveTags",
            "certificatemanager.dnsauthorizations.listTagBindings",
            "certificatemanager.trustconfigs.createTagBinding",
            "certificatemanager.trustconfigs.deleteTagBinding",
            "certificatemanager.trustconfigs.listEffectiveTags",
            "certificatemanager.trustconfigs.listTagBindings",
            "cloudaicompanion.entitlements.get",
            "cloudasset.assets.analyzeIamPolicy",
            "cloudasset.assets.analyzeMove",
            "cloudasset.assets.analyzeOrgPolicy",
            "cloudasset.assets.exportAccessLevel",
            "cloudasset.assets.exportAccessPolicy",
            "cloudasset.assets.exportAiplatformBatchPredictionJobs",
            "cloudasset.assets.exportAiplatformCustomJobs",
            "cloudasset.assets.exportAiplatformDataLabelingJobs",
            "cloudasset.assets.exportAiplatformDatasets",
            "cloudasset.assets.exportAiplatformEndpoints",
            "cloudasset.assets.exportAiplatformHyperparameterTuningJobs",
            "cloudasset.assets.exportAiplatformMetadataStores",
            "cloudasset.assets.exportAiplatformModelDeploymentMonitoringJobs",
            "cloudasset.assets.exportAiplatformModels",
            "cloudasset.assets.exportAiplatformPipelineJobs",
            "cloudasset.assets.exportAiplatformSpecialistPools",
            "cloudasset.assets.exportAiplatformTrainingPipelines",
            "cloudasset.assets.exportAllAccessPolicy",
            "cloudasset.assets.exportAnthosConnectedCluster",
            "cloudasset.assets.exportAnthosedgeCluster",
            "cloudasset.assets.exportApigatewayApi",
            "cloudasset.assets.exportApigatewayApiConfig",
            "cloudasset.assets.exportApigatewayGateway",
            "cloudasset.assets.exportApikeysKeys",
            "cloudasset.assets.exportAppengineApplications",
            "cloudasset.assets.exportAppengineServices",
            "cloudasset.assets.exportAppengineVersions",
            "cloudasset.assets.exportArtifactregistryDockerImages",
            "cloudasset.assets.exportArtifactregistryRepositories",
            "cloudasset.assets.exportAssuredWorkloadsWorkloads",
            "cloudasset.assets.exportBeyondCorpApiGateways",
            "cloudasset.assets.exportBeyondCorpAppConnections",
            "cloudasset.assets.exportBeyondCorpAppConnectors",
            "cloudasset.assets.exportBeyondCorpAppGateways",
            "cloudasset.assets.exportBeyondCorpClientConnectorServices",
            "cloudasset.assets.exportBeyondCorpClientGateways",
            "cloudasset.assets.exportBigqueryDatasets",
            "cloudasset.assets.exportBigqueryModels",
            "cloudasset.assets.exportBigqueryTables",
            "cloudasset.assets.exportBigtableAppProfile",
            "cloudasset.assets.exportBigtableBackup",
            "cloudasset.assets.exportBigtableCluster",
            "cloudasset.assets.exportBigtableInstance",
            "cloudasset.assets.exportBigtableTable",
            "cloudasset.assets.exportCloudAssetFeeds",
            "cloudasset.assets.exportCloudDeployDeliveryPipelines",
            "cloudasset.assets.exportCloudDeployReleases",
            "cloudasset.assets.exportCloudDeployRollouts",
            "cloudasset.assets.exportCloudDeployTargets",
            "cloudasset.assets.exportCloudDocumentAIEvaluation",
            "cloudasset.assets.exportCloudDocumentAIHumanReviewConfig",
            "cloudasset.assets.exportCloudDocumentAILabelerPool",
            "cloudasset.assets.exportCloudDocumentAIProcessor",
            "cloudasset.assets.exportCloudDocumentAIProcessorVersion",
            "cloudasset.assets.exportCloudbillingBillingAccounts",
            "cloudasset.assets.exportCloudbillingProjectBillingInfos",
            "cloudasset.assets.exportCloudfunctionsFunctions",
            "cloudasset.assets.exportCloudfunctionsGen2Functions",
            "cloudasset.assets.exportCloudkmsCryptoKeyVersions",
            "cloudasset.assets.exportCloudkmsCryptoKeys",
            "cloudasset.assets.exportCloudkmsEkmConnections",
            "cloudasset.assets.exportCloudkmsImportJobs",
            "cloudasset.assets.exportCloudkmsKeyRings",
            "cloudasset.assets.exportCloudmemcacheInstances",
            "cloudasset.assets.exportCloudresourcemanagerFolders",
            "cloudasset.assets.exportCloudresourcemanagerOrganizations",
            "cloudasset.assets.exportCloudresourcemanagerProjects",
            "cloudasset.assets.exportCloudresourcemanagerTagBindings",
            "cloudasset.assets.exportCloudresourcemanagerTagKeys",
            "cloudasset.assets.exportCloudresourcemanagerTagValues",
            "cloudasset.assets.exportComposerEnvironments",
            "cloudasset.assets.exportComputeAddress",
            "cloudasset.assets.exportComputeAutoscalers",
            "cloudasset.assets.exportComputeBackendBuckets",
            "cloudasset.assets.exportComputeBackendServices",
            "cloudasset.assets.exportComputeCommitments",
            "cloudasset.assets.exportComputeDisks",
            "cloudasset.assets.exportComputeExternalVpnGateways",
            "cloudasset.assets.exportComputeFirewallPolicies",
            "cloudasset.assets.exportComputeFirewalls",
            "cloudasset.assets.exportComputeForwardingRules",
            "cloudasset.assets.exportComputeGlobalAddress",
            "cloudasset.assets.exportComputeGlobalForwardingRules",
            "cloudasset.assets.exportComputeHealthChecks",
            "cloudasset.assets.exportComputeHttpHealthChecks",
            "cloudasset.assets.exportComputeHttpsHealthChecks",
            "cloudasset.assets.exportComputeImages",
            "cloudasset.assets.exportComputeInstanceGroupManagers",
            "cloudasset.assets.exportComputeInstanceGroups",
            "cloudasset.assets.exportComputeInstanceTemplates",
            "cloudasset.assets.exportComputeInstances",
            "cloudasset.assets.exportComputeInterconnect",
            "cloudasset.assets.exportComputeInterconnectAttachment",
            "cloudasset.assets.exportComputeLicenses",
            "cloudasset.assets.exportComputeNetworkEndpointGroups",
            "cloudasset.assets.exportComputeNetworks",
            "cloudasset.assets.exportComputeNodeGroups",
            "cloudasset.assets.exportComputeNodeTemplates",
            "cloudasset.assets.exportComputePacketMirrorings",
            "cloudasset.assets.exportComputeProjects",
            "cloudasset.assets.exportComputeRegionAutoscaler",
            "cloudasset.assets.exportComputeRegionBackendServices",
            "cloudasset.assets.exportComputeRegionDisk",
            "cloudasset.assets.exportComputeRegionInstanceGroup",
            "cloudasset.assets.exportComputeRegionInstanceGroupManager",
            "cloudasset.assets.exportComputeReservations",
            "cloudasset.assets.exportComputeResourcePolicies",
            "cloudasset.assets.exportComputeRouters",
            "cloudasset.assets.exportComputeRoutes",
            "cloudasset.assets.exportComputeSecurityPolicy",
            "cloudasset.assets.exportComputeServiceAttachments",
            "cloudasset.assets.exportComputeSnapshots",
            "cloudasset.assets.exportComputeSslCertificates",
            "cloudasset.assets.exportComputeSslPolicies",
            "cloudasset.assets.exportComputeSubnetworks",
            "cloudasset.assets.exportComputeTargetHttpProxies",
            "cloudasset.assets.exportComputeTargetHttpsProxies",
            "cloudasset.assets.exportComputeTargetInstances",
            "cloudasset.assets.exportComputeTargetPools",
            "cloudasset.assets.exportComputeTargetSslProxies",
            "cloudasset.assets.exportComputeTargetTcpProxies",
            "cloudasset.assets.exportComputeTargetVpnGateways",
            "cloudasset.assets.exportComputeUrlMaps",
            "cloudasset.assets.exportComputeVpnGateways",
            "cloudasset.assets.exportComputeVpnTunnels",
            "cloudasset.assets.exportConnectorsConnections",
            "cloudasset.assets.exportConnectorsConnectorVersions",
            "cloudasset.assets.exportConnectorsConnectors",
            "cloudasset.assets.exportConnectorsProviders",
            "cloudasset.assets.exportConnectorsRuntimeConfigs",
            "cloudasset.assets.exportContainerAppsDeployment",
            "cloudasset.assets.exportContainerAppsReplicaSets",
            "cloudasset.assets.exportContainerBatchJobs",
            "cloudasset.assets.exportContainerClusterrole",
            "cloudasset.assets.exportContainerClusterrolebinding",
            "cloudasset.assets.exportContainerClusters",
            "cloudasset.assets.exportContainerExtensionsIngresses",
            "cloudasset.assets.exportContainerJobs",
            "cloudasset.assets.exportContainerNamespace",
            "cloudasset.assets.exportContainerNetworkingIngresses",
            "cloudasset.assets.exportContainerNetworkingNetworkPolicies",
            "cloudasset.assets.exportContainerNode",
            "cloudasset.assets.exportContainerNodepool",
            "cloudasset.assets.exportContainerPod",
            "cloudasset.assets.exportContainerReplicaSets",
            "cloudasset.assets.exportContainerRole",
            "cloudasset.assets.exportContainerRolebinding",
            "cloudasset.assets.exportContainerServices",
            "cloudasset.assets.exportContainerregistryImage",
            "cloudasset.assets.exportDataMigrationConnectionProfiles",
            "cloudasset.assets.exportDataMigrationMigrationJobs",
            "cloudasset.assets.exportDataflowJobs",
            "cloudasset.assets.exportDatafusionInstance",
            "cloudasset.assets.exportDataplexAssets",
            "cloudasset.assets.exportDataplexLakes",
            "cloudasset.assets.exportDataplexTasks",
            "cloudasset.assets.exportDataplexZones",
            "cloudasset.assets.exportDataprocAutoscalingPolicies",
            "cloudasset.assets.exportDataprocBatches",
            "cloudasset.assets.exportDataprocClusters",
            "cloudasset.assets.exportDataprocJobs",
            "cloudasset.assets.exportDataprocSessions",
            "cloudasset.assets.exportDataprocWorkflowTemplates",
            "cloudasset.assets.exportDatastreamConnectionProfile",
            "cloudasset.assets.exportDatastreamPrivateConnection",
            "cloudasset.assets.exportDatastreamStream",
            "cloudasset.assets.exportDialogflowAgents",
            "cloudasset.assets.exportDialogflowConversationProfiles",
            "cloudasset.assets.exportDialogflowKnowledgeBases",
            "cloudasset.assets.exportDialogflowLocationSettings",
            "cloudasset.assets.exportDlpDeidentifyTemplates",
            "cloudasset.assets.exportDlpDlpJobs",
            "cloudasset.assets.exportDlpInspectTemplates",
            "cloudasset.assets.exportDlpJobTriggers",
            "cloudasset.assets.exportDlpStoredInfoTypes",
            "cloudasset.assets.exportDnsManagedZones",
            "cloudasset.assets.exportDnsPolicies",
            "cloudasset.assets.exportDomainsRegistrations",
            "cloudasset.assets.exportEventarcTriggers",
            "cloudasset.assets.exportFileBackups",
            "cloudasset.assets.exportFileInstances",
            "cloudasset.assets.exportFirebaseAppInfos",
            "cloudasset.assets.exportFirebaseProjects",
            "cloudasset.assets.exportFirestoreDatabases",
            "cloudasset.assets.exportGKEHubFeatures",
            "cloudasset.assets.exportGKEHubMemberships",
            "cloudasset.assets.exportGameservicesGameServerClusters",
            "cloudasset.assets.exportGameservicesGameServerConfigs",
            "cloudasset.assets.exportGameservicesGameServerDeployments",
            "cloudasset.assets.exportGameservicesRealms",
            "cloudasset.assets.exportGkeBackupBackupPlans",
            "cloudasset.assets.exportGkeBackupBackups",
            "cloudasset.assets.exportGkeBackupRestorePlans",
            "cloudasset.assets.exportGkeBackupRestores",
            "cloudasset.assets.exportGkeBackupVolumeBackups",
            "cloudasset.assets.exportGkeBackupVolumeRestores",
            "cloudasset.assets.exportHealthcareConsentStores",
            "cloudasset.assets.exportHealthcareDatasets",
            "cloudasset.assets.exportHealthcareDicomStores",
            "cloudasset.assets.exportHealthcareFhirStores",
            "cloudasset.assets.exportHealthcareHl7V2Stores",
            "cloudasset.assets.exportIamPolicy",
            "cloudasset.assets.exportIamRoles",
            "cloudasset.assets.exportIamServiceAccountKeys",
            "cloudasset.assets.exportIamServiceAccounts",
            "cloudasset.assets.exportIapTunnel",
            "cloudasset.assets.exportIapTunnelInstances",
            "cloudasset.assets.exportIapTunnelZones",
            "cloudasset.assets.exportIapWeb",
            "cloudasset.assets.exportIapWebServiceVersion",
            "cloudasset.assets.exportIapWebServices",
            "cloudasset.assets.exportIapWebType",
            "cloudasset.assets.exportIdsEndpoints",
            "cloudasset.assets.exportIntegrationsAuthConfigs",
            "cloudasset.assets.exportIntegrationsCertificates",
            "cloudasset.assets.exportIntegrationsExecutions",
            "cloudasset.assets.exportIntegrationsIntegrationVersions",
            "cloudasset.assets.exportIntegrationsIntegrations",
            "cloudasset.assets.exportIntegrationsSfdcChannels",
            "cloudasset.assets.exportIntegrationsSfdcInstances",
            "cloudasset.assets.exportIntegrationsSuspensions",
            "cloudasset.assets.exportLoggingLogMetrics",
            "cloudasset.assets.exportLoggingLogSinks",
            "cloudasset.assets.exportManagedidentitiesDomain",
            "cloudasset.assets.exportMetastoreBackups",
            "cloudasset.assets.exportMetastoreMetadataImports",
            "cloudasset.assets.exportMetastoreServices",
            "cloudasset.assets.exportMonitoringAlertPolicies",
            "cloudasset.assets.exportNetworkConnectivityHubs",
            "cloudasset.assets.exportNetworkConnectivitySpokes",
            "cloudasset.assets.exportNetworkManagementConnectivityTests",
            "cloudasset.assets.exportNetworkServicesEndpointPolicies",
            "cloudasset.assets.exportNetworkServicesGateways",
            "cloudasset.assets.exportNetworkServicesGrpcRoutes",
            "cloudasset.assets.exportNetworkServicesHttpRoutes",
            "cloudasset.assets.exportNetworkServicesMeshes",
            "cloudasset.assets.exportNetworkServicesServiceBindings",
            "cloudasset.assets.exportNetworkServicesTcpRoutes",
            "cloudasset.assets.exportNetworkServicesTlsRoutes",
            "cloudasset.assets.exportOSConfigOSPolicyAssignmentReports",
            "cloudasset.assets.exportOSConfigOSPolicyAssignments",
            "cloudasset.assets.exportOSConfigVulnerabilityReports",
            "cloudasset.assets.exportOSInventories",
            "cloudasset.assets.exportOrgPolicy",
            "cloudasset.assets.exportPatchDeployments",
            "cloudasset.assets.exportPubsubSnapshots",
            "cloudasset.assets.exportPubsubSubscriptions",
            "cloudasset.assets.exportPubsubTopics",
            "cloudasset.assets.exportRedisInstances",
            "cloudasset.assets.exportResource",
            "cloudasset.assets.exportSecretManagerSecretVersions",
            "cloudasset.assets.exportSecretManagerSecrets",
            "cloudasset.assets.exportServiceDirectoryNamespaces",
            "cloudasset.assets.exportServicePerimeter",
            "cloudasset.assets.exportServiceconsumermanagementConsumerProperty",
            "cloudasset.assets.exportServiceconsumermanagementConsumerQuotaLimits",
            "cloudasset.assets.exportServiceconsumermanagementConsumers",
            "cloudasset.assets.exportServiceconsumermanagementProducerOverrides",
            "cloudasset.assets.exportServiceconsumermanagementTenancyUnits",
            "cloudasset.assets.exportServiceconsumermanagementVisibility",
            "cloudasset.assets.exportServicemanagementServices",
            "cloudasset.assets.exportServiceusageAdminOverrides",
            "cloudasset.assets.exportServiceusageConsumerOverrides",
            "cloudasset.assets.exportServiceusageServices",
            "cloudasset.assets.exportSpannerBackups",
            "cloudasset.assets.exportSpannerDatabases",
            "cloudasset.assets.exportSpannerInstances",
            "cloudasset.assets.exportSpeakerIdPhrases",
            "cloudasset.assets.exportSpeakerIdSettings",
            "cloudasset.assets.exportSpeakerIdSpeakers",
            "cloudasset.assets.exportSpeechCustomClasses",
            "cloudasset.assets.exportSpeechPhraseSets",
            "cloudasset.assets.exportSqladminBackupRuns",
            "cloudasset.assets.exportSqladminInstances",
            "cloudasset.assets.exportStorageBuckets",
            "cloudasset.assets.exportTpuNodes",
            "cloudasset.assets.exportVpcaccessConnector",
            "cloudasset.assets.listAccessLevel",
            "cloudasset.assets.listAccessPolicy",
            "cloudasset.assets.listAiplatformBatchPredictionJobs",
            "cloudasset.assets.listAiplatformCustomJobs",
            "cloudasset.assets.listAiplatformDataLabelingJobs",
            "cloudasset.assets.listAiplatformDatasets",
            "cloudasset.assets.listAiplatformEndpoints",
            "cloudasset.assets.listAiplatformHyperparameterTuningJobs",
            "cloudasset.assets.listAiplatformMetadataStores",
            "cloudasset.assets.listAiplatformModelDeploymentMonitoringJobs",
            "cloudasset.assets.listAiplatformModels",
            "cloudasset.assets.listAiplatformPipelineJobs",
            "cloudasset.assets.listAiplatformSpecialistPools",
            "cloudasset.assets.listAiplatformTrainingPipelines",
            "cloudasset.assets.listAllAccessPolicy",
            "cloudasset.assets.listAnthosConnectedCluster",
            "cloudasset.assets.listAnthosedgeCluster",
            "cloudasset.assets.listApigatewayApi",
            "cloudasset.assets.listApigatewayApiConfig",
            "cloudasset.assets.listApigatewayGateway",
            "cloudasset.assets.listApikeysKeys",
            "cloudasset.assets.listAppengineApplications",
            "cloudasset.assets.listAppengineServices",
            "cloudasset.assets.listAppengineVersions",
            "cloudasset.assets.listArtifactregistryDockerImages",
            "cloudasset.assets.listArtifactregistryRepositories",
            "cloudasset.assets.listAssuredWorkloadsWorkloads",
            "cloudasset.assets.listBeyondCorpApiGateways",
            "cloudasset.assets.listBeyondCorpAppConnections",
            "cloudasset.assets.listBeyondCorpAppConnectors",
            "cloudasset.assets.listBeyondCorpAppGateways",
            "cloudasset.assets.listBeyondCorpClientConnectorServices",
            "cloudasset.assets.listBeyondCorpClientGateways",
            "cloudasset.assets.listBigqueryDatasets",
            "cloudasset.assets.listBigqueryModels",
            "cloudasset.assets.listBigqueryTables",
            "cloudasset.assets.listBigtableAppProfile",
            "cloudasset.assets.listBigtableBackup",
            "cloudasset.assets.listBigtableCluster",
            "cloudasset.assets.listBigtableInstance",
            "cloudasset.assets.listBigtableTable",
            "cloudasset.assets.listCloudAssetFeeds",
            "cloudasset.assets.listCloudDeployDeliveryPipelines",
            "cloudasset.assets.listCloudDeployReleases",
            "cloudasset.assets.listCloudDeployRollouts",
            "cloudasset.assets.listCloudDeployTargets",
            "cloudasset.assets.listCloudDocumentAIEvaluation",
            "cloudasset.assets.listCloudDocumentAIHumanReviewConfig",
            "cloudasset.assets.listCloudDocumentAILabelerPool",
            "cloudasset.assets.listCloudDocumentAIProcessor",
            "cloudasset.assets.listCloudDocumentAIProcessorVersion",
            "cloudasset.assets.listCloudbillingBillingAccounts",
            "cloudasset.assets.listCloudbillingProjectBillingInfos",
            "cloudasset.assets.listCloudfunctionsFunctions",
            "cloudasset.assets.listCloudfunctionsGen2Functions",
            "cloudasset.assets.listCloudkmsCryptoKeyVersions",
            "cloudasset.assets.listCloudkmsCryptoKeys",
            "cloudasset.assets.listCloudkmsEkmConnections",
            "cloudasset.assets.listCloudkmsImportJobs",
            "cloudasset.assets.listCloudkmsKeyRings",
            "cloudasset.assets.listCloudmemcacheInstances",
            "cloudasset.assets.listCloudresourcemanagerFolders",
            "cloudasset.assets.listCloudresourcemanagerOrganizations",
            "cloudasset.assets.listCloudresourcemanagerProjects",
            "cloudasset.assets.listCloudresourcemanagerTagBindings",
            "cloudasset.assets.listCloudresourcemanagerTagKeys",
            "cloudasset.assets.listCloudresourcemanagerTagValues",
            "cloudasset.assets.listComposerEnvironments",
            "cloudasset.assets.listComputeAddress",
            "cloudasset.assets.listComputeAutoscalers",
            "cloudasset.assets.listComputeBackendBuckets",
            "cloudasset.assets.listComputeBackendServices",
            "cloudasset.assets.listComputeCommitments",
            "cloudasset.assets.listComputeDisks",
            "cloudasset.assets.listComputeExternalVpnGateways",
            "cloudasset.assets.listComputeFirewallPolicies",
            "cloudasset.assets.listComputeFirewalls",
            "cloudasset.assets.listComputeForwardingRules",
            "cloudasset.assets.listComputeGlobalAddress",
            "cloudasset.assets.listComputeGlobalForwardingRules",
            "cloudasset.assets.listComputeHealthChecks",
            "cloudasset.assets.listComputeHttpHealthChecks",
            "cloudasset.assets.listComputeHttpsHealthChecks",
            "cloudasset.assets.listComputeImages",
            "cloudasset.assets.listComputeInstanceGroupManagers",
            "cloudasset.assets.listComputeInstanceGroups",
            "cloudasset.assets.listComputeInstanceTemplates",
            "cloudasset.assets.listComputeInstances",
            "cloudasset.assets.listComputeInterconnect",
            "cloudasset.assets.listComputeInterconnectAttachment",
            "cloudasset.assets.listComputeLicenses",
            "cloudasset.assets.listComputeNetworkEndpointGroups",
            "cloudasset.assets.listComputeNetworks",
            "cloudasset.assets.listComputeNodeGroups",
            "cloudasset.assets.listComputeNodeTemplates",
            "cloudasset.assets.listComputePacketMirrorings",
            "cloudasset.assets.listComputeProjects",
            "cloudasset.assets.listComputeRegionAutoscaler",
            "cloudasset.assets.listComputeRegionBackendServices",
            "cloudasset.assets.listComputeRegionDisk",
            "cloudasset.assets.listComputeRegionInstanceGroup",
            "cloudasset.assets.listComputeRegionInstanceGroupManager",
            "cloudasset.assets.listComputeReservations",
            "cloudasset.assets.listComputeResourcePolicies",
            "cloudasset.assets.listComputeRouters",
            "cloudasset.assets.listComputeRoutes",
            "cloudasset.assets.listComputeSecurityPolicy",
            "cloudasset.assets.listComputeServiceAttachments",
            "cloudasset.assets.listComputeSnapshots",
            "cloudasset.assets.listComputeSslCertificates",
            "cloudasset.assets.listComputeSslPolicies",
            "cloudasset.assets.listComputeSubnetworks",
            "cloudasset.assets.listComputeTargetHttpProxies",
            "cloudasset.assets.listComputeTargetHttpsProxies",
            "cloudasset.assets.listComputeTargetInstances",
            "cloudasset.assets.listComputeTargetPools",
            "cloudasset.assets.listComputeTargetSslProxies",
            "cloudasset.assets.listComputeTargetTcpProxies",
            "cloudasset.assets.listComputeTargetVpnGateways",
            "cloudasset.assets.listComputeUrlMaps",
            "cloudasset.assets.listComputeVpnGateways",
            "cloudasset.assets.listComputeVpnTunnels",
            "cloudasset.assets.listConnectorsConnections",
            "cloudasset.assets.listConnectorsConnectorVersions",
            "cloudasset.assets.listConnectorsConnectors",
            "cloudasset.assets.listConnectorsProviders",
            "cloudasset.assets.listConnectorsRuntimeConfigs",
            "cloudasset.assets.listContainerAppsDeployment",
            "cloudasset.assets.listContainerAppsReplicaSets",
            "cloudasset.assets.listContainerBatchJobs",
            "cloudasset.assets.listContainerClusterrole",
            "cloudasset.assets.listContainerClusterrolebinding",
            "cloudasset.assets.listContainerClusters",
            "cloudasset.assets.listContainerExtensionsIngresses",
            "cloudasset.assets.listContainerJobs",
            "cloudasset.assets.listContainerNamespace",
            "cloudasset.assets.listContainerNetworkingIngresses",
            "cloudasset.assets.listContainerNetworkingNetworkPolicies",
            "cloudasset.assets.listContainerNode",
            "cloudasset.assets.listContainerNodepool",
            "cloudasset.assets.listContainerPod",
            "cloudasset.assets.listContainerReplicaSets",
            "cloudasset.assets.listContainerRole",
            "cloudasset.assets.listContainerRolebinding",
            "cloudasset.assets.listContainerServices",
            "cloudasset.assets.listContainerregistryImage",
            "cloudasset.assets.listDataMigrationConnectionProfiles",
            "cloudasset.assets.listDataMigrationMigrationJobs",
            "cloudasset.assets.listDataflowJobs",
            "cloudasset.assets.listDatafusionInstance",
            "cloudasset.assets.listDataplexAssets",
            "cloudasset.assets.listDataplexLakes",
            "cloudasset.assets.listDataplexTasks",
            "cloudasset.assets.listDataplexZones",
            "cloudasset.assets.listDataprocAutoscalingPolicies",
            "cloudasset.assets.listDataprocBatches",
            "cloudasset.assets.listDataprocClusters",
            "cloudasset.assets.listDataprocJobs",
            "cloudasset.assets.listDataprocSessions",
            "cloudasset.assets.listDataprocWorkflowTemplates",
            "cloudasset.assets.listDatastreamConnectionProfile",
            "cloudasset.assets.listDatastreamPrivateConnection",
            "cloudasset.assets.listDatastreamStream",
            "cloudasset.assets.listDialogflowAgents",
            "cloudasset.assets.listDialogflowConversationProfiles",
            "cloudasset.assets.listDialogflowKnowledgeBases",
            "cloudasset.assets.listDialogflowLocationSettings",
            "cloudasset.assets.listDlpDeidentifyTemplates",
            "cloudasset.assets.listDlpDlpJobs",
            "cloudasset.assets.listDlpInspectTemplates",
            "cloudasset.assets.listDlpJobTriggers",
            "cloudasset.assets.listDlpStoredInfoTypes",
            "cloudasset.assets.listDnsManagedZones",
            "cloudasset.assets.listDnsPolicies",
            "cloudasset.assets.listDomainsRegistrations",
            "cloudasset.assets.listEventarcTriggers",
            "cloudasset.assets.listFileBackups",
            "cloudasset.assets.listFileInstances",
            "cloudasset.assets.listFirebaseAppInfos",
            "cloudasset.assets.listFirebaseProjects",
            "cloudasset.assets.listFirestoreDatabases",
            "cloudasset.assets.listGKEHubFeatures",
            "cloudasset.assets.listGKEHubMemberships",
            "cloudasset.assets.listGameservicesGameServerClusters",
            "cloudasset.assets.listGameservicesGameServerConfigs",
            "cloudasset.assets.listGameservicesGameServerDeployments",
            "cloudasset.assets.listGameservicesRealms",
            "cloudasset.assets.listGkeBackupBackupPlans",
            "cloudasset.assets.listGkeBackupBackups",
            "cloudasset.assets.listGkeBackupRestorePlans",
            "cloudasset.assets.listGkeBackupRestores",
            "cloudasset.assets.listGkeBackupVolumeBackups",
            "cloudasset.assets.listGkeBackupVolumeRestores",
            "cloudasset.assets.listHealthcareConsentStores",
            "cloudasset.assets.listHealthcareDatasets",
            "cloudasset.assets.listHealthcareDicomStores",
            "cloudasset.assets.listHealthcareFhirStores",
            "cloudasset.assets.listHealthcareHl7V2Stores",
            "cloudasset.assets.listIamPolicy",
            "cloudasset.assets.listIamRoles",
            "cloudasset.assets.listIamServiceAccountKeys",
            "cloudasset.assets.listIamServiceAccounts",
            "cloudasset.assets.listIapTunnel",
            "cloudasset.assets.listIapTunnelInstances",
            "cloudasset.assets.listIapTunnelZones",
            "cloudasset.assets.listIapWeb",
            "cloudasset.assets.listIapWebServiceVersion",
            "cloudasset.assets.listIapWebServices",
            "cloudasset.assets.listIapWebType",
            "cloudasset.assets.listIdsEndpoints",
            "cloudasset.assets.listIntegrationsAuthConfigs",
            "cloudasset.assets.listIntegrationsCertificates",
            "cloudasset.assets.listIntegrationsExecutions",
            "cloudasset.assets.listIntegrationsIntegrationVersions",
            "cloudasset.assets.listIntegrationsIntegrations",
            "cloudasset.assets.listIntegrationsSfdcChannels",
            "cloudasset.assets.listIntegrationsSfdcInstances",
            "cloudasset.assets.listIntegrationsSuspensions",
            "cloudasset.assets.listLoggingLogMetrics",
            "cloudasset.assets.listLoggingLogSinks",
            "cloudasset.assets.listManagedidentitiesDomain",
            "cloudasset.assets.listMetastoreBackups",
            "cloudasset.assets.listMetastoreMetadataImports",
            "cloudasset.assets.listMetastoreServices",
            "cloudasset.assets.listMonitoringAlertPolicies",
            "cloudasset.assets.listNetworkConnectivityHubs",
            "cloudasset.assets.listNetworkConnectivitySpokes",
            "cloudasset.assets.listNetworkManagementConnectivityTests",
            "cloudasset.assets.listNetworkServicesEndpointPolicies",
            "cloudasset.assets.listNetworkServicesGateways",
            "cloudasset.assets.listNetworkServicesGrpcRoutes",
            "cloudasset.assets.listNetworkServicesHttpRoutes",
            "cloudasset.assets.listNetworkServicesMeshes",
            "cloudasset.assets.listNetworkServicesServiceBindings",
            "cloudasset.assets.listNetworkServicesTcpRoutes",
            "cloudasset.assets.listNetworkServicesTlsRoutes",
            "cloudasset.assets.listOSConfigOSPolicyAssignmentReports",
            "cloudasset.assets.listOSConfigOSPolicyAssignments",
            "cloudasset.assets.listOSConfigVulnerabilityReports",
            "cloudasset.assets.listOSInventories",
            "cloudasset.assets.listOrgPolicy",
            "cloudasset.assets.listPatchDeployments",
            "cloudasset.assets.listPubsubSnapshots",
            "cloudasset.assets.listPubsubSubscriptions",
            "cloudasset.assets.listPubsubTopics",
            "cloudasset.assets.listRedisInstances",
            "cloudasset.assets.listResource",
            "cloudasset.assets.listRunDomainMapping",
            "cloudasset.assets.listRunRevision",
            "cloudasset.assets.listRunService",
            "cloudasset.assets.listSecretManagerSecretVersions",
            "cloudasset.assets.listSecretManagerSecrets",
            "cloudasset.assets.listServiceDirectoryNamespaces",
            "cloudasset.assets.listServicePerimeter",
            "cloudasset.assets.listServiceconsumermanagementConsumerProperty",
            "cloudasset.assets.listServiceconsumermanagementConsumerQuotaLimits",
            "cloudasset.assets.listServiceconsumermanagementConsumers",
            "cloudasset.assets.listServiceconsumermanagementProducerOverrides",
            "cloudasset.assets.listServiceconsumermanagementTenancyUnits",
            "cloudasset.assets.listServiceconsumermanagementVisibility",
            "cloudasset.assets.listServicemanagementServices",
            "cloudasset.assets.listServiceusageAdminOverrides",
            "cloudasset.assets.listServiceusageConsumerOverrides",
            "cloudasset.assets.listServiceusageServices",
            "cloudasset.assets.listSpannerBackups",
            "cloudasset.assets.listSpannerDatabases",
            "cloudasset.assets.listSpannerInstances",
            "cloudasset.assets.listSpeakerIdPhrases",
            "cloudasset.assets.listSpeakerIdSettings",
            "cloudasset.assets.listSpeakerIdSpeakers",
            "cloudasset.assets.listSpeechCustomClasses",
            "cloudasset.assets.listSpeechPhraseSets",
            "cloudasset.assets.listSqladminBackupRuns",
            "cloudasset.assets.listSqladminInstances",
            "cloudasset.assets.listStorageBuckets",
            "cloudasset.assets.listTpuNodes",
            "cloudasset.assets.listVpcaccessConnector",
            "cloudasset.assets.queryAccessPolicy",
            "cloudasset.assets.queryIamPolicy",
            "cloudasset.assets.queryOSInventories",
            "cloudasset.assets.queryResource",
            "cloudasset.assets.searchAllIamPolicies",
            "cloudasset.assets.searchAllResources",
            "cloudasset.othercloudconnections.get",
            "cloudasset.othercloudconnections.list",
            "cloudasset.othercloudconnections.verify",
            "clouddeploy.deliveryPipelines.createTagBinding",
            "clouddeploy.deliveryPipelines.deleteTagBinding",
            "clouddeploy.deliveryPipelines.listEffectiveTags",
            "clouddeploy.deliveryPipelines.listTagBindings",
            "clouddeploy.targets.createTagBinding",
            "clouddeploy.targets.deleteTagBinding",
            "clouddeploy.targets.listEffectiveTags",
            "clouddeploy.targets.listTagBindings",
            "cloudkms.keyHandles.*",
            "cloudkms.keyRings.createTagBinding",
            "cloudkms.keyRings.deleteTagBinding",
            "cloudkms.keyRings.listEffectiveTags",
            "cloudkms.keyRings.listTagBindings",
            "cloudkms.operations.get",
            "cloudkms.projects.showEffectiveAutokeyConfig",
            "cloudsql.instances.connect",
            "cloudsql.instances.createTagBinding",
            "cloudsql.instances.deleteTagBinding",
            "cloudsql.instances.get",
            "cloudsql.instances.listEffectiveTags",
            "cloudsql.instances.listTagBindings",
            "cloudsql.instances.login",
            "compute.addresses.createTagBinding",
            "compute.addresses.deleteTagBinding",
            "compute.addresses.listEffectiveTags",
            "compute.addresses.listTagBindings",
            "compute.backendBuckets.createTagBinding",
            "compute.backendBuckets.deleteTagBinding",
            "compute.backendBuckets.listEffectiveTags",
            "compute.backendBuckets.listTagBindings",
            "compute.backendServices.createTagBinding",
            "compute.backendServices.deleteTagBinding",
            "compute.backendServices.listEffectiveTags",
            "compute.backendServices.listTagBindings",
            "compute.disks.createTagBinding",
            "compute.disks.deleteTagBinding",
            "compute.disks.listEffectiveTags",
            "compute.disks.listTagBindings",
            "compute.externalVpnGateways.createTagBinding",
            "compute.externalVpnGateways.deleteTagBinding",
            "compute.externalVpnGateways.listEffectiveTags",
            "compute.externalVpnGateways.listTagBindings",
            "compute.firewallPolicies.createTagBinding",
            "compute.firewallPolicies.deleteTagBinding",
            "compute.firewallPolicies.listEffectiveTags",
            "compute.firewallPolicies.listTagBindings",
            "compute.firewalls.createTagBinding",
            "compute.firewalls.deleteTagBinding",
            "compute.firewalls.listEffectiveTags",
            "compute.firewalls.listTagBindings",
            "compute.forwardingRules.createTagBinding",
            "compute.forwardingRules.deleteTagBinding",
            "compute.forwardingRules.listEffectiveTags",
            "compute.forwardingRules.listTagBindings",
            "compute.globalAddresses.createTagBinding",
            "compute.globalAddresses.deleteTagBinding",
            "compute.globalAddresses.listEffectiveTags",
            "compute.globalAddresses.listTagBindings",
            "compute.globalForwardingRules.createTagBinding",
            "compute.globalForwardingRules.deleteTagBinding",
            "compute.globalForwardingRules.listEffectiveTags",
            "compute.globalForwardingRules.listTagBindings",
            "compute.globalNetworkEndpointGroups.createTagBinding",
            "compute.globalNetworkEndpointGroups.deleteTagBinding",
            "compute.globalNetworkEndpointGroups.listEffectiveTags",
            "compute.globalNetworkEndpointGroups.listTagBindings",
            "compute.healthChecks.createTagBinding",
            "compute.healthChecks.deleteTagBinding",
            "compute.healthChecks.listEffectiveTags",
            "compute.healthChecks.listTagBindings",
            "compute.httpHealthChecks.createTagBinding",
            "compute.httpHealthChecks.deleteTagBinding",
            "compute.httpHealthChecks.listEffectiveTags",
            "compute.httpHealthChecks.listTagBindings",
            "compute.httpsHealthChecks.createTagBinding",
            "compute.httpsHealthChecks.deleteTagBinding",
            "compute.httpsHealthChecks.listEffectiveTags",
            "compute.httpsHealthChecks.listTagBindings",
            "compute.images.createTagBinding",
            "compute.images.deleteTagBinding",
            "compute.images.listEffectiveTags",
            "compute.images.listTagBindings",
            "compute.instanceGroupManagers.createTagBinding",
            "compute.instanceGroupManagers.deleteTagBinding",
            "compute.instanceGroupManagers.listEffectiveTags",
            "compute.instanceGroupManagers.listTagBindings",
            "compute.instanceGroups.createTagBinding",
            "compute.instanceGroups.deleteTagBinding",
            "compute.instanceGroups.listEffectiveTags",
            "compute.instanceGroups.listTagBindings",
            "compute.instances.createTagBinding",
            "compute.instances.deleteTagBinding",
            "compute.instances.listEffectiveTags",
            "compute.instances.listTagBindings",
            "compute.interconnectAttachments.createTagBinding",
            "compute.interconnectAttachments.deleteTagBinding",
            "compute.interconnectAttachments.listEffectiveTags",
            "compute.interconnectAttachments.listTagBindings",
            "compute.interconnects.createTagBinding",
            "compute.interconnects.deleteTagBinding",
            "compute.interconnects.listEffectiveTags",
            "compute.interconnects.listTagBindings",
            "compute.networkAttachments.createTagBinding",
            "compute.networkAttachments.deleteTagBinding",
            "compute.networkAttachments.listEffectiveTags",
            "compute.networkAttachments.listTagBindings",
            "compute.networkEdgeSecurityServices.createTagBinding",
            "compute.networkEdgeSecurityServices.deleteTagBinding",
            "compute.networkEdgeSecurityServices.listEffectiveTags",
            "compute.networkEdgeSecurityServices.listTagBindings",
            "compute.networkEndpointGroups.createTagBinding",
            "compute.networkEndpointGroups.deleteTagBinding",
            "compute.networkEndpointGroups.listEffectiveTags",
            "compute.networkEndpointGroups.listTagBindings",
            "compute.networks.createTagBinding",
            "compute.networks.deleteTagBinding",
            "compute.networks.listEffectiveTags",
            "compute.networks.listTagBindings",
            "compute.packetMirrorings.createTagBinding",
            "compute.packetMirrorings.deleteTagBinding",
            "compute.packetMirrorings.listEffectiveTags",
            "compute.packetMirrorings.listTagBindings",
            "compute.publicDelegatedPrefixes.createTagBinding",
            "compute.publicDelegatedPrefixes.deleteTagBinding",
            "compute.publicDelegatedPrefixes.listEffectiveTags",
            "compute.publicDelegatedPrefixes.listTagBindings",
            "compute.regionBackendServices.createTagBinding",
            "compute.regionBackendServices.deleteTagBinding",
            "compute.regionBackendServices.listEffectiveTags",
            "compute.regionBackendServices.listTagBindings",
            "compute.regionFirewallPolicies.createTagBinding",
            "compute.regionFirewallPolicies.deleteTagBinding",
            "compute.regionFirewallPolicies.listEffectiveTags",
            "compute.regionFirewallPolicies.listTagBindings",
            "compute.regionHealthChecks.createTagBinding",
            "compute.regionHealthChecks.deleteTagBinding",
            "compute.regionHealthChecks.listEffectiveTags",
            "compute.regionHealthChecks.listTagBindings",
            "compute.regionNetworkEndpointGroups.createTagBinding",
            "compute.regionNetworkEndpointGroups.deleteTagBinding",
            "compute.regionNetworkEndpointGroups.listEffectiveTags",
            "compute.regionNetworkEndpointGroups.listTagBindings",
            "compute.regionSecurityPolicies.createTagBinding",
            "compute.regionSecurityPolicies.deleteTagBinding",
            "compute.regionSecurityPolicies.listEffectiveTags",
            "compute.regionSecurityPolicies.listTagBindings",
            "compute.regionSslCertificates.createTagBinding",
            "compute.regionSslCertificates.deleteTagBinding",
            "compute.regionSslCertificates.listEffectiveTags",
            "compute.regionSslCertificates.listTagBindings",
            "compute.regionSslPolicies.createTagBinding",
            "compute.regionSslPolicies.deleteTagBinding",
            "compute.regionSslPolicies.listEffectiveTags",
            "compute.regionSslPolicies.listTagBindings",
            "compute.regionTargetHttpProxies.createTagBinding",
            "compute.regionTargetHttpProxies.deleteTagBinding",
            "compute.regionTargetHttpProxies.listEffectiveTags",
            "compute.regionTargetHttpProxies.listTagBindings",
            "compute.regionTargetHttpsProxies.createTagBinding",
            "compute.regionTargetHttpsProxies.deleteTagBinding",
            "compute.regionTargetHttpsProxies.listEffectiveTags",
            "compute.regionTargetHttpsProxies.listTagBindings",
            "compute.regionTargetTcpProxies.createTagBinding",
            "compute.regionTargetTcpProxies.deleteTagBinding",
            "compute.regionTargetTcpProxies.listEffectiveTags",
            "compute.regionTargetTcpProxies.listTagBindings",
            "compute.regionUrlMaps.createTagBinding",
            "compute.regionUrlMaps.deleteTagBinding",
            "compute.regionUrlMaps.listEffectiveTags",
            "compute.regionUrlMaps.listTagBindings",
            "compute.routers.createTagBinding",
            "compute.routers.deleteTagBinding",
            "compute.routers.listEffectiveTags",
            "compute.routers.listTagBindings",
            "compute.routes.createTagBinding",
            "compute.routes.deleteTagBinding",
            "compute.routes.listEffectiveTags",
            "compute.routes.listTagBindings",
            "compute.securityPolicies.createTagBinding",
            "compute.securityPolicies.deleteTagBinding",
            "compute.securityPolicies.listEffectiveTags",
            "compute.securityPolicies.listTagBindings",
            "compute.serviceAttachments.createTagBinding",
            "compute.serviceAttachments.deleteTagBinding",
            "compute.serviceAttachments.listEffectiveTags",
            "compute.serviceAttachments.listTagBindings",
            "compute.snapshots.createTagBinding",
            "compute.snapshots.deleteTagBinding",
            "compute.snapshots.listEffectiveTags",
            "compute.snapshots.listTagBindings",
            "compute.sslCertificates.createTagBinding",
            "compute.sslCertificates.deleteTagBinding",
            "compute.sslCertificates.listEffectiveTags",
            "compute.sslCertificates.listTagBindings",
            "compute.sslPolicies.createTagBinding",
            "compute.sslPolicies.deleteTagBinding",
            "compute.sslPolicies.listEffectiveTags",
            "compute.sslPolicies.listTagBindings",
            "compute.subnetworks.createTagBinding",
            "compute.subnetworks.deleteTagBinding",
            "compute.subnetworks.listEffectiveTags",
            "compute.subnetworks.listTagBindings",
            "compute.targetGrpcProxies.createTagBinding",
            "compute.targetGrpcProxies.deleteTagBinding",
            "compute.targetGrpcProxies.listEffectiveTags",
            "compute.targetGrpcProxies.listTagBindings",
            "compute.targetHttpProxies.createTagBinding",
            "compute.targetHttpProxies.deleteTagBinding",
            "compute.targetHttpProxies.listEffectiveTags",
            "compute.targetHttpProxies.listTagBindings",
            "compute.targetHttpsProxies.createTagBinding",
            "compute.targetHttpsProxies.deleteTagBinding",
            "compute.targetHttpsProxies.listEffectiveTags",
            "compute.targetHttpsProxies.listTagBindings",
            "compute.targetInstances.createTagBinding",
            "compute.targetInstances.deleteTagBinding",
            "compute.targetInstances.listEffectiveTags",
            "compute.targetInstances.listTagBindings",
            "compute.targetPools.createTagBinding",
            "compute.targetPools.deleteTagBinding",
            "compute.targetPools.listEffectiveTags",
            "compute.targetPools.listTagBindings",
            "compute.targetSslProxies.createTagBinding",
            "compute.targetSslProxies.deleteTagBinding",
            "compute.targetSslProxies.listEffectiveTags",
            "compute.targetSslProxies.listTagBindings",
            "compute.targetTcpProxies.createTagBinding",
            "compute.targetTcpProxies.deleteTagBinding",
            "compute.targetTcpProxies.listEffectiveTags",
            "compute.targetTcpProxies.listTagBindings",
            "compute.targetVpnGateways.createTagBinding",
            "compute.targetVpnGateways.deleteTagBinding",
            "compute.targetVpnGateways.listEffectiveTags",
            "compute.targetVpnGateways.listTagBindings",
            "compute.urlMaps.createTagBinding",
            "compute.urlMaps.deleteTagBinding",
            "compute.urlMaps.listEffectiveTags",
            "compute.urlMaps.listTagBindings",
            "compute.vpnGateways.createTagBinding",
            "compute.vpnGateways.deleteTagBinding",
            "compute.vpnGateways.listEffectiveTags",
            "compute.vpnGateways.listTagBindings",
            "compute.vpnTunnels.createTagBinding",
            "compute.vpnTunnels.deleteTagBinding",
            "compute.vpnTunnels.listEffectiveTags",
            "compute.vpnTunnels.listTagBindings",
            "container.clusters.createTagBinding",
            "container.clusters.deleteTagBinding",
            "container.clusters.listEffectiveTags",
            "container.clusters.listTagBindings",
            "datacatalog.categories.fineGrainedGet",
            "datacatalog.entries.updateTag",
            "datacatalog.entryGroups.updateTag",
            "datacatalog.tagTemplates.create",
            "datacatalog.tagTemplates.get",
            "datacatalog.tagTemplates.getTag",
            "datacatalog.tagTemplates.use",
            "dataform.locations.*",
            "dataform.repositories.create",
            "dataform.repositories.list",
            "datafusion.instances.createTagBinding",
            "datafusion.instances.deleteTagBinding",
            "datafusion.instances.listEffectiveTags",
            "datafusion.instances.listTagBindings",
            "dataplex.entries.get",
            "dataplex.projects.search",
            "datastore.databases.createTagBinding",
            "datastore.databases.deleteTagBinding",
            "datastore.databases.listEffectiveTags",
            "datastore.databases.listTagBindings",
            "datastream.connectionProfiles.createTagBinding",
            "datastream.connectionProfiles.deleteTagBinding",
            "datastream.connectionProfiles.listEffectiveTags",
            "datastream.connectionProfiles.listTagBindings",
            "datastream.privateConnections.createTagBinding",
            "datastream.privateConnections.deleteTagBinding",
            "datastream.privateConnections.listEffectiveTags",
            "datastream.privateConnections.listTagBindings",
            "datastream.streams.createTagBinding",
            "datastream.streams.deleteTagBinding",
            "datastream.streams.listEffectiveTags",
            "datastream.streams.listTagBindings",
            "dlp.*",
            "domains.registrations.createTagBinding",
            "domains.registrations.deleteTagBinding",
            "domains.registrations.listEffectiveTags",
            "domains.registrations.listTagBindings",
            "file.backups.createTagBinding",
            "file.backups.deleteTagBinding",
            "file.backups.listEffectiveTags",
            "file.backups.listTagBindings",
            "file.instances.createTagBinding",
            "file.instances.deleteTagBinding",
            "file.instances.listEffectiveTags",
            "file.instances.listTagBindings",
            "file.snapshots.createTagBinding",
            "file.snapshots.deleteTagBinding",
            "file.snapshots.listEffectiveTags",
            "file.snapshots.listTagBindings",
            "iam.serviceAccounts.createTagBinding",
            "iam.serviceAccounts.deleteTagBinding",
            "iam.serviceAccounts.listEffectiveTags",
            "iam.serviceAccounts.listTagBindings",
            "logging.buckets.createTagBinding",
            "logging.buckets.deleteTagBinding",
            "logging.buckets.listEffectiveTags",
            "logging.buckets.listTagBindings",
            "managedidentities.domains.createTagBinding",
            "managedidentities.domains.deleteTagBinding",
            "managedidentities.domains.listEffectiveTags",
            "managedidentities.domains.listTagBindings",
            "monitoring.alertPolicies.createTagBinding",
            "monitoring.alertPolicies.deleteTagBinding",
            "monitoring.alertPolicies.listEffectiveTags",
            "monitoring.alertPolicies.listTagBindings",
            "privateca.caPools.createTagBinding",
            "privateca.caPools.deleteTagBinding",
            "privateca.caPools.listEffectiveTags",
            "privateca.caPools.listTagBindings",
            "privateca.certificateTemplates.createTagBinding",
            "privateca.certificateTemplates.deleteTagBinding",
            "privateca.certificateTemplates.listEffectiveTags",
            "privateca.certificateTemplates.listTagBindings",
            "pubsub.topics.updateTag",
            "recommender.alloydbClusterPerformanceInsights.get",
            "recommender.alloydbClusterPerformanceInsights.list",
            "recommender.alloydbClusterPerformanceRecommendations.get",
            "recommender.alloydbClusterPerformanceRecommendations.list",
            "recommender.alloydbClusterReliabilityInsights.get",
            "recommender.alloydbClusterReliabilityInsights.list",
            "recommender.alloydbClusterReliabilityRecommendations.get",
            "recommender.alloydbClusterReliabilityRecommendations.list",
            "recommender.cloudAssetInsights.get",
            "recommender.cloudAssetInsights.list",
            "recommender.locations.*",
            "redis.instances.createTagBinding",
            "redis.instances.deleteTagBinding",
            "redis.instances.listEffectiveTags",
            "redis.instances.listTagBindings",
            "resourcemanager.hierarchyNodes.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "resourcemanager.tagKeys.get",
            "resourcemanager.tagKeys.list",
            "resourcemanager.tagValueBindings.*",
            "resourcemanager.tagValues.get",
            "resourcemanager.tagValues.list",
            "run.jobs.createTagBinding",
            "run.jobs.deleteTagBinding",
            "run.jobs.listEffectiveTags",
            "run.jobs.listTagBindings",
            "run.services.createTagBinding",
            "run.services.deleteTagBinding",
            "run.services.listEffectiveTags",
            "run.services.listTagBindings",
            "secretmanager.secrets.createTagBinding",
            "secretmanager.secrets.deleteTagBinding",
            "secretmanager.secrets.listEffectiveTags",
            "secretmanager.secrets.listTagBindings",
            "serviceusage.services.use",
            "spanner.instances.createTagBinding",
            "spanner.instances.deleteTagBinding",
            "spanner.instances.listEffectiveTags",
            "spanner.instances.listTagBindings",
            "storage.buckets.createTagBinding",
            "storage.buckets.deleteTagBinding",
            "storage.buckets.get",
            "storage.buckets.getIamPolicy",
            "storage.buckets.listEffectiveTags",
            "storage.buckets.listTagBindings",
            "storage.folders.get",
            "storage.folders.list",
            "storage.managedFolders.get",
            "storage.managedFolders.list",
            "storage.objects.get",
            "storage.objects.getIamPolicy",
            "storage.objects.list",
            "transcoder.jobTemplates.createTagBinding",
            "transcoder.jobTemplates.deleteTagBinding",
            "transcoder.jobTemplates.listEffectiveTags",
            "transcoder.jobTemplates.listTagBindings",
            "transcoder.jobs.createTagBinding",
            "transcoder.jobs.deleteTagBinding",
            "transcoder.jobs.listEffectiveTags",
            "transcoder.jobs.listTagBindings",
            "workflows.workflows.createTagBinding",
            "workflows.workflows.deleteTagBinding",
            "workflows.workflows.listEffectiveTags",
            "workflows.workflows.listTagBindings",
            "workstations.workstationClusters.createTagBinding",
            "workstations.workstationClusters.deleteTagBinding",
            "workstations.workstationClusters.listEffectiveTags",
            "workstations.workstationClusters.listTagBindings"
          ],
          "title": "DLP Project Data Profiles Driver"
        },
        {
          "description": "Read DLP entities, such as jobs and templates.",
          "id": "roles/dlp.reader",
          "is_beta": false,
          "permissions": [
            "dlp.analyzeRiskTemplates.get",
            "dlp.analyzeRiskTemplates.list",
            "dlp.deidentifyTemplates.get",
            "dlp.deidentifyTemplates.list",
            "dlp.inspectFindings.list",
            "dlp.inspectTemplates.get",
            "dlp.inspectTemplates.list",
            "dlp.jobTriggers.get",
            "dlp.jobTriggers.list",
            "dlp.jobs.get",
            "dlp.jobs.list",
            "dlp.locations.*",
            "dlp.storedInfoTypes.get",
            "dlp.storedInfoTypes.list"
          ],
          "title": "DLP Reader"
        },
        {
          "description": "Edit DLP stored info types.",
          "id": "roles/dlp.storedInfoTypesEditor",
          "is_beta": false,
          "permissions": [
            "dlp.storedInfoTypes.*"
          ],
          "title": "DLP Stored InfoTypes Editor"
        },
        {
          "description": "Read DLP stored info types.",
          "id": "roles/dlp.storedInfoTypesReader",
          "is_beta": false,
          "permissions": [
            "dlp.storedInfoTypes.get",
            "dlp.storedInfoTypes.list"
          ],
          "title": "DLP Stored InfoTypes Reader"
        },
        {
          "description": "Manage DLP subscriptions.",
          "id": "roles/dlp.subscriptionsAdmin",
          "is_beta": false,
          "permissions": [
            "dlp.subscriptions.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "DLP Subscription Admin"
        },
        {
          "description": "View DLP subscriptions.",
          "id": "roles/dlp.subscriptionsReader",
          "is_beta": false,
          "permissions": [
            "dlp.subscriptions.get",
            "dlp.subscriptions.list"
          ],
          "title": "DLP Subscription Viewer"
        },
        {
          "description": "Manage DLP table profiles.",
          "id": "roles/dlp.tableDataProfilesAdmin",
          "is_beta": false,
          "permissions": [
            "dlp.tableDataProfiles.*"
          ],
          "title": "DLP Table Data Profiles Admin"
        },
        {
          "description": "Read DLP table profiles.",
          "id": "roles/dlp.tableDataProfilesReader",
          "is_beta": false,
          "permissions": [
            "dlp.tableDataProfiles.get",
            "dlp.tableDataProfiles.list"
          ],
          "title": "DLP Table Data Profiles Reader"
        },
        {
          "description": "Inspect, Redact, and De-identify Content",
          "id": "roles/dlp.user",
          "is_beta": false,
          "permissions": [
            "dlp.kms.encrypt",
            "dlp.locations.*",
            "serviceusage.services.use"
          ],
          "title": "DLP User"
        },
        {
          "description": "Full access to Cloud Domains Registrations and related resources.",
          "id": "roles/domains.admin",
          "is_beta": false,
          "permissions": [
            "domains.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Cloud Domains Admin"
        },
        {
          "description": "Read-only access to Cloud Domains Registrations and related resources.",
          "id": "roles/domains.viewer",
          "is_beta": false,
          "permissions": [
            "domains.locations.*",
            "domains.operations.get",
            "domains.operations.list",
            "domains.registrations.get",
            "domains.registrations.getIamPolicy",
            "domains.registrations.list",
            "domains.registrations.listEffectiveTags",
            "domains.registrations.listTagBindings",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Cloud Domains Viewer"
        },
        {
          "description": "Read-write access to Filestore instances and related resources.",
          "id": "roles/file.editor",
          "is_beta": true,
          "permissions": [
            "file.*"
          ],
          "title": "Cloud Filestore Editor"
        },
        {
          "description": "Read-only access to Filestore instances and related resources.",
          "id": "roles/file.viewer",
          "is_beta": true,
          "permissions": [
            "file.backups.get",
            "file.backups.list",
            "file.backups.listEffectiveTags",
            "file.backups.listTagBindings",
            "file.instances.get",
            "file.instances.list",
            "file.instances.listEffectiveTags",
            "file.instances.listTagBindings",
            "file.locations.*",
            "file.operations.get",
            "file.operations.list",
            "file.snapshots.listEffectiveTags",
            "file.snapshots.listTagBindings"
          ],
          "title": "Cloud Filestore Viewer"
        },
        {
          "description": "Full access to all Financial Services API resources.",
          "id": "roles/financialservices.admin",
          "is_beta": false,
          "permissions": [
            "financialservices.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Financial Services Admin"
        },
        {
          "description": "View access to all Financial Services API resources.",
          "id": "roles/financialservices.viewer",
          "is_beta": false,
          "permissions": [
            "financialservices.locations.*",
            "financialservices.operations.get",
            "financialservices.operations.list",
            "financialservices.v1backtests.exportMetadata",
            "financialservices.v1backtests.get",
            "financialservices.v1backtests.list",
            "financialservices.v1datasets.get",
            "financialservices.v1datasets.list",
            "financialservices.v1engineconfigs.exportMetadata",
            "financialservices.v1engineconfigs.get",
            "financialservices.v1engineconfigs.list",
            "financialservices.v1engineversions.*",
            "financialservices.v1instances.exportRegisteredParties",
            "financialservices.v1instances.get",
            "financialservices.v1instances.list",
            "financialservices.v1models.exportMetadata",
            "financialservices.v1models.get",
            "financialservices.v1models.list",
            "financialservices.v1predictions.exportMetadata",
            "financialservices.v1predictions.get",
            "financialservices.v1predictions.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Financial Services Viewer"
        },
        {
          "description": "Full access to functions, operations and locations.",
          "id": "roles/cloudfunctions.admin",
          "is_beta": false,
          "permissions": [
            "artifactregistry.attachments.get",
            "artifactregistry.attachments.list",
            "artifactregistry.dockerimages.*",
            "artifactregistry.files.download",
            "artifactregistry.files.get",
            "artifactregistry.files.list",
            "artifactregistry.locations.*",
            "artifactregistry.mavenartifacts.*",
            "artifactregistry.npmpackages.*",
            "artifactregistry.packages.get",
            "artifactregistry.packages.list",
            "artifactregistry.projectsettings.get",
            "artifactregistry.pythonpackages.*",
            "artifactregistry.repositories.downloadArtifacts",
            "artifactregistry.repositories.get",
            "artifactregistry.repositories.list",
            "artifactregistry.repositories.listEffectiveTags",
            "artifactregistry.repositories.listTagBindings",
            "artifactregistry.repositories.readViaVirtualRepository",
            "artifactregistry.rules.get",
            "artifactregistry.rules.list",
            "artifactregistry.tags.get",
            "artifactregistry.tags.list",
            "artifactregistry.versions.get",
            "artifactregistry.versions.list",
            "cloudasset.assets.searchAllResources",
            "cloudbuild.builds.get",
            "cloudbuild.builds.list",
            "cloudbuild.locations.*",
            "cloudbuild.operations.*",
            "cloudfunctions.*",
            "eventarc.*",
            "recommender.cloudFunctionsPerformanceInsights.*",
            "recommender.cloudFunctionsPerformanceRecommendations.*",
            "recommender.locations.*",
            "recommender.runServiceCostInsights.*",
            "recommender.runServiceCostRecommendations.*",
            "recommender.runServiceIdentityInsights.*",
            "recommender.runServiceIdentityRecommendations.*",
            "recommender.runServicePerformanceInsights.*",
            "recommender.runServicePerformanceRecommendations.*",
            "recommender.runServiceSecurityInsights.*",
            "recommender.runServiceSecurityRecommendations.*",
            "remotebuildexecution.blobs.get",
            "resourcemanager.projects.get",
            "resourcemanager.projects.getIamPolicy",
            "resourcemanager.projects.list",
            "run.*",
            "serviceusage.quotas.get",
            "serviceusage.services.get",
            "serviceusage.services.list"
          ],
          "title": "Cloud Functions Admin"
        },
        {
          "description": "Read and write access to all functions-related resources.",
          "id": "roles/cloudfunctions.developer",
          "is_beta": false,
          "permissions": [
            "artifactregistry.attachments.get",
            "artifactregistry.attachments.list",
            "artifactregistry.dockerimages.*",
            "artifactregistry.files.download",
            "artifactregistry.files.get",
            "artifactregistry.files.list",
            "artifactregistry.locations.*",
            "artifactregistry.mavenartifacts.*",
            "artifactregistry.npmpackages.*",
            "artifactregistry.packages.get",
            "artifactregistry.packages.list",
            "artifactregistry.projectsettings.get",
            "artifactregistry.pythonpackages.*",
            "artifactregistry.repositories.downloadArtifacts",
            "artifactregistry.repositories.get",
            "artifactregistry.repositories.list",
            "artifactregistry.repositories.listEffectiveTags",
            "artifactregistry.repositories.listTagBindings",
            "artifactregistry.repositories.readViaVirtualRepository",
            "artifactregistry.rules.get",
            "artifactregistry.rules.list",
            "artifactregistry.tags.get",
            "artifactregistry.tags.list",
            "artifactregistry.versions.get",
            "artifactregistry.versions.list",
            "cloudasset.assets.searchAllResources",
            "cloudbuild.builds.get",
            "cloudbuild.builds.list",
            "cloudbuild.locations.*",
            "cloudbuild.operations.*",
            "cloudfunctions.functions.call",
            "cloudfunctions.functions.create",
            "cloudfunctions.functions.delete",
            "cloudfunctions.functions.generationUpgrade",
            "cloudfunctions.functions.get",
            "cloudfunctions.functions.invoke",
            "cloudfunctions.functions.list",
            "cloudfunctions.functions.sourceCodeGet",
            "cloudfunctions.functions.sourceCodeSet",
            "cloudfunctions.functions.update",
            "cloudfunctions.locations.list",
            "cloudfunctions.operations.*",
            "eventarc.channelConnections.create",
            "eventarc.channelConnections.delete",
            "eventarc.channelConnections.get",
            "eventarc.channelConnections.getIamPolicy",
            "eventarc.channelConnections.list",
            "eventarc.channelConnections.publish",
            "eventarc.channels.attach",
            "eventarc.channels.create",
            "eventarc.channels.delete",
            "eventarc.channels.get",
            "eventarc.channels.getIamPolicy",
            "eventarc.channels.list",
            "eventarc.channels.publish",
            "eventarc.channels.undelete",
            "eventarc.channels.update",
            "eventarc.enrollments.create",
            "eventarc.enrollments.delete",
            "eventarc.enrollments.get",
            "eventarc.enrollments.getIamPolicy",
            "eventarc.enrollments.list",
            "eventarc.enrollments.update",
            "eventarc.googleApiSources.create",
            "eventarc.googleApiSources.delete",
            "eventarc.googleApiSources.get",
            "eventarc.googleApiSources.getIamPolicy",
            "eventarc.googleApiSources.list",
            "eventarc.googleApiSources.update",
            "eventarc.googleChannelConfigs.*",
            "eventarc.kafkaSources.create",
            "eventarc.kafkaSources.delete",
            "eventarc.kafkaSources.get",
            "eventarc.kafkaSources.getIamPolicy",
            "eventarc.kafkaSources.list",
            "eventarc.locations.*",
            "eventarc.operations.*",
            "eventarc.pipelines.create",
            "eventarc.pipelines.delete",
            "eventarc.pipelines.get",
            "eventarc.pipelines.getIamPolicy",
            "eventarc.pipelines.list",
            "eventarc.pipelines.update",
            "eventarc.providers.*",
            "eventarc.triggers.create",
            "eventarc.triggers.delete",
            "eventarc.triggers.get",
            "eventarc.triggers.getIamPolicy",
            "eventarc.triggers.list",
            "eventarc.triggers.undelete",
            "eventarc.triggers.update",
            "recommender.cloudFunctionsPerformanceInsights.*",
            "recommender.cloudFunctionsPerformanceRecommendations.*",
            "recommender.locations.*",
            "recommender.runServiceCostInsights.*",
            "recommender.runServiceCostRecommendations.*",
            "recommender.runServiceIdentityInsights.*",
            "recommender.runServiceIdentityRecommendations.*",
            "recommender.runServicePerformanceInsights.*",
            "recommender.runServicePerformanceRecommendations.*",
            "recommender.runServiceSecurityInsights.*",
            "recommender.runServiceSecurityRecommendations.*",
            "remotebuildexecution.blobs.get",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "run.configurations.*",
            "run.executions.*",
            "run.jobs.create",
            "run.jobs.delete",
            "run.jobs.get",
            "run.jobs.getIamPolicy",
            "run.jobs.list",
            "run.jobs.listEffectiveTags",
            "run.jobs.listTagBindings",
            "run.jobs.run",
            "run.jobs.runWithOverrides",
            "run.jobs.update",
            "run.locations.list",
            "run.operations.*",
            "run.revisions.*",
            "run.routes.*",
            "run.services.create",
            "run.services.delete",
            "run.services.get",
            "run.services.getIamPolicy",
            "run.services.list",
            "run.services.listEffectiveTags",
            "run.services.listTagBindings",
            "run.services.update",
            "run.tasks.*",
            "serviceusage.quotas.get",
            "serviceusage.services.get",
            "serviceusage.services.list"
          ],
          "title": "Cloud Functions Developer"
        },
        {
          "description": "Ability to invoke 1st gen HTTP functions with restricted access. 2nd gen functions need the Cloud Run Invoker role instead.",
          "id": "roles/cloudfunctions.invoker",
          "is_beta": false,
          "permissions": [
            "cloudfunctions.functions.invoke"
          ],
          "title": "Cloud Functions Invoker"
        },
        {
          "description": "Read-only access to functions and locations.",
          "id": "roles/cloudfunctions.viewer",
          "is_beta": false,
          "permissions": [
            "cloudasset.assets.searchAllResources",
            "cloudbuild.builds.get",
            "cloudbuild.builds.list",
            "cloudbuild.locations.*",
            "cloudbuild.operations.*",
            "cloudfunctions.functions.get",
            "cloudfunctions.functions.getIamPolicy",
            "cloudfunctions.functions.list",
            "cloudfunctions.locations.list",
            "cloudfunctions.operations.*",
            "eventarc.channelConnections.get",
            "eventarc.channelConnections.getIamPolicy",
            "eventarc.channelConnections.list",
            "eventarc.channels.get",
            "eventarc.channels.getIamPolicy",
            "eventarc.channels.list",
            "eventarc.enrollments.get",
            "eventarc.enrollments.getIamPolicy",
            "eventarc.enrollments.list",
            "eventarc.googleApiSources.get",
            "eventarc.googleApiSources.getIamPolicy",
            "eventarc.googleApiSources.list",
            "eventarc.googleChannelConfigs.get",
            "eventarc.kafkaSources.get",
            "eventarc.kafkaSources.getIamPolicy",
            "eventarc.kafkaSources.list",
            "eventarc.locations.*",
            "eventarc.messageBuses.get",
            "eventarc.messageBuses.getIamPolicy",
            "eventarc.messageBuses.list",
            "eventarc.messageBuses.use",
            "eventarc.operations.get",
            "eventarc.operations.list",
            "eventarc.pipelines.get",
            "eventarc.pipelines.getIamPolicy",
            "eventarc.pipelines.list",
            "eventarc.providers.*",
            "eventarc.triggers.get",
            "eventarc.triggers.getIamPolicy",
            "eventarc.triggers.list",
            "recommender.cloudFunctionsPerformanceInsights.get",
            "recommender.cloudFunctionsPerformanceInsights.list",
            "recommender.cloudFunctionsPerformanceRecommendations.get",
            "recommender.cloudFunctionsPerformanceRecommendations.list",
            "recommender.locations.*",
            "recommender.runServiceCostInsights.get",
            "recommender.runServiceCostInsights.list",
            "recommender.runServiceCostRecommendations.get",
            "recommender.runServiceCostRecommendations.list",
            "recommender.runServiceIdentityInsights.get",
            "recommender.runServiceIdentityInsights.list",
            "recommender.runServiceIdentityRecommendations.get",
            "recommender.runServiceIdentityRecommendations.list",
            "recommender.runServicePerformanceInsights.get",
            "recommender.runServicePerformanceInsights.list",
            "recommender.runServicePerformanceRecommendations.get",
            "recommender.runServicePerformanceRecommendations.list",
            "recommender.runServiceSecurityInsights.get",
            "recommender.runServiceSecurityInsights.list",
            "recommender.runServiceSecurityRecommendations.get",
            "recommender.runServiceSecurityRecommendations.list",
            "remotebuildexecution.blobs.get",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "run.configurations.*",
            "run.executions.get",
            "run.executions.list",
            "run.jobs.get",
            "run.jobs.getIamPolicy",
            "run.jobs.list",
            "run.jobs.listEffectiveTags",
            "run.jobs.listTagBindings",
            "run.locations.list",
            "run.operations.get",
            "run.operations.list",
            "run.revisions.get",
            "run.revisions.list",
            "run.routes.get",
            "run.routes.list",
            "run.services.get",
            "run.services.getIamPolicy",
            "run.services.list",
            "run.services.listEffectiveTags",
            "run.services.listTagBindings",
            "run.tasks.*",
            "serviceusage.quotas.get",
            "serviceusage.services.get",
            "serviceusage.services.list"
          ],
          "title": "Cloud Functions Viewer"
        },
        {
          "description": "Create, delete, update, read and list annotations.",
          "id": "roles/healthcare.annotationEditor",
          "is_beta": false,
          "permissions": [
            "healthcare.annotationStores.get",
            "healthcare.annotationStores.list",
            "healthcare.annotations.*",
            "healthcare.datasets.get",
            "healthcare.datasets.list",
            "healthcare.locations.*",
            "healthcare.operations.get",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Healthcare Annotation Editor"
        },
        {
          "description": "Read and list annotations in an Annotation store.",
          "id": "roles/healthcare.annotationReader",
          "is_beta": false,
          "permissions": [
            "healthcare.annotationStores.get",
            "healthcare.annotationStores.list",
            "healthcare.annotations.get",
            "healthcare.annotations.list",
            "healthcare.datasets.get",
            "healthcare.datasets.list",
            "healthcare.locations.*",
            "healthcare.operations.get",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Healthcare Annotation Reader"
        },
        {
          "description": "Administer Annotation stores.",
          "id": "roles/healthcare.annotationStoreAdmin",
          "is_beta": false,
          "permissions": [
            "healthcare.annotationStores.*",
            "healthcare.datasets.get",
            "healthcare.datasets.list",
            "healthcare.locations.*",
            "healthcare.operations.get",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Healthcare Annotation Administrator"
        },
        {
          "description": "List Annotation Stores in a dataset.",
          "id": "roles/healthcare.annotationStoreViewer",
          "is_beta": false,
          "permissions": [
            "healthcare.annotationStores.get",
            "healthcare.annotationStores.list",
            "healthcare.datasets.get",
            "healthcare.datasets.list",
            "healthcare.locations.*",
            "healthcare.operations.get",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Healthcare Annotation Store Viewer"
        },
        {
          "description": "Edit AttributeDefinition objects.",
          "id": "roles/healthcare.attributeDefinitionEditor",
          "is_beta": false,
          "permissions": [
            "healthcare.attributeDefinitions.*",
            "healthcare.consentStores.checkDataAccess",
            "healthcare.consentStores.evaluateUserConsents",
            "healthcare.consentStores.get",
            "healthcare.consentStores.list",
            "healthcare.consentStores.queryAccessibleData",
            "healthcare.datasets.get",
            "healthcare.datasets.list",
            "healthcare.locations.*",
            "healthcare.operations.get",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Healthcare Attribute Definition Editor"
        },
        {
          "description": "Read AttributeDefinition objects in a consent store.",
          "id": "roles/healthcare.attributeDefinitionReader",
          "is_beta": false,
          "permissions": [
            "healthcare.attributeDefinitions.get",
            "healthcare.attributeDefinitions.list",
            "healthcare.consentStores.checkDataAccess",
            "healthcare.consentStores.evaluateUserConsents",
            "healthcare.consentStores.get",
            "healthcare.consentStores.list",
            "healthcare.consentStores.queryAccessibleData",
            "healthcare.datasets.get",
            "healthcare.datasets.list",
            "healthcare.locations.*",
            "healthcare.operations.get",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Healthcare Attribute Definition Reader"
        },
        {
          "description": "Administer ConsentArtifact objects.",
          "id": "roles/healthcare.consentArtifactAdmin",
          "is_beta": false,
          "permissions": [
            "healthcare.consentArtifacts.*",
            "healthcare.consentStores.checkDataAccess",
            "healthcare.consentStores.evaluateUserConsents",
            "healthcare.consentStores.get",
            "healthcare.consentStores.list",
            "healthcare.consentStores.queryAccessibleData",
            "healthcare.datasets.get",
            "healthcare.datasets.list",
            "healthcare.locations.*",
            "healthcare.operations.get",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Healthcare Consent Artifact Administrator"
        },
        {
          "description": "Edit ConsentArtifact objects.",
          "id": "roles/healthcare.consentArtifactEditor",
          "is_beta": false,
          "permissions": [
            "healthcare.consentArtifacts.create",
            "healthcare.consentArtifacts.get",
            "healthcare.consentArtifacts.list",
            "healthcare.consentStores.checkDataAccess",
            "healthcare.consentStores.evaluateUserConsents",
            "healthcare.consentStores.get",
            "healthcare.consentStores.list",
            "healthcare.consentStores.queryAccessibleData",
            "healthcare.datasets.get",
            "healthcare.datasets.list",
            "healthcare.locations.*",
            "healthcare.operations.get",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Healthcare Consent Artifact Editor"
        },
        {
          "description": "Read ConsentArtifact objects in a consent store.",
          "id": "roles/healthcare.consentArtifactReader",
          "is_beta": false,
          "permissions": [
            "healthcare.consentArtifacts.get",
            "healthcare.consentArtifacts.list",
            "healthcare.consentStores.checkDataAccess",
            "healthcare.consentStores.evaluateUserConsents",
            "healthcare.consentStores.get",
            "healthcare.consentStores.list",
            "healthcare.consentStores.queryAccessibleData",
            "healthcare.datasets.get",
            "healthcare.datasets.list",
            "healthcare.locations.*",
            "healthcare.operations.get",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Healthcare Consent Artifact Reader"
        },
        {
          "description": "Edit Consent objects.",
          "id": "roles/healthcare.consentEditor",
          "is_beta": false,
          "permissions": [
            "healthcare.consentStores.checkDataAccess",
            "healthcare.consentStores.evaluateUserConsents",
            "healthcare.consentStores.get",
            "healthcare.consentStores.list",
            "healthcare.consentStores.queryAccessibleData",
            "healthcare.consents.*",
            "healthcare.datasets.get",
            "healthcare.datasets.list",
            "healthcare.locations.*",
            "healthcare.operations.get",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Healthcare Consent Editor"
        },
        {
          "description": "Read Consent objects in a consent store.",
          "id": "roles/healthcare.consentReader",
          "is_beta": false,
          "permissions": [
            "healthcare.consentStores.checkDataAccess",
            "healthcare.consentStores.evaluateUserConsents",
            "healthcare.consentStores.get",
            "healthcare.consentStores.list",
            "healthcare.consentStores.queryAccessibleData",
            "healthcare.consents.get",
            "healthcare.consents.list",
            "healthcare.datasets.get",
            "healthcare.datasets.list",
            "healthcare.locations.*",
            "healthcare.operations.get",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Healthcare Consent Reader"
        },
        {
          "description": "Administer Consent stores.",
          "id": "roles/healthcare.consentStoreAdmin",
          "is_beta": false,
          "permissions": [
            "healthcare.consentStores.*",
            "healthcare.datasets.get",
            "healthcare.datasets.list",
            "healthcare.locations.*",
            "healthcare.operations.get",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Healthcare Consent Store Administrator"
        },
        {
          "description": "List Consent Stores in a dataset.",
          "id": "roles/healthcare.consentStoreViewer",
          "is_beta": false,
          "permissions": [
            "healthcare.consentStores.checkDataAccess",
            "healthcare.consentStores.evaluateUserConsents",
            "healthcare.consentStores.get",
            "healthcare.consentStores.list",
            "healthcare.consentStores.queryAccessibleData",
            "healthcare.datasets.get",
            "healthcare.datasets.list",
            "healthcare.locations.*",
            "healthcare.operations.get",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Healthcare Consent Store Viewer"
        },
        {
          "description": "Administer Healthcare Datasets.",
          "id": "roles/healthcare.datasetAdmin",
          "is_beta": false,
          "permissions": [
            "healthcare.datasets.*",
            "healthcare.locations.*",
            "healthcare.operations.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Healthcare Dataset Administrator"
        },
        {
          "description": "List the Healthcare Datasets in a project.",
          "id": "roles/healthcare.datasetViewer",
          "is_beta": false,
          "permissions": [
            "healthcare.datasets.get",
            "healthcare.datasets.list",
            "healthcare.locations.*",
            "healthcare.operations.get",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Healthcare Dataset Viewer"
        },
        {
          "description": "Edit DICOM images individually and in bulk.",
          "id": "roles/healthcare.dicomEditor",
          "is_beta": false,
          "permissions": [
            "healthcare.datasets.get",
            "healthcare.datasets.list",
            "healthcare.dicomStores.dicomWebDelete",
            "healthcare.dicomStores.dicomWebRead",
            "healthcare.dicomStores.dicomWebWrite",
            "healthcare.dicomStores.export",
            "healthcare.dicomStores.get",
            "healthcare.dicomStores.import",
            "healthcare.dicomStores.list",
            "healthcare.locations.*",
            "healthcare.operations.cancel",
            "healthcare.operations.get",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Healthcare DICOM Editor"
        },
        {
          "description": "Administer DICOM stores.",
          "id": "roles/healthcare.dicomStoreAdmin",
          "is_beta": false,
          "permissions": [
            "healthcare.datasets.get",
            "healthcare.datasets.list",
            "healthcare.dicomStores.create",
            "healthcare.dicomStores.deidentify",
            "healthcare.dicomStores.delete",
            "healthcare.dicomStores.dicomWebDelete",
            "healthcare.dicomStores.get",
            "healthcare.dicomStores.getIamPolicy",
            "healthcare.dicomStores.list",
            "healthcare.dicomStores.setIamPolicy",
            "healthcare.dicomStores.update",
            "healthcare.locations.*",
            "healthcare.operations.cancel",
            "healthcare.operations.get",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Healthcare DICOM Store Administrator"
        },
        {
          "description": "List DICOM Stores in a dataset.",
          "id": "roles/healthcare.dicomStoreViewer",
          "is_beta": false,
          "permissions": [
            "healthcare.datasets.get",
            "healthcare.datasets.list",
            "healthcare.dicomStores.get",
            "healthcare.dicomStores.list",
            "healthcare.locations.*",
            "healthcare.operations.get",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Healthcare DICOM Store Viewer"
        },
        {
          "description": "Retrieve DICOM images from a DICOM store.",
          "id": "roles/healthcare.dicomViewer",
          "is_beta": false,
          "permissions": [
            "healthcare.datasets.get",
            "healthcare.datasets.list",
            "healthcare.dicomStores.dicomWebRead",
            "healthcare.dicomStores.export",
            "healthcare.dicomStores.get",
            "healthcare.dicomStores.list",
            "healthcare.locations.*",
            "healthcare.operations.get",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Healthcare DICOM Viewer"
        },
        {
          "description": "Create, delete, update, read and search FHIR resources.",
          "id": "roles/healthcare.fhirResourceEditor",
          "is_beta": false,
          "permissions": [
            "healthcare.datasets.get",
            "healthcare.datasets.list",
            "healthcare.fhirResources.create",
            "healthcare.fhirResources.delete",
            "healthcare.fhirResources.get",
            "healthcare.fhirResources.patch",
            "healthcare.fhirResources.translateConceptMap",
            "healthcare.fhirResources.update",
            "healthcare.fhirStores.executeBundle",
            "healthcare.fhirStores.get",
            "healthcare.fhirStores.list",
            "healthcare.fhirStores.searchResources",
            "healthcare.locations.*",
            "healthcare.operations.cancel",
            "healthcare.operations.get",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Healthcare FHIR Resource Editor"
        },
        {
          "description": "Read and search FHIR resources.",
          "id": "roles/healthcare.fhirResourceReader",
          "is_beta": false,
          "permissions": [
            "healthcare.datasets.get",
            "healthcare.datasets.list",
            "healthcare.fhirResources.get",
            "healthcare.fhirResources.translateConceptMap",
            "healthcare.fhirStores.executeBundle",
            "healthcare.fhirStores.get",
            "healthcare.fhirStores.list",
            "healthcare.fhirStores.searchResources",
            "healthcare.locations.*",
            "healthcare.operations.get",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Healthcare FHIR Resource Reader"
        },
        {
          "description": "Administer FHIR resource stores.",
          "id": "roles/healthcare.fhirStoreAdmin",
          "is_beta": false,
          "permissions": [
            "healthcare.datasets.get",
            "healthcare.datasets.list",
            "healthcare.fhirResources.purge",
            "healthcare.fhirStores.applyConsents",
            "healthcare.fhirStores.configureSearch",
            "healthcare.fhirStores.create",
            "healthcare.fhirStores.deidentify",
            "healthcare.fhirStores.delete",
            "healthcare.fhirStores.deleteFhirOperation",
            "healthcare.fhirStores.explainDataAccess",
            "healthcare.fhirStores.export",
            "healthcare.fhirStores.get",
            "healthcare.fhirStores.getFhirOperation",
            "healthcare.fhirStores.getIamPolicy",
            "healthcare.fhirStores.import",
            "healthcare.fhirStores.list",
            "healthcare.fhirStores.rollback",
            "healthcare.fhirStores.setIamPolicy",
            "healthcare.fhirStores.update",
            "healthcare.locations.*",
            "healthcare.operations.cancel",
            "healthcare.operations.get",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Healthcare FHIR Store Administrator"
        },
        {
          "description": "List FHIR Stores in a dataset.",
          "id": "roles/healthcare.fhirStoreViewer",
          "is_beta": false,
          "permissions": [
            "healthcare.datasets.get",
            "healthcare.datasets.list",
            "healthcare.fhirStores.get",
            "healthcare.fhirStores.list",
            "healthcare.locations.*",
            "healthcare.operations.get",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Healthcare FHIR Store Viewer"
        },
        {
          "description": "List and read HL7v2 messages, update message labels, and publish new messages.",
          "id": "roles/healthcare.hl7V2Consumer",
          "is_beta": false,
          "permissions": [
            "healthcare.datasets.get",
            "healthcare.datasets.list",
            "healthcare.hl7V2Messages.create",
            "healthcare.hl7V2Messages.get",
            "healthcare.hl7V2Messages.list",
            "healthcare.hl7V2Messages.update",
            "healthcare.hl7V2Stores.get",
            "healthcare.hl7V2Stores.list",
            "healthcare.locations.*",
            "healthcare.operations.get",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Healthcare HL7v2 Message Consumer"
        },
        {
          "description": "Read, write, and delete access to HL7v2 messages.",
          "id": "roles/healthcare.hl7V2Editor",
          "is_beta": false,
          "permissions": [
            "healthcare.datasets.get",
            "healthcare.datasets.list",
            "healthcare.hl7V2Messages.*",
            "healthcare.hl7V2Stores.get",
            "healthcare.hl7V2Stores.list",
            "healthcare.locations.*",
            "healthcare.operations.cancel",
            "healthcare.operations.get",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Healthcare HL7v2 Message Editor"
        },
        {
          "description": "Ingest HL7v2 messages received from a source network.",
          "id": "roles/healthcare.hl7V2Ingest",
          "is_beta": false,
          "permissions": [
            "healthcare.datasets.get",
            "healthcare.datasets.list",
            "healthcare.hl7V2Messages.ingest",
            "healthcare.hl7V2Stores.get",
            "healthcare.hl7V2Stores.list",
            "healthcare.locations.*",
            "healthcare.operations.get",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Healthcare HL7v2 Message Ingest"
        },
        {
          "description": "Administer HL7v2 Stores.",
          "id": "roles/healthcare.hl7V2StoreAdmin",
          "is_beta": false,
          "permissions": [
            "healthcare.datasets.get",
            "healthcare.datasets.list",
            "healthcare.hl7V2Stores.*",
            "healthcare.locations.*",
            "healthcare.operations.cancel",
            "healthcare.operations.get",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Healthcare HL7v2 Store Administrator"
        },
        {
          "description": "View HL7v2 Stores in a dataset.",
          "id": "roles/healthcare.hl7V2StoreViewer",
          "is_beta": false,
          "permissions": [
            "healthcare.datasets.get",
            "healthcare.datasets.list",
            "healthcare.hl7V2Stores.get",
            "healthcare.hl7V2Stores.list",
            "healthcare.locations.*",
            "healthcare.operations.get",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Healthcare HL7v2 Store Viewer"
        },
        {
          "description": "Extract and analyze medical entities from a given text.",
          "id": "roles/healthcare.nlpServiceViewer",
          "is_beta": true,
          "permissions": [
            "healthcare.locations.*",
            "healthcare.nlpservice.analyzeEntities",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Healthcare NLP Service Viewer"
        },
        {
          "description": "Edit UserDataMapping objects.",
          "id": "roles/healthcare.userDataMappingEditor",
          "is_beta": false,
          "permissions": [
            "healthcare.consentStores.checkDataAccess",
            "healthcare.consentStores.evaluateUserConsents",
            "healthcare.consentStores.get",
            "healthcare.consentStores.list",
            "healthcare.consentStores.queryAccessibleData",
            "healthcare.datasets.get",
            "healthcare.datasets.list",
            "healthcare.locations.*",
            "healthcare.operations.get",
            "healthcare.userDataMappings.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Healthcare User Data Mapping Editor"
        },
        {
          "description": "Read UserDataMapping objects in a consent store.",
          "id": "roles/healthcare.userDataMappingReader",
          "is_beta": false,
          "permissions": [
            "healthcare.consentStores.checkDataAccess",
            "healthcare.consentStores.evaluateUserConsents",
            "healthcare.consentStores.get",
            "healthcare.consentStores.list",
            "healthcare.consentStores.queryAccessibleData",
            "healthcare.datasets.get",
            "healthcare.datasets.list",
            "healthcare.locations.*",
            "healthcare.operations.get",
            "healthcare.userDataMappings.get",
            "healthcare.userDataMappings.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Healthcare User Data Mapping Reader"
        },
        {
          "description": "Allows users to view and interact with Cloud Hub.",
          "id": "roles/cloudhub.operator",
          "is_beta": true,
          "permissions": [
            "apphub.applications.get",
            "apphub.applications.list",
            "apphub.discoveredServices.get",
            "apphub.discoveredServices.list",
            "apphub.discoveredWorkloads.get",
            "apphub.discoveredWorkloads.list",
            "apphub.locations.*",
            "apphub.operations.get",
            "apphub.operations.list",
            "apphub.serviceProjectAttachments.lookup",
            "apphub.services.get",
            "apphub.services.list",
            "apphub.workloads.get",
            "apphub.workloads.list",
            "capacityplanner.*",
            "cloudasset.assets.analyzeIamPolicy",
            "cloudasset.assets.analyzeMove",
            "cloudasset.assets.analyzeOrgPolicy",
            "cloudasset.assets.exportAccessLevel",
            "cloudasset.assets.exportAccessPolicy",
            "cloudasset.assets.exportAiplatformBatchPredictionJobs",
            "cloudasset.assets.exportAiplatformCustomJobs",
            "cloudasset.assets.exportAiplatformDataLabelingJobs",
            "cloudasset.assets.exportAiplatformDatasets",
            "cloudasset.assets.exportAiplatformEndpoints",
            "cloudasset.assets.exportAiplatformHyperparameterTuningJobs",
            "cloudasset.assets.exportAiplatformMetadataStores",
            "cloudasset.assets.exportAiplatformModelDeploymentMonitoringJobs",
            "cloudasset.assets.exportAiplatformModels",
            "cloudasset.assets.exportAiplatformPipelineJobs",
            "cloudasset.assets.exportAiplatformSpecialistPools",
            "cloudasset.assets.exportAiplatformTrainingPipelines",
            "cloudasset.assets.exportAllAccessPolicy",
            "cloudasset.assets.exportAnthosConnectedCluster",
            "cloudasset.assets.exportAnthosedgeCluster",
            "cloudasset.assets.exportApigatewayApi",
            "cloudasset.assets.exportApigatewayApiConfig",
            "cloudasset.assets.exportApigatewayGateway",
            "cloudasset.assets.exportApikeysKeys",
            "cloudasset.assets.exportAppengineApplications",
            "cloudasset.assets.exportAppengineServices",
            "cloudasset.assets.exportAppengineVersions",
            "cloudasset.assets.exportArtifactregistryDockerImages",
            "cloudasset.assets.exportArtifactregistryRepositories",
            "cloudasset.assets.exportAssuredWorkloadsWorkloads",
            "cloudasset.assets.exportBeyondCorpApiGateways",
            "cloudasset.assets.exportBeyondCorpAppConnections",
            "cloudasset.assets.exportBeyondCorpAppConnectors",
            "cloudasset.assets.exportBeyondCorpAppGateways",
            "cloudasset.assets.exportBeyondCorpClientConnectorServices",
            "cloudasset.assets.exportBeyondCorpClientGateways",
            "cloudasset.assets.exportBigqueryDatasets",
            "cloudasset.assets.exportBigqueryModels",
            "cloudasset.assets.exportBigqueryTables",
            "cloudasset.assets.exportBigtableAppProfile",
            "cloudasset.assets.exportBigtableBackup",
            "cloudasset.assets.exportBigtableCluster",
            "cloudasset.assets.exportBigtableInstance",
            "cloudasset.assets.exportBigtableTable",
            "cloudasset.assets.exportCloudAssetFeeds",
            "cloudasset.assets.exportCloudDeployDeliveryPipelines",
            "cloudasset.assets.exportCloudDeployReleases",
            "cloudasset.assets.exportCloudDeployRollouts",
            "cloudasset.assets.exportCloudDeployTargets",
            "cloudasset.assets.exportCloudDocumentAIEvaluation",
            "cloudasset.assets.exportCloudDocumentAIHumanReviewConfig",
            "cloudasset.assets.exportCloudDocumentAILabelerPool",
            "cloudasset.assets.exportCloudDocumentAIProcessor",
            "cloudasset.assets.exportCloudDocumentAIProcessorVersion",
            "cloudasset.assets.exportCloudbillingBillingAccounts",
            "cloudasset.assets.exportCloudbillingProjectBillingInfos",
            "cloudasset.assets.exportCloudfunctionsFunctions",
            "cloudasset.assets.exportCloudfunctionsGen2Functions",
            "cloudasset.assets.exportCloudkmsCryptoKeyVersions",
            "cloudasset.assets.exportCloudkmsCryptoKeys",
            "cloudasset.assets.exportCloudkmsEkmConnections",
            "cloudasset.assets.exportCloudkmsImportJobs",
            "cloudasset.assets.exportCloudkmsKeyRings",
            "cloudasset.assets.exportCloudmemcacheInstances",
            "cloudasset.assets.exportCloudresourcemanagerFolders",
            "cloudasset.assets.exportCloudresourcemanagerOrganizations",
            "cloudasset.assets.exportCloudresourcemanagerProjects",
            "cloudasset.assets.exportCloudresourcemanagerTagBindings",
            "cloudasset.assets.exportCloudresourcemanagerTagKeys",
            "cloudasset.assets.exportCloudresourcemanagerTagValues",
            "cloudasset.assets.exportComposerEnvironments",
            "cloudasset.assets.exportComputeAddress",
            "cloudasset.assets.exportComputeAutoscalers",
            "cloudasset.assets.exportComputeBackendBuckets",
            "cloudasset.assets.exportComputeBackendServices",
            "cloudasset.assets.exportComputeCommitments",
            "cloudasset.assets.exportComputeDisks",
            "cloudasset.assets.exportComputeExternalVpnGateways",
            "cloudasset.assets.exportComputeFirewallPolicies",
            "cloudasset.assets.exportComputeFirewalls",
            "cloudasset.assets.exportComputeForwardingRules",
            "cloudasset.assets.exportComputeGlobalAddress",
            "cloudasset.assets.exportComputeGlobalForwardingRules",
            "cloudasset.assets.exportComputeHealthChecks",
            "cloudasset.assets.exportComputeHttpHealthChecks",
            "cloudasset.assets.exportComputeHttpsHealthChecks",
            "cloudasset.assets.exportComputeImages",
            "cloudasset.assets.exportComputeInstanceGroupManagers",
            "cloudasset.assets.exportComputeInstanceGroups",
            "cloudasset.assets.exportComputeInstanceTemplates",
            "cloudasset.assets.exportComputeInstances",
            "cloudasset.assets.exportComputeInterconnect",
            "cloudasset.assets.exportComputeInterconnectAttachment",
            "cloudasset.assets.exportComputeLicenses",
            "cloudasset.assets.exportComputeNetworkEndpointGroups",
            "cloudasset.assets.exportComputeNetworks",
            "cloudasset.assets.exportComputeNodeGroups",
            "cloudasset.assets.exportComputeNodeTemplates",
            "cloudasset.assets.exportComputePacketMirrorings",
            "cloudasset.assets.exportComputeProjects",
            "cloudasset.assets.exportComputeRegionAutoscaler",
            "cloudasset.assets.exportComputeRegionBackendServices",
            "cloudasset.assets.exportComputeRegionDisk",
            "cloudasset.assets.exportComputeRegionInstanceGroup",
            "cloudasset.assets.exportComputeRegionInstanceGroupManager",
            "cloudasset.assets.exportComputeReservations",
            "cloudasset.assets.exportComputeResourcePolicies",
            "cloudasset.assets.exportComputeRouters",
            "cloudasset.assets.exportComputeRoutes",
            "cloudasset.assets.exportComputeSecurityPolicy",
            "cloudasset.assets.exportComputeServiceAttachments",
            "cloudasset.assets.exportComputeSnapshots",
            "cloudasset.assets.exportComputeSslCertificates",
            "cloudasset.assets.exportComputeSslPolicies",
            "cloudasset.assets.exportComputeSubnetworks",
            "cloudasset.assets.exportComputeTargetHttpProxies",
            "cloudasset.assets.exportComputeTargetHttpsProxies",
            "cloudasset.assets.exportComputeTargetInstances",
            "cloudasset.assets.exportComputeTargetPools",
            "cloudasset.assets.exportComputeTargetSslProxies",
            "cloudasset.assets.exportComputeTargetTcpProxies",
            "cloudasset.assets.exportComputeTargetVpnGateways",
            "cloudasset.assets.exportComputeUrlMaps",
            "cloudasset.assets.exportComputeVpnGateways",
            "cloudasset.assets.exportComputeVpnTunnels",
            "cloudasset.assets.exportConnectorsConnections",
            "cloudasset.assets.exportConnectorsConnectorVersions",
            "cloudasset.assets.exportConnectorsConnectors",
            "cloudasset.assets.exportConnectorsProviders",
            "cloudasset.assets.exportConnectorsRuntimeConfigs",
            "cloudasset.assets.exportContainerAppsDeployment",
            "cloudasset.assets.exportContainerAppsReplicaSets",
            "cloudasset.assets.exportContainerBatchJobs",
            "cloudasset.assets.exportContainerClusterrole",
            "cloudasset.assets.exportContainerClusterrolebinding",
            "cloudasset.assets.exportContainerClusters",
            "cloudasset.assets.exportContainerExtensionsIngresses",
            "cloudasset.assets.exportContainerJobs",
            "cloudasset.assets.exportContainerNamespace",
            "cloudasset.assets.exportContainerNetworkingIngresses",
            "cloudasset.assets.exportContainerNetworkingNetworkPolicies",
            "cloudasset.assets.exportContainerNode",
            "cloudasset.assets.exportContainerNodepool",
            "cloudasset.assets.exportContainerPod",
            "cloudasset.assets.exportContainerReplicaSets",
            "cloudasset.assets.exportContainerRole",
            "cloudasset.assets.exportContainerRolebinding",
            "cloudasset.assets.exportContainerServices",
            "cloudasset.assets.exportContainerregistryImage",
            "cloudasset.assets.exportDataMigrationConnectionProfiles",
            "cloudasset.assets.exportDataMigrationMigrationJobs",
            "cloudasset.assets.exportDataflowJobs",
            "cloudasset.assets.exportDatafusionInstance",
            "cloudasset.assets.exportDataplexAssets",
            "cloudasset.assets.exportDataplexLakes",
            "cloudasset.assets.exportDataplexTasks",
            "cloudasset.assets.exportDataplexZones",
            "cloudasset.assets.exportDataprocAutoscalingPolicies",
            "cloudasset.assets.exportDataprocBatches",
            "cloudasset.assets.exportDataprocClusters",
            "cloudasset.assets.exportDataprocJobs",
            "cloudasset.assets.exportDataprocSessions",
            "cloudasset.assets.exportDataprocWorkflowTemplates",
            "cloudasset.assets.exportDatastreamConnectionProfile",
            "cloudasset.assets.exportDatastreamPrivateConnection",
            "cloudasset.assets.exportDatastreamStream",
            "cloudasset.assets.exportDialogflowAgents",
            "cloudasset.assets.exportDialogflowConversationProfiles",
            "cloudasset.assets.exportDialogflowKnowledgeBases",
            "cloudasset.assets.exportDialogflowLocationSettings",
            "cloudasset.assets.exportDlpDeidentifyTemplates",
            "cloudasset.assets.exportDlpDlpJobs",
            "cloudasset.assets.exportDlpInspectTemplates",
            "cloudasset.assets.exportDlpJobTriggers",
            "cloudasset.assets.exportDlpStoredInfoTypes",
            "cloudasset.assets.exportDnsManagedZones",
            "cloudasset.assets.exportDnsPolicies",
            "cloudasset.assets.exportDomainsRegistrations",
            "cloudasset.assets.exportEventarcTriggers",
            "cloudasset.assets.exportFileBackups",
            "cloudasset.assets.exportFileInstances",
            "cloudasset.assets.exportFirebaseAppInfos",
            "cloudasset.assets.exportFirebaseProjects",
            "cloudasset.assets.exportFirestoreDatabases",
            "cloudasset.assets.exportGKEHubFeatures",
            "cloudasset.assets.exportGKEHubMemberships",
            "cloudasset.assets.exportGameservicesGameServerClusters",
            "cloudasset.assets.exportGameservicesGameServerConfigs",
            "cloudasset.assets.exportGameservicesGameServerDeployments",
            "cloudasset.assets.exportGameservicesRealms",
            "cloudasset.assets.exportGkeBackupBackupPlans",
            "cloudasset.assets.exportGkeBackupBackups",
            "cloudasset.assets.exportGkeBackupRestorePlans",
            "cloudasset.assets.exportGkeBackupRestores",
            "cloudasset.assets.exportGkeBackupVolumeBackups",
            "cloudasset.assets.exportGkeBackupVolumeRestores",
            "cloudasset.assets.exportHealthcareConsentStores",
            "cloudasset.assets.exportHealthcareDatasets",
            "cloudasset.assets.exportHealthcareDicomStores",
            "cloudasset.assets.exportHealthcareFhirStores",
            "cloudasset.assets.exportHealthcareHl7V2Stores",
            "cloudasset.assets.exportIamPolicy",
            "cloudasset.assets.exportIamRoles",
            "cloudasset.assets.exportIamServiceAccountKeys",
            "cloudasset.assets.exportIamServiceAccounts",
            "cloudasset.assets.exportIapTunnel",
            "cloudasset.assets.exportIapTunnelInstances",
            "cloudasset.assets.exportIapTunnelZones",
            "cloudasset.assets.exportIapWeb",
            "cloudasset.assets.exportIapWebServiceVersion",
            "cloudasset.assets.exportIapWebServices",
            "cloudasset.assets.exportIapWebType",
            "cloudasset.assets.exportIdsEndpoints",
            "cloudasset.assets.exportIntegrationsAuthConfigs",
            "cloudasset.assets.exportIntegrationsCertificates",
            "cloudasset.assets.exportIntegrationsExecutions",
            "cloudasset.assets.exportIntegrationsIntegrationVersions",
            "cloudasset.assets.exportIntegrationsIntegrations",
            "cloudasset.assets.exportIntegrationsSfdcChannels",
            "cloudasset.assets.exportIntegrationsSfdcInstances",
            "cloudasset.assets.exportIntegrationsSuspensions",
            "cloudasset.assets.exportLoggingLogMetrics",
            "cloudasset.assets.exportLoggingLogSinks",
            "cloudasset.assets.exportManagedidentitiesDomain",
            "cloudasset.assets.exportMetastoreBackups",
            "cloudasset.assets.exportMetastoreMetadataImports",
            "cloudasset.assets.exportMetastoreServices",
            "cloudasset.assets.exportMonitoringAlertPolicies",
            "cloudasset.assets.exportNetworkConnectivityHubs",
            "cloudasset.assets.exportNetworkConnectivitySpokes",
            "cloudasset.assets.exportNetworkManagementConnectivityTests",
            "cloudasset.assets.exportNetworkServicesEndpointPolicies",
            "cloudasset.assets.exportNetworkServicesGateways",
            "cloudasset.assets.exportNetworkServicesGrpcRoutes",
            "cloudasset.assets.exportNetworkServicesHttpRoutes",
            "cloudasset.assets.exportNetworkServicesMeshes",
            "cloudasset.assets.exportNetworkServicesServiceBindings",
            "cloudasset.assets.exportNetworkServicesTcpRoutes",
            "cloudasset.assets.exportNetworkServicesTlsRoutes",
            "cloudasset.assets.exportOSConfigOSPolicyAssignmentReports",
            "cloudasset.assets.exportOSConfigOSPolicyAssignments",
            "cloudasset.assets.exportOSConfigVulnerabilityReports",
            "cloudasset.assets.exportOSInventories",
            "cloudasset.assets.exportOrgPolicy",
            "cloudasset.assets.exportPatchDeployments",
            "cloudasset.assets.exportPubsubSnapshots",
            "cloudasset.assets.exportPubsubSubscriptions",
            "cloudasset.assets.exportPubsubTopics",
            "cloudasset.assets.exportRedisInstances",
            "cloudasset.assets.exportResource",
            "cloudasset.assets.exportSecretManagerSecretVersions",
            "cloudasset.assets.exportSecretManagerSecrets",
            "cloudasset.assets.exportServiceDirectoryNamespaces",
            "cloudasset.assets.exportServicePerimeter",
            "cloudasset.assets.exportServiceconsumermanagementConsumerProperty",
            "cloudasset.assets.exportServiceconsumermanagementConsumerQuotaLimits",
            "cloudasset.assets.exportServiceconsumermanagementConsumers",
            "cloudasset.assets.exportServiceconsumermanagementProducerOverrides",
            "cloudasset.assets.exportServiceconsumermanagementTenancyUnits",
            "cloudasset.assets.exportServiceconsumermanagementVisibility",
            "cloudasset.assets.exportServicemanagementServices",
            "cloudasset.assets.exportServiceusageAdminOverrides",
            "cloudasset.assets.exportServiceusageConsumerOverrides",
            "cloudasset.assets.exportServiceusageServices",
            "cloudasset.assets.exportSpannerBackups",
            "cloudasset.assets.exportSpannerDatabases",
            "cloudasset.assets.exportSpannerInstances",
            "cloudasset.assets.exportSpeakerIdPhrases",
            "cloudasset.assets.exportSpeakerIdSettings",
            "cloudasset.assets.exportSpeakerIdSpeakers",
            "cloudasset.assets.exportSpeechCustomClasses",
            "cloudasset.assets.exportSpeechPhraseSets",
            "cloudasset.assets.exportSqladminBackupRuns",
            "cloudasset.assets.exportSqladminInstances",
            "cloudasset.assets.exportStorageBuckets",
            "cloudasset.assets.exportTpuNodes",
            "cloudasset.assets.exportVpcaccessConnector",
            "cloudasset.assets.listAccessLevel",
            "cloudasset.assets.listAccessPolicy",
            "cloudasset.assets.listAiplatformBatchPredictionJobs",
            "cloudasset.assets.listAiplatformCustomJobs",
            "cloudasset.assets.listAiplatformDataLabelingJobs",
            "cloudasset.assets.listAiplatformDatasets",
            "cloudasset.assets.listAiplatformEndpoints",
            "cloudasset.assets.listAiplatformHyperparameterTuningJobs",
            "cloudasset.assets.listAiplatformMetadataStores",
            "cloudasset.assets.listAiplatformModelDeploymentMonitoringJobs",
            "cloudasset.assets.listAiplatformModels",
            "cloudasset.assets.listAiplatformPipelineJobs",
            "cloudasset.assets.listAiplatformSpecialistPools",
            "cloudasset.assets.listAiplatformTrainingPipelines",
            "cloudasset.assets.listAllAccessPolicy",
            "cloudasset.assets.listAnthosConnectedCluster",
            "cloudasset.assets.listAnthosedgeCluster",
            "cloudasset.assets.listApigatewayApi",
            "cloudasset.assets.listApigatewayApiConfig",
            "cloudasset.assets.listApigatewayGateway",
            "cloudasset.assets.listApikeysKeys",
            "cloudasset.assets.listAppengineApplications",
            "cloudasset.assets.listAppengineServices",
            "cloudasset.assets.listAppengineVersions",
            "cloudasset.assets.listArtifactregistryDockerImages",
            "cloudasset.assets.listArtifactregistryRepositories",
            "cloudasset.assets.listAssuredWorkloadsWorkloads",
            "cloudasset.assets.listBeyondCorpApiGateways",
            "cloudasset.assets.listBeyondCorpAppConnections",
            "cloudasset.assets.listBeyondCorpAppConnectors",
            "cloudasset.assets.listBeyondCorpAppGateways",
            "cloudasset.assets.listBeyondCorpClientConnectorServices",
            "cloudasset.assets.listBeyondCorpClientGateways",
            "cloudasset.assets.listBigqueryDatasets",
            "cloudasset.assets.listBigqueryModels",
            "cloudasset.assets.listBigqueryTables",
            "cloudasset.assets.listBigtableAppProfile",
            "cloudasset.assets.listBigtableBackup",
            "cloudasset.assets.listBigtableCluster",
            "cloudasset.assets.listBigtableInstance",
            "cloudasset.assets.listBigtableTable",
            "cloudasset.assets.listCloudAssetFeeds",
            "cloudasset.assets.listCloudDeployDeliveryPipelines",
            "cloudasset.assets.listCloudDeployReleases",
            "cloudasset.assets.listCloudDeployRollouts",
            "cloudasset.assets.listCloudDeployTargets",
            "cloudasset.assets.listCloudDocumentAIEvaluation",
            "cloudasset.assets.listCloudDocumentAIHumanReviewConfig",
            "cloudasset.assets.listCloudDocumentAILabelerPool",
            "cloudasset.assets.listCloudDocumentAIProcessor",
            "cloudasset.assets.listCloudDocumentAIProcessorVersion",
            "cloudasset.assets.listCloudbillingBillingAccounts",
            "cloudasset.assets.listCloudbillingProjectBillingInfos",
            "cloudasset.assets.listCloudfunctionsFunctions",
            "cloudasset.assets.listCloudfunctionsGen2Functions",
            "cloudasset.assets.listCloudkmsCryptoKeyVersions",
            "cloudasset.assets.listCloudkmsCryptoKeys",
            "cloudasset.assets.listCloudkmsEkmConnections",
            "cloudasset.assets.listCloudkmsImportJobs",
            "cloudasset.assets.listCloudkmsKeyRings",
            "cloudasset.assets.listCloudmemcacheInstances",
            "cloudasset.assets.listCloudresourcemanagerFolders",
            "cloudasset.assets.listCloudresourcemanagerOrganizations",
            "cloudasset.assets.listCloudresourcemanagerProjects",
            "cloudasset.assets.listCloudresourcemanagerTagBindings",
            "cloudasset.assets.listCloudresourcemanagerTagKeys",
            "cloudasset.assets.listCloudresourcemanagerTagValues",
            "cloudasset.assets.listComposerEnvironments",
            "cloudasset.assets.listComputeAddress",
            "cloudasset.assets.listComputeAutoscalers",
            "cloudasset.assets.listComputeBackendBuckets",
            "cloudasset.assets.listComputeBackendServices",
            "cloudasset.assets.listComputeCommitments",
            "cloudasset.assets.listComputeDisks",
            "cloudasset.assets.listComputeExternalVpnGateways",
            "cloudasset.assets.listComputeFirewallPolicies",
            "cloudasset.assets.listComputeFirewalls",
            "cloudasset.assets.listComputeForwardingRules",
            "cloudasset.assets.listComputeGlobalAddress",
            "cloudasset.assets.listComputeGlobalForwardingRules",
            "cloudasset.assets.listComputeHealthChecks",
            "cloudasset.assets.listComputeHttpHealthChecks",
            "cloudasset.assets.listComputeHttpsHealthChecks",
            "cloudasset.assets.listComputeImages",
            "cloudasset.assets.listComputeInstanceGroupManagers",
            "cloudasset.assets.listComputeInstanceGroups",
            "cloudasset.assets.listComputeInstanceTemplates",
            "cloudasset.assets.listComputeInstances",
            "cloudasset.assets.listComputeInterconnect",
            "cloudasset.assets.listComputeInterconnectAttachment",
            "cloudasset.assets.listComputeLicenses",
            "cloudasset.assets.listComputeNetworkEndpointGroups",
            "cloudasset.assets.listComputeNetworks",
            "cloudasset.assets.listComputeNodeGroups",
            "cloudasset.assets.listComputeNodeTemplates",
            "cloudasset.assets.listComputePacketMirrorings",
            "cloudasset.assets.listComputeProjects",
            "cloudasset.assets.listComputeRegionAutoscaler",
            "cloudasset.assets.listComputeRegionBackendServices",
            "cloudasset.assets.listComputeRegionDisk",
            "cloudasset.assets.listComputeRegionInstanceGroup",
            "cloudasset.assets.listComputeRegionInstanceGroupManager",
            "cloudasset.assets.listComputeReservations",
            "cloudasset.assets.listComputeResourcePolicies",
            "cloudasset.assets.listComputeRouters",
            "cloudasset.assets.listComputeRoutes",
            "cloudasset.assets.listComputeSecurityPolicy",
            "cloudasset.assets.listComputeServiceAttachments",
            "cloudasset.assets.listComputeSnapshots",
            "cloudasset.assets.listComputeSslCertificates",
            "cloudasset.assets.listComputeSslPolicies",
            "cloudasset.assets.listComputeSubnetworks",
            "cloudasset.assets.listComputeTargetHttpProxies",
            "cloudasset.assets.listComputeTargetHttpsProxies",
            "cloudasset.assets.listComputeTargetInstances",
            "cloudasset.assets.listComputeTargetPools",
            "cloudasset.assets.listComputeTargetSslProxies",
            "cloudasset.assets.listComputeTargetTcpProxies",
            "cloudasset.assets.listComputeTargetVpnGateways",
            "cloudasset.assets.listComputeUrlMaps",
            "cloudasset.assets.listComputeVpnGateways",
            "cloudasset.assets.listComputeVpnTunnels",
            "cloudasset.assets.listConnectorsConnections",
            "cloudasset.assets.listConnectorsConnectorVersions",
            "cloudasset.assets.listConnectorsConnectors",
            "cloudasset.assets.listConnectorsProviders",
            "cloudasset.assets.listConnectorsRuntimeConfigs",
            "cloudasset.assets.listContainerAppsDeployment",
            "cloudasset.assets.listContainerAppsReplicaSets",
            "cloudasset.assets.listContainerBatchJobs",
            "cloudasset.assets.listContainerClusterrole",
            "cloudasset.assets.listContainerClusterrolebinding",
            "cloudasset.assets.listContainerClusters",
            "cloudasset.assets.listContainerExtensionsIngresses",
            "cloudasset.assets.listContainerJobs",
            "cloudasset.assets.listContainerNamespace",
            "cloudasset.assets.listContainerNetworkingIngresses",
            "cloudasset.assets.listContainerNetworkingNetworkPolicies",
            "cloudasset.assets.listContainerNode",
            "cloudasset.assets.listContainerNodepool",
            "cloudasset.assets.listContainerPod",
            "cloudasset.assets.listContainerReplicaSets",
            "cloudasset.assets.listContainerRole",
            "cloudasset.assets.listContainerRolebinding",
            "cloudasset.assets.listContainerServices",
            "cloudasset.assets.listContainerregistryImage",
            "cloudasset.assets.listDataMigrationConnectionProfiles",
            "cloudasset.assets.listDataMigrationMigrationJobs",
            "cloudasset.assets.listDataflowJobs",
            "cloudasset.assets.listDatafusionInstance",
            "cloudasset.assets.listDataplexAssets",
            "cloudasset.assets.listDataplexLakes",
            "cloudasset.assets.listDataplexTasks",
            "cloudasset.assets.listDataplexZones",
            "cloudasset.assets.listDataprocAutoscalingPolicies",
            "cloudasset.assets.listDataprocBatches",
            "cloudasset.assets.listDataprocClusters",
            "cloudasset.assets.listDataprocJobs",
            "cloudasset.assets.listDataprocSessions",
            "cloudasset.assets.listDataprocWorkflowTemplates",
            "cloudasset.assets.listDatastreamConnectionProfile",
            "cloudasset.assets.listDatastreamPrivateConnection",
            "cloudasset.assets.listDatastreamStream",
            "cloudasset.assets.listDialogflowAgents",
            "cloudasset.assets.listDialogflowConversationProfiles",
            "cloudasset.assets.listDialogflowKnowledgeBases",
            "cloudasset.assets.listDialogflowLocationSettings",
            "cloudasset.assets.listDlpDeidentifyTemplates",
            "cloudasset.assets.listDlpDlpJobs",
            "cloudasset.assets.listDlpInspectTemplates",
            "cloudasset.assets.listDlpJobTriggers",
            "cloudasset.assets.listDlpStoredInfoTypes",
            "cloudasset.assets.listDnsManagedZones",
            "cloudasset.assets.listDnsPolicies",
            "cloudasset.assets.listDomainsRegistrations",
            "cloudasset.assets.listEventarcTriggers",
            "cloudasset.assets.listFileBackups",
            "cloudasset.assets.listFileInstances",
            "cloudasset.assets.listFirebaseAppInfos",
            "cloudasset.assets.listFirebaseProjects",
            "cloudasset.assets.listFirestoreDatabases",
            "cloudasset.assets.listGKEHubFeatures",
            "cloudasset.assets.listGKEHubMemberships",
            "cloudasset.assets.listGameservicesGameServerClusters",
            "cloudasset.assets.listGameservicesGameServerConfigs",
            "cloudasset.assets.listGameservicesGameServerDeployments",
            "cloudasset.assets.listGameservicesRealms",
            "cloudasset.assets.listGkeBackupBackupPlans",
            "cloudasset.assets.listGkeBackupBackups",
            "cloudasset.assets.listGkeBackupRestorePlans",
            "cloudasset.assets.listGkeBackupRestores",
            "cloudasset.assets.listGkeBackupVolumeBackups",
            "cloudasset.assets.listGkeBackupVolumeRestores",
            "cloudasset.assets.listHealthcareConsentStores",
            "cloudasset.assets.listHealthcareDatasets",
            "cloudasset.assets.listHealthcareDicomStores",
            "cloudasset.assets.listHealthcareFhirStores",
            "cloudasset.assets.listHealthcareHl7V2Stores",
            "cloudasset.assets.listIamPolicy",
            "cloudasset.assets.listIamRoles",
            "cloudasset.assets.listIamServiceAccountKeys",
            "cloudasset.assets.listIamServiceAccounts",
            "cloudasset.assets.listIapTunnel",
            "cloudasset.assets.listIapTunnelInstances",
            "cloudasset.assets.listIapTunnelZones",
            "cloudasset.assets.listIapWeb",
            "cloudasset.assets.listIapWebServiceVersion",
            "cloudasset.assets.listIapWebServices",
            "cloudasset.assets.listIapWebType",
            "cloudasset.assets.listIdsEndpoints",
            "cloudasset.assets.listIntegrationsAuthConfigs",
            "cloudasset.assets.listIntegrationsCertificates",
            "cloudasset.assets.listIntegrationsExecutions",
            "cloudasset.assets.listIntegrationsIntegrationVersions",
            "cloudasset.assets.listIntegrationsIntegrations",
            "cloudasset.assets.listIntegrationsSfdcChannels",
            "cloudasset.assets.listIntegrationsSfdcInstances",
            "cloudasset.assets.listIntegrationsSuspensions",
            "cloudasset.assets.listLoggingLogMetrics",
            "cloudasset.assets.listLoggingLogSinks",
            "cloudasset.assets.listManagedidentitiesDomain",
            "cloudasset.assets.listMetastoreBackups",
            "cloudasset.assets.listMetastoreMetadataImports",
            "cloudasset.assets.listMetastoreServices",
            "cloudasset.assets.listMonitoringAlertPolicies",
            "cloudasset.assets.listNetworkConnectivityHubs",
            "cloudasset.assets.listNetworkConnectivitySpokes",
            "cloudasset.assets.listNetworkManagementConnectivityTests",
            "cloudasset.assets.listNetworkServicesEndpointPolicies",
            "cloudasset.assets.listNetworkServicesGateways",
            "cloudasset.assets.listNetworkServicesGrpcRoutes",
            "cloudasset.assets.listNetworkServicesHttpRoutes",
            "cloudasset.assets.listNetworkServicesMeshes",
            "cloudasset.assets.listNetworkServicesServiceBindings",
            "cloudasset.assets.listNetworkServicesTcpRoutes",
            "cloudasset.assets.listNetworkServicesTlsRoutes",
            "cloudasset.assets.listOSConfigOSPolicyAssignmentReports",
            "cloudasset.assets.listOSConfigOSPolicyAssignments",
            "cloudasset.assets.listOSConfigVulnerabilityReports",
            "cloudasset.assets.listOSInventories",
            "cloudasset.assets.listOrgPolicy",
            "cloudasset.assets.listPatchDeployments",
            "cloudasset.assets.listPubsubSnapshots",
            "cloudasset.assets.listPubsubSubscriptions",
            "cloudasset.assets.listPubsubTopics",
            "cloudasset.assets.listRedisInstances",
            "cloudasset.assets.listResource",
            "cloudasset.assets.listRunDomainMapping",
            "cloudasset.assets.listRunRevision",
            "cloudasset.assets.listRunService",
            "cloudasset.assets.listSecretManagerSecretVersions",
            "cloudasset.assets.listSecretManagerSecrets",
            "cloudasset.assets.listServiceDirectoryNamespaces",
            "cloudasset.assets.listServicePerimeter",
            "cloudasset.assets.listServiceconsumermanagementConsumerProperty",
            "cloudasset.assets.listServiceconsumermanagementConsumerQuotaLimits",
            "cloudasset.assets.listServiceconsumermanagementConsumers",
            "cloudasset.assets.listServiceconsumermanagementProducerOverrides",
            "cloudasset.assets.listServiceconsumermanagementTenancyUnits",
            "cloudasset.assets.listServiceconsumermanagementVisibility",
            "cloudasset.assets.listServicemanagementServices",
            "cloudasset.assets.listServiceusageAdminOverrides",
            "cloudasset.assets.listServiceusageConsumerOverrides",
            "cloudasset.assets.listServiceusageServices",
            "cloudasset.assets.listSpannerBackups",
            "cloudasset.assets.listSpannerDatabases",
            "cloudasset.assets.listSpannerInstances",
            "cloudasset.assets.listSpeakerIdPhrases",
            "cloudasset.assets.listSpeakerIdSettings",
            "cloudasset.assets.listSpeakerIdSpeakers",
            "cloudasset.assets.listSpeechCustomClasses",
            "cloudasset.assets.listSpeechPhraseSets",
            "cloudasset.assets.listSqladminBackupRuns",
            "cloudasset.assets.listSqladminInstances",
            "cloudasset.assets.listStorageBuckets",
            "cloudasset.assets.listTpuNodes",
            "cloudasset.assets.listVpcaccessConnector",
            "cloudasset.assets.queryAccessPolicy",
            "cloudasset.assets.queryIamPolicy",
            "cloudasset.assets.queryOSInventories",
            "cloudasset.assets.queryResource",
            "cloudasset.assets.searchAllIamPolicies",
            "cloudasset.assets.searchAllResources",
            "cloudasset.othercloudconnections.get",
            "cloudasset.othercloudconnections.list",
            "cloudasset.othercloudconnections.verify",
            "cloudnotifications.activities.list",
            "cloudquotas.quotas.get",
            "cloudsupport.properties.get",
            "cloudsupport.techCases.get",
            "cloudsupport.techCases.list",
            "compute.futureReservations.get",
            "compute.futureReservations.list",
            "compute.reservations.get",
            "compute.reservations.list",
            "errorreporting.applications.list",
            "errorreporting.errorEvents.list",
            "errorreporting.groupMetadata.get",
            "errorreporting.groups.list",
            "logging.buckets.get",
            "logging.buckets.list",
            "logging.exclusions.get",
            "logging.exclusions.list",
            "logging.links.get",
            "logging.links.list",
            "logging.locations.*",
            "logging.logEntries.list",
            "logging.logMetrics.get",
            "logging.logMetrics.list",
            "logging.logScopes.get",
            "logging.logScopes.list",
            "logging.logServiceIndexes.list",
            "logging.logServices.list",
            "logging.logs.list",
            "logging.notificationRules.get",
            "logging.notificationRules.list",
            "logging.operations.get",
            "logging.operations.list",
            "logging.queries.getShared",
            "logging.queries.listShared",
            "logging.queries.usePrivate",
            "logging.sinks.get",
            "logging.sinks.list",
            "logging.usage.get",
            "logging.views.get",
            "logging.views.list",
            "maintenance.*",
            "monitoring.alertPolicies.get",
            "monitoring.alertPolicies.list",
            "monitoring.alertPolicies.listEffectiveTags",
            "monitoring.alertPolicies.listTagBindings",
            "monitoring.dashboards.get",
            "monitoring.dashboards.list",
            "monitoring.groups.get",
            "monitoring.groups.list",
            "monitoring.metricDescriptors.get",
            "monitoring.metricDescriptors.list",
            "monitoring.monitoredResourceDescriptors.*",
            "monitoring.notificationChannelDescriptors.*",
            "monitoring.notificationChannels.get",
            "monitoring.notificationChannels.list",
            "monitoring.services.get",
            "monitoring.services.list",
            "monitoring.slos.get",
            "monitoring.slos.list",
            "monitoring.snoozes.get",
            "monitoring.snoozes.list",
            "monitoring.timeSeries.list",
            "monitoring.uptimeCheckConfigs.get",
            "monitoring.uptimeCheckConfigs.list",
            "observability.scopes.get",
            "opsconfigmonitoring.resourceMetadata.list",
            "recommender.alloydbClusterPerformanceInsights.get",
            "recommender.alloydbClusterPerformanceInsights.list",
            "recommender.alloydbClusterPerformanceRecommendations.get",
            "recommender.alloydbClusterPerformanceRecommendations.list",
            "recommender.alloydbClusterReliabilityInsights.get",
            "recommender.alloydbClusterReliabilityInsights.list",
            "recommender.alloydbClusterReliabilityRecommendations.get",
            "recommender.alloydbClusterReliabilityRecommendations.list",
            "recommender.alloydbInstanceSecurityInsights.get",
            "recommender.alloydbInstanceSecurityInsights.list",
            "recommender.alloydbInstanceSecurityRecommendations.get",
            "recommender.alloydbInstanceSecurityRecommendations.list",
            "recommender.bigqueryCapacityCommitmentsInsights.get",
            "recommender.bigqueryCapacityCommitmentsInsights.list",
            "recommender.bigqueryCapacityCommitmentsRecommendations.get",
            "recommender.bigqueryCapacityCommitmentsRecommendations.list",
            "recommender.bigqueryMaterializedViewInsights.get",
            "recommender.bigqueryMaterializedViewInsights.list",
            "recommender.bigqueryMaterializedViewRecommendations.get",
            "recommender.bigqueryMaterializedViewRecommendations.list",
            "recommender.bigqueryPartitionClusterRecommendations.get",
            "recommender.bigqueryPartitionClusterRecommendations.list",
            "recommender.bigqueryTableStatsInsights.get",
            "recommender.bigqueryTableStatsInsights.list",
            "recommender.bigtableClusterPerformanceInsights.get",
            "recommender.bigtableClusterPerformanceInsights.list",
            "recommender.bigtableClusterPerformanceRecommendations.get",
            "recommender.bigtableClusterPerformanceRecommendations.list",
            "recommender.cloudAssetInsights.get",
            "recommender.cloudAssetInsights.list",
            "recommender.cloudCostGeneralInsights.get",
            "recommender.cloudCostGeneralInsights.list",
            "recommender.cloudCostGeneralRecommendations.get",
            "recommender.cloudCostGeneralRecommendations.list",
            "recommender.cloudDeprecationGeneralInsights.get",
            "recommender.cloudDeprecationGeneralInsights.list",
            "recommender.cloudDeprecationGeneralRecommendations.get",
            "recommender.cloudDeprecationGeneralRecommendations.list",
            "recommender.cloudFunctionsPerformanceInsights.get",
            "recommender.cloudFunctionsPerformanceInsights.list",
            "recommender.cloudFunctionsPerformanceRecommendations.get",
            "recommender.cloudFunctionsPerformanceRecommendations.list",
            "recommender.cloudManageabilityGeneralInsights.get",
            "recommender.cloudManageabilityGeneralInsights.list",
            "recommender.cloudManageabilityGeneralRecommendations.get",
            "recommender.cloudManageabilityGeneralRecommendations.list",
            "recommender.cloudPerformanceGeneralInsights.get",
            "recommender.cloudPerformanceGeneralInsights.list",
            "recommender.cloudPerformanceGeneralRecommendations.get",
            "recommender.cloudPerformanceGeneralRecommendations.list",
            "recommender.cloudRecentChangeInsights.get",
            "recommender.cloudRecentChangeInsights.list",
            "recommender.cloudRecentChangeRecommendations.get",
            "recommender.cloudRecentChangeRecommendations.list",
            "recommender.cloudRecentChangeRecommenderConfig.get",
            "recommender.cloudReliabilityGeneralInsights.get",
            "recommender.cloudReliabilityGeneralInsights.list",
            "recommender.cloudReliabilityGeneralRecommendations.get",
            "recommender.cloudReliabilityGeneralRecommendations.list",
            "recommender.cloudSecurityGeneralInsights.get",
            "recommender.cloudSecurityGeneralInsights.list",
            "recommender.cloudSecurityGeneralRecommendations.get",
            "recommender.cloudSecurityGeneralRecommendations.list",
            "recommender.cloudsqlIdleInstanceRecommendations.get",
            "recommender.cloudsqlIdleInstanceRecommendations.list",
            "recommender.cloudsqlInstanceActivityInsights.get",
            "recommender.cloudsqlInstanceActivityInsights.list",
            "recommender.cloudsqlInstanceCpuUsageInsights.get",
            "recommender.cloudsqlInstanceCpuUsageInsights.list",
            "recommender.cloudsqlInstanceDiskUsageTrendInsights.get",
            "recommender.cloudsqlInstanceDiskUsageTrendInsights.list",
            "recommender.cloudsqlInstanceMemoryUsageInsights.get",
            "recommender.cloudsqlInstanceMemoryUsageInsights.list",
            "recommender.cloudsqlInstanceOomProbabilityInsights.get",
            "recommender.cloudsqlInstanceOomProbabilityInsights.list",
            "recommender.cloudsqlInstanceOutOfDiskRecommendations.get",
            "recommender.cloudsqlInstanceOutOfDiskRecommendations.list",
            "recommender.cloudsqlInstancePerformanceInsights.get",
            "recommender.cloudsqlInstancePerformanceInsights.list",
            "recommender.cloudsqlInstancePerformanceRecommendations.get",
            "recommender.cloudsqlInstancePerformanceRecommendations.list",
            "recommender.cloudsqlInstanceReliabilityInsights.get",
            "recommender.cloudsqlInstanceReliabilityInsights.list",
            "recommender.cloudsqlInstanceReliabilityRecommendations.get",
            "recommender.cloudsqlInstanceReliabilityRecommendations.list",
            "recommender.cloudsqlInstanceSecurityInsights.get",
            "recommender.cloudsqlInstanceSecurityInsights.list",
            "recommender.cloudsqlInstanceSecurityRecommendations.get",
            "recommender.cloudsqlInstanceSecurityRecommendations.list",
            "recommender.cloudsqlInstanceUnderprovisionedCpuUsageInsights.get",
            "recommender.cloudsqlInstanceUnderprovisionedCpuUsageInsights.list",
            "recommender.cloudsqlInstanceUnderprovisionedMemoryUsageInsights.get",
            "recommender.cloudsqlInstanceUnderprovisionedMemoryUsageInsights.list",
            "recommender.cloudsqlOverprovisionedInstanceRecommendations.get",
            "recommender.cloudsqlOverprovisionedInstanceRecommendations.list",
            "recommender.cloudsqlUnderProvisionedInstanceRecommendations.get",
            "recommender.cloudsqlUnderProvisionedInstanceRecommendations.list",
            "recommender.commitmentUtilizationInsights.get",
            "recommender.commitmentUtilizationInsights.list",
            "recommender.computeAddressIdleResourceInsights.get",
            "recommender.computeAddressIdleResourceInsights.list",
            "recommender.computeAddressIdleResourceRecommendations.get",
            "recommender.computeAddressIdleResourceRecommendations.list",
            "recommender.computeDiskIdleResourceInsights.get",
            "recommender.computeDiskIdleResourceInsights.list",
            "recommender.computeDiskIdleResourceRecommendations.get",
            "recommender.computeDiskIdleResourceRecommendations.list",
            "recommender.computeFirewallInsightTypeConfigs.get",
            "recommender.computeFirewallInsights.get",
            "recommender.computeFirewallInsights.list",
            "recommender.computeImageIdleResourceInsights.get",
            "recommender.computeImageIdleResourceInsights.list",
            "recommender.computeImageIdleResourceRecommendations.get",
            "recommender.computeImageIdleResourceRecommendations.list",
            "recommender.computeInstanceCpuUsageInsights.get",
            "recommender.computeInstanceCpuUsageInsights.list",
            "recommender.computeInstanceCpuUsagePredictionInsights.get",
            "recommender.computeInstanceCpuUsagePredictionInsights.list",
            "recommender.computeInstanceCpuUsageTrendInsights.get",
            "recommender.computeInstanceCpuUsageTrendInsights.list",
            "recommender.computeInstanceGroupManagerCpuUsageInsights.get",
            "recommender.computeInstanceGroupManagerCpuUsageInsights.list",
            "recommender.computeInstanceGroupManagerCpuUsagePredictionInsights.get",
            "recommender.computeInstanceGroupManagerCpuUsagePredictionInsights.list",
            "recommender.computeInstanceGroupManagerCpuUsageTrendInsights.get",
            "recommender.computeInstanceGroupManagerCpuUsageTrendInsights.list",
            "recommender.computeInstanceGroupManagerMachineTypeRecommendations.get",
            "recommender.computeInstanceGroupManagerMachineTypeRecommendations.list",
            "recommender.computeInstanceGroupManagerMemoryUsageInsights.get",
            "recommender.computeInstanceGroupManagerMemoryUsageInsights.list",
            "recommender.computeInstanceGroupManagerMemoryUsagePredictionInsights.get",
            "recommender.computeInstanceGroupManagerMemoryUsagePredictionInsights.list",
            "recommender.computeInstanceIdleResourceRecommendations.get",
            "recommender.computeInstanceIdleResourceRecommendations.list",
            "recommender.computeInstanceIdleResourceRecommenderConfig.get",
            "recommender.computeInstanceMachineTypeRecommendations.get",
            "recommender.computeInstanceMachineTypeRecommendations.list",
            "recommender.computeInstanceMemoryUsageInsights.get",
            "recommender.computeInstanceMemoryUsageInsights.list",
            "recommender.computeInstanceMemoryUsagePredictionInsights.get",
            "recommender.computeInstanceMemoryUsagePredictionInsights.list",
            "recommender.computeInstanceNetworkThroughputInsights.get",
            "recommender.computeInstanceNetworkThroughputInsights.list",
            "recommender.containerDiagnosisInsights.get",
            "recommender.containerDiagnosisInsights.list",
            "recommender.containerDiagnosisRecommendations.get",
            "recommender.containerDiagnosisRecommendations.list",
            "recommender.costInsights.get",
            "recommender.costInsights.list",
            "recommender.dataflowDiagnosticsInsights.get",
            "recommender.dataflowDiagnosticsInsights.list",
            "recommender.errorReportingInsights.get",
            "recommender.errorReportingInsights.list",
            "recommender.errorReportingRecommendations.get",
            "recommender.errorReportingRecommendations.list",
            "recommender.firestoreDatabaseReliabilityInsights.get",
            "recommender.firestoreDatabaseReliabilityInsights.list",
            "recommender.firestoreDatabaseReliabilityRecommendations.get",
            "recommender.firestoreDatabaseReliabilityRecommendations.list",
            "recommender.gmpGuidedExperienceInsights.get",
            "recommender.gmpGuidedExperienceInsights.list",
            "recommender.gmpGuidedExperienceRecommendations.get",
            "recommender.gmpGuidedExperienceRecommendations.list",
            "recommender.gmpProjectManagementInsights.get",
            "recommender.gmpProjectManagementInsights.list",
            "recommender.gmpProjectManagementRecommendations.get",
            "recommender.gmpProjectManagementRecommendations.list",
            "recommender.gmpProjectProductSuggestionsInsights.get",
            "recommender.gmpProjectProductSuggestionsInsights.list",
            "recommender.gmpProjectProductSuggestionsRecommendations.get",
            "recommender.gmpProjectProductSuggestionsRecommendations.list",
            "recommender.iamPolicyChangeRiskInsights.get",
            "recommender.iamPolicyChangeRiskInsights.list",
            "recommender.iamPolicyChangeRiskRecommendations.get",
            "recommender.iamPolicyChangeRiskRecommendations.list",
            "recommender.iamPolicyInsights.get",
            "recommender.iamPolicyInsights.list",
            "recommender.iamPolicyLateralMovementInsights.get",
            "recommender.iamPolicyLateralMovementInsights.list",
            "recommender.iamPolicyRecommendations.get",
            "recommender.iamPolicyRecommendations.list",
            "recommender.iamPolicyRecommenderConfig.get",
            "recommender.iamServiceAccountChangeRiskInsights.get",
            "recommender.iamServiceAccountChangeRiskInsights.list",
            "recommender.iamServiceAccountChangeRiskRecommendations.get",
            "recommender.iamServiceAccountChangeRiskRecommendations.list",
            "recommender.iamServiceAccountInsights.get",
            "recommender.iamServiceAccountInsights.list",
            "recommender.locations.*",
            "recommender.loggingProductSuggestionContainerInsights.get",
            "recommender.loggingProductSuggestionContainerInsights.list",
            "recommender.loggingProductSuggestionContainerRecommendations.get",
            "recommender.loggingProductSuggestionContainerRecommendations.list",
            "recommender.memorystoreManageabilityInsights.get",
            "recommender.memorystoreManageabilityInsights.list",
            "recommender.memorystoreManageabilityRecommendations.get",
            "recommender.memorystoreManageabilityRecommendations.list",
            "recommender.memorystorePerformanceInsights.get",
            "recommender.memorystorePerformanceInsights.list",
            "recommender.memorystorePerformanceRecommendations.get",
            "recommender.memorystorePerformanceRecommendations.list",
            "recommender.memorystoreReliabilityInsights.get",
            "recommender.memorystoreReliabilityInsights.list",
            "recommender.memorystoreReliabilityRecommendations.get",
            "recommender.memorystoreReliabilityRecommendations.list",
            "recommender.memorystoreUtilizationInsights.get",
            "recommender.memorystoreUtilizationInsights.list",
            "recommender.monitoringProductSuggestionComputeInsights.get",
            "recommender.monitoringProductSuggestionComputeInsights.list",
            "recommender.monitoringProductSuggestionComputeRecommendations.get",
            "recommender.monitoringProductSuggestionComputeRecommendations.list",
            "recommender.networkAnalyzerCloudSqlInsights.get",
            "recommender.networkAnalyzerCloudSqlInsights.list",
            "recommender.networkAnalyzerDynamicRouteInsights.get",
            "recommender.networkAnalyzerDynamicRouteInsights.list",
            "recommender.networkAnalyzerGkeConnectivityInsights.get",
            "recommender.networkAnalyzerGkeConnectivityInsights.list",
            "recommender.networkAnalyzerGkeIpAddressInsights.get",
            "recommender.networkAnalyzerGkeIpAddressInsights.list",
            "recommender.networkAnalyzerGkeServiceAccountInsights.get",
            "recommender.networkAnalyzerGkeServiceAccountInsights.list",
            "recommender.networkAnalyzerIpAddressInsights.get",
            "recommender.networkAnalyzerIpAddressInsights.list",
            "recommender.networkAnalyzerLoadBalancerInsights.get",
            "recommender.networkAnalyzerLoadBalancerInsights.list",
            "recommender.networkAnalyzerVpcConnectivityInsights.get",
            "recommender.networkAnalyzerVpcConnectivityInsights.list",
            "recommender.orgPolicyInsights.get",
            "recommender.orgPolicyInsights.list",
            "recommender.orgPolicyRecommendations.get",
            "recommender.orgPolicyRecommendations.list",
            "recommender.resourcemanagerProjectChangeRiskInsights.get",
            "recommender.resourcemanagerProjectChangeRiskInsights.list",
            "recommender.resourcemanagerProjectChangeRiskRecommendations.get",
            "recommender.resourcemanagerProjectChangeRiskRecommendations.list",
            "recommender.resourcemanagerProjectUtilizationInsightTypeConfigs.get",
            "recommender.resourcemanagerProjectUtilizationInsights.get",
            "recommender.resourcemanagerProjectUtilizationInsights.list",
            "recommender.resourcemanagerProjectUtilizationRecommendations.get",
            "recommender.resourcemanagerProjectUtilizationRecommendations.list",
            "recommender.resourcemanagerProjectUtilizationRecommenderConfigs.get",
            "recommender.resourcemanagerServiceLimitInsights.get",
            "recommender.resourcemanagerServiceLimitInsights.list",
            "recommender.resourcemanagerServiceLimitRecommendations.get",
            "recommender.resourcemanagerServiceLimitRecommendations.list",
            "recommender.runServiceCostInsights.get",
            "recommender.runServiceCostInsights.list",
            "recommender.runServiceCostRecommendations.get",
            "recommender.runServiceCostRecommendations.list",
            "recommender.runServiceIdentityInsights.get",
            "recommender.runServiceIdentityInsights.list",
            "recommender.runServiceIdentityRecommendations.get",
            "recommender.runServiceIdentityRecommendations.list",
            "recommender.runServicePerformanceInsights.get",
            "recommender.runServicePerformanceInsights.list",
            "recommender.runServicePerformanceRecommendations.get",
            "recommender.runServicePerformanceRecommendations.list",
            "recommender.runServiceSecurityInsights.get",
            "recommender.runServiceSecurityInsights.list",
            "recommender.runServiceSecurityRecommendations.get",
            "recommender.runServiceSecurityRecommendations.list",
            "recommender.spannerProjectReliabilityInsights.get",
            "recommender.spannerProjectReliabilityInsights.list",
            "recommender.spannerProjectReliabilityRecommendations.get",
            "recommender.spannerProjectReliabilityRecommendations.list",
            "recommender.spendBasedCommitmentInsights.get",
            "recommender.spendBasedCommitmentInsights.list",
            "recommender.spendBasedCommitmentRecommendations.get",
            "recommender.spendBasedCommitmentRecommendations.list",
            "recommender.spendBasedCommitmentRecommenderConfig.get",
            "recommender.storageBucketSoftDeleteInsights.get",
            "recommender.storageBucketSoftDeleteInsights.list",
            "recommender.storageBucketSoftDeleteRecommendations.get",
            "recommender.storageBucketSoftDeleteRecommendations.list",
            "recommender.usageCommitmentRecommendations.get",
            "recommender.usageCommitmentRecommendations.list",
            "resourcemanager.folders.get",
            "resourcemanager.organizations.get",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "servicehealth.*",
            "serviceusage.quotas.get",
            "serviceusage.services.get",
            "serviceusage.services.list",
            "stackdriver.projects.get",
            "stackdriver.resourceMetadata.list"
          ],
          "title": "Cloud Hub Operator"
        },
        {
          "description": "Provides full access to Identity-Aware Proxy resources.",
          "id": "roles/iap.admin",
          "is_beta": false,
          "permissions": [
            "iap.tunnel.*",
            "iap.tunnelDestGroups.getIamPolicy",
            "iap.tunnelDestGroups.setIamPolicy",
            "iap.tunnelInstances.getIamPolicy",
            "iap.tunnelInstances.setIamPolicy",
            "iap.tunnelLocations.*",
            "iap.tunnelZones.*",
            "iap.web.getIamPolicy",
            "iap.web.setIamPolicy",
            "iap.webServiceVersions.getIamPolicy",
            "iap.webServiceVersions.setIamPolicy",
            "iap.webServices.getIamPolicy",
            "iap.webServices.setIamPolicy",
            "iap.webTypes.getIamPolicy",
            "iap.webTypes.setIamPolicy"
          ],
          "title": "IAP Policy Admin"
        },
        {
          "description": "Provides permission to access HTTPS resources which use Identity-Aware Proxy.",
          "id": "roles/iap.httpsResourceAccessor",
          "is_beta": false,
          "permissions": [
            "iap.webServiceVersions.accessViaIAP"
          ],
          "title": "IAP-secured Web App User"
        },
        {
          "description": "Remediate IAP resource",
          "id": "roles/iap.remediatorUser",
          "is_beta": true,
          "permissions": [
            "iap.tunnelDestGroups.remediate",
            "iap.tunnelinstances.remediate",
            "iap.webServiceVersions.remediate"
          ],
          "title": "IAP-secured Resource Remediator User"
        },
        {
          "description": "Administrator of IAP Settings.",
          "id": "roles/iap.settingsAdmin",
          "is_beta": false,
          "permissions": [
            "iap.projects.*",
            "iap.web.getSettings",
            "iap.web.updateSettings",
            "iap.webServiceVersions.getSettings",
            "iap.webServiceVersions.updateSettings",
            "iap.webServices.getSettings",
            "iap.webServices.updateSettings",
            "iap.webTypes.getSettings",
            "iap.webTypes.updateSettings"
          ],
          "title": "IAP Settings Admin"
        },
        {
          "description": "Edit Tunnel Destination Group resources which use Identity-Aware Proxy",
          "id": "roles/iap.tunnelDestGroupEditor",
          "is_beta": false,
          "permissions": [
            "iap.tunnelDestGroups.create",
            "iap.tunnelDestGroups.delete",
            "iap.tunnelDestGroups.get",
            "iap.tunnelDestGroups.list",
            "iap.tunnelDestGroups.update"
          ],
          "title": "IAP-secured Tunnel Destination Group Editor"
        },
        {
          "description": "View Tunnel Destination Group resources which use Identity-Aware Proxy",
          "id": "roles/iap.tunnelDestGroupViewer",
          "is_beta": false,
          "permissions": [
            "iap.tunnelDestGroups.get",
            "iap.tunnelDestGroups.list"
          ],
          "title": "IAP-secured Tunnel Destination Group Viewer"
        },
        {
          "description": "Access Tunnel resources which use Identity-Aware Proxy",
          "id": "roles/iap.tunnelResourceAccessor",
          "is_beta": false,
          "permissions": [
            "iap.tunnelDestGroups.accessViaIAP",
            "iap.tunnelInstances.accessViaIAP"
          ],
          "title": "IAP-secured Tunnel User"
        },
        {
          "description": "Full access to Cloud IDS all resources.",
          "id": "roles/ids.admin",
          "is_beta": true,
          "permissions": [
            "ids.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Cloud IDS Admin"
        },
        {
          "description": "Read-only access to Cloud IDS all resources.",
          "id": "roles/ids.viewer",
          "is_beta": true,
          "permissions": [
            "ids.endpoints.get",
            "ids.endpoints.getIamPolicy",
            "ids.endpoints.list",
            "ids.locations.*",
            "ids.operations.get",
            "ids.operations.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Cloud IDS Viewer"
        },
        {
          "description": "Provides access to Cloud KMS resources, except for access to restricted resource types and cryptographic operations.",
          "id": "roles/cloudkms.admin",
          "is_beta": false,
          "permissions": [
            "cloudkms.autokeyConfigs.*",
            "cloudkms.cryptoKeyVersions.create",
            "cloudkms.cryptoKeyVersions.destroy",
            "cloudkms.cryptoKeyVersions.get",
            "cloudkms.cryptoKeyVersions.list",
            "cloudkms.cryptoKeyVersions.restore",
            "cloudkms.cryptoKeyVersions.update",
            "cloudkms.cryptoKeyVersions.useToDecryptViaDelegation",
            "cloudkms.cryptoKeyVersions.useToEncryptViaDelegation",
            "cloudkms.cryptoKeys.*",
            "cloudkms.ekmConfigs.*",
            "cloudkms.ekmConnections.*",
            "cloudkms.importJobs.*",
            "cloudkms.keyHandles.*",
            "cloudkms.keyRings.*",
            "cloudkms.locations.get",
            "cloudkms.locations.list",
            "cloudkms.locations.optOutKeyDeletionMsa",
            "cloudkms.operations.get",
            "cloudkms.projects.showEffectiveAutokeyConfig",
            "resourcemanager.projects.get"
          ],
          "title": "Cloud KMS Admin"
        },
        {
          "description": "Enables management of AutokeyConfig.",
          "id": "roles/cloudkms.autokeyAdmin",
          "is_beta": false,
          "permissions": [
            "cloudkms.autokeyConfigs.*",
            "cloudkms.projects.showEffectiveAutokeyConfig"
          ],
          "title": "Cloud KMS Autokey Admin"
        },
        {
          "description": "Grants ability to use KeyHandle resources.",
          "id": "roles/cloudkms.autokeyUser",
          "is_beta": false,
          "permissions": [
            "cloudkms.keyHandles.*",
            "cloudkms.operations.get",
            "cloudkms.projects.showEffectiveAutokeyConfig"
          ],
          "title": "Cloud KMS Autokey User"
        },
        {
          "description": "Provides ability to use Cloud KMS resources for decrypt operations only.",
          "id": "roles/cloudkms.cryptoKeyDecrypter",
          "is_beta": false,
          "permissions": [
            "cloudkms.cryptoKeyVersions.useToDecrypt",
            "cloudkms.locations.get",
            "cloudkms.locations.list",
            "resourcemanager.projects.get"
          ],
          "title": "Cloud KMS CryptoKey Decrypter"
        },
        {
          "description": "Enables Decrypt operations via other Google Cloud services",
          "id": "roles/cloudkms.cryptoKeyDecrypterViaDelegation",
          "is_beta": false,
          "permissions": [
            "cloudkms.cryptoKeyVersions.useToDecryptViaDelegation",
            "cloudkms.locations.get",
            "cloudkms.locations.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Cloud KMS CryptoKey Decrypter Via Delegation"
        },
        {
          "description": "Provides ability to use Cloud KMS resources for encrypt operations only.",
          "id": "roles/cloudkms.cryptoKeyEncrypter",
          "is_beta": false,
          "permissions": [
            "cloudkms.cryptoKeyVersions.useToEncrypt",
            "cloudkms.locations.get",
            "cloudkms.locations.list",
            "resourcemanager.projects.get"
          ],
          "title": "Cloud KMS CryptoKey Encrypter"
        },
        {
          "description": "Provides ability to use Cloud KMS resources for encrypt and decrypt operations only.",
          "id": "roles/cloudkms.cryptoKeyEncrypterDecrypter",
          "is_beta": false,
          "permissions": [
            "cloudkms.cryptoKeyVersions.useToDecrypt",
            "cloudkms.cryptoKeyVersions.useToEncrypt",
            "cloudkms.locations.get",
            "cloudkms.locations.list",
            "resourcemanager.projects.get"
          ],
          "title": "Cloud KMS CryptoKey Encrypter/Decrypter"
        },
        {
          "description": "Enables Encrypt and Decrypt operations via other Google Cloud services",
          "id": "roles/cloudkms.cryptoKeyEncrypterDecrypterViaDelegation",
          "is_beta": false,
          "permissions": [
            "cloudkms.cryptoKeyVersions.useToDecryptViaDelegation",
            "cloudkms.cryptoKeyVersions.useToEncryptViaDelegation",
            "cloudkms.locations.get",
            "cloudkms.locations.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Cloud KMS CryptoKey Encrypter/Decrypter Via Delegation"
        },
        {
          "description": "Enables Encrypt operations via other Google Cloud services",
          "id": "roles/cloudkms.cryptoKeyEncrypterViaDelegation",
          "is_beta": false,
          "permissions": [
            "cloudkms.cryptoKeyVersions.useToEncryptViaDelegation",
            "cloudkms.locations.get",
            "cloudkms.locations.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Cloud KMS CryptoKey Encrypter Via Delegation"
        },
        {
          "description": "Enables all Crypto Operations.",
          "id": "roles/cloudkms.cryptoOperator",
          "is_beta": false,
          "permissions": [
            "cloudkms.cryptoKeyVersions.useToDecrypt",
            "cloudkms.cryptoKeyVersions.useToEncrypt",
            "cloudkms.cryptoKeyVersions.useToSign",
            "cloudkms.cryptoKeyVersions.useToVerify",
            "cloudkms.cryptoKeyVersions.viewPublicKey",
            "cloudkms.locations.generateRandomBytes",
            "cloudkms.locations.get",
            "cloudkms.locations.list",
            "resourcemanager.projects.get"
          ],
          "title": "Cloud KMS Crypto Operator"
        },
        {
          "description": "Enables management of EkmConnections.",
          "id": "roles/cloudkms.ekmConnectionsAdmin",
          "is_beta": false,
          "permissions": [
            "cloudkms.ekmConfigs.get",
            "cloudkms.ekmConfigs.update",
            "cloudkms.ekmConnections.create",
            "cloudkms.ekmConnections.get",
            "cloudkms.ekmConnections.list",
            "cloudkms.ekmConnections.update",
            "cloudkms.ekmConnections.verifyConnectivity",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Cloud KMS EkmConnections Admin"
        },
        {
          "description": "Enables raw AES-CBC keys management.",
          "id": "roles/cloudkms.expertRawAesCbc",
          "is_beta": false,
          "permissions": [
            "cloudkms.cryptoKeyVersions.manageRawAesCbcKeys",
            "cloudkms.locations.get",
            "cloudkms.locations.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Cloud KMS Expert Raw AES-CBC Key Manager"
        },
        {
          "description": "Enables raw AES-CTR keys management.",
          "id": "roles/cloudkms.expertRawAesCtr",
          "is_beta": false,
          "permissions": [
            "cloudkms.cryptoKeyVersions.manageRawAesCtrKeys",
            "cloudkms.locations.get",
            "cloudkms.locations.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Cloud KMS Expert Raw AES-CTR Key Manager"
        },
        {
          "description": "Enables raw PKCS#1 keys management.",
          "id": "roles/cloudkms.expertRawPKCS1",
          "is_beta": false,
          "permissions": [
            "cloudkms.cryptoKeyVersions.manageRawPKCS1Keys",
            "cloudkms.locations.get",
            "cloudkms.locations.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Cloud KMS Expert Raw PKCS#1 Key Manager"
        },
        {
          "description": "Enables ImportCryptoKeyVersion, CreateImportJob, ListImportJobs, and GetImportJob operations",
          "id": "roles/cloudkms.importer",
          "is_beta": false,
          "permissions": [
            "cloudkms.importJobs.create",
            "cloudkms.importJobs.get",
            "cloudkms.importJobs.list",
            "cloudkms.importJobs.useToImport",
            "cloudkms.locations.get",
            "cloudkms.locations.list",
            "resourcemanager.projects.get"
          ],
          "title": "Cloud KMS Importer"
        },
        {
          "description": "Enables viewing protected resources.",
          "id": "roles/cloudkms.protectedResourcesViewer",
          "is_beta": false,
          "permissions": [
            "cloudkms.protectedResources.search"
          ],
          "title": "Cloud KMS Protected Resources Viewer"
        },
        {
          "description": "Enables GetPublicKey operations",
          "id": "roles/cloudkms.publicKeyViewer",
          "is_beta": false,
          "permissions": [
            "cloudkms.cryptoKeyVersions.viewPublicKey",
            "cloudkms.locations.get",
            "cloudkms.locations.list",
            "resourcemanager.projects.get"
          ],
          "title": "Cloud KMS CryptoKey Public Key Viewer"
        },
        {
          "description": "Enables Sign operations",
          "id": "roles/cloudkms.signer",
          "is_beta": false,
          "permissions": [
            "cloudkms.cryptoKeyVersions.useToSign",
            "cloudkms.locations.get",
            "cloudkms.locations.list",
            "resourcemanager.projects.get"
          ],
          "title": "Cloud KMS CryptoKey Signer"
        },
        {
          "description": "Enables Sign, Verify, and GetPublicKey operations",
          "id": "roles/cloudkms.signerVerifier",
          "is_beta": false,
          "permissions": [
            "cloudkms.cryptoKeyVersions.useToSign",
            "cloudkms.cryptoKeyVersions.useToVerify",
            "cloudkms.cryptoKeyVersions.viewPublicKey",
            "cloudkms.locations.get",
            "cloudkms.locations.list",
            "resourcemanager.projects.get"
          ],
          "title": "Cloud KMS CryptoKey Signer/Verifier"
        },
        {
          "description": "Enables Verify and GetPublicKey operations",
          "id": "roles/cloudkms.verifier",
          "is_beta": false,
          "permissions": [
            "cloudkms.cryptoKeyVersions.useToVerify",
            "cloudkms.cryptoKeyVersions.viewPublicKey",
            "cloudkms.locations.get",
            "cloudkms.locations.list",
            "resourcemanager.projects.get"
          ],
          "title": "Cloud KMS CryptoKey Verifier"
        },
        {
          "description": "Enables Get and List operations.",
          "id": "roles/cloudkms.viewer",
          "is_beta": false,
          "permissions": [
            "cloudkms.autokeyConfigs.get",
            "cloudkms.cryptoKeyVersions.get",
            "cloudkms.cryptoKeyVersions.list",
            "cloudkms.cryptoKeys.get",
            "cloudkms.cryptoKeys.list",
            "cloudkms.ekmConfigs.get",
            "cloudkms.ekmConnections.get",
            "cloudkms.ekmConnections.list",
            "cloudkms.importJobs.get",
            "cloudkms.importJobs.list",
            "cloudkms.keyHandles.get",
            "cloudkms.keyHandles.list",
            "cloudkms.keyRings.get",
            "cloudkms.keyRings.list",
            "cloudkms.locations.get",
            "cloudkms.locations.list",
            "cloudkms.operations.get",
            "resourcemanager.projects.get"
          ],
          "title": "Cloud KMS Viewer"
        },
        {
          "description": "Full control of Cloud Life Sciences resources.",
          "id": "roles/lifesciences.admin",
          "is_beta": true,
          "permissions": [
            "lifesciences.*"
          ],
          "title": "Cloud Life Sciences Admin"
        },
        {
          "description": "Access to read and edit Cloud Life Sciences resources.",
          "id": "roles/lifesciences.editor",
          "is_beta": true,
          "permissions": [
            "lifesciences.*"
          ],
          "title": "Cloud Life Sciences Editor"
        },
        {
          "description": "Access to read Cloud Life Sciences resources.",
          "id": "roles/lifesciences.viewer",
          "is_beta": true,
          "permissions": [
            "lifesciences.operations.get",
            "lifesciences.operations.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Cloud Life Sciences Viewer"
        },
        {
          "description": "Full access to operate on Cloud Life Sciences workflows.",
          "id": "roles/lifesciences.workflowsRunner",
          "is_beta": true,
          "permissions": [
            "lifesciences.*"
          ],
          "title": "Cloud Life Sciences Workflows Runner"
        },
        {
          "description": "Full access to Google Cloud Managed Identities Domains and related resources. Intended to be granted on a project-level.",
          "id": "roles/managedidentities.admin",
          "is_beta": false,
          "permissions": [
            "managedidentities.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Google Cloud Managed Identities Admin"
        },
        {
          "description": "Full access to Google Cloud Managed Identities Backup and related resources. Intended to be granted on a project-level",
          "id": "roles/managedidentities.backupAdmin",
          "is_beta": false,
          "permissions": [
            "managedidentities.backups.*",
            "managedidentities.domains.get",
            "managedidentities.locations.*",
            "managedidentities.operations.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Google Cloud Managed Identities Backup Admin"
        },
        {
          "description": "Read-only access to Google Cloud Managed Identities Backup and related resources.",
          "id": "roles/managedidentities.backupViewer",
          "is_beta": false,
          "permissions": [
            "managedidentities.backups.get",
            "managedidentities.backups.getIamPolicy",
            "managedidentities.backups.list",
            "managedidentities.domains.get",
            "managedidentities.locations.*",
            "managedidentities.operations.get",
            "managedidentities.operations.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Google Cloud Managed Identities Backup Viewer"
        },
        {
          "description": "Read-Update-Delete to Google Cloud Managed Identities Domains and related resources. Intended to be granted on a resource (domain) level.",
          "id": "roles/managedidentities.domainAdmin",
          "is_beta": false,
          "permissions": [
            "managedidentities.backups.*",
            "managedidentities.domains.attachTrust",
            "managedidentities.domains.checkMigrationPermission",
            "managedidentities.domains.createTagBinding",
            "managedidentities.domains.delete",
            "managedidentities.domains.deleteTagBinding",
            "managedidentities.domains.detachTrust",
            "managedidentities.domains.disableMigration",
            "managedidentities.domains.domainJoinMachine",
            "managedidentities.domains.enableMigration",
            "managedidentities.domains.extendSchema",
            "managedidentities.domains.get",
            "managedidentities.domains.getIamPolicy",
            "managedidentities.domains.listEffectiveTags",
            "managedidentities.domains.listTagBindings",
            "managedidentities.domains.reconfigureTrust",
            "managedidentities.domains.resetpassword",
            "managedidentities.domains.restore",
            "managedidentities.domains.update",
            "managedidentities.domains.updateLDAPSSettings",
            "managedidentities.domains.validateTrust",
            "managedidentities.locations.*",
            "managedidentities.operations.get",
            "managedidentities.operations.list",
            "managedidentities.sqlintegrations.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Google Cloud Managed Identities Domain Admin"
        },
        {
          "description": "Access to domain join VMs with Cloud AD",
          "id": "roles/managedidentities.domainJoin",
          "is_beta": true,
          "permissions": [
            "managedidentities.domains.domainJoinMachine",
            "managedidentities.domains.get"
          ],
          "title": "Google Cloud Managed Identities Domain Join"
        },
        {
          "description": "Full access to Google Cloud Managed Identities Domains and related resources. Intended to be granted on a project-level",
          "id": "roles/managedidentities.peeringAdmin",
          "is_beta": false,
          "permissions": [
            "managedidentities.locations.*",
            "managedidentities.operations.*",
            "managedidentities.peerings.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Google Cloud Managed Identities Peering Admin"
        },
        {
          "description": "Read-only access to Google Cloud Managed Identities Peering and related resources.",
          "id": "roles/managedidentities.peeringViewer",
          "is_beta": false,
          "permissions": [
            "managedidentities.locations.*",
            "managedidentities.operations.get",
            "managedidentities.operations.list",
            "managedidentities.peerings.get",
            "managedidentities.peerings.getIamPolicy",
            "managedidentities.peerings.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Google Cloud Managed Identities Peering Viewer"
        },
        {
          "description": "Read-only access to Google Cloud Managed Identities Domains and related resources.",
          "id": "roles/managedidentities.viewer",
          "is_beta": false,
          "permissions": [
            "managedidentities.backups.get",
            "managedidentities.backups.getIamPolicy",
            "managedidentities.backups.list",
            "managedidentities.domains.get",
            "managedidentities.domains.getIamPolicy",
            "managedidentities.domains.list",
            "managedidentities.domains.listEffectiveTags",
            "managedidentities.domains.listTagBindings",
            "managedidentities.locations.*",
            "managedidentities.operations.get",
            "managedidentities.operations.list",
            "managedidentities.peerings.get",
            "managedidentities.peerings.getIamPolicy",
            "managedidentities.peerings.list",
            "managedidentities.sqlintegrations.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Google Cloud Managed Identities Viewer"
        },
        {
          "description": "Admin of Various Provider Configuration resources",
          "id": "roles/commercebusinessenablement.admin",
          "is_beta": true,
          "permissions": [
            "commercebusinessenablement.leadgenConfig.*",
            "commercebusinessenablement.partnerAccounts.*",
            "commercebusinessenablement.partnerInfo.get",
            "commercebusinessenablement.resellerConfig.*",
            "commercebusinessenablement.resellerRestrictions.*",
            "resourcemanager.organizations.get",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Commerce Business Enablement Configuration Admin"
        },
        {
          "description": "Administration of Payment Configuration resource",
          "id": "roles/commercebusinessenablement.paymentConfigAdmin",
          "is_beta": true,
          "permissions": [
            "commercebusinessenablement.partnerInfo.get",
            "commercebusinessenablement.paymentConfig.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Commerce Business Enablement PaymentConfig Admin"
        },
        {
          "description": "Viewer of Payment Configuration resource",
          "id": "roles/commercebusinessenablement.paymentConfigViewer",
          "is_beta": true,
          "permissions": [
            "commercebusinessenablement.partnerInfo.get",
            "commercebusinessenablement.paymentConfig.get",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Commerce Business Enablement PaymentConfig Viewer"
        },
        {
          "description": "Provides admin access to rebates",
          "id": "roles/commercebusinessenablement.rebatesAdmin",
          "is_beta": true,
          "permissions": [
            "commercebusinessenablement.operations.*",
            "commercebusinessenablement.partnerInfo.get",
            "commercebusinessenablement.refunds.*"
          ],
          "title": "Commerce Business Enablement Rebates Admin"
        },
        {
          "description": "Provides read-only access to rebates",
          "id": "roles/commercebusinessenablement.rebatesViewer",
          "is_beta": true,
          "permissions": [
            "commercebusinessenablement.operations.get",
            "commercebusinessenablement.operations.list",
            "commercebusinessenablement.partnerInfo.get",
            "commercebusinessenablement.refunds.get",
            "commercebusinessenablement.refunds.list"
          ],
          "title": "Commerce Business Enablement Rebates Viewer"
        },
        {
          "description": "Provides admin access to reseller discount offers",
          "id": "roles/commercebusinessenablement.resellerDiscountAdmin",
          "is_beta": true,
          "permissions": [
            "commercebusinessenablement.partnerAccounts.*",
            "commercebusinessenablement.partnerInfo.get",
            "commercebusinessenablement.resellerConfig.get",
            "commercebusinessenablement.resellerDiscountConfig.get",
            "commercebusinessenablement.resellerDiscountOffers.*",
            "commercebusinessenablement.resellerPrivateOfferPlans.*",
            "resourcemanager.organizations.get",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Commerce Business Enablement Reseller Discount Admin"
        },
        {
          "description": "Provides read-only access to reseller discount offers",
          "id": "roles/commercebusinessenablement.resellerDiscountViewer",
          "is_beta": true,
          "permissions": [
            "commercebusinessenablement.partnerAccounts.*",
            "commercebusinessenablement.partnerInfo.get",
            "commercebusinessenablement.resellerConfig.get",
            "commercebusinessenablement.resellerDiscountConfig.get",
            "commercebusinessenablement.resellerDiscountOffers.list",
            "commercebusinessenablement.resellerPrivateOfferPlans.get",
            "commercebusinessenablement.resellerPrivateOfferPlans.list",
            "resourcemanager.organizations.get",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Commerce Business Enablement Reseller Discount Viewer"
        },
        {
          "description": "Viewer of Various Provider Configuration resource",
          "id": "roles/commercebusinessenablement.viewer",
          "is_beta": true,
          "permissions": [
            "commercebusinessenablement.leadgenConfig.get",
            "commercebusinessenablement.partnerAccounts.*",
            "commercebusinessenablement.partnerInfo.get",
            "commercebusinessenablement.resellerConfig.get",
            "commercebusinessenablement.resellerRestrictions.list",
            "resourcemanager.organizations.get",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Commerce Business Enablement Configuration Viewer"
        },
        {
          "description": "Allows viewing offers",
          "id": "roles/commerceoffercatalog.offersViewer",
          "is_beta": true,
          "permissions": [
            "commerceoffercatalog.*"
          ],
          "title": "Commerce Offer Catalog Offers Viewer"
        },
        {
          "description": "Full access to Organization Governance APIs",
          "id": "roles/commerceorggovernance.admin",
          "is_beta": true,
          "permissions": [
            "commerceorggovernance.*",
            "consumerprocurement.entitlements.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Commerce Organization Governance Admin"
        },
        {
          "description": "Full access to Governed Marketplace features.",
          "id": "roles/commerceorggovernance.user",
          "is_beta": true,
          "permissions": [
            "commerceorggovernance.services.*",
            "consumerprocurement.entitlements.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Governed Marketplace User"
        },
        {
          "description": "Full access to Organization Governance read-only APIs.",
          "id": "roles/commerceorggovernance.viewer",
          "is_beta": true,
          "permissions": [
            "commerceorggovernance.collections.get",
            "commerceorggovernance.collections.list",
            "commerceorggovernance.consumerSharingPolicies.get",
            "commerceorggovernance.organizationSettings.get",
            "commerceorggovernance.populateCollectionJobs.list",
            "commerceorggovernance.services.get",
            "commerceorggovernance.services.list",
            "consumerprocurement.entitlements.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Commerce Organization Governance Viewer"
        },
        {
          "description": "Allows viewing key events for an offer",
          "id": "roles/commercepricemanagement.eventsViewer",
          "is_beta": true,
          "permissions": [
            "commerceprice.events.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Commerce Price Management Events Viewer"
        },
        {
          "description": "Allows managing private offers",
          "id": "roles/commercepricemanagement.privateOffersAdmin",
          "is_beta": true,
          "permissions": [
            "commerceagreementpublishing.*",
            "commerceprice.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "serviceusage.services.get",
            "serviceusage.services.list"
          ],
          "title": "Commerce Price Management Private Offers Admin"
        },
        {
          "description": "Allows viewing offers, free trials, skus",
          "id": "roles/commercepricemanagement.viewer",
          "is_beta": true,
          "permissions": [
            "commerceagreementpublishing.agreements.get",
            "commerceagreementpublishing.agreements.list",
            "commerceagreementpublishing.documents.get",
            "commerceagreementpublishing.documents.list",
            "commerceprice.privateoffers.get",
            "commerceprice.privateoffers.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "serviceusage.services.get",
            "serviceusage.services.list"
          ],
          "title": "Commerce Price Management Viewer"
        },
        {
          "description": "Grants full access to all resources in Cloud Commerce Producer API.",
          "id": "roles/commerceproducer.admin",
          "is_beta": true,
          "permissions": [
            "commercebusinessenablement.partnerInfo.get",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Commerce Producer Admin"
        },
        {
          "description": "Grants read access to all resources in Cloud Commerce Producer API.",
          "id": "roles/commerceproducer.viewer",
          "is_beta": true,
          "permissions": [
            "commercebusinessenablement.partnerInfo.get",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Commerce Producer Viewer"
        },
        {
          "description": "Allows managing entitlements and enabling, disabling, and inspecting service states for a consumer project.",
          "id": "roles/consumerprocurement.entitlementManager",
          "is_beta": false,
          "permissions": [
            "commerceoffercatalog.offers.get",
            "consumerprocurement.consents.check",
            "consumerprocurement.consents.grant",
            "consumerprocurement.consents.list",
            "consumerprocurement.consents.revoke",
            "consumerprocurement.entitlements.*",
            "consumerprocurement.freeTrials.*",
            "orgpolicy.policy.get",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "serviceusage.services.disable",
            "serviceusage.services.enable",
            "serviceusage.services.get",
            "serviceusage.services.list"
          ],
          "title": "Consumer Procurement Entitlement Manager"
        },
        {
          "description": "Allows inspecting entitlements and service states for a consumer project.",
          "id": "roles/consumerprocurement.entitlementViewer",
          "is_beta": false,
          "permissions": [
            "commerceoffercatalog.offers.get",
            "consumerprocurement.consents.check",
            "consumerprocurement.consents.list",
            "consumerprocurement.entitlements.*",
            "consumerprocurement.freeTrials.get",
            "consumerprocurement.freeTrials.list",
            "orgpolicy.policy.get",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "serviceusage.services.get",
            "serviceusage.services.list"
          ],
          "title": "Consumer Procurement Entitlement Viewer"
        },
        {
          "description": "Allows viewing key events for an offer",
          "id": "roles/consumerprocurement.eventsViewer",
          "is_beta": false,
          "permissions": [
            "consumerprocurement.events.*"
          ],
          "title": "Consumer Procurement Events Viewer"
        },
        {
          "description": "Allows managing license pools and license assignments.",
          "id": "roles/consumerprocurement.licensePoolEditor",
          "is_beta": false,
          "permissions": [
            "consumerprocurement.licensePools.*"
          ],
          "title": "Consumer Procurement License Pool Editor"
        },
        {
          "description": "Allows viewing license pools and license assignments.",
          "id": "roles/consumerprocurement.licensePoolViewer",
          "is_beta": false,
          "permissions": [
            "consumerprocurement.licensePools.enumerateLicensedUsers",
            "consumerprocurement.licensePools.get"
          ],
          "title": "Consumer Procurement License Pool Viewer"
        },
        {
          "description": "Allows managing purchases.",
          "id": "roles/consumerprocurement.orderAdmin",
          "is_beta": false,
          "permissions": [
            "billing.accounts.get",
            "billing.accounts.getIamPolicy",
            "billing.accounts.list",
            "billing.accounts.redeemPromotion",
            "billing.credits.list",
            "billing.resourceAssociations.create",
            "commerceoffercatalog.*",
            "consumerprocurement.accounts.*",
            "consumerprocurement.consents.check",
            "consumerprocurement.consents.grant",
            "consumerprocurement.consents.list",
            "consumerprocurement.consents.revoke",
            "consumerprocurement.events.*",
            "consumerprocurement.licensePools.*",
            "consumerprocurement.orderAttributions.*",
            "consumerprocurement.orders.*"
          ],
          "title": "Consumer Procurement Order Administrator"
        },
        {
          "description": "Allows inspecting purchases.",
          "id": "roles/consumerprocurement.orderViewer",
          "is_beta": false,
          "permissions": [
            "billing.accounts.get",
            "billing.accounts.getIamPolicy",
            "billing.accounts.list",
            "billing.credits.list",
            "commerceoffercatalog.*",
            "consumerprocurement.accounts.get",
            "consumerprocurement.accounts.list",
            "consumerprocurement.consents.check",
            "consumerprocurement.consents.list",
            "consumerprocurement.licensePools.enumerateLicensedUsers",
            "consumerprocurement.licensePools.get",
            "consumerprocurement.orderAttributions.get",
            "consumerprocurement.orderAttributions.list",
            "consumerprocurement.orders.get",
            "consumerprocurement.orders.list"
          ],
          "title": "Consumer Procurement Order Viewer"
        },
        {
          "description": "Allows managing purchases, consents at both billing account and project level.",
          "id": "roles/consumerprocurement.procurementAdmin",
          "is_beta": false,
          "permissions": [
            "billing.accounts.get",
            "billing.accounts.getIamPolicy",
            "billing.accounts.list",
            "billing.accounts.redeemPromotion",
            "billing.credits.list",
            "billing.resourceAssociations.create",
            "commerceoffercatalog.*",
            "consumerprocurement.*",
            "orgpolicy.policy.get",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "serviceusage.services.disable",
            "serviceusage.services.enable",
            "serviceusage.services.get",
            "serviceusage.services.list"
          ],
          "title": "Consumer Procurement Administrator"
        },
        {
          "description": "Allows inspecting purchases, consents and entitlements and service states for a consumer project.",
          "id": "roles/consumerprocurement.procurementViewer",
          "is_beta": false,
          "permissions": [
            "billing.accounts.get",
            "billing.accounts.getIamPolicy",
            "billing.accounts.list",
            "billing.credits.list",
            "commerceoffercatalog.*",
            "consumerprocurement.accounts.get",
            "consumerprocurement.accounts.list",
            "consumerprocurement.consents.check",
            "consumerprocurement.consents.list",
            "consumerprocurement.entitlements.*",
            "consumerprocurement.freeTrials.get",
            "consumerprocurement.freeTrials.list",
            "consumerprocurement.licensePools.enumerateLicensedUsers",
            "consumerprocurement.licensePools.get",
            "consumerprocurement.orderAttributions.get",
            "consumerprocurement.orderAttributions.list",
            "consumerprocurement.orders.get",
            "consumerprocurement.orders.list",
            "orgpolicy.policy.get",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "serviceusage.services.get",
            "serviceusage.services.list"
          ],
          "title": "Consumer Procurement Viewer"
        },
        {
          "description": "Ability to create and manage Compute VMs to run Velostrata Infrastructure",
          "id": "roles/cloudmigration.inframanager",
          "is_beta": true,
          "permissions": [
            "cloudmigration.velostrataendpoints.connect",
            "compute.addresses.create",
            "compute.addresses.createInternal",
            "compute.addresses.delete",
            "compute.addresses.deleteInternal",
            "compute.addresses.get",
            "compute.addresses.list",
            "compute.addresses.setLabels",
            "compute.addresses.use",
            "compute.addresses.useInternal",
            "compute.diskTypes.*",
            "compute.disks.create",
            "compute.disks.createSnapshot",
            "compute.disks.delete",
            "compute.disks.get",
            "compute.disks.list",
            "compute.disks.setLabels",
            "compute.disks.update",
            "compute.disks.use",
            "compute.disks.useReadOnly",
            "compute.globalOperations.get",
            "compute.images.get",
            "compute.images.list",
            "compute.images.useReadOnly",
            "compute.instances.attachDisk",
            "compute.instances.create",
            "compute.instances.delete",
            "compute.instances.detachDisk",
            "compute.instances.get",
            "compute.instances.getSerialPortOutput",
            "compute.instances.list",
            "compute.instances.reset",
            "compute.instances.setDiskAutoDelete",
            "compute.instances.setLabels",
            "compute.instances.setMachineType",
            "compute.instances.setMetadata",
            "compute.instances.setMinCpuPlatform",
            "compute.instances.setScheduling",
            "compute.instances.setServiceAccount",
            "compute.instances.setTags",
            "compute.instances.start",
            "compute.instances.startWithEncryptionKey",
            "compute.instances.stop",
            "compute.instances.update",
            "compute.instances.updateNetworkInterface",
            "compute.instances.updateShieldedInstanceConfig",
            "compute.instances.use",
            "compute.licenseCodes.get",
            "compute.licenseCodes.list",
            "compute.licenseCodes.update",
            "compute.licenses.get",
            "compute.licenses.list",
            "compute.machineTypes.*",
            "compute.networks.get",
            "compute.networks.list",
            "compute.networks.use",
            "compute.networks.useExternalIp",
            "compute.nodeGroups.get",
            "compute.nodeGroups.list",
            "compute.nodeTemplates.list",
            "compute.projects.get",
            "compute.regionOperations.get",
            "compute.regions.*",
            "compute.snapshots.create",
            "compute.snapshots.delete",
            "compute.snapshots.get",
            "compute.snapshots.setLabels",
            "compute.snapshots.useReadOnly",
            "compute.subnetworks.get",
            "compute.subnetworks.list",
            "compute.subnetworks.use",
            "compute.subnetworks.useExternalIp",
            "compute.zoneOperations.get",
            "compute.zones.*",
            "gkehub.endpoints.connect",
            "iam.serviceAccounts.get",
            "iam.serviceAccounts.list",
            "resourcemanager.projects.get",
            "storage.buckets.create",
            "storage.buckets.delete",
            "storage.buckets.get",
            "storage.buckets.list",
            "storage.buckets.update"
          ],
          "title": "Velostrata Manager"
        },
        {
          "description": "Ability to access migration storage",
          "id": "roles/cloudmigration.storageaccess",
          "is_beta": true,
          "permissions": [
            "storage.objects.create",
            "storage.objects.delete",
            "storage.objects.get",
            "storage.objects.list",
            "storage.objects.update"
          ],
          "title": "Velostrata Storage Access"
        },
        {
          "description": "Ability to set up connection between Velostrata Manager and Google",
          "id": "roles/cloudmigration.velostrataconnect",
          "is_beta": true,
          "permissions": [
            "cloudmigration.velostrataendpoints.connect",
            "gkehub.endpoints.connect"
          ],
          "title": "Velostrata Manager Connection Agent"
        },
        {
          "description": "Ability to view and edit all VM Migration objects",
          "id": "roles/vmmigration.admin",
          "is_beta": true,
          "permissions": [
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "vmmigration.*"
          ],
          "title": "VM Migration Administrator"
        },
        {
          "description": "Ability to view all VM Migration objects",
          "id": "roles/vmmigration.viewer",
          "is_beta": true,
          "permissions": [
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "vmmigration.cloneJobs.get",
            "vmmigration.cloneJobs.list",
            "vmmigration.cutoverJobs.get",
            "vmmigration.cutoverJobs.list",
            "vmmigration.datacenterConnectors.get",
            "vmmigration.datacenterConnectors.list",
            "vmmigration.deployments.get",
            "vmmigration.deployments.list",
            "vmmigration.groups.get",
            "vmmigration.groups.list",
            "vmmigration.locations.*",
            "vmmigration.migratingVms.get",
            "vmmigration.migratingVms.list",
            "vmmigration.operations.get",
            "vmmigration.operations.list",
            "vmmigration.replicationCycles.*",
            "vmmigration.sources.get",
            "vmmigration.sources.list",
            "vmmigration.targets.get",
            "vmmigration.targets.list",
            "vmmigration.utilizationReports.get",
            "vmmigration.utilizationReports.list"
          ],
          "title": "VM Migration Viewer"
        },
        {
          "description": "Can browse catalogs in the target resource context.",
          "id": "roles/cloudprivatecatalog.consumer",
          "is_beta": true,
          "permissions": [
            "cloudprivatecatalog.targets.get",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Catalog Consumer"
        },
        {
          "description": "Can manage catalog and view its associations.",
          "id": "roles/cloudprivatecatalogproducer.admin",
          "is_beta": true,
          "permissions": [
            "cloudprivatecatalog.targets.get",
            "cloudprivatecatalogproducer.associations.*",
            "cloudprivatecatalogproducer.catalogAssociations.*",
            "cloudprivatecatalogproducer.catalogs.*",
            "cloudprivatecatalogproducer.producerCatalogs.*",
            "cloudprivatecatalogproducer.products.*",
            "cloudprivatecatalogproducer.targets.*",
            "resourcemanager.folders.get",
            "resourcemanager.folders.list",
            "resourcemanager.organizations.get",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Catalog Admin"
        },
        {
          "description": "Can manage associations between a catalog and a target resource.",
          "id": "roles/cloudprivatecatalogproducer.manager",
          "is_beta": true,
          "permissions": [
            "cloudprivatecatalog.targets.get",
            "cloudprivatecatalogproducer.associations.*",
            "cloudprivatecatalogproducer.catalogAssociations.*",
            "cloudprivatecatalogproducer.catalogs.get",
            "cloudprivatecatalogproducer.catalogs.list",
            "cloudprivatecatalogproducer.producerCatalogs.get",
            "cloudprivatecatalogproducer.producerCatalogs.list",
            "cloudprivatecatalogproducer.targets.*",
            "resourcemanager.folders.get",
            "resourcemanager.folders.list",
            "resourcemanager.organizations.get",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Catalog Manager"
        },
        {
          "description": "Can manage catalog org settings.",
          "id": "roles/cloudprivatecatalogproducer.orgAdmin",
          "is_beta": true,
          "permissions": [
            "cloudprivatecatalog.targets.get",
            "cloudprivatecatalogproducer.*",
            "commerceorggovernance.organizationSettings.*",
            "resourcemanager.folders.get",
            "resourcemanager.folders.list",
            "resourcemanager.organizations.get",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Catalog Org Admin"
        },
        {
          "description": "Cloud Profiler agents are allowed to register and provide the profiling data.",
          "id": "roles/cloudprofiler.agent",
          "is_beta": false,
          "permissions": [
            "cloudprofiler.profiles.create",
            "cloudprofiler.profiles.update"
          ],
          "title": "Cloud Profiler Agent"
        },
        {
          "description": "Cloud Profiler users are allowed to query and view the profiling data.",
          "id": "roles/cloudprofiler.user",
          "is_beta": false,
          "permissions": [
            "cloudprofiler.profiles.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "serviceusage.quotas.get",
            "serviceusage.services.get",
            "serviceusage.services.list"
          ],
          "title": "Cloud Profiler User"
        },
        {
          "description": "Full control over all Cloud Run resources.",
          "id": "roles/run.admin",
          "is_beta": false,
          "permissions": [
            "recommender.locations.*",
            "recommender.runServiceCostInsights.*",
            "recommender.runServiceCostRecommendations.*",
            "recommender.runServiceIdentityInsights.*",
            "recommender.runServiceIdentityRecommendations.*",
            "recommender.runServicePerformanceInsights.*",
            "recommender.runServicePerformanceRecommendations.*",
            "recommender.runServiceSecurityInsights.*",
            "recommender.runServiceSecurityRecommendations.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "run.*"
          ],
          "title": "Cloud Run Admin"
        },
        {
          "description": "Can build Cloud Run functions and source deployed services.",
          "id": "roles/run.builder",
          "is_beta": true,
          "permissions": [
            "artifactregistry.repositories.deleteArtifacts",
            "artifactregistry.repositories.downloadArtifacts",
            "artifactregistry.repositories.uploadArtifacts",
            "logging.logEntries.create",
            "source.repos.get",
            "storage.objects.get"
          ],
          "title": "Cloud Run Builder"
        },
        {
          "description": "Read and write access to all Cloud Run resources.",
          "id": "roles/run.developer",
          "is_beta": false,
          "permissions": [
            "recommender.locations.*",
            "recommender.runServiceCostInsights.*",
            "recommender.runServiceCostRecommendations.*",
            "recommender.runServiceIdentityInsights.*",
            "recommender.runServiceIdentityRecommendations.*",
            "recommender.runServicePerformanceInsights.*",
            "recommender.runServicePerformanceRecommendations.*",
            "recommender.runServiceSecurityInsights.*",
            "recommender.runServiceSecurityRecommendations.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "run.configurations.*",
            "run.executions.*",
            "run.jobs.create",
            "run.jobs.delete",
            "run.jobs.get",
            "run.jobs.getIamPolicy",
            "run.jobs.list",
            "run.jobs.listEffectiveTags",
            "run.jobs.listTagBindings",
            "run.jobs.run",
            "run.jobs.runWithOverrides",
            "run.jobs.update",
            "run.locations.list",
            "run.operations.*",
            "run.revisions.*",
            "run.routes.*",
            "run.services.create",
            "run.services.delete",
            "run.services.get",
            "run.services.getIamPolicy",
            "run.services.list",
            "run.services.listEffectiveTags",
            "run.services.listTagBindings",
            "run.services.update",
            "run.tasks.*"
          ],
          "title": "Cloud Run Developer"
        },
        {
          "description": "Can invoke Cloud Run services and execute Cloud Run jobs.",
          "id": "roles/run.invoker",
          "is_beta": false,
          "permissions": [
            "run.jobs.run",
            "run.routes.invoke"
          ],
          "title": "Cloud Run Invoker"
        },
        {
          "description": "Can execute and cancel Cloud Run jobs.",
          "id": "roles/run.jobsExecutor",
          "is_beta": false,
          "permissions": [
            "run.executions.cancel",
            "run.jobs.run"
          ],
          "title": "Cloud Run Jobs Executor"
        },
        {
          "description": "Can execute and cancel Cloud Run jobs with overrides.",
          "id": "roles/run.jobsExecutorWithOverrides",
          "is_beta": false,
          "permissions": [
            "run.executions.cancel",
            "run.jobs.run",
            "run.jobs.runWithOverrides"
          ],
          "title": "Cloud Run Jobs Executor With Overrides"
        },
        {
          "description": "Can invoke Cloud Run services.",
          "id": "roles/run.servicesInvoker",
          "is_beta": false,
          "permissions": [
            "run.routes.invoke"
          ],
          "title": "Cloud Run Service Invoker"
        },
        {
          "description": "Deploy and manage Cloud Run source deployed resources.",
          "id": "roles/run.sourceDeveloper",
          "is_beta": true,
          "permissions": [
            "artifactregistry.attachments.get",
            "artifactregistry.attachments.list",
            "artifactregistry.dockerimages.*",
            "artifactregistry.files.download",
            "artifactregistry.files.get",
            "artifactregistry.files.list",
            "artifactregistry.locations.*",
            "artifactregistry.mavenartifacts.*",
            "artifactregistry.npmpackages.*",
            "artifactregistry.packages.get",
            "artifactregistry.packages.list",
            "artifactregistry.projectsettings.get",
            "artifactregistry.pythonpackages.*",
            "artifactregistry.repositories.create",
            "artifactregistry.repositories.downloadArtifacts",
            "artifactregistry.repositories.get",
            "artifactregistry.repositories.list",
            "artifactregistry.repositories.listEffectiveTags",
            "artifactregistry.repositories.listTagBindings",
            "artifactregistry.repositories.readViaVirtualRepository",
            "artifactregistry.rules.get",
            "artifactregistry.rules.list",
            "artifactregistry.tags.get",
            "artifactregistry.tags.list",
            "artifactregistry.versions.get",
            "artifactregistry.versions.list",
            "cloudbuild.builds.create",
            "cloudbuild.builds.get",
            "cloudbuild.builds.list",
            "cloudbuild.builds.update",
            "cloudbuild.locations.*",
            "cloudbuild.operations.*",
            "eventarc.channelConnections.create",
            "eventarc.channelConnections.delete",
            "eventarc.channelConnections.get",
            "eventarc.channelConnections.getIamPolicy",
            "eventarc.channelConnections.list",
            "eventarc.channelConnections.publish",
            "eventarc.channels.attach",
            "eventarc.channels.create",
            "eventarc.channels.delete",
            "eventarc.channels.get",
            "eventarc.channels.getIamPolicy",
            "eventarc.channels.list",
            "eventarc.channels.publish",
            "eventarc.channels.undelete",
            "eventarc.channels.update",
            "eventarc.enrollments.create",
            "eventarc.enrollments.delete",
            "eventarc.enrollments.get",
            "eventarc.enrollments.getIamPolicy",
            "eventarc.enrollments.list",
            "eventarc.enrollments.update",
            "eventarc.googleApiSources.create",
            "eventarc.googleApiSources.delete",
            "eventarc.googleApiSources.get",
            "eventarc.googleApiSources.getIamPolicy",
            "eventarc.googleApiSources.list",
            "eventarc.googleApiSources.update",
            "eventarc.googleChannelConfigs.*",
            "eventarc.kafkaSources.create",
            "eventarc.kafkaSources.delete",
            "eventarc.kafkaSources.get",
            "eventarc.kafkaSources.getIamPolicy",
            "eventarc.kafkaSources.list",
            "eventarc.locations.*",
            "eventarc.operations.*",
            "eventarc.pipelines.create",
            "eventarc.pipelines.delete",
            "eventarc.pipelines.get",
            "eventarc.pipelines.getIamPolicy",
            "eventarc.pipelines.list",
            "eventarc.pipelines.update",
            "eventarc.providers.*",
            "eventarc.triggers.create",
            "eventarc.triggers.delete",
            "eventarc.triggers.get",
            "eventarc.triggers.getIamPolicy",
            "eventarc.triggers.list",
            "eventarc.triggers.undelete",
            "eventarc.triggers.update",
            "orgpolicy.policy.get",
            "pubsub.schemas.attach",
            "pubsub.schemas.commit",
            "pubsub.schemas.create",
            "pubsub.schemas.delete",
            "pubsub.schemas.get",
            "pubsub.schemas.list",
            "pubsub.schemas.listRevisions",
            "pubsub.schemas.rollback",
            "pubsub.schemas.validate",
            "pubsub.snapshots.create",
            "pubsub.snapshots.delete",
            "pubsub.snapshots.get",
            "pubsub.snapshots.list",
            "pubsub.snapshots.seek",
            "pubsub.snapshots.update",
            "pubsub.subscriptions.consume",
            "pubsub.subscriptions.create",
            "pubsub.subscriptions.delete",
            "pubsub.subscriptions.get",
            "pubsub.subscriptions.list",
            "pubsub.subscriptions.update",
            "pubsub.topics.attachSubscription",
            "pubsub.topics.create",
            "pubsub.topics.delete",
            "pubsub.topics.detachSubscription",
            "pubsub.topics.get",
            "pubsub.topics.list",
            "pubsub.topics.publish",
            "pubsub.topics.update",
            "pubsub.topics.updateTag",
            "recommender.locations.*",
            "recommender.runServiceCostInsights.*",
            "recommender.runServiceCostRecommendations.*",
            "recommender.runServiceIdentityInsights.*",
            "recommender.runServiceIdentityRecommendations.*",
            "recommender.runServicePerformanceInsights.*",
            "recommender.runServicePerformanceRecommendations.*",
            "recommender.runServiceSecurityInsights.*",
            "recommender.runServiceSecurityRecommendations.*",
            "remotebuildexecution.blobs.get",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "run.configurations.*",
            "run.executions.*",
            "run.jobs.create",
            "run.jobs.delete",
            "run.jobs.get",
            "run.jobs.getIamPolicy",
            "run.jobs.list",
            "run.jobs.listEffectiveTags",
            "run.jobs.listTagBindings",
            "run.jobs.run",
            "run.jobs.runWithOverrides",
            "run.jobs.update",
            "run.locations.list",
            "run.operations.*",
            "run.revisions.*",
            "run.routes.*",
            "run.services.create",
            "run.services.delete",
            "run.services.get",
            "run.services.getIamPolicy",
            "run.services.list",
            "run.services.listEffectiveTags",
            "run.services.listTagBindings",
            "run.services.update",
            "run.tasks.*",
            "serviceusage.quotas.get",
            "serviceusage.services.get",
            "serviceusage.services.list",
            "serviceusage.services.use",
            "storage.buckets.create",
            "storage.buckets.get",
            "storage.buckets.list",
            "storage.folders.create",
            "storage.folders.get",
            "storage.folders.list",
            "storage.managedFolders.create",
            "storage.managedFolders.get",
            "storage.managedFolders.list",
            "storage.multipartUploads.abort",
            "storage.multipartUploads.create",
            "storage.multipartUploads.listParts",
            "storage.objects.create",
            "storage.objects.get",
            "storage.objects.list"
          ],
          "title": "Cloud Run Source Developer"
        },
        {
          "description": "View Cloud Run source deployed resources.",
          "id": "roles/run.sourceViewer",
          "is_beta": true,
          "permissions": [
            "artifactregistry.repositories.get",
            "artifactregistry.repositories.list",
            "cloudbuild.builds.get",
            "cloudbuild.builds.list",
            "cloudbuild.locations.*",
            "cloudbuild.operations.*",
            "eventarc.channelConnections.get",
            "eventarc.channelConnections.getIamPolicy",
            "eventarc.channelConnections.list",
            "eventarc.channels.get",
            "eventarc.channels.getIamPolicy",
            "eventarc.channels.list",
            "eventarc.enrollments.get",
            "eventarc.enrollments.getIamPolicy",
            "eventarc.enrollments.list",
            "eventarc.googleApiSources.get",
            "eventarc.googleApiSources.getIamPolicy",
            "eventarc.googleApiSources.list",
            "eventarc.googleChannelConfigs.get",
            "eventarc.kafkaSources.get",
            "eventarc.kafkaSources.getIamPolicy",
            "eventarc.kafkaSources.list",
            "eventarc.locations.*",
            "eventarc.messageBuses.get",
            "eventarc.messageBuses.getIamPolicy",
            "eventarc.messageBuses.list",
            "eventarc.messageBuses.use",
            "eventarc.operations.get",
            "eventarc.operations.list",
            "eventarc.pipelines.get",
            "eventarc.pipelines.getIamPolicy",
            "eventarc.pipelines.list",
            "eventarc.providers.*",
            "eventarc.triggers.get",
            "eventarc.triggers.getIamPolicy",
            "eventarc.triggers.list",
            "pubsub.schemas.get",
            "pubsub.schemas.list",
            "pubsub.schemas.listRevisions",
            "pubsub.schemas.validate",
            "pubsub.snapshots.get",
            "pubsub.snapshots.list",
            "pubsub.subscriptions.get",
            "pubsub.subscriptions.list",
            "pubsub.topics.get",
            "pubsub.topics.list",
            "recommender.locations.*",
            "recommender.runServiceCostInsights.get",
            "recommender.runServiceCostInsights.list",
            "recommender.runServiceCostRecommendations.get",
            "recommender.runServiceCostRecommendations.list",
            "recommender.runServiceIdentityInsights.get",
            "recommender.runServiceIdentityInsights.list",
            "recommender.runServiceIdentityRecommendations.get",
            "recommender.runServiceIdentityRecommendations.list",
            "recommender.runServicePerformanceInsights.get",
            "recommender.runServicePerformanceInsights.list",
            "recommender.runServicePerformanceRecommendations.get",
            "recommender.runServicePerformanceRecommendations.list",
            "recommender.runServiceSecurityInsights.get",
            "recommender.runServiceSecurityInsights.list",
            "recommender.runServiceSecurityRecommendations.get",
            "recommender.runServiceSecurityRecommendations.list",
            "remotebuildexecution.blobs.get",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "run.configurations.*",
            "run.executions.get",
            "run.executions.list",
            "run.jobs.get",
            "run.jobs.getIamPolicy",
            "run.jobs.list",
            "run.jobs.listEffectiveTags",
            "run.jobs.listTagBindings",
            "run.locations.list",
            "run.operations.get",
            "run.operations.list",
            "run.revisions.get",
            "run.revisions.list",
            "run.routes.get",
            "run.routes.list",
            "run.services.get",
            "run.services.getIamPolicy",
            "run.services.list",
            "run.services.listEffectiveTags",
            "run.services.listTagBindings",
            "run.tasks.*",
            "serviceusage.quotas.get",
            "serviceusage.services.get",
            "serviceusage.services.list",
            "storage.folders.get",
            "storage.folders.list",
            "storage.managedFolders.get",
            "storage.managedFolders.list",
            "storage.objects.get",
            "storage.objects.list"
          ],
          "title": "Cloud Run Source Viewer"
        },
        {
          "description": "Can view the state of all Cloud Run resources, including IAM policies.",
          "id": "roles/run.viewer",
          "is_beta": false,
          "permissions": [
            "recommender.locations.*",
            "recommender.runServiceCostInsights.get",
            "recommender.runServiceCostInsights.list",
            "recommender.runServiceCostRecommendations.get",
            "recommender.runServiceCostRecommendations.list",
            "recommender.runServiceIdentityInsights.get",
            "recommender.runServiceIdentityInsights.list",
            "recommender.runServiceIdentityRecommendations.get",
            "recommender.runServiceIdentityRecommendations.list",
            "recommender.runServicePerformanceInsights.get",
            "recommender.runServicePerformanceInsights.list",
            "recommender.runServicePerformanceRecommendations.get",
            "recommender.runServicePerformanceRecommendations.list",
            "recommender.runServiceSecurityInsights.get",
            "recommender.runServiceSecurityInsights.list",
            "recommender.runServiceSecurityRecommendations.get",
            "recommender.runServiceSecurityRecommendations.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "run.configurations.*",
            "run.executions.get",
            "run.executions.list",
            "run.jobs.get",
            "run.jobs.getIamPolicy",
            "run.jobs.list",
            "run.jobs.listEffectiveTags",
            "run.jobs.listTagBindings",
            "run.locations.list",
            "run.operations.get",
            "run.operations.list",
            "run.revisions.get",
            "run.revisions.list",
            "run.routes.get",
            "run.routes.list",
            "run.services.get",
            "run.services.getIamPolicy",
            "run.services.list",
            "run.services.listEffectiveTags",
            "run.services.listTagBindings",
            "run.tasks.*"
          ],
          "title": "Cloud Run Viewer"
        },
        {
          "description": "Full access to jobs and executions.  Note that a Cloud Scheduler Admin (or any custom role with the permission cloudscheduler.jobs.create) can create jobs that publish to any Pub/Sub topics within the project.",
          "id": "roles/cloudscheduler.admin",
          "is_beta": false,
          "permissions": [
            "appengine.applications.get",
            "cloudscheduler.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "serviceusage.services.get",
            "serviceusage.services.list"
          ],
          "title": "Cloud Scheduler Admin"
        },
        {
          "description": "Access to run jobs.",
          "id": "roles/cloudscheduler.jobRunner",
          "is_beta": false,
          "permissions": [
            "appengine.applications.get",
            "cloudscheduler.jobs.fullView",
            "cloudscheduler.jobs.run",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "serviceusage.services.get",
            "serviceusage.services.list"
          ],
          "title": "Cloud Scheduler Job Runner"
        },
        {
          "description": "Get and list access to jobs, executions, and locations.",
          "id": "roles/cloudscheduler.viewer",
          "is_beta": false,
          "permissions": [
            "appengine.applications.get",
            "cloudscheduler.jobs.fullView",
            "cloudscheduler.jobs.get",
            "cloudscheduler.jobs.list",
            "cloudscheduler.locations.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "serviceusage.services.get",
            "serviceusage.services.list"
          ],
          "title": "Cloud Scheduler Viewer"
        },
        {
          "description": "Full access to all Web Security Scanner resources",
          "id": "roles/cloudsecurityscanner.editor",
          "is_beta": false,
          "permissions": [
            "appengine.applications.get",
            "cloudsecurityscanner.*",
            "compute.addresses.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "serviceusage.quotas.get",
            "serviceusage.services.get",
            "serviceusage.services.list"
          ],
          "title": "Web Security Scanner Editor"
        },
        {
          "description": "Read access to Scan and ScanRun, plus the ability to start scans",
          "id": "roles/cloudsecurityscanner.runner",
          "is_beta": false,
          "permissions": [
            "cloudsecurityscanner.crawledurls.list",
            "cloudsecurityscanner.scanruns.get",
            "cloudsecurityscanner.scanruns.list",
            "cloudsecurityscanner.scanruns.stop",
            "cloudsecurityscanner.scans.get",
            "cloudsecurityscanner.scans.list",
            "cloudsecurityscanner.scans.run"
          ],
          "title": "Web Security Scanner Runner"
        },
        {
          "description": "Read access to all Web Security Scanner resources",
          "id": "roles/cloudsecurityscanner.viewer",
          "is_beta": false,
          "permissions": [
            "cloudsecurityscanner.crawledurls.list",
            "cloudsecurityscanner.results.*",
            "cloudsecurityscanner.scanruns.get",
            "cloudsecurityscanner.scanruns.getSummary",
            "cloudsecurityscanner.scanruns.list",
            "cloudsecurityscanner.scans.get",
            "cloudsecurityscanner.scans.list",
            "serviceusage.quotas.get",
            "serviceusage.services.get",
            "serviceusage.services.list"
          ],
          "title": "Web Security Scanner Viewer"
        },
        {
          "description": "Full access to ServiceBroker resources.",
          "id": "roles/servicebroker.admin",
          "is_beta": false,
          "permissions": [
            "servicebroker.*"
          ],
          "title": "Service Broker Admin"
        },
        {
          "description": "Operational access to the ServiceBroker resources.",
          "id": "roles/servicebroker.operator",
          "is_beta": false,
          "permissions": [
            "servicebroker.bindingoperations.*",
            "servicebroker.bindings.create",
            "servicebroker.bindings.delete",
            "servicebroker.bindings.get",
            "servicebroker.bindings.list",
            "servicebroker.catalogs.create",
            "servicebroker.catalogs.delete",
            "servicebroker.catalogs.get",
            "servicebroker.catalogs.list",
            "servicebroker.instanceoperations.*",
            "servicebroker.instances.create",
            "servicebroker.instances.delete",
            "servicebroker.instances.get",
            "servicebroker.instances.list",
            "servicebroker.instances.update"
          ],
          "title": "Service Broker Operator"
        },
        {
          "description": "Has complete access to all Spanner resources in a Google Cloud project. A principal with this role can:",
          "id": "roles/spanner.admin",
          "is_beta": false,
          "permissions": [
            "cloudkms.keyHandles.*",
            "cloudkms.operations.get",
            "cloudkms.projects.showEffectiveAutokeyConfig",
            "monitoring.timeSeries.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "spanner.*"
          ],
          "title": "Cloud Spanner Admin"
        },
        {
          "description": "A principal with this role can:This role cannot restore a database from a backup.",
          "id": "roles/spanner.backupAdmin",
          "is_beta": false,
          "permissions": [
            "monitoring.timeSeries.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "spanner.backupOperations.*",
            "spanner.backupSchedules.create",
            "spanner.backupSchedules.delete",
            "spanner.backupSchedules.get",
            "spanner.backupSchedules.list",
            "spanner.backupSchedules.update",
            "spanner.backups.copy",
            "spanner.backups.create",
            "spanner.backups.delete",
            "spanner.backups.get",
            "spanner.backups.getIamPolicy",
            "spanner.backups.list",
            "spanner.backups.setIamPolicy",
            "spanner.backups.update",
            "spanner.databases.createBackup",
            "spanner.databases.get",
            "spanner.databases.list",
            "spanner.instancePartitions.get",
            "spanner.instancePartitions.list",
            "spanner.instances.createTagBinding",
            "spanner.instances.deleteTagBinding",
            "spanner.instances.get",
            "spanner.instances.list",
            "spanner.instances.listEffectiveTags",
            "spanner.instances.listTagBindings"
          ],
          "title": "Cloud Spanner Backup Admin"
        },
        {
          "description": "This role is intended to be used by scripts that automate backup creation. A principal with this role can create backups, but cannot update or delete them.",
          "id": "roles/spanner.backupWriter",
          "is_beta": false,
          "permissions": [
            "spanner.backupOperations.get",
            "spanner.backupOperations.list",
            "spanner.backupSchedules.create",
            "spanner.backupSchedules.get",
            "spanner.backupSchedules.list",
            "spanner.backups.copy",
            "spanner.backups.create",
            "spanner.backups.get",
            "spanner.backups.list",
            "spanner.databases.createBackup",
            "spanner.databases.get",
            "spanner.databases.list",
            "spanner.instancePartitions.get",
            "spanner.instances.get"
          ],
          "title": "Cloud Spanner Backup Writer"
        },
        {
          "description": "A principal with this role can:",
          "id": "roles/spanner.databaseAdmin",
          "is_beta": false,
          "permissions": [
            "cloudkms.keyHandles.*",
            "cloudkms.operations.get",
            "cloudkms.projects.showEffectiveAutokeyConfig",
            "monitoring.timeSeries.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "spanner.databaseOperations.*",
            "spanner.databaseRoles.list",
            "spanner.databases.adapt",
            "spanner.databases.addSplitPoints",
            "spanner.databases.beginOrRollbackReadWriteTransaction",
            "spanner.databases.beginPartitionedDmlTransaction",
            "spanner.databases.beginReadOnlyTransaction",
            "spanner.databases.changequorum",
            "spanner.databases.create",
            "spanner.databases.drop",
            "spanner.databases.get",
            "spanner.databases.getDdl",
            "spanner.databases.getIamPolicy",
            "spanner.databases.list",
            "spanner.databases.partitionQuery",
            "spanner.databases.partitionRead",
            "spanner.databases.read",
            "spanner.databases.select",
            "spanner.databases.setIamPolicy",
            "spanner.databases.update",
            "spanner.databases.updateDdl",
            "spanner.databases.useDataBoost",
            "spanner.databases.useRoleBasedAccess",
            "spanner.databases.write",
            "spanner.instancePartitions.get",
            "spanner.instancePartitions.list",
            "spanner.instances.createTagBinding",
            "spanner.instances.deleteTagBinding",
            "spanner.instances.get",
            "spanner.instances.getIamPolicy",
            "spanner.instances.list",
            "spanner.instances.listEffectiveTags",
            "spanner.instances.listTagBindings",
            "spanner.sessions.*"
          ],
          "title": "Cloud Spanner Database Admin"
        },
        {
          "description": "A principal with this role can:",
          "id": "roles/spanner.databaseReader",
          "is_beta": false,
          "permissions": [
            "monitoring.timeSeries.create",
            "spanner.databases.beginReadOnlyTransaction",
            "spanner.databases.getDdl",
            "spanner.databases.partitionQuery",
            "spanner.databases.partitionRead",
            "spanner.databases.read",
            "spanner.databases.select",
            "spanner.instancePartitions.get",
            "spanner.instances.get",
            "spanner.sessions.*"
          ],
          "title": "Cloud Spanner Database Reader"
        },
        {
          "description": "Includes all permissions in the spanner.databaseReader role enabling access to read and/or query a Cloud Spanner database using instance resources, as well as the permission to access the database with Data Boost, a fully managed serverless service that provides independent compute resources.",
          "id": "roles/spanner.databaseReaderWithDataBoost",
          "is_beta": false,
          "permissions": [
            "monitoring.timeSeries.create",
            "spanner.databases.beginReadOnlyTransaction",
            "spanner.databases.getDdl",
            "spanner.databases.partitionQuery",
            "spanner.databases.partitionRead",
            "spanner.databases.read",
            "spanner.databases.select",
            "spanner.databases.useDataBoost",
            "spanner.instancePartitions.get",
            "spanner.instances.get",
            "spanner.sessions.*"
          ],
          "title": "Cloud Spanner Database Reader with DataBoost"
        },
        {
          "description": "A principal with this role can:",
          "id": "roles/spanner.databaseUser",
          "is_beta": false,
          "permissions": [
            "monitoring.timeSeries.create",
            "spanner.databaseOperations.*",
            "spanner.databases.adapt",
            "spanner.databases.beginOrRollbackReadWriteTransaction",
            "spanner.databases.beginPartitionedDmlTransaction",
            "spanner.databases.beginReadOnlyTransaction",
            "spanner.databases.changequorum",
            "spanner.databases.getDdl",
            "spanner.databases.partitionQuery",
            "spanner.databases.partitionRead",
            "spanner.databases.read",
            "spanner.databases.select",
            "spanner.databases.updateDdl",
            "spanner.databases.write",
            "spanner.instancePartitions.get",
            "spanner.instances.get",
            "spanner.sessions.*"
          ],
          "title": "Cloud Spanner Database User"
        },
        {
          "description": "Grants permissions to use Spanner's fine-grained access control framework. To grant access to specific database roles, also add the `roles/spanner.databaseRoleUser` IAM role and its necessary conditions.",
          "id": "roles/spanner.fineGrainedAccessUser",
          "is_beta": false,
          "permissions": [
            "spanner.databaseRoles.list",
            "spanner.databases.useRoleBasedAccess"
          ],
          "title": "Cloud Spanner Fine-grained Access User"
        },
        {
          "description": "A principal with this role can restore databases from backups.If you need to restore a backup to a different instance, apply this role at the project level or to both instances. This role cannot create backups.",
          "id": "roles/spanner.restoreAdmin",
          "is_beta": false,
          "permissions": [
            "monitoring.timeSeries.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "spanner.backups.get",
            "spanner.backups.list",
            "spanner.backups.restoreDatabase",
            "spanner.databaseOperations.*",
            "spanner.databases.create",
            "spanner.databases.get",
            "spanner.databases.list",
            "spanner.instancePartitions.get",
            "spanner.instancePartitions.list",
            "spanner.instances.createTagBinding",
            "spanner.instances.deleteTagBinding",
            "spanner.instances.get",
            "spanner.instances.list",
            "spanner.instances.listEffectiveTags",
            "spanner.instances.listTagBindings"
          ],
          "title": "Cloud Spanner Restore Admin"
        },
        {
          "description": "A principal with this role can:For example, you can combine this role with the roles/spanner.databaseUser role to grant a user with access to a specific database, but only view access to other instances and databases. This role is recommended at the Google Cloud project level for users interacting with Cloud Spanner resources in the Google Cloud console.",
          "id": "roles/spanner.viewer",
          "is_beta": false,
          "permissions": [
            "monitoring.timeSeries.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "spanner.databases.list",
            "spanner.instanceConfigs.get",
            "spanner.instanceConfigs.list",
            "spanner.instancePartitions.get",
            "spanner.instancePartitions.list",
            "spanner.instances.get",
            "spanner.instances.list",
            "spanner.instances.listEffectiveTags",
            "spanner.instances.listTagBindings"
          ],
          "title": "Cloud Spanner Viewer"
        },
        {
          "description": "Provides full control of Cloud SQL resources.",
          "id": "roles/cloudsql.admin",
          "is_beta": false,
          "permissions": [
            "cloudaicompanion.companions.*",
            "cloudaicompanion.entitlements.get",
            "cloudaicompanion.instances.completeCode",
            "cloudaicompanion.instances.generateCode",
            "cloudkms.keyHandles.*",
            "cloudkms.operations.get",
            "cloudkms.projects.showEffectiveAutokeyConfig",
            "cloudsql.*",
            "recommender.cloudsqlIdleInstanceRecommendations.*",
            "recommender.cloudsqlInstanceActivityInsights.*",
            "recommender.cloudsqlInstanceCpuUsageInsights.*",
            "recommender.cloudsqlInstanceDiskUsageTrendInsights.*",
            "recommender.cloudsqlInstanceMemoryUsageInsights.*",
            "recommender.cloudsqlInstanceOomProbabilityInsights.*",
            "recommender.cloudsqlInstanceOutOfDiskRecommendations.*",
            "recommender.cloudsqlInstancePerformanceInsights.*",
            "recommender.cloudsqlInstancePerformanceRecommendations.*",
            "recommender.cloudsqlInstanceReliabilityInsights.*",
            "recommender.cloudsqlInstanceReliabilityRecommendations.*",
            "recommender.cloudsqlInstanceSecurityInsights.*",
            "recommender.cloudsqlInstanceSecurityRecommendations.*",
            "recommender.cloudsqlInstanceUnderprovisionedCpuUsageInsights.*",
            "recommender.cloudsqlInstanceUnderprovisionedMemoryUsageInsights.*",
            "recommender.cloudsqlOverprovisionedInstanceRecommendations.*",
            "recommender.cloudsqlUnderProvisionedInstanceRecommendations.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "serviceusage.quotas.get",
            "serviceusage.services.get",
            "serviceusage.services.list"
          ],
          "title": "Cloud SQL Admin"
        },
        {
          "description": "Provides connectivity access to Cloud SQL instances.",
          "id": "roles/cloudsql.client",
          "is_beta": false,
          "permissions": [
            "cloudsql.instances.connect",
            "cloudsql.instances.get"
          ],
          "title": "Cloud SQL Client"
        },
        {
          "description": "Provides full control of existing Cloud SQL instances excluding modifying users, SSL certificates or deleting resources.",
          "id": "roles/cloudsql.editor",
          "is_beta": false,
          "permissions": [
            "cloudaicompanion.entitlements.get",
            "cloudsql.backupRuns.create",
            "cloudsql.backupRuns.export",
            "cloudsql.backupRuns.get",
            "cloudsql.backupRuns.list",
            "cloudsql.backupRuns.update",
            "cloudsql.databases.create",
            "cloudsql.databases.get",
            "cloudsql.databases.list",
            "cloudsql.databases.update",
            "cloudsql.instances.addServerCa",
            "cloudsql.instances.addServerCertificate",
            "cloudsql.instances.connect",
            "cloudsql.instances.export",
            "cloudsql.instances.failover",
            "cloudsql.instances.get",
            "cloudsql.instances.getDiskShrinkConfig",
            "cloudsql.instances.list",
            "cloudsql.instances.listEffectiveTags",
            "cloudsql.instances.listServerCas",
            "cloudsql.instances.listServerCertificates",
            "cloudsql.instances.listTagBindings",
            "cloudsql.instances.migrate",
            "cloudsql.instances.performDiskShrink",
            "cloudsql.instances.reencrypt",
            "cloudsql.instances.resetReplicaSize",
            "cloudsql.instances.restart",
            "cloudsql.instances.rotateServerCa",
            "cloudsql.instances.rotateServerCertificate",
            "cloudsql.instances.truncateLog",
            "cloudsql.instances.update",
            "cloudsql.schemas.view",
            "cloudsql.sslCerts.get",
            "cloudsql.sslCerts.list",
            "cloudsql.users.get",
            "cloudsql.users.list",
            "recommender.cloudsqlIdleInstanceRecommendations.*",
            "recommender.cloudsqlInstanceActivityInsights.*",
            "recommender.cloudsqlInstanceCpuUsageInsights.*",
            "recommender.cloudsqlInstanceDiskUsageTrendInsights.*",
            "recommender.cloudsqlInstanceMemoryUsageInsights.*",
            "recommender.cloudsqlInstanceOomProbabilityInsights.*",
            "recommender.cloudsqlInstanceOutOfDiskRecommendations.*",
            "recommender.cloudsqlInstancePerformanceInsights.*",
            "recommender.cloudsqlInstancePerformanceRecommendations.*",
            "recommender.cloudsqlInstanceReliabilityInsights.*",
            "recommender.cloudsqlInstanceReliabilityRecommendations.*",
            "recommender.cloudsqlInstanceUnderprovisionedCpuUsageInsights.*",
            "recommender.cloudsqlInstanceUnderprovisionedMemoryUsageInsights.*",
            "recommender.cloudsqlOverprovisionedInstanceRecommendations.*",
            "recommender.cloudsqlUnderProvisionedInstanceRecommendations.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "serviceusage.quotas.get",
            "serviceusage.services.get",
            "serviceusage.services.list"
          ],
          "title": "Cloud SQL Editor"
        },
        {
          "description": "Role allowing access to a Cloud SQL instance",
          "id": "roles/cloudsql.instanceUser",
          "is_beta": false,
          "permissions": [
            "cloudsql.instances.get",
            "cloudsql.instances.login"
          ],
          "title": "Cloud SQL Instance User"
        },
        {
          "description": "Role allowing access to the Cloud SQL instance schema on Dataplex",
          "id": "roles/cloudsql.schemaViewer",
          "is_beta": false,
          "permissions": [
            "cloudsql.schemas.view"
          ],
          "title": "Cloud SQL Schema Viewer"
        },
        {
          "description": "Role allowing access to Cloud SQL Studio",
          "id": "roles/cloudsql.studioUser",
          "is_beta": false,
          "permissions": [
            "cloudaicompanion.companions.*",
            "cloudaicompanion.instances.completeCode",
            "cloudaicompanion.instances.generateCode",
            "cloudsql.databases.list",
            "cloudsql.instances.executeSql",
            "cloudsql.instances.get",
            "cloudsql.instances.login",
            "cloudsql.users.list"
          ],
          "title": "Cloud SQL Studio User"
        },
        {
          "description": "Provides read-only access to Cloud SQL resources.",
          "id": "roles/cloudsql.viewer",
          "is_beta": false,
          "permissions": [
            "cloudaicompanion.entitlements.get",
            "cloudsql.backupRuns.export",
            "cloudsql.backupRuns.get",
            "cloudsql.backupRuns.list",
            "cloudsql.databases.get",
            "cloudsql.databases.list",
            "cloudsql.instances.export",
            "cloudsql.instances.get",
            "cloudsql.instances.getDiskShrinkConfig",
            "cloudsql.instances.list",
            "cloudsql.instances.listEffectiveTags",
            "cloudsql.instances.listServerCas",
            "cloudsql.instances.listServerCertificates",
            "cloudsql.instances.listTagBindings",
            "cloudsql.sslCerts.get",
            "cloudsql.sslCerts.list",
            "cloudsql.users.get",
            "cloudsql.users.list",
            "recommender.cloudsqlIdleInstanceRecommendations.get",
            "recommender.cloudsqlIdleInstanceRecommendations.list",
            "recommender.cloudsqlInstanceActivityInsights.get",
            "recommender.cloudsqlInstanceActivityInsights.list",
            "recommender.cloudsqlInstanceCpuUsageInsights.get",
            "recommender.cloudsqlInstanceCpuUsageInsights.list",
            "recommender.cloudsqlInstanceDiskUsageTrendInsights.get",
            "recommender.cloudsqlInstanceDiskUsageTrendInsights.list",
            "recommender.cloudsqlInstanceMemoryUsageInsights.get",
            "recommender.cloudsqlInstanceMemoryUsageInsights.list",
            "recommender.cloudsqlInstanceOomProbabilityInsights.get",
            "recommender.cloudsqlInstanceOomProbabilityInsights.list",
            "recommender.cloudsqlInstanceOutOfDiskRecommendations.get",
            "recommender.cloudsqlInstanceOutOfDiskRecommendations.list",
            "recommender.cloudsqlInstancePerformanceInsights.get",
            "recommender.cloudsqlInstancePerformanceInsights.list",
            "recommender.cloudsqlInstancePerformanceRecommendations.get",
            "recommender.cloudsqlInstancePerformanceRecommendations.list",
            "recommender.cloudsqlInstanceReliabilityInsights.get",
            "recommender.cloudsqlInstanceReliabilityInsights.list",
            "recommender.cloudsqlInstanceReliabilityRecommendations.get",
            "recommender.cloudsqlInstanceReliabilityRecommendations.list",
            "recommender.cloudsqlInstanceUnderprovisionedCpuUsageInsights.get",
            "recommender.cloudsqlInstanceUnderprovisionedCpuUsageInsights.list",
            "recommender.cloudsqlInstanceUnderprovisionedMemoryUsageInsights.get",
            "recommender.cloudsqlInstanceUnderprovisionedMemoryUsageInsights.list",
            "recommender.cloudsqlOverprovisionedInstanceRecommendations.get",
            "recommender.cloudsqlOverprovisionedInstanceRecommendations.list",
            "recommender.cloudsqlUnderProvisionedInstanceRecommendations.get",
            "recommender.cloudsqlUnderProvisionedInstanceRecommendations.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "serviceusage.quotas.get",
            "serviceusage.services.get",
            "serviceusage.services.list"
          ],
          "title": "Cloud SQL Viewer"
        },
        {
          "description": "Grants full control of objects and buckets.  When applied to an individual bucket, control applies only to the specified bucket and objects within the bucket.",
          "id": "roles/storage.admin",
          "is_beta": false,
          "permissions": [
            "cloudkms.keyHandles.*",
            "cloudkms.operations.get",
            "cloudkms.projects.showEffectiveAutokeyConfig",
            "firebase.projects.get",
            "orgpolicy.policy.get",
            "recommender.iamPolicyInsights.*",
            "recommender.iamPolicyRecommendations.*",
            "recommender.storageBucketSoftDeleteInsights.*",
            "recommender.storageBucketSoftDeleteRecommendations.*",
            "resourcemanager.hierarchyNodes.listEffectiveTags",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "storage.anywhereCaches.*",
            "storage.bucketOperations.*",
            "storage.buckets.*",
            "storage.folders.*",
            "storage.intelligenceConfigs.*",
            "storage.managedFolders.*",
            "storage.multipartUploads.*",
            "storage.objects.*"
          ],
          "title": "Storage Admin"
        },
        {
          "description": "Grants permission to view buckets and their metadata, excluding IAM policies.",
          "id": "roles/storage.bucketViewer",
          "is_beta": true,
          "permissions": [
            "storage.buckets.get",
            "storage.buckets.list"
          ],
          "title": "Storage Bucket Viewer"
        },
        {
          "description": "Grants permission to Express Mode service accounts at a managed folder so they can create objects but not read them on input folders.",
          "id": "roles/storage.expressModeServiceInput",
          "is_beta": true,
          "permissions": [
            "storage.objects.create",
            "storage.objects.delete",
            "storage.objects.list",
            "storage.objects.update"
          ],
          "title": "Storage Express Mode Service Input"
        },
        {
          "description": "Grants permission to EasyGCP service accounts at a managed folder so they can read objects but not write them on output folders.",
          "id": "roles/storage.expressModeServiceOutput",
          "is_beta": true,
          "permissions": [
            "storage.objects.delete",
            "storage.objects.get",
            "storage.objects.list"
          ],
          "title": "Storage Express Mode Service Output"
        },
        {
          "description": "Grants permission to Express Mode accounts at the project level so they can read, list, create and delete any object in any of their buckets in Express Mode.",
          "id": "roles/storage.expressModeUserAccess",
          "is_beta": true,
          "permissions": [
            "orgpolicy.policy.get",
            "storage.buckets.get",
            "storage.buckets.list",
            "storage.multipartUploads.*",
            "storage.objects.create",
            "storage.objects.delete",
            "storage.objects.get",
            "storage.objects.list",
            "storage.objects.restore",
            "storage.objects.update"
          ],
          "title": "Storage Express Mode User Access"
        },
        {
          "description": "Grants full control over folders and objects, including listing, creating, viewing, and deleting objects.",
          "id": "roles/storage.folderAdmin",
          "is_beta": false,
          "permissions": [
            "orgpolicy.policy.get",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "storage.folders.*",
            "storage.managedFolders.*",
            "storage.multipartUploads.*",
            "storage.objects.*"
          ],
          "title": "Storage Folder Admin"
        },
        {
          "description": "Full control of Cloud Storage HMAC keys.",
          "id": "roles/storage.hmacKeyAdmin",
          "is_beta": false,
          "permissions": [
            "firebase.projects.get",
            "orgpolicy.policy.get",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "storage.hmacKeys.*"
          ],
          "title": "Storage HMAC Key Admin"
        },
        {
          "description": "Read-only access to Cloud Storage Inventory metadata for Storage Insights.",
          "id": "roles/storage.insightsCollectorService",
          "is_beta": false,
          "permissions": [
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "storage.buckets.get",
            "storage.buckets.getObjectInsights"
          ],
          "title": "Storage Insights Collector Service"
        },
        {
          "description": "Grants full control of objects, including listing, creating, viewing, and deleting objects.",
          "id": "roles/storage.objectAdmin",
          "is_beta": false,
          "permissions": [
            "orgpolicy.policy.get",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "storage.folders.*",
            "storage.managedFolders.create",
            "storage.managedFolders.delete",
            "storage.managedFolders.get",
            "storage.managedFolders.list",
            "storage.multipartUploads.*",
            "storage.objects.*"
          ],
          "title": "Storage Object Admin"
        },
        {
          "description": "Allows users to create objects. Does not give permission to view, delete, or overwrite objects.",
          "id": "roles/storage.objectCreator",
          "is_beta": false,
          "permissions": [
            "orgpolicy.policy.get",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "storage.folders.create",
            "storage.managedFolders.create",
            "storage.multipartUploads.abort",
            "storage.multipartUploads.create",
            "storage.multipartUploads.listParts",
            "storage.objects.create"
          ],
          "title": "Storage Object Creator"
        },
        {
          "description": "Access to create, read, update and delete objects and multipart uploads in GCS.",
          "id": "roles/storage.objectUser",
          "is_beta": false,
          "permissions": [
            "orgpolicy.policy.get",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "storage.folders.*",
            "storage.managedFolders.create",
            "storage.managedFolders.delete",
            "storage.managedFolders.get",
            "storage.managedFolders.list",
            "storage.multipartUploads.*",
            "storage.objects.create",
            "storage.objects.delete",
            "storage.objects.get",
            "storage.objects.list",
            "storage.objects.move",
            "storage.objects.restore",
            "storage.objects.update"
          ],
          "title": "Storage Object User"
        },
        {
          "description": "Grants access to view objects and their metadata, excluding ACLs. Can also list the objects in a bucket.",
          "id": "roles/storage.objectViewer",
          "is_beta": false,
          "permissions": [
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "storage.folders.get",
            "storage.folders.list",
            "storage.managedFolders.get",
            "storage.managedFolders.list",
            "storage.objects.get",
            "storage.objects.list"
          ],
          "title": "Storage Object Viewer"
        },
        {
          "description": "Create, update and manage transfer jobs and operations.",
          "id": "roles/storagetransfer.admin",
          "is_beta": false,
          "permissions": [
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "storagetransfer.*"
          ],
          "title": "Storage Transfer Admin"
        },
        {
          "description": "Perform transfers from an agent.",
          "id": "roles/storagetransfer.transferAgent",
          "is_beta": false,
          "permissions": [
            "monitoring.timeSeries.create",
            "pubsub.subscriptions.consume",
            "pubsub.subscriptions.create",
            "pubsub.subscriptions.delete",
            "pubsub.subscriptions.get",
            "pubsub.topics.attachSubscription",
            "pubsub.topics.create",
            "pubsub.topics.get",
            "pubsub.topics.list",
            "pubsub.topics.publish",
            "storagetransfer.agentpools.report",
            "storagetransfer.operations.assign",
            "storagetransfer.operations.get",
            "storagetransfer.operations.report"
          ],
          "title": "Storage Transfer Agent"
        },
        {
          "description": "Create and update storage transfer jobs and operations.",
          "id": "roles/storagetransfer.user",
          "is_beta": false,
          "permissions": [
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "storagetransfer.agentpools.create",
            "storagetransfer.agentpools.get",
            "storagetransfer.agentpools.list",
            "storagetransfer.agentpools.report",
            "storagetransfer.agentpools.update",
            "storagetransfer.jobs.create",
            "storagetransfer.jobs.get",
            "storagetransfer.jobs.list",
            "storagetransfer.jobs.run",
            "storagetransfer.jobs.update",
            "storagetransfer.operations.*",
            "storagetransfer.projects.getServiceAccount"
          ],
          "title": "Storage Transfer User"
        },
        {
          "description": "Read access to storage transfer jobs and operations.",
          "id": "roles/storagetransfer.viewer",
          "is_beta": false,
          "permissions": [
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "storagetransfer.agentpools.get",
            "storagetransfer.agentpools.list",
            "storagetransfer.jobs.get",
            "storagetransfer.jobs.list",
            "storagetransfer.operations.get",
            "storagetransfer.operations.list",
            "storagetransfer.projects.getServiceAccount"
          ],
          "title": "Storage Transfer Viewer"
        },
        {
          "description": "Grants permission to create, overwrite, and delete objects; list objects in a bucket and read object metadata, excluding allow policies, when listing; and read and edit bucket metadata, including allow policies.  Use of this role is also reflected in the bucket's ACLs. For more information, see  IAM relation to ACLs.",
          "id": "roles/storage.legacyBucketOwner",
          "is_beta": false,
          "permissions": [
            "storage.anywhereCaches.*",
            "storage.bucketOperations.*",
            "storage.buckets.createTagBinding",
            "storage.buckets.deleteTagBinding",
            "storage.buckets.enableObjectRetention",
            "storage.buckets.get",
            "storage.buckets.getIamPolicy",
            "storage.buckets.getIpFilter",
            "storage.buckets.listEffectiveTags",
            "storage.buckets.listTagBindings",
            "storage.buckets.relocate",
            "storage.buckets.restore",
            "storage.buckets.setIamPolicy",
            "storage.buckets.setIpFilter",
            "storage.buckets.update",
            "storage.folders.*",
            "storage.managedFolders.*",
            "storage.multipartUploads.*",
            "storage.objects.create",
            "storage.objects.delete",
            "storage.objects.list",
            "storage.objects.restore",
            "storage.objects.setRetention"
          ],
          "title": "Storage Legacy Bucket Owner"
        },
        {
          "description": "Grants permission to list a bucket's contents and read bucket metadata, excluding allow policies. Also grants permission to read object metadata, excluding allow policies, when listing objects.  Use of this role is also reflected in the bucket's ACLs. For more information, see  IAM relation to ACLs.",
          "id": "roles/storage.legacyBucketReader",
          "is_beta": false,
          "permissions": [
            "storage.buckets.get",
            "storage.folders.get",
            "storage.folders.list",
            "storage.managedFolders.get",
            "storage.managedFolders.list",
            "storage.multipartUploads.list",
            "storage.objects.list"
          ],
          "title": "Storage Legacy Bucket Reader"
        },
        {
          "description": "Grants permission to create, overwrite, and delete objects; list objects in a bucket and read object metadata, excluding allow policies, when listing; and read bucket metadata, excluding allow policies.  Use of this role is also reflected in the bucket's ACLs. For more information, see  IAM relation to ACLs.",
          "id": "roles/storage.legacyBucketWriter",
          "is_beta": false,
          "permissions": [
            "storage.buckets.get",
            "storage.folders.*",
            "storage.managedFolders.create",
            "storage.managedFolders.delete",
            "storage.managedFolders.get",
            "storage.managedFolders.list",
            "storage.multipartUploads.*",
            "storage.objects.create",
            "storage.objects.delete",
            "storage.objects.list",
            "storage.objects.restore",
            "storage.objects.setRetention"
          ],
          "title": "Storage Legacy Bucket Writer"
        },
        {
          "description": "Grants permission to view and edit objects and their metadata, including ACLs.",
          "id": "roles/storage.legacyObjectOwner",
          "is_beta": false,
          "permissions": [
            "storage.objects.get",
            "storage.objects.getIamPolicy",
            "storage.objects.overrideUnlockedRetention",
            "storage.objects.setIamPolicy",
            "storage.objects.setRetention",
            "storage.objects.update"
          ],
          "title": "Storage Legacy Object Owner"
        },
        {
          "description": "Grants permission to view objects and their metadata, excluding ACLs.",
          "id": "roles/storage.legacyObjectReader",
          "is_beta": false,
          "permissions": [
            "storage.objects.get"
          ],
          "title": "Storage Legacy Object Reader"
        },
        {
          "description": "Access to Cloud Talent Solution Self-Service Tools.",
          "id": "roles/cloudjobdiscovery.admin",
          "is_beta": false,
          "permissions": [
            "cloudjobdiscovery.tools.access",
            "iam.serviceAccounts.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Cloud Talent Solution Admin"
        },
        {
          "description": "Write access to all job data in Cloud Talent Solution.",
          "id": "roles/cloudjobdiscovery.jobsEditor",
          "is_beta": false,
          "permissions": [
            "cloudjobdiscovery.companies.*",
            "cloudjobdiscovery.events.create",
            "cloudjobdiscovery.jobs.*",
            "cloudjobdiscovery.tenants.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Cloud Talent Solution Job Editor"
        },
        {
          "description": "Read access to all job data in Cloud Talent Solution.",
          "id": "roles/cloudjobdiscovery.jobsViewer",
          "is_beta": false,
          "permissions": [
            "cloudjobdiscovery.companies.get",
            "cloudjobdiscovery.companies.list",
            "cloudjobdiscovery.jobs.get",
            "cloudjobdiscovery.jobs.search",
            "cloudjobdiscovery.tenants.get",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Cloud Talent Solution Job Viewer"
        },
        {
          "description": "Write access to all profile data in Cloud Talent Solution.",
          "id": "roles/cloudjobdiscovery.profilesEditor",
          "is_beta": false,
          "permissions": [
            "cloudjobdiscovery.events.create",
            "cloudjobdiscovery.profiles.*",
            "cloudjobdiscovery.tenants.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Cloud Talent Solution Profile Editor"
        },
        {
          "description": "Read access to all profile data in Cloud Talent Solution.",
          "id": "roles/cloudjobdiscovery.profilesViewer",
          "is_beta": false,
          "permissions": [
            "cloudjobdiscovery.profiles.get",
            "cloudjobdiscovery.profiles.search",
            "cloudjobdiscovery.tenants.get",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Cloud Talent Solution Profile Viewer"
        },
        {
          "description": "Full access to queues and tasks.",
          "id": "roles/cloudtasks.admin",
          "is_beta": true,
          "permissions": [
            "cloudtasks.*",
            "monitoring.timeSeries.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Cloud Tasks Admin"
        },
        {
          "description": "Access to create tasks.",
          "id": "roles/cloudtasks.enqueuer",
          "is_beta": true,
          "permissions": [
            "cloudtasks.tasks.create",
            "cloudtasks.tasks.fullView",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Cloud Tasks Enqueuer"
        },
        {
          "description": "Admin access to queues.",
          "id": "roles/cloudtasks.queueAdmin",
          "is_beta": true,
          "permissions": [
            "cloudtasks.locations.*",
            "cloudtasks.queues.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Cloud Tasks Queue Admin"
        },
        {
          "description": "Access to delete tasks.",
          "id": "roles/cloudtasks.taskDeleter",
          "is_beta": true,
          "permissions": [
            "cloudtasks.tasks.delete",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Cloud Tasks Task Deleter"
        },
        {
          "description": "Access to run tasks.",
          "id": "roles/cloudtasks.taskRunner",
          "is_beta": true,
          "permissions": [
            "cloudtasks.tasks.fullView",
            "cloudtasks.tasks.run",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Cloud Tasks Task Runner"
        },
        {
          "description": "Get and list access to tasks, queues, and locations.",
          "id": "roles/cloudtasks.viewer",
          "is_beta": true,
          "permissions": [
            "cloudtasks.cmekConfig.get",
            "cloudtasks.locations.*",
            "cloudtasks.queues.get",
            "cloudtasks.queues.list",
            "cloudtasks.tasks.fullView",
            "cloudtasks.tasks.get",
            "cloudtasks.tasks.list",
            "monitoring.timeSeries.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Cloud Tasks Viewer"
        },
        {
          "description": "Full access to TPU nodes and related resources.",
          "id": "roles/tpu.admin",
          "is_beta": false,
          "permissions": [
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "tpu.*"
          ],
          "title": "TPU Admin"
        },
        {
          "description": "Read-only access to TPU nodes and related resources.",
          "id": "roles/tpu.viewer",
          "is_beta": false,
          "permissions": [
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "tpu.acceleratortypes.*",
            "tpu.locations.*",
            "tpu.nodes.get",
            "tpu.nodes.list",
            "tpu.operations.*",
            "tpu.runtimeversions.*",
            "tpu.tensorflowversions.*"
          ],
          "title": "TPU Viewer"
        },
        {
          "description": "Can use shared VPC network (XPN) for the TPU VMs.",
          "id": "roles/tpu.xpnAgent",
          "is_beta": false,
          "permissions": [
            "compute.addresses.createInternal",
            "compute.addresses.deleteInternal",
            "compute.addresses.get",
            "compute.addresses.list",
            "compute.addresses.use",
            "compute.addresses.useInternal",
            "compute.firewalls.create",
            "compute.firewalls.delete",
            "compute.firewalls.get",
            "compute.firewalls.update",
            "compute.globalOperations.get",
            "compute.networks.get",
            "compute.networks.list",
            "compute.networks.updatePolicy",
            "compute.networks.use",
            "compute.networks.useExternalIp",
            "compute.routes.list",
            "compute.subnetworks.get",
            "compute.subnetworks.list",
            "compute.subnetworks.use",
            "compute.subnetworks.useExternalIp",
            "compute.zoneOperations.get"
          ],
          "title": "TPU Shared VPC Agent"
        },
        {
          "description": "Provides full access to the Trace console and read-write access to traces.",
          "id": "roles/cloudtrace.admin",
          "is_beta": false,
          "permissions": [
            "cloudtrace.*",
            "observability.scopes.get",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "telemetry.traces.write"
          ],
          "title": "Cloud Trace Admin"
        },
        {
          "description": "For service accounts. Provides ability to write traces by sending the data to Stackdriver Trace.",
          "id": "roles/cloudtrace.agent",
          "is_beta": false,
          "permissions": [
            "cloudtrace.traces.patch",
            "telemetry.traces.write"
          ],
          "title": "Cloud Trace Agent"
        },
        {
          "description": "Provides full access to the Trace console and read access to traces.",
          "id": "roles/cloudtrace.user",
          "is_beta": false,
          "permissions": [
            "cloudtrace.insights.*",
            "cloudtrace.stats.get",
            "cloudtrace.tasks.*",
            "cloudtrace.traceScopes.*",
            "cloudtrace.traces.get",
            "cloudtrace.traces.list",
            "observability.scopes.get",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Cloud Trace User"
        },
        {
          "description": "Full access to all Cloud Translation resources",
          "id": "roles/cloudtranslate.admin",
          "is_beta": false,
          "permissions": [
            "automl.models.get",
            "automl.models.predict",
            "cloudtranslate.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Cloud Translation API Admin"
        },
        {
          "description": "Editor of all Cloud Translation resources",
          "id": "roles/cloudtranslate.editor",
          "is_beta": false,
          "permissions": [
            "automl.models.get",
            "automl.models.predict",
            "cloudtranslate.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Cloud Translation API Editor"
        },
        {
          "description": "User of Cloud Translation and AutoML models",
          "id": "roles/cloudtranslate.user",
          "is_beta": false,
          "permissions": [
            "automl.models.get",
            "automl.models.predict",
            "cloudtranslate.adaptiveMtDatasets.get",
            "cloudtranslate.adaptiveMtDatasets.list",
            "cloudtranslate.adaptiveMtDatasets.predict",
            "cloudtranslate.adaptiveMtFiles.get",
            "cloudtranslate.adaptiveMtFiles.list",
            "cloudtranslate.adaptiveMtSentences.list",
            "cloudtranslate.customModels.get",
            "cloudtranslate.customModels.list",
            "cloudtranslate.customModels.predict",
            "cloudtranslate.datasets.get",
            "cloudtranslate.datasets.list",
            "cloudtranslate.generalModels.*",
            "cloudtranslate.glossaries.batchDocPredict",
            "cloudtranslate.glossaries.batchPredict",
            "cloudtranslate.glossaries.docPredict",
            "cloudtranslate.glossaries.get",
            "cloudtranslate.glossaries.list",
            "cloudtranslate.glossaries.predict",
            "cloudtranslate.glossaryentries.get",
            "cloudtranslate.glossaryentries.list",
            "cloudtranslate.languageDetectionModels.predict",
            "cloudtranslate.locations.*",
            "cloudtranslate.operations.get",
            "cloudtranslate.operations.list",
            "cloudtranslate.operations.wait",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Cloud Translation API User"
        },
        {
          "description": "Viewer of all Translation resources",
          "id": "roles/cloudtranslate.viewer",
          "is_beta": false,
          "permissions": [
            "automl.models.get",
            "cloudtranslate.adaptiveMtDatasets.get",
            "cloudtranslate.adaptiveMtDatasets.list",
            "cloudtranslate.adaptiveMtFiles.get",
            "cloudtranslate.adaptiveMtFiles.list",
            "cloudtranslate.adaptiveMtSentences.list",
            "cloudtranslate.customModels.get",
            "cloudtranslate.customModels.list",
            "cloudtranslate.datasets.get",
            "cloudtranslate.datasets.list",
            "cloudtranslate.generalModels.get",
            "cloudtranslate.glossaries.get",
            "cloudtranslate.glossaries.list",
            "cloudtranslate.glossaryentries.get",
            "cloudtranslate.glossaryentries.list",
            "cloudtranslate.locations.*",
            "cloudtranslate.operations.get",
            "cloudtranslate.operations.list",
            "cloudtranslate.operations.wait",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Cloud Translation API Viewer"
        },
        {
          "description": "Grants CRUD access to all Workstation resources.",
          "id": "roles/workstations.admin",
          "is_beta": false,
          "permissions": [
            "compute.acceleratorTypes.*",
            "compute.machineTypes.*",
            "compute.networks.get",
            "compute.networks.list",
            "compute.subnetworks.get",
            "compute.subnetworks.list",
            "compute.zones.*",
            "iam.serviceAccounts.get",
            "iam.serviceAccounts.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "workstations.operations.get",
            "workstations.workstationClusters.*",
            "workstations.workstationConfigs.*",
            "workstations.workstations.create",
            "workstations.workstations.delete",
            "workstations.workstations.get",
            "workstations.workstations.getIamPolicy",
            "workstations.workstations.list",
            "workstations.workstations.setIamPolicy",
            "workstations.workstations.start",
            "workstations.workstations.stop",
            "workstations.workstations.update"
          ],
          "title": "Cloud Workstations Admin"
        },
        {
          "description": "Grants ability to connect a Workstation Cluster to a shared VPC network.",
          "id": "roles/workstations.networkAdmin",
          "is_beta": false,
          "permissions": [
            "compute.addresses.create",
            "compute.addresses.createInternal",
            "compute.addresses.delete",
            "compute.addresses.deleteInternal",
            "compute.addresses.get",
            "compute.addresses.use",
            "compute.forwardingRules.create",
            "compute.forwardingRules.delete",
            "compute.forwardingRules.get",
            "compute.forwardingRules.pscCreate",
            "compute.forwardingRules.pscDelete",
            "compute.globalOperations.get",
            "compute.networks.get",
            "compute.networks.updatePolicy",
            "compute.networks.use",
            "compute.networks.useExternalIp",
            "compute.regionOperations.get",
            "compute.subnetworks.get",
            "compute.subnetworks.use",
            "compute.subnetworks.useExternalIp",
            "compute.zoneOperations.get",
            "servicedirectory.namespaces.create",
            "servicedirectory.namespaces.delete",
            "servicedirectory.services.create",
            "servicedirectory.services.delete"
          ],
          "title": "Cloud Workstations Network Admin"
        },
        {
          "description": "Grants ability to view Cloud Workstations API operations.",
          "id": "roles/workstations.operationViewer",
          "is_beta": false,
          "permissions": [
            "workstations.operations.get"
          ],
          "title": "Cloud Workstations Operation Viewer"
        },
        {
          "description": "Grants permission to set IAM policy on workstation.",
          "id": "roles/workstations.policyAdmin",
          "is_beta": false,
          "permissions": [
            "workstations.workstations.getIamPolicy",
            "workstations.workstations.setIamPolicy"
          ],
          "title": "Cloud Workstations Policy Admin"
        },
        {
          "description": "Grants runtime access to Workstation resources.",
          "id": "roles/workstations.user",
          "is_beta": false,
          "permissions": [
            "workstations.operations.get",
            "workstations.workstations.delete",
            "workstations.workstations.get",
            "workstations.workstations.start",
            "workstations.workstations.stop",
            "workstations.workstations.update",
            "workstations.workstations.use"
          ],
          "title": "Cloud Workstations User"
        },
        {
          "description": "Grants ability to create Workstation resources.",
          "id": "roles/workstations.workstationCreator",
          "is_beta": false,
          "permissions": [
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "workstations.operations.get",
            "workstations.workstationClusters.get",
            "workstations.workstationClusters.list",
            "workstations.workstationConfigs.get",
            "workstations.workstations.create"
          ],
          "title": "Cloud Workstations Creator"
        },
        {
          "description": "Grants ability to create workstations with exemption from max_usable_workstations Limit.",
          "id": "roles/workstations.workstationLimitExemptedCreator",
          "is_beta": false,
          "permissions": [
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "workstations.operations.get",
            "workstations.workstationConfigs.get",
            "workstations.workstations.create"
          ],
          "title": "Cloud Workstations Limit Exempted Creator"
        },
        {
          "description": "Full control of all Compute Engine resources. If the user will be managing virtual machine instances that are configured to run as a service account, you must also grant the roles/iam.serviceAccountUser role.",
          "id": "roles/compute.admin",
          "is_beta": false,
          "permissions": [
            "backupdr.backupPlanAssociations.createForComputeInstance",
            "backupdr.backupPlanAssociations.deleteForComputeInstance",
            "backupdr.backupPlanAssociations.list",
            "backupdr.backupPlanAssociations.triggerBackupForComputeInstance",
            "backupdr.backupPlans.get",
            "backupdr.backupPlans.list",
            "backupdr.backupPlans.useForComputeInstance",
            "backupdr.backupVaults.get",
            "backupdr.backupVaults.list",
            "backupdr.locations.list",
            "backupdr.operations.get",
            "backupdr.operations.list",
            "backupdr.serviceConfig.initialize",
            "cloudkms.keyHandles.*",
            "cloudkms.operations.get",
            "cloudkms.projects.showEffectiveAutokeyConfig",
            "compute.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "serviceusage.quotas.get",
            "serviceusage.services.get",
            "serviceusage.services.list"
          ],
          "title": "Compute Admin"
        },
        {
          "description": "Permission to list and read images without having other permissions on the image. Granting this role at the project level gives users the ability to list all images in the project and create resources, such as instances and persistent disks, based on images in the project.",
          "id": "roles/compute.imageUser",
          "is_beta": false,
          "permissions": [
            "compute.images.get",
            "compute.images.getFromFamily",
            "compute.images.list",
            "compute.images.useReadOnly",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "serviceusage.quotas.get",
            "serviceusage.services.get",
            "serviceusage.services.list"
          ],
          "title": "Compute Image User"
        },
        {
          "description": "Permissions to create, modify, and delete virtual machine instances. This includes permissions to create, modify, and delete disks, and also to configure Shielded VM settings.  If the user will be managing virtual machine instances that are configured to run as a service account, you must also grant the roles/iam.serviceAccountUser role.  For example, if your company has someone who manages groups of virtual machine instances but does not manage network or security settings and does not manage instances that run as service accounts, you can grant this role on the organization, folder, or project that contains the instances, or you can grant it on individual instances.",
          "id": "roles/compute.instanceAdmin",
          "is_beta": false,
          "permissions": [
            "backupdr.backupPlanAssociations.createForComputeInstance",
            "backupdr.backupPlanAssociations.deleteForComputeInstance",
            "backupdr.backupPlanAssociations.list",
            "backupdr.backupPlanAssociations.triggerBackupForComputeInstance",
            "backupdr.backupPlans.get",
            "backupdr.backupPlans.list",
            "backupdr.backupPlans.useForComputeInstance",
            "backupdr.backupVaults.get",
            "backupdr.backupVaults.list",
            "backupdr.locations.list",
            "backupdr.operations.get",
            "backupdr.operations.list",
            "backupdr.serviceConfig.initialize",
            "cloudkms.keyHandles.*",
            "cloudkms.operations.get",
            "cloudkms.projects.showEffectiveAutokeyConfig",
            "compute.acceleratorTypes.*",
            "compute.addresses.createInternal",
            "compute.addresses.deleteInternal",
            "compute.addresses.get",
            "compute.addresses.list",
            "compute.addresses.listEffectiveTags",
            "compute.addresses.listTagBindings",
            "compute.addresses.use",
            "compute.addresses.useInternal",
            "compute.autoscalers.*",
            "compute.diskSettings.get",
            "compute.diskTypes.*",
            "compute.disks.create",
            "compute.disks.createSnapshot",
            "compute.disks.delete",
            "compute.disks.get",
            "compute.disks.list",
            "compute.disks.resize",
            "compute.disks.setLabels",
            "compute.disks.startAsyncReplication",
            "compute.disks.stopAsyncReplication",
            "compute.disks.stopGroupAsyncReplication",
            "compute.disks.update",
            "compute.disks.use",
            "compute.disks.useReadOnly",
            "compute.globalAddresses.get",
            "compute.globalAddresses.list",
            "compute.globalAddresses.listEffectiveTags",
            "compute.globalAddresses.listTagBindings",
            "compute.globalAddresses.use",
            "compute.globalNetworkEndpointGroups.*",
            "compute.globalOperations.get",
            "compute.globalOperations.list",
            "compute.images.get",
            "compute.images.getFromFamily",
            "compute.images.list",
            "compute.images.useReadOnly",
            "compute.instanceGroupManagers.*",
            "compute.instanceGroups.*",
            "compute.instanceSettings.get",
            "compute.instanceTemplates.*",
            "compute.instances.*",
            "compute.licenses.get",
            "compute.licenses.list",
            "compute.machineImages.*",
            "compute.machineTypes.*",
            "compute.multiMig.*",
            "compute.networkEndpointGroups.*",
            "compute.networks.get",
            "compute.networks.list",
            "compute.networks.listEffectiveTags",
            "compute.networks.listTagBindings",
            "compute.networks.use",
            "compute.networks.useExternalIp",
            "compute.projects.get",
            "compute.regionNetworkEndpointGroups.*",
            "compute.regionOperations.get",
            "compute.regionOperations.list",
            "compute.regions.*",
            "compute.reservationBlocks.get",
            "compute.reservationBlocks.list",
            "compute.reservations.get",
            "compute.reservations.list",
            "compute.resourcePolicies.list",
            "compute.resourcePolicies.useReadOnly",
            "compute.storagePools.get",
            "compute.storagePools.list",
            "compute.storagePools.use",
            "compute.subnetworks.get",
            "compute.subnetworks.list",
            "compute.subnetworks.listEffectiveTags",
            "compute.subnetworks.listTagBindings",
            "compute.subnetworks.use",
            "compute.subnetworks.useExternalIp",
            "compute.targetPools.get",
            "compute.targetPools.list",
            "compute.targetPools.listEffectiveTags",
            "compute.targetPools.listTagBindings",
            "compute.zoneOperations.get",
            "compute.zoneOperations.list",
            "compute.zones.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "serviceusage.quotas.get",
            "serviceusage.services.get",
            "serviceusage.services.list"
          ],
          "title": "Compute Instance Admin (beta)"
        },
        {
          "description": "Full control of Compute Engine instances, instance groups, disks, snapshots, and images. Read access to all Compute Engine networking resources.If you grant a user this role only at an instance level, then that user cannot create new instances.",
          "id": "roles/compute.instanceAdmin.v1",
          "is_beta": false,
          "permissions": [
            "backupdr.backupPlanAssociations.createForComputeInstance",
            "backupdr.backupPlanAssociations.deleteForComputeInstance",
            "backupdr.backupPlanAssociations.list",
            "backupdr.backupPlanAssociations.triggerBackupForComputeInstance",
            "backupdr.backupPlans.get",
            "backupdr.backupPlans.list",
            "backupdr.backupPlans.useForComputeInstance",
            "backupdr.backupVaults.get",
            "backupdr.backupVaults.list",
            "backupdr.locations.list",
            "backupdr.operations.get",
            "backupdr.operations.list",
            "backupdr.serviceConfig.initialize",
            "cloudkms.keyHandles.*",
            "cloudkms.operations.get",
            "cloudkms.projects.showEffectiveAutokeyConfig",
            "compute.acceleratorTypes.*",
            "compute.addresses.createInternal",
            "compute.addresses.deleteInternal",
            "compute.addresses.get",
            "compute.addresses.list",
            "compute.addresses.listEffectiveTags",
            "compute.addresses.listTagBindings",
            "compute.addresses.use",
            "compute.addresses.useInternal",
            "compute.autoscalers.*",
            "compute.backendBuckets.get",
            "compute.backendBuckets.list",
            "compute.backendBuckets.listEffectiveTags",
            "compute.backendBuckets.listTagBindings",
            "compute.backendServices.get",
            "compute.backendServices.list",
            "compute.backendServices.listEffectiveTags",
            "compute.backendServices.listTagBindings",
            "compute.crossSiteNetworks.get",
            "compute.crossSiteNetworks.list",
            "compute.diskSettings.get",
            "compute.diskTypes.*",
            "compute.disks.*",
            "compute.externalVpnGateways.get",
            "compute.externalVpnGateways.list",
            "compute.externalVpnGateways.listEffectiveTags",
            "compute.externalVpnGateways.listTagBindings",
            "compute.firewalls.get",
            "compute.firewalls.list",
            "compute.firewalls.listEffectiveTags",
            "compute.firewalls.listTagBindings",
            "compute.forwardingRules.get",
            "compute.forwardingRules.list",
            "compute.forwardingRules.listEffectiveTags",
            "compute.forwardingRules.listTagBindings",
            "compute.globalAddresses.get",
            "compute.globalAddresses.list",
            "compute.globalAddresses.listEffectiveTags",
            "compute.globalAddresses.listTagBindings",
            "compute.globalAddresses.use",
            "compute.globalForwardingRules.get",
            "compute.globalForwardingRules.list",
            "compute.globalForwardingRules.listEffectiveTags",
            "compute.globalForwardingRules.listTagBindings",
            "compute.globalNetworkEndpointGroups.*",
            "compute.globalOperations.get",
            "compute.globalOperations.list",
            "compute.healthChecks.get",
            "compute.healthChecks.list",
            "compute.healthChecks.listEffectiveTags",
            "compute.healthChecks.listTagBindings",
            "compute.httpHealthChecks.get",
            "compute.httpHealthChecks.list",
            "compute.httpHealthChecks.listEffectiveTags",
            "compute.httpHealthChecks.listTagBindings",
            "compute.httpsHealthChecks.get",
            "compute.httpsHealthChecks.list",
            "compute.httpsHealthChecks.listEffectiveTags",
            "compute.httpsHealthChecks.listTagBindings",
            "compute.images.*",
            "compute.instanceGroupManagers.*",
            "compute.instanceGroups.*",
            "compute.instanceSettings.*",
            "compute.instanceTemplates.*",
            "compute.instances.*",
            "compute.instantSnapshots.*",
            "compute.interconnectAttachments.get",
            "compute.interconnectAttachments.list",
            "compute.interconnectAttachments.listEffectiveTags",
            "compute.interconnectAttachments.listTagBindings",
            "compute.interconnectLocations.*",
            "compute.interconnectRemoteLocations.*",
            "compute.interconnects.get",
            "compute.interconnects.list",
            "compute.interconnects.listEffectiveTags",
            "compute.interconnects.listTagBindings",
            "compute.licenseCodes.*",
            "compute.licenses.*",
            "compute.machineImages.*",
            "compute.machineTypes.*",
            "compute.multiMig.*",
            "compute.networkAttachments.get",
            "compute.networkAttachments.list",
            "compute.networkAttachments.listEffectiveTags",
            "compute.networkAttachments.listTagBindings",
            "compute.networkEndpointGroups.*",
            "compute.networkProfiles.*",
            "compute.networks.get",
            "compute.networks.list",
            "compute.networks.listEffectiveTags",
            "compute.networks.listTagBindings",
            "compute.networks.use",
            "compute.networks.useExternalIp",
            "compute.projects.get",
            "compute.projects.setCommonInstanceMetadata",
            "compute.regionBackendServices.get",
            "compute.regionBackendServices.list",
            "compute.regionBackendServices.listEffectiveTags",
            "compute.regionBackendServices.listTagBindings",
            "compute.regionHealthCheckServices.get",
            "compute.regionHealthCheckServices.list",
            "compute.regionHealthChecks.get",
            "compute.regionHealthChecks.list",
            "compute.regionHealthChecks.listEffectiveTags",
            "compute.regionHealthChecks.listTagBindings",
            "compute.regionNetworkEndpointGroups.*",
            "compute.regionNotificationEndpoints.get",
            "compute.regionNotificationEndpoints.list",
            "compute.regionOperations.get",
            "compute.regionOperations.list",
            "compute.regionSslCertificates.get",
            "compute.regionSslCertificates.list",
            "compute.regionSslCertificates.listEffectiveTags",
            "compute.regionSslCertificates.listTagBindings",
            "compute.regionSslPolicies.get",
            "compute.regionSslPolicies.list",
            "compute.regionSslPolicies.listAvailableFeatures",
            "compute.regionSslPolicies.listEffectiveTags",
            "compute.regionSslPolicies.listTagBindings",
            "compute.regionTargetHttpProxies.get",
            "compute.regionTargetHttpProxies.list",
            "compute.regionTargetHttpProxies.listEffectiveTags",
            "compute.regionTargetHttpProxies.listTagBindings",
            "compute.regionTargetHttpsProxies.get",
            "compute.regionTargetHttpsProxies.list",
            "compute.regionTargetHttpsProxies.listEffectiveTags",
            "compute.regionTargetHttpsProxies.listTagBindings",
            "compute.regionTargetTcpProxies.get",
            "compute.regionTargetTcpProxies.list",
            "compute.regionTargetTcpProxies.listEffectiveTags",
            "compute.regionTargetTcpProxies.listTagBindings",
            "compute.regionUrlMaps.get",
            "compute.regionUrlMaps.list",
            "compute.regionUrlMaps.listEffectiveTags",
            "compute.regionUrlMaps.listTagBindings",
            "compute.regions.*",
            "compute.reservationBlocks.get",
            "compute.reservationBlocks.list",
            "compute.reservations.get",
            "compute.reservations.list",
            "compute.resourcePolicies.*",
            "compute.routers.get",
            "compute.routers.getRoutePolicy",
            "compute.routers.list",
            "compute.routers.listBgpRoutes",
            "compute.routers.listEffectiveTags",
            "compute.routers.listRoutePolicies",
            "compute.routers.listTagBindings",
            "compute.routes.get",
            "compute.routes.list",
            "compute.routes.listEffectiveTags",
            "compute.routes.listTagBindings",
            "compute.serviceAttachments.get",
            "compute.serviceAttachments.list",
            "compute.serviceAttachments.listEffectiveTags",
            "compute.serviceAttachments.listTagBindings",
            "compute.snapshots.*",
            "compute.spotAssistants.get",
            "compute.sslCertificates.get",
            "compute.sslCertificates.list",
            "compute.sslCertificates.listEffectiveTags",
            "compute.sslCertificates.listTagBindings",
            "compute.sslPolicies.get",
            "compute.sslPolicies.list",
            "compute.sslPolicies.listAvailableFeatures",
            "compute.sslPolicies.listEffectiveTags",
            "compute.sslPolicies.listTagBindings",
            "compute.storagePools.get",
            "compute.storagePools.list",
            "compute.storagePools.use",
            "compute.subnetworks.get",
            "compute.subnetworks.list",
            "compute.subnetworks.listEffectiveTags",
            "compute.subnetworks.listTagBindings",
            "compute.subnetworks.use",
            "compute.subnetworks.useExternalIp",
            "compute.targetGrpcProxies.get",
            "compute.targetGrpcProxies.list",
            "compute.targetGrpcProxies.listEffectiveTags",
            "compute.targetGrpcProxies.listTagBindings",
            "compute.targetHttpProxies.get",
            "compute.targetHttpProxies.list",
            "compute.targetHttpProxies.listEffectiveTags",
            "compute.targetHttpProxies.listTagBindings",
            "compute.targetHttpsProxies.get",
            "compute.targetHttpsProxies.list",
            "compute.targetHttpsProxies.listEffectiveTags",
            "compute.targetHttpsProxies.listTagBindings",
            "compute.targetInstances.get",
            "compute.targetInstances.list",
            "compute.targetInstances.listEffectiveTags",
            "compute.targetInstances.listTagBindings",
            "compute.targetPools.get",
            "compute.targetPools.list",
            "compute.targetPools.listEffectiveTags",
            "compute.targetPools.listTagBindings",
            "compute.targetSslProxies.get",
            "compute.targetSslProxies.list",
            "compute.targetSslProxies.listEffectiveTags",
            "compute.targetSslProxies.listTagBindings",
            "compute.targetTcpProxies.get",
            "compute.targetTcpProxies.list",
            "compute.targetTcpProxies.listEffectiveTags",
            "compute.targetTcpProxies.listTagBindings",
            "compute.targetVpnGateways.get",
            "compute.targetVpnGateways.list",
            "compute.targetVpnGateways.listEffectiveTags",
            "compute.targetVpnGateways.listTagBindings",
            "compute.urlMaps.get",
            "compute.urlMaps.list",
            "compute.urlMaps.listEffectiveTags",
            "compute.urlMaps.listTagBindings",
            "compute.vpnGateways.get",
            "compute.vpnGateways.list",
            "compute.vpnGateways.listEffectiveTags",
            "compute.vpnGateways.listTagBindings",
            "compute.vpnTunnels.get",
            "compute.vpnTunnels.list",
            "compute.vpnTunnels.listEffectiveTags",
            "compute.vpnTunnels.listTagBindings",
            "compute.wireGroups.get",
            "compute.wireGroups.list",
            "compute.zoneOperations.get",
            "compute.zoneOperations.list",
            "compute.zones.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "serviceusage.quotas.get",
            "serviceusage.services.get",
            "serviceusage.services.list"
          ],
          "title": "Compute Instance Admin (v1)"
        },
        {
          "description": "Permissions to create, modify, and delete load balancers and associate resources.  For example, if your company has a load balancing team that manages load balancers, SSL certificates for load balancers, SSL policies, and other load balancing resources, and a separate networking team that manages the rest of the networking resources, then grant this role to the load balancing team's group.",
          "id": "roles/compute.loadBalancerAdmin",
          "is_beta": false,
          "permissions": [
            "certificatemanager.certmaps.get",
            "certificatemanager.certmaps.list",
            "certificatemanager.certmaps.use",
            "compute.addresses.*",
            "compute.backendBuckets.*",
            "compute.backendServices.*",
            "compute.disks.listEffectiveTags",
            "compute.disks.listTagBindings",
            "compute.forwardingRules.*",
            "compute.globalAddresses.*",
            "compute.globalForwardingRules.*",
            "compute.globalNetworkEndpointGroups.*",
            "compute.globalOperations.get",
            "compute.globalOperations.list",
            "compute.healthChecks.*",
            "compute.httpHealthChecks.*",
            "compute.httpsHealthChecks.*",
            "compute.images.listEffectiveTags",
            "compute.images.listTagBindings",
            "compute.instanceGroups.*",
            "compute.instances.get",
            "compute.instances.list",
            "compute.instances.listEffectiveTags",
            "compute.instances.listTagBindings",
            "compute.instances.use",
            "compute.instances.useReadOnly",
            "compute.networkEndpointGroups.*",
            "compute.networks.get",
            "compute.networks.list",
            "compute.networks.listEffectiveTags",
            "compute.networks.listTagBindings",
            "compute.networks.use",
            "compute.projects.get",
            "compute.regionBackendServices.*",
            "compute.regionHealthCheckServices.*",
            "compute.regionHealthChecks.*",
            "compute.regionNetworkEndpointGroups.*",
            "compute.regionNotificationEndpoints.*",
            "compute.regionOperations.get",
            "compute.regionOperations.list",
            "compute.regionSecurityPolicies.get",
            "compute.regionSecurityPolicies.list",
            "compute.regionSecurityPolicies.listEffectiveTags",
            "compute.regionSecurityPolicies.listTagBindings",
            "compute.regionSecurityPolicies.use",
            "compute.regionSslCertificates.*",
            "compute.regionSslPolicies.*",
            "compute.regionTargetHttpProxies.*",
            "compute.regionTargetHttpsProxies.*",
            "compute.regionTargetTcpProxies.*",
            "compute.regionUrlMaps.*",
            "compute.securityPolicies.get",
            "compute.securityPolicies.list",
            "compute.securityPolicies.listEffectiveTags",
            "compute.securityPolicies.listTagBindings",
            "compute.securityPolicies.use",
            "compute.snapshots.listEffectiveTags",
            "compute.snapshots.listTagBindings",
            "compute.sslCertificates.*",
            "compute.sslPolicies.*",
            "compute.subnetworks.get",
            "compute.subnetworks.list",
            "compute.subnetworks.listEffectiveTags",
            "compute.subnetworks.listTagBindings",
            "compute.subnetworks.use",
            "compute.targetGrpcProxies.*",
            "compute.targetHttpProxies.*",
            "compute.targetHttpsProxies.*",
            "compute.targetInstances.*",
            "compute.targetPools.*",
            "compute.targetSslProxies.*",
            "compute.targetTcpProxies.*",
            "compute.urlMaps.*",
            "compute.zoneOperations.get",
            "compute.zoneOperations.list",
            "networksecurity.clientTlsPolicies.get",
            "networksecurity.clientTlsPolicies.list",
            "networksecurity.clientTlsPolicies.use",
            "networksecurity.serverTlsPolicies.get",
            "networksecurity.serverTlsPolicies.list",
            "networksecurity.serverTlsPolicies.use",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "serviceusage.quotas.get",
            "serviceusage.services.get",
            "serviceusage.services.list"
          ],
          "title": "Compute Load Balancer Admin"
        },
        {
          "description": "Permissions to use services from a load balancer in other projects.",
          "id": "roles/compute.loadBalancerServiceUser",
          "is_beta": false,
          "permissions": [
            "compute.backendBuckets.get",
            "compute.backendBuckets.list",
            "compute.backendBuckets.listEffectiveTags",
            "compute.backendBuckets.listTagBindings",
            "compute.backendBuckets.use",
            "compute.backendServices.get",
            "compute.backendServices.list",
            "compute.backendServices.listEffectiveTags",
            "compute.backendServices.listTagBindings",
            "compute.backendServices.use",
            "compute.projects.get",
            "compute.regionBackendServices.get",
            "compute.regionBackendServices.list",
            "compute.regionBackendServices.listEffectiveTags",
            "compute.regionBackendServices.listTagBindings",
            "compute.regionBackendServices.use",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "serviceusage.quotas.get",
            "serviceusage.services.get",
            "serviceusage.services.list"
          ],
          "title": "Compute Load Balancer Services User"
        },
        {
          "description": "Permissions to create, modify, and delete networking resources, except for firewall rules and SSL certificates. The network admin role allows read-only access to firewall rules, SSL certificates, and instances (to view their ephemeral IP addresses). The network admin role does not allow a user to create, start, stop, or delete instances.  For example, if your company has a security team that manages firewalls and SSL certificates and a networking team that manages the rest of the networking resources, then grant this role to the networking team's group. Or, if you have a combined team that manages both security and networking, then grant this role as well as the  roles/compute.securityAdmin role to the combined team's group.",
          "id": "roles/compute.networkAdmin",
          "is_beta": false,
          "permissions": [
            "compute.acceleratorTypes.*",
            "compute.addresses.*",
            "compute.autoscalers.get",
            "compute.autoscalers.list",
            "compute.backendBuckets.*",
            "compute.backendServices.*",
            "compute.crossSiteNetworks.*",
            "compute.disks.listEffectiveTags",
            "compute.disks.listTagBindings",
            "compute.externalVpnGateways.*",
            "compute.firewallPolicies.get",
            "compute.firewallPolicies.list",
            "compute.firewallPolicies.listEffectiveTags",
            "compute.firewallPolicies.listTagBindings",
            "compute.firewallPolicies.use",
            "compute.firewalls.get",
            "compute.firewalls.list",
            "compute.firewalls.listEffectiveTags",
            "compute.firewalls.listTagBindings",
            "compute.forwardingRules.*",
            "compute.globalAddresses.*",
            "compute.globalForwardingRules.*",
            "compute.globalNetworkEndpointGroups.get",
            "compute.globalNetworkEndpointGroups.list",
            "compute.globalNetworkEndpointGroups.listEffectiveTags",
            "compute.globalNetworkEndpointGroups.listTagBindings",
            "compute.globalNetworkEndpointGroups.use",
            "compute.globalOperations.get",
            "compute.globalOperations.list",
            "compute.globalPublicDelegatedPrefixes.delete",
            "compute.globalPublicDelegatedPrefixes.get",
            "compute.globalPublicDelegatedPrefixes.list",
            "compute.globalPublicDelegatedPrefixes.updatePolicy",
            "compute.healthChecks.*",
            "compute.httpHealthChecks.*",
            "compute.httpsHealthChecks.*",
            "compute.images.listEffectiveTags",
            "compute.images.listTagBindings",
            "compute.instanceGroupManagers.get",
            "compute.instanceGroupManagers.list",
            "compute.instanceGroupManagers.listEffectiveTags",
            "compute.instanceGroupManagers.listTagBindings",
            "compute.instanceGroupManagers.update",
            "compute.instanceGroupManagers.use",
            "compute.instanceGroups.get",
            "compute.instanceGroups.list",
            "compute.instanceGroups.listEffectiveTags",
            "compute.instanceGroups.listTagBindings",
            "compute.instanceGroups.update",
            "compute.instanceGroups.use",
            "compute.instanceSettings.get",
            "compute.instances.get",
            "compute.instances.getGuestAttributes",
            "compute.instances.getScreenshot",
            "compute.instances.getSerialPortOutput",
            "compute.instances.list",
            "compute.instances.listEffectiveTags",
            "compute.instances.listReferrers",
            "compute.instances.listTagBindings",
            "compute.instances.updateSecurity",
            "compute.instances.use",
            "compute.instances.useReadOnly",
            "compute.interconnectAttachments.*",
            "compute.interconnectLocations.*",
            "compute.interconnectRemoteLocations.*",
            "compute.interconnects.*",
            "compute.machineTypes.*",
            "compute.networkAttachments.*",
            "compute.networkEndpointGroups.get",
            "compute.networkEndpointGroups.list",
            "compute.networkEndpointGroups.listEffectiveTags",
            "compute.networkEndpointGroups.listTagBindings",
            "compute.networkEndpointGroups.use",
            "compute.networkProfiles.*",
            "compute.networks.*",
            "compute.packetMirrorings.get",
            "compute.packetMirrorings.list",
            "compute.packetMirrorings.listEffectiveTags",
            "compute.packetMirrorings.listTagBindings",
            "compute.projects.get",
            "compute.publicDelegatedPrefixes.delete",
            "compute.publicDelegatedPrefixes.get",
            "compute.publicDelegatedPrefixes.list",
            "compute.publicDelegatedPrefixes.listEffectiveTags",
            "compute.publicDelegatedPrefixes.listTagBindings",
            "compute.publicDelegatedPrefixes.update",
            "compute.publicDelegatedPrefixes.updatePolicy",
            "compute.regionBackendServices.*",
            "compute.regionFirewallPolicies.get",
            "compute.regionFirewallPolicies.list",
            "compute.regionFirewallPolicies.listEffectiveTags",
            "compute.regionFirewallPolicies.listTagBindings",
            "compute.regionFirewallPolicies.use",
            "compute.regionHealthCheckServices.*",
            "compute.regionHealthChecks.*",
            "compute.regionNetworkEndpointGroups.get",
            "compute.regionNetworkEndpointGroups.list",
            "compute.regionNetworkEndpointGroups.listEffectiveTags",
            "compute.regionNetworkEndpointGroups.listTagBindings",
            "compute.regionNetworkEndpointGroups.use",
            "compute.regionNotificationEndpoints.*",
            "compute.regionOperations.get",
            "compute.regionOperations.list",
            "compute.regionSecurityPolicies.get",
            "compute.regionSecurityPolicies.list",
            "compute.regionSecurityPolicies.listEffectiveTags",
            "compute.regionSecurityPolicies.listTagBindings",
            "compute.regionSecurityPolicies.use",
            "compute.regionSslCertificates.get",
            "compute.regionSslCertificates.list",
            "compute.regionSslCertificates.listEffectiveTags",
            "compute.regionSslCertificates.listTagBindings",
            "compute.regionSslPolicies.*",
            "compute.regionTargetHttpProxies.*",
            "compute.regionTargetHttpsProxies.*",
            "compute.regionTargetTcpProxies.*",
            "compute.regionUrlMaps.*",
            "compute.regions.*",
            "compute.routers.*",
            "compute.routes.*",
            "compute.securityPolicies.get",
            "compute.securityPolicies.list",
            "compute.securityPolicies.listEffectiveTags",
            "compute.securityPolicies.listTagBindings",
            "compute.securityPolicies.use",
            "compute.serviceAttachments.*",
            "compute.snapshots.listEffectiveTags",
            "compute.snapshots.listTagBindings",
            "compute.sslCertificates.get",
            "compute.sslCertificates.list",
            "compute.sslCertificates.listEffectiveTags",
            "compute.sslCertificates.listTagBindings",
            "compute.sslPolicies.*",
            "compute.subnetworks.*",
            "compute.targetGrpcProxies.*",
            "compute.targetHttpProxies.*",
            "compute.targetHttpsProxies.*",
            "compute.targetInstances.*",
            "compute.targetPools.*",
            "compute.targetSslProxies.*",
            "compute.targetTcpProxies.*",
            "compute.targetVpnGateways.*",
            "compute.urlMaps.*",
            "compute.vpnGateways.*",
            "compute.vpnTunnels.*",
            "compute.wireGroups.*",
            "compute.zoneOperations.get",
            "compute.zoneOperations.list",
            "compute.zones.*",
            "networkconnectivity.internalRanges.*",
            "networkconnectivity.locations.*",
            "networkconnectivity.operations.*",
            "networkconnectivity.policyBasedRoutes.*",
            "networkconnectivity.regionalEndpoints.*",
            "networkconnectivity.serviceClasses.*",
            "networkconnectivity.serviceConnectionMaps.*",
            "networkconnectivity.serviceConnectionPolicies.*",
            "networkmanagement.connectivitytests.get",
            "networkmanagement.connectivitytests.list",
            "networksecurity.addressGroups.*",
            "networksecurity.authorizationPolicies.*",
            "networksecurity.authzPolicies.*",
            "networksecurity.clientTlsPolicies.*",
            "networksecurity.firewallEndpointAssociations.*",
            "networksecurity.firewallEndpoints.*",
            "networksecurity.gatewaySecurityPolicies.*",
            "networksecurity.gatewaySecurityPolicyRules.*",
            "networksecurity.locations.*",
            "networksecurity.operations.*",
            "networksecurity.securityProfileGroups.*",
            "networksecurity.securityProfiles.*",
            "networksecurity.serverTlsPolicies.*",
            "networksecurity.tlsInspectionPolicies.*",
            "networksecurity.urlLists.*",
            "networkservices.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "servicedirectory.namespaces.create",
            "servicedirectory.namespaces.delete",
            "servicedirectory.services.create",
            "servicedirectory.services.delete",
            "servicenetworking.operations.get",
            "servicenetworking.services.addPeering",
            "servicenetworking.services.createPeeredDnsDomain",
            "servicenetworking.services.deleteConnection",
            "servicenetworking.services.deletePeeredDnsDomain",
            "servicenetworking.services.disableVpcServiceControls",
            "servicenetworking.services.enableVpcServiceControls",
            "servicenetworking.services.get",
            "servicenetworking.services.listPeeredDnsDomains",
            "serviceusage.quotas.get",
            "serviceusage.services.get",
            "serviceusage.services.list",
            "trafficdirector.*"
          ],
          "title": "Compute Network Admin"
        },
        {
          "description": "Provides access to a shared VPC network Once granted, service owners can use VPC networks and subnets that belong to the host project. For example, a network user can create a VM instance that belongs to a host project network but they cannot delete or create new networks in the host project.",
          "id": "roles/compute.networkUser",
          "is_beta": false,
          "permissions": [
            "compute.addresses.createInternal",
            "compute.addresses.deleteInternal",
            "compute.addresses.get",
            "compute.addresses.list",
            "compute.addresses.listEffectiveTags",
            "compute.addresses.listTagBindings",
            "compute.addresses.useInternal",
            "compute.crossSiteNetworks.get",
            "compute.crossSiteNetworks.list",
            "compute.externalVpnGateways.get",
            "compute.externalVpnGateways.list",
            "compute.externalVpnGateways.listEffectiveTags",
            "compute.externalVpnGateways.listTagBindings",
            "compute.externalVpnGateways.use",
            "compute.firewalls.get",
            "compute.firewalls.list",
            "compute.firewalls.listEffectiveTags",
            "compute.firewalls.listTagBindings",
            "compute.instanceSettings.get",
            "compute.interconnectAttachments.get",
            "compute.interconnectAttachments.list",
            "compute.interconnectAttachments.listEffectiveTags",
            "compute.interconnectAttachments.listTagBindings",
            "compute.interconnectLocations.*",
            "compute.interconnectRemoteLocations.*",
            "compute.interconnects.get",
            "compute.interconnects.list",
            "compute.interconnects.listEffectiveTags",
            "compute.interconnects.listTagBindings",
            "compute.interconnects.use",
            "compute.networkAttachments.get",
            "compute.networkAttachments.list",
            "compute.networkAttachments.listEffectiveTags",
            "compute.networkAttachments.listTagBindings",
            "compute.networkProfiles.*",
            "compute.networks.access",
            "compute.networks.get",
            "compute.networks.getEffectiveFirewalls",
            "compute.networks.getRegionEffectiveFirewalls",
            "compute.networks.list",
            "compute.networks.listEffectiveTags",
            "compute.networks.listPeeringRoutes",
            "compute.networks.listTagBindings",
            "compute.networks.use",
            "compute.networks.useExternalIp",
            "compute.projects.get",
            "compute.regions.*",
            "compute.routers.get",
            "compute.routers.getRoutePolicy",
            "compute.routers.list",
            "compute.routers.listBgpRoutes",
            "compute.routers.listEffectiveTags",
            "compute.routers.listRoutePolicies",
            "compute.routers.listTagBindings",
            "compute.routes.get",
            "compute.routes.list",
            "compute.routes.listEffectiveTags",
            "compute.routes.listTagBindings",
            "compute.serviceAttachments.get",
            "compute.serviceAttachments.list",
            "compute.serviceAttachments.listEffectiveTags",
            "compute.serviceAttachments.listTagBindings",
            "compute.subnetworks.get",
            "compute.subnetworks.list",
            "compute.subnetworks.listEffectiveTags",
            "compute.subnetworks.listTagBindings",
            "compute.subnetworks.use",
            "compute.subnetworks.useExternalIp",
            "compute.targetVpnGateways.get",
            "compute.targetVpnGateways.list",
            "compute.targetVpnGateways.listEffectiveTags",
            "compute.targetVpnGateways.listTagBindings",
            "compute.vpnGateways.get",
            "compute.vpnGateways.list",
            "compute.vpnGateways.listEffectiveTags",
            "compute.vpnGateways.listTagBindings",
            "compute.vpnGateways.use",
            "compute.vpnTunnels.get",
            "compute.vpnTunnels.list",
            "compute.vpnTunnels.listEffectiveTags",
            "compute.vpnTunnels.listTagBindings",
            "compute.wireGroups.get",
            "compute.wireGroups.list",
            "compute.zones.*",
            "networkconnectivity.internalRanges.get",
            "networkconnectivity.internalRanges.list",
            "networkconnectivity.locations.*",
            "networkconnectivity.operations.get",
            "networkconnectivity.operations.list",
            "networkconnectivity.policyBasedRoutes.get",
            "networkconnectivity.policyBasedRoutes.list",
            "networkmanagement.connectivitytests.get",
            "networkmanagement.connectivitytests.list",
            "networksecurity.addressGroups.get",
            "networksecurity.addressGroups.list",
            "networksecurity.addressGroups.use",
            "networksecurity.authorizationPolicies.get",
            "networksecurity.authorizationPolicies.list",
            "networksecurity.authorizationPolicies.use",
            "networksecurity.authzPolicies.get",
            "networksecurity.authzPolicies.list",
            "networksecurity.clientTlsPolicies.get",
            "networksecurity.clientTlsPolicies.list",
            "networksecurity.clientTlsPolicies.use",
            "networksecurity.firewallEndpointAssociations.get",
            "networksecurity.firewallEndpointAssociations.list",
            "networksecurity.firewallEndpoints.get",
            "networksecurity.firewallEndpoints.list",
            "networksecurity.firewallEndpoints.use",
            "networksecurity.gatewaySecurityPolicies.get",
            "networksecurity.gatewaySecurityPolicies.list",
            "networksecurity.gatewaySecurityPolicies.use",
            "networksecurity.gatewaySecurityPolicyRules.get",
            "networksecurity.gatewaySecurityPolicyRules.list",
            "networksecurity.gatewaySecurityPolicyRules.use",
            "networksecurity.locations.*",
            "networksecurity.operations.get",
            "networksecurity.operations.list",
            "networksecurity.securityProfileGroups.get",
            "networksecurity.securityProfileGroups.list",
            "networksecurity.securityProfileGroups.use",
            "networksecurity.securityProfiles.get",
            "networksecurity.securityProfiles.list",
            "networksecurity.securityProfiles.use",
            "networksecurity.serverTlsPolicies.get",
            "networksecurity.serverTlsPolicies.list",
            "networksecurity.serverTlsPolicies.use",
            "networksecurity.tlsInspectionPolicies.get",
            "networksecurity.tlsInspectionPolicies.list",
            "networksecurity.tlsInspectionPolicies.use",
            "networksecurity.urlLists.get",
            "networksecurity.urlLists.list",
            "networksecurity.urlLists.use",
            "networkservices.authzExtensions.get",
            "networkservices.authzExtensions.list",
            "networkservices.authzExtensions.use",
            "networkservices.endpointPolicies.get",
            "networkservices.endpointPolicies.list",
            "networkservices.gateways.get",
            "networkservices.gateways.list",
            "networkservices.gateways.use",
            "networkservices.grpcRoutes.get",
            "networkservices.grpcRoutes.list",
            "networkservices.httpFilters.get",
            "networkservices.httpFilters.list",
            "networkservices.httpRoutes.get",
            "networkservices.httpRoutes.list",
            "networkservices.httpfilters.get",
            "networkservices.httpfilters.list",
            "networkservices.httpfilters.use",
            "networkservices.lbRouteExtensions.get",
            "networkservices.lbRouteExtensions.list",
            "networkservices.lbTrafficExtensions.get",
            "networkservices.lbTrafficExtensions.list",
            "networkservices.locations.*",
            "networkservices.meshes.get",
            "networkservices.meshes.list",
            "networkservices.meshes.use",
            "networkservices.operations.get",
            "networkservices.operations.list",
            "networkservices.route_views.*",
            "networkservices.serviceBindings.get",
            "networkservices.serviceBindings.list",
            "networkservices.serviceLbPolicies.get",
            "networkservices.serviceLbPolicies.list",
            "networkservices.tcpRoutes.get",
            "networkservices.tcpRoutes.list",
            "networkservices.tlsRoutes.get",
            "networkservices.tlsRoutes.list",
            "networkservices.wasmPlugins.get",
            "networkservices.wasmPlugins.list",
            "networkservices.wasmPlugins.use",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "servicenetworking.services.get",
            "serviceusage.quotas.get",
            "serviceusage.services.get",
            "serviceusage.services.list"
          ],
          "title": "Compute Network User"
        },
        {
          "description": "Read-only access to all networking resources For example, if you have software that inspects your network configuration, you could grant this role to that software's service account.",
          "id": "roles/compute.networkViewer",
          "is_beta": false,
          "permissions": [
            "compute.acceleratorTypes.*",
            "compute.addresses.get",
            "compute.addresses.list",
            "compute.addresses.listEffectiveTags",
            "compute.addresses.listTagBindings",
            "compute.autoscalers.get",
            "compute.autoscalers.list",
            "compute.backendBuckets.get",
            "compute.backendBuckets.list",
            "compute.backendBuckets.listEffectiveTags",
            "compute.backendBuckets.listTagBindings",
            "compute.backendServices.get",
            "compute.backendServices.list",
            "compute.backendServices.listEffectiveTags",
            "compute.backendServices.listTagBindings",
            "compute.crossSiteNetworks.get",
            "compute.crossSiteNetworks.list",
            "compute.disks.listEffectiveTags",
            "compute.disks.listTagBindings",
            "compute.externalVpnGateways.get",
            "compute.externalVpnGateways.list",
            "compute.externalVpnGateways.listEffectiveTags",
            "compute.externalVpnGateways.listTagBindings",
            "compute.firewalls.get",
            "compute.firewalls.list",
            "compute.firewalls.listEffectiveTags",
            "compute.firewalls.listTagBindings",
            "compute.forwardingRules.get",
            "compute.forwardingRules.list",
            "compute.forwardingRules.listEffectiveTags",
            "compute.forwardingRules.listTagBindings",
            "compute.globalAddresses.get",
            "compute.globalAddresses.list",
            "compute.globalAddresses.listEffectiveTags",
            "compute.globalAddresses.listTagBindings",
            "compute.globalForwardingRules.get",
            "compute.globalForwardingRules.list",
            "compute.globalForwardingRules.listEffectiveTags",
            "compute.globalForwardingRules.listTagBindings",
            "compute.healthChecks.get",
            "compute.healthChecks.list",
            "compute.healthChecks.listEffectiveTags",
            "compute.healthChecks.listTagBindings",
            "compute.httpHealthChecks.get",
            "compute.httpHealthChecks.list",
            "compute.httpHealthChecks.listEffectiveTags",
            "compute.httpHealthChecks.listTagBindings",
            "compute.httpsHealthChecks.get",
            "compute.httpsHealthChecks.list",
            "compute.httpsHealthChecks.listEffectiveTags",
            "compute.httpsHealthChecks.listTagBindings",
            "compute.images.listEffectiveTags",
            "compute.images.listTagBindings",
            "compute.instanceGroupManagers.get",
            "compute.instanceGroupManagers.list",
            "compute.instanceGroupManagers.listEffectiveTags",
            "compute.instanceGroupManagers.listTagBindings",
            "compute.instanceGroups.get",
            "compute.instanceGroups.list",
            "compute.instanceGroups.listEffectiveTags",
            "compute.instanceGroups.listTagBindings",
            "compute.instanceSettings.get",
            "compute.instances.get",
            "compute.instances.getGuestAttributes",
            "compute.instances.getScreenshot",
            "compute.instances.getSerialPortOutput",
            "compute.instances.list",
            "compute.instances.listEffectiveTags",
            "compute.instances.listReferrers",
            "compute.instances.listTagBindings",
            "compute.interconnectAttachments.get",
            "compute.interconnectAttachments.list",
            "compute.interconnectAttachments.listEffectiveTags",
            "compute.interconnectAttachments.listTagBindings",
            "compute.interconnectLocations.*",
            "compute.interconnectRemoteLocations.*",
            "compute.interconnects.get",
            "compute.interconnects.list",
            "compute.interconnects.listEffectiveTags",
            "compute.interconnects.listTagBindings",
            "compute.machineTypes.*",
            "compute.networkAttachments.get",
            "compute.networkAttachments.list",
            "compute.networkAttachments.listEffectiveTags",
            "compute.networkAttachments.listTagBindings",
            "compute.networkProfiles.*",
            "compute.networks.get",
            "compute.networks.getEffectiveFirewalls",
            "compute.networks.getRegionEffectiveFirewalls",
            "compute.networks.list",
            "compute.networks.listEffectiveTags",
            "compute.networks.listPeeringRoutes",
            "compute.networks.listTagBindings",
            "compute.packetMirrorings.get",
            "compute.packetMirrorings.list",
            "compute.packetMirrorings.listEffectiveTags",
            "compute.packetMirrorings.listTagBindings",
            "compute.projects.get",
            "compute.regionBackendServices.get",
            "compute.regionBackendServices.list",
            "compute.regionBackendServices.listEffectiveTags",
            "compute.regionBackendServices.listTagBindings",
            "compute.regionHealthCheckServices.get",
            "compute.regionHealthCheckServices.list",
            "compute.regionHealthChecks.get",
            "compute.regionHealthChecks.list",
            "compute.regionHealthChecks.listEffectiveTags",
            "compute.regionHealthChecks.listTagBindings",
            "compute.regionNotificationEndpoints.get",
            "compute.regionNotificationEndpoints.list",
            "compute.regionSslCertificates.get",
            "compute.regionSslCertificates.list",
            "compute.regionSslCertificates.listEffectiveTags",
            "compute.regionSslCertificates.listTagBindings",
            "compute.regionSslPolicies.get",
            "compute.regionSslPolicies.list",
            "compute.regionSslPolicies.listAvailableFeatures",
            "compute.regionSslPolicies.listEffectiveTags",
            "compute.regionSslPolicies.listTagBindings",
            "compute.regionTargetHttpProxies.get",
            "compute.regionTargetHttpProxies.list",
            "compute.regionTargetHttpProxies.listEffectiveTags",
            "compute.regionTargetHttpProxies.listTagBindings",
            "compute.regionTargetHttpsProxies.get",
            "compute.regionTargetHttpsProxies.list",
            "compute.regionTargetHttpsProxies.listEffectiveTags",
            "compute.regionTargetHttpsProxies.listTagBindings",
            "compute.regionTargetTcpProxies.get",
            "compute.regionTargetTcpProxies.list",
            "compute.regionTargetTcpProxies.listEffectiveTags",
            "compute.regionTargetTcpProxies.listTagBindings",
            "compute.regionUrlMaps.get",
            "compute.regionUrlMaps.list",
            "compute.regionUrlMaps.listEffectiveTags",
            "compute.regionUrlMaps.listTagBindings",
            "compute.regions.*",
            "compute.routers.get",
            "compute.routers.getRoutePolicy",
            "compute.routers.list",
            "compute.routers.listBgpRoutes",
            "compute.routers.listEffectiveTags",
            "compute.routers.listRoutePolicies",
            "compute.routers.listTagBindings",
            "compute.routes.get",
            "compute.routes.list",
            "compute.routes.listEffectiveTags",
            "compute.routes.listTagBindings",
            "compute.serviceAttachments.get",
            "compute.serviceAttachments.list",
            "compute.serviceAttachments.listEffectiveTags",
            "compute.serviceAttachments.listTagBindings",
            "compute.snapshots.listEffectiveTags",
            "compute.snapshots.listTagBindings",
            "compute.sslCertificates.get",
            "compute.sslCertificates.list",
            "compute.sslCertificates.listEffectiveTags",
            "compute.sslCertificates.listTagBindings",
            "compute.sslPolicies.get",
            "compute.sslPolicies.list",
            "compute.sslPolicies.listAvailableFeatures",
            "compute.sslPolicies.listEffectiveTags",
            "compute.sslPolicies.listTagBindings",
            "compute.subnetworks.get",
            "compute.subnetworks.list",
            "compute.subnetworks.listEffectiveTags",
            "compute.subnetworks.listTagBindings",
            "compute.targetGrpcProxies.get",
            "compute.targetGrpcProxies.list",
            "compute.targetGrpcProxies.listEffectiveTags",
            "compute.targetGrpcProxies.listTagBindings",
            "compute.targetHttpProxies.get",
            "compute.targetHttpProxies.list",
            "compute.targetHttpProxies.listEffectiveTags",
            "compute.targetHttpProxies.listTagBindings",
            "compute.targetHttpsProxies.get",
            "compute.targetHttpsProxies.list",
            "compute.targetHttpsProxies.listEffectiveTags",
            "compute.targetHttpsProxies.listTagBindings",
            "compute.targetInstances.get",
            "compute.targetInstances.list",
            "compute.targetInstances.listEffectiveTags",
            "compute.targetInstances.listTagBindings",
            "compute.targetPools.get",
            "compute.targetPools.list",
            "compute.targetPools.listEffectiveTags",
            "compute.targetPools.listTagBindings",
            "compute.targetSslProxies.get",
            "compute.targetSslProxies.list",
            "compute.targetSslProxies.listEffectiveTags",
            "compute.targetSslProxies.listTagBindings",
            "compute.targetTcpProxies.get",
            "compute.targetTcpProxies.list",
            "compute.targetTcpProxies.listEffectiveTags",
            "compute.targetTcpProxies.listTagBindings",
            "compute.targetVpnGateways.get",
            "compute.targetVpnGateways.list",
            "compute.targetVpnGateways.listEffectiveTags",
            "compute.targetVpnGateways.listTagBindings",
            "compute.urlMaps.get",
            "compute.urlMaps.list",
            "compute.urlMaps.listEffectiveTags",
            "compute.urlMaps.listTagBindings",
            "compute.vpnGateways.get",
            "compute.vpnGateways.list",
            "compute.vpnGateways.listEffectiveTags",
            "compute.vpnGateways.listTagBindings",
            "compute.vpnTunnels.get",
            "compute.vpnTunnels.list",
            "compute.vpnTunnels.listEffectiveTags",
            "compute.vpnTunnels.listTagBindings",
            "compute.wireGroups.get",
            "compute.wireGroups.list",
            "compute.zones.*",
            "networkconnectivity.internalRanges.get",
            "networkconnectivity.internalRanges.list",
            "networkconnectivity.locations.*",
            "networkconnectivity.operations.get",
            "networkconnectivity.operations.list",
            "networkconnectivity.policyBasedRoutes.get",
            "networkconnectivity.policyBasedRoutes.list",
            "networkmanagement.connectivitytests.get",
            "networkmanagement.connectivitytests.list",
            "networksecurity.addressGroups.get",
            "networksecurity.addressGroups.list",
            "networksecurity.authorizationPolicies.get",
            "networksecurity.authorizationPolicies.list",
            "networksecurity.authzPolicies.get",
            "networksecurity.authzPolicies.list",
            "networksecurity.clientTlsPolicies.get",
            "networksecurity.clientTlsPolicies.list",
            "networksecurity.firewallEndpointAssociations.get",
            "networksecurity.firewallEndpointAssociations.list",
            "networksecurity.firewallEndpoints.get",
            "networksecurity.firewallEndpoints.list",
            "networksecurity.gatewaySecurityPolicies.get",
            "networksecurity.gatewaySecurityPolicies.list",
            "networksecurity.gatewaySecurityPolicyRules.get",
            "networksecurity.gatewaySecurityPolicyRules.list",
            "networksecurity.locations.*",
            "networksecurity.operations.get",
            "networksecurity.operations.list",
            "networksecurity.securityProfileGroups.get",
            "networksecurity.securityProfileGroups.list",
            "networksecurity.securityProfiles.get",
            "networksecurity.securityProfiles.list",
            "networksecurity.serverTlsPolicies.get",
            "networksecurity.serverTlsPolicies.list",
            "networksecurity.tlsInspectionPolicies.get",
            "networksecurity.tlsInspectionPolicies.list",
            "networksecurity.urlLists.get",
            "networksecurity.urlLists.list",
            "networkservices.authzExtensions.get",
            "networkservices.authzExtensions.list",
            "networkservices.endpointPolicies.get",
            "networkservices.endpointPolicies.list",
            "networkservices.gateways.get",
            "networkservices.gateways.list",
            "networkservices.grpcRoutes.get",
            "networkservices.grpcRoutes.list",
            "networkservices.httpFilters.get",
            "networkservices.httpFilters.list",
            "networkservices.httpRoutes.get",
            "networkservices.httpRoutes.list",
            "networkservices.httpfilters.get",
            "networkservices.httpfilters.list",
            "networkservices.lbRouteExtensions.get",
            "networkservices.lbRouteExtensions.list",
            "networkservices.lbTrafficExtensions.get",
            "networkservices.lbTrafficExtensions.list",
            "networkservices.locations.*",
            "networkservices.meshes.get",
            "networkservices.meshes.list",
            "networkservices.operations.get",
            "networkservices.operations.list",
            "networkservices.route_views.*",
            "networkservices.serviceBindings.get",
            "networkservices.serviceBindings.list",
            "networkservices.serviceLbPolicies.get",
            "networkservices.serviceLbPolicies.list",
            "networkservices.tcpRoutes.get",
            "networkservices.tcpRoutes.list",
            "networkservices.tlsRoutes.get",
            "networkservices.tlsRoutes.list",
            "networkservices.wasmPlugins.get",
            "networkservices.wasmPlugins.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "servicenetworking.services.get",
            "serviceusage.quotas.get",
            "serviceusage.services.get",
            "serviceusage.services.list",
            "trafficdirector.*"
          ],
          "title": "Compute Network Viewer"
        },
        {
          "description": "Full control of Compute Engine Organization Firewall Policies.",
          "id": "roles/compute.orgFirewallPolicyAdmin",
          "is_beta": false,
          "permissions": [
            "compute.firewallPolicies.*",
            "compute.globalOperations.get",
            "compute.globalOperations.getIamPolicy",
            "compute.globalOperations.list",
            "compute.globalOperations.setIamPolicy",
            "compute.projects.get",
            "compute.regionFirewallPolicies.*",
            "compute.regionOperations.get",
            "compute.regionOperations.getIamPolicy",
            "compute.regionOperations.list",
            "compute.regionOperations.setIamPolicy",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "serviceusage.quotas.get",
            "serviceusage.services.get",
            "serviceusage.services.list"
          ],
          "title": "Compute Organization Firewall Policy Admin"
        },
        {
          "description": "View or use Compute Engine Firewall Policies to associate with the organization or folders.",
          "id": "roles/compute.orgFirewallPolicyUser",
          "is_beta": false,
          "permissions": [
            "compute.firewallPolicies.get",
            "compute.firewallPolicies.list",
            "compute.firewallPolicies.listEffectiveTags",
            "compute.firewallPolicies.listTagBindings",
            "compute.firewallPolicies.use",
            "compute.globalOperations.get",
            "compute.globalOperations.getIamPolicy",
            "compute.globalOperations.list",
            "compute.projects.get",
            "compute.regionFirewallPolicies.get",
            "compute.regionFirewallPolicies.list",
            "compute.regionFirewallPolicies.listEffectiveTags",
            "compute.regionFirewallPolicies.listTagBindings",
            "compute.regionFirewallPolicies.use",
            "compute.regionOperations.get",
            "compute.regionOperations.getIamPolicy",
            "compute.regionOperations.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "serviceusage.quotas.get",
            "serviceusage.services.get",
            "serviceusage.services.list"
          ],
          "title": "Compute Organization Firewall Policy User"
        },
        {
          "description": "Full control of Compute Engine Organization Security Policies.",
          "id": "roles/compute.orgSecurityPolicyAdmin",
          "is_beta": false,
          "permissions": [
            "compute.firewallPolicies.*",
            "compute.globalOperations.get",
            "compute.globalOperations.getIamPolicy",
            "compute.globalOperations.list",
            "compute.globalOperations.setIamPolicy",
            "compute.projects.get",
            "compute.securityPolicies.addAssociation",
            "compute.securityPolicies.copyRules",
            "compute.securityPolicies.create",
            "compute.securityPolicies.createTagBinding",
            "compute.securityPolicies.delete",
            "compute.securityPolicies.deleteTagBinding",
            "compute.securityPolicies.get",
            "compute.securityPolicies.list",
            "compute.securityPolicies.listEffectiveTags",
            "compute.securityPolicies.listTagBindings",
            "compute.securityPolicies.move",
            "compute.securityPolicies.removeAssociation",
            "compute.securityPolicies.update",
            "compute.securityPolicies.use",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "serviceusage.quotas.get",
            "serviceusage.services.get",
            "serviceusage.services.list"
          ],
          "title": "Compute Organization Security Policy Admin"
        },
        {
          "description": "View or use Compute Engine Security Policies to associate with the organization or folders.",
          "id": "roles/compute.orgSecurityPolicyUser",
          "is_beta": false,
          "permissions": [
            "compute.firewallPolicies.get",
            "compute.firewallPolicies.list",
            "compute.firewallPolicies.listEffectiveTags",
            "compute.firewallPolicies.listTagBindings",
            "compute.firewallPolicies.use",
            "compute.globalOperations.get",
            "compute.globalOperations.getIamPolicy",
            "compute.globalOperations.list",
            "compute.globalOperations.setIamPolicy",
            "compute.projects.get",
            "compute.securityPolicies.addAssociation",
            "compute.securityPolicies.get",
            "compute.securityPolicies.list",
            "compute.securityPolicies.listEffectiveTags",
            "compute.securityPolicies.listTagBindings",
            "compute.securityPolicies.removeAssociation",
            "compute.securityPolicies.use",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "serviceusage.quotas.get",
            "serviceusage.services.get",
            "serviceusage.services.list"
          ],
          "title": "Compute Organization Security Policy User"
        },
        {
          "description": "Full control of Compute Engine Firewall Policy associations to the organization or folders.",
          "id": "roles/compute.orgSecurityResourceAdmin",
          "is_beta": false,
          "permissions": [
            "compute.globalOperations.get",
            "compute.globalOperations.getIamPolicy",
            "compute.globalOperations.list",
            "compute.globalOperations.setIamPolicy",
            "compute.organizations.listAssociations",
            "compute.organizations.setFirewallPolicy",
            "compute.organizations.setSecurityPolicy",
            "compute.projects.get",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "serviceusage.quotas.get",
            "serviceusage.services.get",
            "serviceusage.services.list"
          ],
          "title": "Compute Organization Resource Admin"
        },
        {
          "description": "Access to log in to a Compute Engine instance as an administrator user.",
          "id": "roles/compute.osAdminLogin",
          "is_beta": false,
          "permissions": [
            "compute.disks.listEffectiveTags",
            "compute.disks.listTagBindings",
            "compute.images.listEffectiveTags",
            "compute.images.listTagBindings",
            "compute.instanceSettings.get",
            "compute.instances.get",
            "compute.instances.list",
            "compute.instances.listEffectiveTags",
            "compute.instances.listTagBindings",
            "compute.instances.osAdminLogin",
            "compute.instances.osLogin",
            "compute.projects.get",
            "compute.snapshots.listEffectiveTags",
            "compute.snapshots.listTagBindings",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "serviceusage.quotas.get",
            "serviceusage.services.get",
            "serviceusage.services.list"
          ],
          "title": "Compute OS Admin Login"
        },
        {
          "description": "Access to log in to a Compute Engine instance as a standard user.",
          "id": "roles/compute.osLogin",
          "is_beta": false,
          "permissions": [
            "compute.disks.listEffectiveTags",
            "compute.disks.listTagBindings",
            "compute.images.listEffectiveTags",
            "compute.images.listTagBindings",
            "compute.instanceSettings.get",
            "compute.instances.get",
            "compute.instances.list",
            "compute.instances.listEffectiveTags",
            "compute.instances.listTagBindings",
            "compute.instances.osLogin",
            "compute.projects.get",
            "compute.snapshots.listEffectiveTags",
            "compute.snapshots.listTagBindings",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "serviceusage.quotas.get",
            "serviceusage.services.get",
            "serviceusage.services.list"
          ],
          "title": "Compute OS Login"
        },
        {
          "description": "Available only at the organization level.  Access for an external user to set OS Login information associated with this organization. This role does not grant access to instances. External users must be granted one of the required OS Login roles  in order to allow access to instances using SSH.",
          "id": "roles/compute.osLoginExternalUser",
          "is_beta": false,
          "permissions": [
            "compute.oslogin.updateExternalUser"
          ],
          "title": "Compute OS Login External User"
        },
        {
          "description": "Specify resources to be mirrored.",
          "id": "roles/compute.packetMirroringAdmin",
          "is_beta": false,
          "permissions": [
            "compute.instances.updateSecurity",
            "compute.networks.mirror",
            "compute.projects.get",
            "compute.subnetworks.mirror",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "serviceusage.quotas.get",
            "serviceusage.services.get",
            "serviceusage.services.list"
          ],
          "title": "Compute packet mirroring admin"
        },
        {
          "description": "Use Compute Engine packet mirrorings.",
          "id": "roles/compute.packetMirroringUser",
          "is_beta": false,
          "permissions": [
            "compute.packetMirrorings.*",
            "compute.projects.get",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "serviceusage.quotas.get",
            "serviceusage.services.get",
            "serviceusage.services.list"
          ],
          "title": "Compute packet mirroring user"
        },
        {
          "description": "Use subnetwork whose PURPOSE is \"PEER_MIGRATION\"",
          "id": "roles/compute.peerSubnetMigrationAdmin",
          "is_beta": false,
          "permissions": [
            "compute.addresses.createInternal",
            "compute.addresses.deleteInternal",
            "compute.addresses.get",
            "compute.addresses.use",
            "compute.forwardingRules.create",
            "compute.forwardingRules.delete",
            "compute.forwardingRules.get",
            "compute.forwardingRules.list",
            "compute.forwardingRules.pscCreate",
            "compute.forwardingRules.pscDelete",
            "compute.forwardingRules.pscUpdate",
            "compute.forwardingRules.update",
            "compute.networks.use",
            "compute.regionOperations.get",
            "compute.regions.list",
            "compute.subnetworks.use",
            "compute.subnetworks.usePeerMigration",
            "servicedirectory.namespaces.create",
            "servicedirectory.services.create",
            "servicedirectory.services.delete"
          ],
          "title": "Compute Peer Subnet Migration Admin"
        },
        {
          "description": "Full control of public IP address management for Compute Engine.",
          "id": "roles/compute.publicIpAdmin",
          "is_beta": false,
          "permissions": [
            "compute.addresses.*",
            "compute.globalAddresses.*",
            "compute.globalPublicDelegatedPrefixes.*",
            "compute.publicAdvertisedPrefixes.*",
            "compute.publicDelegatedPrefixes.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Compute Public IP Admin"
        },
        {
          "description": "Permissions to create, modify, and delete firewall rules and SSL certificates, and also to configure Shielded VM settings.  For example, if your company has a security team that manages firewalls and SSL certificates and a networking team that manages the rest of the networking resources, then grant this role to the security team's group.",
          "id": "roles/compute.securityAdmin",
          "is_beta": false,
          "permissions": [
            "compute.backendBuckets.list",
            "compute.backendServices.list",
            "compute.firewallPolicies.*",
            "compute.firewalls.*",
            "compute.globalOperations.get",
            "compute.globalOperations.list",
            "compute.instanceSettings.get",
            "compute.instances.getEffectiveFirewalls",
            "compute.instances.list",
            "compute.instances.setShieldedInstanceIntegrityPolicy",
            "compute.instances.setShieldedVmIntegrityPolicy",
            "compute.instances.updateSecurity",
            "compute.instances.updateShieldedInstanceConfig",
            "compute.instances.updateShieldedVmConfig",
            "compute.networks.get",
            "compute.networks.getEffectiveFirewalls",
            "compute.networks.getRegionEffectiveFirewalls",
            "compute.networks.list",
            "compute.networks.listEffectiveTags",
            "compute.networks.listTagBindings",
            "compute.networks.updatePolicy",
            "compute.packetMirrorings.*",
            "compute.projects.get",
            "compute.regionBackendServices.list",
            "compute.regionFirewallPolicies.*",
            "compute.regionOperations.get",
            "compute.regionOperations.list",
            "compute.regionSecurityPolicies.*",
            "compute.regionSslCertificates.*",
            "compute.regionSslPolicies.*",
            "compute.regions.*",
            "compute.routers.get",
            "compute.routers.getRoutePolicy",
            "compute.routers.list",
            "compute.routers.listBgpRoutes",
            "compute.routers.listEffectiveTags",
            "compute.routers.listRoutePolicies",
            "compute.routers.listTagBindings",
            "compute.routes.get",
            "compute.routes.list",
            "compute.routes.listEffectiveTags",
            "compute.routes.listTagBindings",
            "compute.securityPolicies.*",
            "compute.sslCertificates.*",
            "compute.sslPolicies.*",
            "compute.subnetworks.get",
            "compute.subnetworks.list",
            "compute.subnetworks.listEffectiveTags",
            "compute.subnetworks.listTagBindings",
            "compute.targetInstances.list",
            "compute.targetPools.list",
            "compute.zoneOperations.get",
            "compute.zoneOperations.list",
            "compute.zones.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "serviceusage.quotas.get",
            "serviceusage.services.get",
            "serviceusage.services.list"
          ],
          "title": "Compute Security Admin"
        },
        {
          "description": "Permissions to view sole tenancy node groups",
          "id": "roles/compute.soleTenantViewer",
          "is_beta": false,
          "permissions": [
            "compute.nodeGroups.get",
            "compute.nodeGroups.getIamPolicy",
            "compute.nodeGroups.list",
            "compute.nodeTemplates.get",
            "compute.nodeTemplates.getIamPolicy",
            "compute.nodeTemplates.list",
            "compute.nodeTypes.*"
          ],
          "title": "Compute Sole Tenant Viewer"
        },
        {
          "description": "Permissions to create, modify, and delete disks, images, and snapshots.  For example, if your company has someone who manages project images and you don't want them to have the editor role on the project, then grant this role to their account on the project.",
          "id": "roles/compute.storageAdmin",
          "is_beta": false,
          "permissions": [
            "cloudkms.keyHandles.*",
            "cloudkms.operations.get",
            "cloudkms.projects.showEffectiveAutokeyConfig",
            "compute.diskSettings.*",
            "compute.diskTypes.*",
            "compute.disks.*",
            "compute.globalOperations.get",
            "compute.globalOperations.list",
            "compute.images.*",
            "compute.instanceSettings.get",
            "compute.instantSnapshots.*",
            "compute.licenseCodes.*",
            "compute.licenses.*",
            "compute.projects.get",
            "compute.regionOperations.get",
            "compute.regionOperations.list",
            "compute.regions.*",
            "compute.resourcePolicies.*",
            "compute.snapshots.*",
            "compute.storagePools.*",
            "compute.zoneOperations.get",
            "compute.zoneOperations.list",
            "compute.zones.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "serviceusage.quotas.get",
            "serviceusage.services.get",
            "serviceusage.services.list"
          ],
          "title": "Compute Storage Admin"
        },
        {
          "description": "Read-only access to get and list Compute Engine resources, without being able to read the data stored on them.  For example, an account with this role could inventory all of the disks in a project, but it could not read any of the data on those disks.",
          "id": "roles/compute.viewer",
          "is_beta": false,
          "permissions": [
            "compute.acceleratorTypes.*",
            "compute.addresses.get",
            "compute.addresses.list",
            "compute.addresses.listEffectiveTags",
            "compute.addresses.listTagBindings",
            "compute.autoscalers.get",
            "compute.autoscalers.list",
            "compute.backendBuckets.get",
            "compute.backendBuckets.getIamPolicy",
            "compute.backendBuckets.list",
            "compute.backendBuckets.listEffectiveTags",
            "compute.backendBuckets.listTagBindings",
            "compute.backendServices.get",
            "compute.backendServices.getIamPolicy",
            "compute.backendServices.list",
            "compute.backendServices.listEffectiveTags",
            "compute.backendServices.listTagBindings",
            "compute.commitments.get",
            "compute.commitments.list",
            "compute.crossSiteNetworks.get",
            "compute.crossSiteNetworks.list",
            "compute.diskSettings.get",
            "compute.diskTypes.*",
            "compute.disks.get",
            "compute.disks.getIamPolicy",
            "compute.disks.list",
            "compute.disks.listEffectiveTags",
            "compute.disks.listTagBindings",
            "compute.externalVpnGateways.get",
            "compute.externalVpnGateways.list",
            "compute.externalVpnGateways.listEffectiveTags",
            "compute.externalVpnGateways.listTagBindings",
            "compute.firewallPolicies.get",
            "compute.firewallPolicies.getIamPolicy",
            "compute.firewallPolicies.list",
            "compute.firewallPolicies.listEffectiveTags",
            "compute.firewallPolicies.listTagBindings",
            "compute.firewalls.get",
            "compute.firewalls.list",
            "compute.firewalls.listEffectiveTags",
            "compute.firewalls.listTagBindings",
            "compute.forwardingRules.get",
            "compute.forwardingRules.list",
            "compute.forwardingRules.listEffectiveTags",
            "compute.forwardingRules.listTagBindings",
            "compute.futureReservations.get",
            "compute.futureReservations.getIamPolicy",
            "compute.futureReservations.list",
            "compute.globalAddresses.get",
            "compute.globalAddresses.list",
            "compute.globalAddresses.listEffectiveTags",
            "compute.globalAddresses.listTagBindings",
            "compute.globalForwardingRules.get",
            "compute.globalForwardingRules.list",
            "compute.globalForwardingRules.listEffectiveTags",
            "compute.globalForwardingRules.listTagBindings",
            "compute.globalNetworkEndpointGroups.get",
            "compute.globalNetworkEndpointGroups.list",
            "compute.globalNetworkEndpointGroups.listEffectiveTags",
            "compute.globalNetworkEndpointGroups.listTagBindings",
            "compute.globalOperations.get",
            "compute.globalOperations.getIamPolicy",
            "compute.globalOperations.list",
            "compute.globalPublicDelegatedPrefixes.get",
            "compute.globalPublicDelegatedPrefixes.list",
            "compute.healthChecks.get",
            "compute.healthChecks.list",
            "compute.healthChecks.listEffectiveTags",
            "compute.healthChecks.listTagBindings",
            "compute.httpHealthChecks.get",
            "compute.httpHealthChecks.list",
            "compute.httpHealthChecks.listEffectiveTags",
            "compute.httpHealthChecks.listTagBindings",
            "compute.httpsHealthChecks.get",
            "compute.httpsHealthChecks.list",
            "compute.httpsHealthChecks.listEffectiveTags",
            "compute.httpsHealthChecks.listTagBindings",
            "compute.images.get",
            "compute.images.getFromFamily",
            "compute.images.getIamPolicy",
            "compute.images.list",
            "compute.images.listEffectiveTags",
            "compute.images.listTagBindings",
            "compute.instanceGroupManagers.get",
            "compute.instanceGroupManagers.list",
            "compute.instanceGroupManagers.listEffectiveTags",
            "compute.instanceGroupManagers.listTagBindings",
            "compute.instanceGroups.get",
            "compute.instanceGroups.list",
            "compute.instanceGroups.listEffectiveTags",
            "compute.instanceGroups.listTagBindings",
            "compute.instanceSettings.get",
            "compute.instanceTemplates.get",
            "compute.instanceTemplates.getIamPolicy",
            "compute.instanceTemplates.list",
            "compute.instances.get",
            "compute.instances.getEffectiveFirewalls",
            "compute.instances.getGuestAttributes",
            "compute.instances.getIamPolicy",
            "compute.instances.getScreenshot",
            "compute.instances.getSerialPortOutput",
            "compute.instances.getShieldedInstanceIdentity",
            "compute.instances.getShieldedVmIdentity",
            "compute.instances.list",
            "compute.instances.listEffectiveTags",
            "compute.instances.listReferrers",
            "compute.instances.listTagBindings",
            "compute.instantSnapshots.get",
            "compute.instantSnapshots.getIamPolicy",
            "compute.instantSnapshots.list",
            "compute.interconnectAttachments.get",
            "compute.interconnectAttachments.list",
            "compute.interconnectAttachments.listEffectiveTags",
            "compute.interconnectAttachments.listTagBindings",
            "compute.interconnectLocations.*",
            "compute.interconnectRemoteLocations.*",
            "compute.interconnects.get",
            "compute.interconnects.list",
            "compute.interconnects.listEffectiveTags",
            "compute.interconnects.listTagBindings",
            "compute.licenseCodes.get",
            "compute.licenseCodes.getIamPolicy",
            "compute.licenseCodes.list",
            "compute.licenses.get",
            "compute.licenses.getIamPolicy",
            "compute.licenses.list",
            "compute.machineImages.get",
            "compute.machineImages.getIamPolicy",
            "compute.machineImages.list",
            "compute.machineTypes.*",
            "compute.multiMig.get",
            "compute.multiMig.list",
            "compute.networkAttachments.get",
            "compute.networkAttachments.getIamPolicy",
            "compute.networkAttachments.list",
            "compute.networkAttachments.listEffectiveTags",
            "compute.networkAttachments.listTagBindings",
            "compute.networkEdgeSecurityServices.get",
            "compute.networkEdgeSecurityServices.list",
            "compute.networkEdgeSecurityServices.listEffectiveTags",
            "compute.networkEdgeSecurityServices.listTagBindings",
            "compute.networkEndpointGroups.get",
            "compute.networkEndpointGroups.list",
            "compute.networkEndpointGroups.listEffectiveTags",
            "compute.networkEndpointGroups.listTagBindings",
            "compute.networkProfiles.*",
            "compute.networks.get",
            "compute.networks.getEffectiveFirewalls",
            "compute.networks.getRegionEffectiveFirewalls",
            "compute.networks.list",
            "compute.networks.listEffectiveTags",
            "compute.networks.listPeeringRoutes",
            "compute.networks.listTagBindings",
            "compute.nodeGroups.get",
            "compute.nodeGroups.getIamPolicy",
            "compute.nodeGroups.list",
            "compute.nodeTemplates.get",
            "compute.nodeTemplates.getIamPolicy",
            "compute.nodeTemplates.list",
            "compute.nodeTypes.*",
            "compute.organizations.listAssociations",
            "compute.packetMirrorings.get",
            "compute.packetMirrorings.list",
            "compute.packetMirrorings.listEffectiveTags",
            "compute.packetMirrorings.listTagBindings",
            "compute.projects.get",
            "compute.publicAdvertisedPrefixes.get",
            "compute.publicAdvertisedPrefixes.list",
            "compute.publicDelegatedPrefixes.get",
            "compute.publicDelegatedPrefixes.list",
            "compute.publicDelegatedPrefixes.listEffectiveTags",
            "compute.publicDelegatedPrefixes.listTagBindings",
            "compute.regionBackendServices.get",
            "compute.regionBackendServices.getIamPolicy",
            "compute.regionBackendServices.list",
            "compute.regionBackendServices.listEffectiveTags",
            "compute.regionBackendServices.listTagBindings",
            "compute.regionFirewallPolicies.get",
            "compute.regionFirewallPolicies.getIamPolicy",
            "compute.regionFirewallPolicies.list",
            "compute.regionFirewallPolicies.listEffectiveTags",
            "compute.regionFirewallPolicies.listTagBindings",
            "compute.regionHealthCheckServices.get",
            "compute.regionHealthCheckServices.list",
            "compute.regionHealthChecks.get",
            "compute.regionHealthChecks.list",
            "compute.regionHealthChecks.listEffectiveTags",
            "compute.regionHealthChecks.listTagBindings",
            "compute.regionNetworkEndpointGroups.get",
            "compute.regionNetworkEndpointGroups.list",
            "compute.regionNetworkEndpointGroups.listEffectiveTags",
            "compute.regionNetworkEndpointGroups.listTagBindings",
            "compute.regionNotificationEndpoints.get",
            "compute.regionNotificationEndpoints.list",
            "compute.regionOperations.get",
            "compute.regionOperations.getIamPolicy",
            "compute.regionOperations.list",
            "compute.regionSecurityPolicies.get",
            "compute.regionSecurityPolicies.list",
            "compute.regionSecurityPolicies.listEffectiveTags",
            "compute.regionSecurityPolicies.listTagBindings",
            "compute.regionSslCertificates.get",
            "compute.regionSslCertificates.list",
            "compute.regionSslCertificates.listEffectiveTags",
            "compute.regionSslCertificates.listTagBindings",
            "compute.regionSslPolicies.get",
            "compute.regionSslPolicies.list",
            "compute.regionSslPolicies.listAvailableFeatures",
            "compute.regionSslPolicies.listEffectiveTags",
            "compute.regionSslPolicies.listTagBindings",
            "compute.regionTargetHttpProxies.get",
            "compute.regionTargetHttpProxies.list",
            "compute.regionTargetHttpProxies.listEffectiveTags",
            "compute.regionTargetHttpProxies.listTagBindings",
            "compute.regionTargetHttpsProxies.get",
            "compute.regionTargetHttpsProxies.list",
            "compute.regionTargetHttpsProxies.listEffectiveTags",
            "compute.regionTargetHttpsProxies.listTagBindings",
            "compute.regionTargetTcpProxies.get",
            "compute.regionTargetTcpProxies.list",
            "compute.regionTargetTcpProxies.listEffectiveTags",
            "compute.regionTargetTcpProxies.listTagBindings",
            "compute.regionUrlMaps.get",
            "compute.regionUrlMaps.list",
            "compute.regionUrlMaps.listEffectiveTags",
            "compute.regionUrlMaps.listTagBindings",
            "compute.regionUrlMaps.validate",
            "compute.regions.*",
            "compute.reservationBlocks.get",
            "compute.reservationBlocks.list",
            "compute.reservations.get",
            "compute.reservations.list",
            "compute.resourcePolicies.get",
            "compute.resourcePolicies.getIamPolicy",
            "compute.resourcePolicies.list",
            "compute.routers.get",
            "compute.routers.getRoutePolicy",
            "compute.routers.list",
            "compute.routers.listBgpRoutes",
            "compute.routers.listEffectiveTags",
            "compute.routers.listRoutePolicies",
            "compute.routers.listTagBindings",
            "compute.routes.get",
            "compute.routes.list",
            "compute.routes.listEffectiveTags",
            "compute.routes.listTagBindings",
            "compute.securityPolicies.get",
            "compute.securityPolicies.list",
            "compute.securityPolicies.listEffectiveTags",
            "compute.securityPolicies.listTagBindings",
            "compute.serviceAttachments.get",
            "compute.serviceAttachments.getIamPolicy",
            "compute.serviceAttachments.list",
            "compute.serviceAttachments.listEffectiveTags",
            "compute.serviceAttachments.listTagBindings",
            "compute.snapshotSettings.get",
            "compute.snapshots.get",
            "compute.snapshots.getIamPolicy",
            "compute.snapshots.list",
            "compute.snapshots.listEffectiveTags",
            "compute.snapshots.listTagBindings",
            "compute.spotAssistants.get",
            "compute.sslCertificates.get",
            "compute.sslCertificates.list",
            "compute.sslCertificates.listEffectiveTags",
            "compute.sslCertificates.listTagBindings",
            "compute.sslPolicies.get",
            "compute.sslPolicies.list",
            "compute.sslPolicies.listAvailableFeatures",
            "compute.sslPolicies.listEffectiveTags",
            "compute.sslPolicies.listTagBindings",
            "compute.storagePools.get",
            "compute.storagePools.getIamPolicy",
            "compute.storagePools.list",
            "compute.subnetworks.get",
            "compute.subnetworks.getIamPolicy",
            "compute.subnetworks.list",
            "compute.subnetworks.listEffectiveTags",
            "compute.subnetworks.listTagBindings",
            "compute.targetGrpcProxies.get",
            "compute.targetGrpcProxies.list",
            "compute.targetGrpcProxies.listEffectiveTags",
            "compute.targetGrpcProxies.listTagBindings",
            "compute.targetHttpProxies.get",
            "compute.targetHttpProxies.list",
            "compute.targetHttpProxies.listEffectiveTags",
            "compute.targetHttpProxies.listTagBindings",
            "compute.targetHttpsProxies.get",
            "compute.targetHttpsProxies.list",
            "compute.targetHttpsProxies.listEffectiveTags",
            "compute.targetHttpsProxies.listTagBindings",
            "compute.targetInstances.get",
            "compute.targetInstances.list",
            "compute.targetInstances.listEffectiveTags",
            "compute.targetInstances.listTagBindings",
            "compute.targetPools.get",
            "compute.targetPools.list",
            "compute.targetPools.listEffectiveTags",
            "compute.targetPools.listTagBindings",
            "compute.targetSslProxies.get",
            "compute.targetSslProxies.list",
            "compute.targetSslProxies.listEffectiveTags",
            "compute.targetSslProxies.listTagBindings",
            "compute.targetTcpProxies.get",
            "compute.targetTcpProxies.list",
            "compute.targetTcpProxies.listEffectiveTags",
            "compute.targetTcpProxies.listTagBindings",
            "compute.targetVpnGateways.get",
            "compute.targetVpnGateways.list",
            "compute.targetVpnGateways.listEffectiveTags",
            "compute.targetVpnGateways.listTagBindings",
            "compute.urlMaps.get",
            "compute.urlMaps.list",
            "compute.urlMaps.listEffectiveTags",
            "compute.urlMaps.listTagBindings",
            "compute.urlMaps.validate",
            "compute.vpnGateways.get",
            "compute.vpnGateways.list",
            "compute.vpnGateways.listEffectiveTags",
            "compute.vpnGateways.listTagBindings",
            "compute.vpnTunnels.get",
            "compute.vpnTunnels.list",
            "compute.vpnTunnels.listEffectiveTags",
            "compute.vpnTunnels.listTagBindings",
            "compute.wireGroups.get",
            "compute.wireGroups.list",
            "compute.zoneOperations.get",
            "compute.zoneOperations.getIamPolicy",
            "compute.zoneOperations.list",
            "compute.zones.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "serviceusage.quotas.get",
            "serviceusage.services.get",
            "serviceusage.services.list"
          ],
          "title": "Compute Viewer"
        },
        {
          "description": "Permissions to administer shared VPC host projects, specifically enabling the host projects and associating shared VPC service projects to the host project's network.  At the organization level, this role can only be granted by an organization admin.  Google Cloud recommends that the Shared VPC Admin be the owner of the shared VPC host project. The Shared VPC Admin is responsible for granting the Compute Network User role (roles/compute.networkUser) to service owners, and the shared VPC host project owner controls the project itself. Managing the project is easier if a single principal (individual or group) can fulfill both roles.",
          "id": "roles/compute.xpnAdmin",
          "is_beta": false,
          "permissions": [
            "compute.globalOperations.get",
            "compute.globalOperations.list",
            "compute.organizations.disableXpnHost",
            "compute.organizations.disableXpnResource",
            "compute.organizations.enableXpnHost",
            "compute.organizations.enableXpnResource",
            "compute.projects.get",
            "compute.subnetworks.getIamPolicy",
            "compute.subnetworks.setIamPolicy",
            "resourcemanager.organizations.get",
            "resourcemanager.projects.get",
            "resourcemanager.projects.getIamPolicy",
            "resourcemanager.projects.list"
          ],
          "title": "Compute Shared VPC Admin"
        },
        {
          "description": "Full access to OS Config resources",
          "id": "roles/osconfig.admin",
          "is_beta": false,
          "permissions": [
            "osconfig.*"
          ],
          "title": "OS Config Admin"
        },
        {
          "description": "Full admin access to GuestPolicies",
          "id": "roles/osconfig.guestPolicyAdmin",
          "is_beta": true,
          "permissions": [
            "osconfig.guestPolicies.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "GuestPolicy Admin"
        },
        {
          "description": "Editor of GuestPolicy resources",
          "id": "roles/osconfig.guestPolicyEditor",
          "is_beta": true,
          "permissions": [
            "osconfig.guestPolicies.get",
            "osconfig.guestPolicies.list",
            "osconfig.guestPolicies.update",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "GuestPolicy Editor"
        },
        {
          "description": "Viewer of GuestPolicy resources",
          "id": "roles/osconfig.guestPolicyViewer",
          "is_beta": true,
          "permissions": [
            "osconfig.guestPolicies.get",
            "osconfig.guestPolicies.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "GuestPolicy Viewer"
        },
        {
          "description": "Viewer of OS Policies Compliance of VM instances",
          "id": "roles/osconfig.instanceOSPoliciesComplianceViewer",
          "is_beta": true,
          "permissions": [
            "osconfig.instanceOSPoliciesCompliances.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "InstanceOSPoliciesCompliance Viewer"
        },
        {
          "description": "Viewer of OS Inventories",
          "id": "roles/osconfig.inventoryViewer",
          "is_beta": false,
          "permissions": [
            "osconfig.inventories.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "OS Inventory Viewer"
        },
        {
          "description": "Full admin access to OS Policy Assignments",
          "id": "roles/osconfig.osPolicyAssignmentAdmin",
          "is_beta": false,
          "permissions": [
            "osconfig.osPolicyAssignments.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "OSPolicyAssignment Admin"
        },
        {
          "description": "Editor of OS Policy Assignments",
          "id": "roles/osconfig.osPolicyAssignmentEditor",
          "is_beta": false,
          "permissions": [
            "osconfig.osPolicyAssignments.get",
            "osconfig.osPolicyAssignments.list",
            "osconfig.osPolicyAssignments.searchPolicies",
            "osconfig.osPolicyAssignments.update",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "OSPolicyAssignment Editor"
        },
        {
          "description": "Viewer of OS policy assignment reports for VM instances",
          "id": "roles/osconfig.osPolicyAssignmentReportViewer",
          "is_beta": false,
          "permissions": [
            "osconfig.osPolicyAssignmentReports.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "OSPolicyAssignmentReport Viewer"
        },
        {
          "description": "Viewer of OS Policy Assignments",
          "id": "roles/osconfig.osPolicyAssignmentViewer",
          "is_beta": false,
          "permissions": [
            "osconfig.osPolicyAssignments.get",
            "osconfig.osPolicyAssignments.list",
            "osconfig.osPolicyAssignments.searchPolicies",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "OSPolicyAssignment Viewer"
        },
        {
          "description": "Full admin access to PatchDeployments",
          "id": "roles/osconfig.patchDeploymentAdmin",
          "is_beta": false,
          "permissions": [
            "osconfig.patchDeployments.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "PatchDeployment Admin"
        },
        {
          "description": "Viewer of PatchDeployment resources",
          "id": "roles/osconfig.patchDeploymentViewer",
          "is_beta": false,
          "permissions": [
            "osconfig.patchDeployments.get",
            "osconfig.patchDeployments.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "PatchDeployment Viewer"
        },
        {
          "description": "Access to execute Patch Jobs.",
          "id": "roles/osconfig.patchJobExecutor",
          "is_beta": false,
          "permissions": [
            "osconfig.patchJobs.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Patch Job Executor"
        },
        {
          "description": "Get and list Patch Jobs.",
          "id": "roles/osconfig.patchJobViewer",
          "is_beta": false,
          "permissions": [
            "osconfig.patchJobs.get",
            "osconfig.patchJobs.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Patch Job Viewer"
        },
        {
          "description": "Admin of PolicyOrchestrator resources",
          "id": "roles/osconfig.policyOrchestratorAdmin",
          "is_beta": true,
          "permissions": [
            "osconfig.locations.*",
            "osconfig.operations.get",
            "osconfig.policyOrchestrators.*"
          ],
          "title": "PolicyOrchestrator Admin"
        },
        {
          "description": "Viewer of PolicyOrchestrator resources",
          "id": "roles/osconfig.policyOrchestratorViewer",
          "is_beta": true,
          "permissions": [
            "osconfig.locations.*",
            "osconfig.operations.get",
            "osconfig.policyOrchestrators.get",
            "osconfig.policyOrchestrators.list"
          ],
          "title": "PolicyOrchestrator Viewer"
        },
        {
          "description": "Read/write access to project feature settings",
          "id": "roles/osconfig.projectFeatureSettingsEditor",
          "is_beta": false,
          "permissions": [
            "osconfig.projectFeatureSettings.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Project Feature Settings Editor"
        },
        {
          "description": "Read access to project feature settings",
          "id": "roles/osconfig.projectFeatureSettingsViewer",
          "is_beta": false,
          "permissions": [
            "osconfig.projectFeatureSettings.get",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Project Feature Settings Viewer"
        },
        {
          "description": "Provides read-only access to VM Manager Upgrade Reports",
          "id": "roles/osconfig.upgradeReportViewer",
          "is_beta": true,
          "permissions": [
            "osconfig.upgradeReports.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Upgrade Report Viewer"
        },
        {
          "description": "Readonly access to OS Config resources",
          "id": "roles/osconfig.viewer",
          "is_beta": false,
          "permissions": [
            "osconfig.guestPolicies.get",
            "osconfig.guestPolicies.list",
            "osconfig.instanceOSPoliciesCompliances.*",
            "osconfig.inventories.*",
            "osconfig.locations.*",
            "osconfig.operations.get",
            "osconfig.operations.list",
            "osconfig.osPolicyAssignmentReports.*",
            "osconfig.osPolicyAssignments.get",
            "osconfig.osPolicyAssignments.list",
            "osconfig.osPolicyAssignments.searchPolicies",
            "osconfig.patchDeployments.get",
            "osconfig.patchDeployments.list",
            "osconfig.patchJobs.get",
            "osconfig.patchJobs.list",
            "osconfig.policyOrchestrators.get",
            "osconfig.policyOrchestrators.list",
            "osconfig.projectFeatureSettings.get",
            "osconfig.upgradeReports.*",
            "osconfig.vulnerabilityReports.*"
          ],
          "title": "OS Config Viewer"
        },
        {
          "description": "Viewer of OS VulnerabilityReports",
          "id": "roles/osconfig.vulnerabilityReportViewer",
          "is_beta": false,
          "permissions": [
            "osconfig.vulnerabilityReports.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "OS VulnerabilityReport Viewer"
        },
        {
          "description": "Access to all Container Analysis resources.",
          "id": "roles/containeranalysis.admin",
          "is_beta": false,
          "permissions": [
            "containeranalysis.notes.attachOccurrence",
            "containeranalysis.notes.create",
            "containeranalysis.notes.delete",
            "containeranalysis.notes.get",
            "containeranalysis.notes.getIamPolicy",
            "containeranalysis.notes.list",
            "containeranalysis.notes.setIamPolicy",
            "containeranalysis.notes.update",
            "containeranalysis.occurrences.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Container Analysis Admin"
        },
        {
          "description": "Can attach Container Analysis Occurrences to Notes.",
          "id": "roles/containeranalysis.notes.attacher",
          "is_beta": false,
          "permissions": [
            "containeranalysis.notes.attachOccurrence",
            "containeranalysis.notes.get"
          ],
          "title": "Container Analysis Notes Attacher"
        },
        {
          "description": "Can edit Container Analysis Notes.",
          "id": "roles/containeranalysis.notes.editor",
          "is_beta": false,
          "permissions": [
            "containeranalysis.notes.attachOccurrence",
            "containeranalysis.notes.create",
            "containeranalysis.notes.delete",
            "containeranalysis.notes.get",
            "containeranalysis.notes.list",
            "containeranalysis.notes.update",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Container Analysis Notes Editor"
        },
        {
          "description": "Can view all Container Analysis Occurrences attached to a Note.",
          "id": "roles/containeranalysis.notes.occurrences.viewer",
          "is_beta": false,
          "permissions": [
            "containeranalysis.notes.get",
            "containeranalysis.notes.listOccurrences"
          ],
          "title": "Container Analysis Occurrences for Notes Viewer"
        },
        {
          "description": "Can view Container Analysis Notes.",
          "id": "roles/containeranalysis.notes.viewer",
          "is_beta": false,
          "permissions": [
            "containeranalysis.notes.get",
            "containeranalysis.notes.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Container Analysis Notes Viewer"
        },
        {
          "description": "Can edit Container Analysis Occurrences.",
          "id": "roles/containeranalysis.occurrences.editor",
          "is_beta": false,
          "permissions": [
            "containeranalysis.occurrences.create",
            "containeranalysis.occurrences.delete",
            "containeranalysis.occurrences.get",
            "containeranalysis.occurrences.list",
            "containeranalysis.occurrences.update",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Container Analysis Occurrences Editor"
        },
        {
          "description": "Can view Container Analysis Occurrences.",
          "id": "roles/containeranalysis.occurrences.viewer",
          "is_beta": false,
          "permissions": [
            "containeranalysis.occurrences.get",
            "containeranalysis.occurrences.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Container Analysis Occurrences Viewer"
        },
        {
          "description": "Full access to all DataCatalog resources",
          "id": "roles/datacatalog.admin",
          "is_beta": false,
          "permissions": [
            "bigquery.connections.get",
            "bigquery.connections.updateTag",
            "bigquery.datasets.get",
            "bigquery.datasets.updateTag",
            "bigquery.models.getMetadata",
            "bigquery.models.updateTag",
            "bigquery.routines.get",
            "bigquery.routines.updateTag",
            "bigquery.tables.get",
            "bigquery.tables.updateTag",
            "datacatalog.catalogs.searchAll",
            "datacatalog.categories.getIamPolicy",
            "datacatalog.categories.setIamPolicy",
            "datacatalog.entries.*",
            "datacatalog.entryGroups.*",
            "datacatalog.migrationConfig.*",
            "datacatalog.operations.list",
            "datacatalog.relationships.*",
            "datacatalog.tagTemplates.*",
            "datacatalog.taxonomies.*",
            "dataplex.projects.search",
            "pubsub.topics.get",
            "pubsub.topics.updateTag",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Data Catalog Admin"
        },
        {
          "description": "Manage taxonomies",
          "id": "roles/datacatalog.categoryAdmin",
          "is_beta": false,
          "permissions": [
            "datacatalog.categories.getIamPolicy",
            "datacatalog.categories.setIamPolicy",
            "datacatalog.taxonomies.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Policy Tag Admin"
        },
        {
          "description": "Read access to sub-resources tagged by a policy tag, for example, BigQuery columns",
          "id": "roles/datacatalog.categoryFineGrainedReader",
          "is_beta": false,
          "permissions": [
            "datacatalog.categories.fineGrainedGet"
          ],
          "title": "Fine-Grained Reader"
        },
        {
          "description": "Can update overview and data steward fields",
          "id": "roles/datacatalog.dataSteward",
          "is_beta": true,
          "permissions": [
            "datacatalog.entries.get",
            "datacatalog.entries.list",
            "datacatalog.entries.updateContacts",
            "datacatalog.entries.updateOverview",
            "datacatalog.entryGroups.get",
            "datacatalog.migrationConfig.get",
            "datacatalog.relationships.list",
            "dataplex.projects.search",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "DataCatalog Data Steward"
        },
        {
          "description": "Can create new entryGroups",
          "id": "roles/datacatalog.entryGroupCreator",
          "is_beta": false,
          "permissions": [
            "datacatalog.entryGroups.create",
            "datacatalog.entryGroups.get",
            "datacatalog.entryGroups.list",
            "dataplex.projects.search",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "DataCatalog EntryGroup Creator"
        },
        {
          "description": "Full access to entryGroups",
          "id": "roles/datacatalog.entryGroupOwner",
          "is_beta": false,
          "permissions": [
            "datacatalog.entries.*",
            "datacatalog.entryGroups.*",
            "dataplex.projects.search",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "DataCatalog EntryGroup Owner"
        },
        {
          "description": "Full access to entries",
          "id": "roles/datacatalog.entryOwner",
          "is_beta": false,
          "permissions": [
            "datacatalog.entries.*",
            "datacatalog.entryGroups.get",
            "dataplex.projects.search",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "DataCatalog Entry Owner"
        },
        {
          "description": "Read access to entries",
          "id": "roles/datacatalog.entryViewer",
          "is_beta": false,
          "permissions": [
            "datacatalog.entries.get",
            "datacatalog.entries.list",
            "datacatalog.entryGroups.get",
            "datacatalog.migrationConfig.get",
            "datacatalog.relationships.list",
            "dataplex.projects.search",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "DataCatalog Entry Viewer"
        },
        {
          "description": "Full access to glossaries",
          "id": "roles/datacatalog.glossaryOwner",
          "is_beta": true,
          "permissions": [
            "datacatalog.entries.*",
            "datacatalog.relationships.*",
            "dataplex.projects.search"
          ],
          "title": "DataCatalog Glossary Owner"
        },
        {
          "description": "Can view glossaries and associate terms to entries",
          "id": "roles/datacatalog.glossaryUser",
          "is_beta": true,
          "permissions": [
            "datacatalog.entries.get",
            "datacatalog.entries.list",
            "datacatalog.relationships.*",
            "dataplex.projects.search"
          ],
          "title": "DataCatalog Glossary User"
        },
        {
          "description": "Full access to Migration Config",
          "id": "roles/datacatalog.migrationConfigAdmin",
          "is_beta": false,
          "permissions": [
            "datacatalog.migrationConfig.*",
            "resourcemanager.organizations.get",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "DataCatalog Migration Config Admin"
        },
        {
          "description": "Can search all metadata for a project/org in DataCatalog",
          "id": "roles/datacatalog.searchAdmin",
          "is_beta": false,
          "permissions": [
            "datacatalog.catalogs.searchAll",
            "dataplex.projects.search",
            "resourcemanager.organizations.get",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "DataCatalog Search Admin"
        },
        {
          "description": "Access to modify metadata tags for entries, as well as BigQuery and Pub/Sub data assets",
          "id": "roles/datacatalog.tagEditor",
          "is_beta": false,
          "permissions": [
            "bigquery.connections.updateTag",
            "bigquery.datasets.updateTag",
            "bigquery.models.updateTag",
            "bigquery.routines.updateTag",
            "bigquery.tables.updateTag",
            "datacatalog.entries.updateTag",
            "datacatalog.entryGroups.updateTag",
            "pubsub.topics.updateTag"
          ],
          "title": "Data Catalog Tag Editor"
        },
        {
          "description": "Access to create new tag templates",
          "id": "roles/datacatalog.tagTemplateCreator",
          "is_beta": false,
          "permissions": [
            "datacatalog.tagTemplates.create",
            "datacatalog.tagTemplates.get",
            "dataplex.projects.search"
          ],
          "title": "Data Catalog TagTemplate Creator"
        },
        {
          "description": "Full access to tag templates",
          "id": "roles/datacatalog.tagTemplateOwner",
          "is_beta": false,
          "permissions": [
            "datacatalog.tagTemplates.*",
            "dataplex.projects.search",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Data Catalog TagTemplate Owner"
        },
        {
          "description": "Access to apply a tag template to an entry (to modify tags, see Data Catalog Tag Editor)",
          "id": "roles/datacatalog.tagTemplateUser",
          "is_beta": false,
          "permissions": [
            "datacatalog.tagTemplates.get",
            "datacatalog.tagTemplates.getTag",
            "datacatalog.tagTemplates.use",
            "dataplex.projects.search",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Data Catalog TagTemplate User"
        },
        {
          "description": "Read access to templates and tags created using the templates",
          "id": "roles/datacatalog.tagTemplateViewer",
          "is_beta": false,
          "permissions": [
            "datacatalog.tagTemplates.get",
            "datacatalog.tagTemplates.getTag",
            "dataplex.projects.search",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Data Catalog TagTemplate Viewer"
        },
        {
          "description": "Provides metadata read access to catalogued Google Cloud assets for BigQuery and Pub/Sub",
          "id": "roles/datacatalog.viewer",
          "is_beta": false,
          "permissions": [
            "bigquery.connections.get",
            "bigquery.datasets.get",
            "bigquery.models.getMetadata",
            "bigquery.routines.get",
            "bigquery.tables.get",
            "datacatalog.entries.get",
            "datacatalog.entries.list",
            "datacatalog.entryGroups.get",
            "datacatalog.entryGroups.list",
            "datacatalog.migrationConfig.get",
            "datacatalog.operations.list",
            "datacatalog.relationships.list",
            "datacatalog.tagTemplates.get",
            "datacatalog.tagTemplates.getTag",
            "datacatalog.taxonomies.get",
            "datacatalog.taxonomies.list",
            "dataplex.projects.search",
            "pubsub.topics.get",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Data Catalog Viewer"
        },
        {
          "description": "Full access to Data Connectors.",
          "id": "roles/dataconnectors.connectorAdmin",
          "is_beta": true,
          "permissions": [
            "dataconnectors.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Connector Admin"
        },
        {
          "description": "Access to use Data Connectors.",
          "id": "roles/dataconnectors.connectorUser",
          "is_beta": true,
          "permissions": [
            "dataconnectors.connectors.get",
            "dataconnectors.connectors.getIamPolicy",
            "dataconnectors.connectors.list",
            "dataconnectors.connectors.use"
          ],
          "title": "Connector User"
        },
        {
          "description": "Full access to all resources of Database Migration.",
          "id": "roles/datamigration.admin",
          "is_beta": false,
          "permissions": [
            "cloudaicompanion.entitlements.get",
            "datamigration.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Database Migration Admin"
        },
        {
          "description": "Administrator of Data pipelines resources",
          "id": "roles/datapipelines.admin",
          "is_beta": false,
          "permissions": [
            "datapipelines.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Data pipelines Admin"
        },
        {
          "description": "Invoker of Data pipelines jobs",
          "id": "roles/datapipelines.invoker",
          "is_beta": false,
          "permissions": [
            "datapipelines.pipelines.run",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Data pipelines Invoker"
        },
        {
          "description": "Viewer of Data pipelines resources",
          "id": "roles/datapipelines.viewer",
          "is_beta": false,
          "permissions": [
            "datapipelines.jobs.list",
            "datapipelines.pipelines.get",
            "datapipelines.pipelines.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Data pipelines Viewer"
        },
        {
          "description": "Data Studio Admin",
          "id": "roles/datastudio.admin",
          "is_beta": true,
          "permissions": [
            "datastudio.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Data Studio Admin"
        },
        {
          "description": "Content Manager of a Data Studio resource",
          "id": "roles/datastudio.contentManager",
          "is_beta": true,
          "permissions": [
            "datastudio.datasources.get",
            "datastudio.datasources.getIamPolicy",
            "datastudio.datasources.move",
            "datastudio.datasources.restoreTrash",
            "datastudio.datasources.search",
            "datastudio.datasources.settingsShare",
            "datastudio.datasources.share",
            "datastudio.datasources.trash",
            "datastudio.datasources.update",
            "datastudio.reports.get",
            "datastudio.reports.getIamPolicy",
            "datastudio.reports.move",
            "datastudio.reports.restoreTrash",
            "datastudio.reports.search",
            "datastudio.reports.settingsShare",
            "datastudio.reports.share",
            "datastudio.reports.trash",
            "datastudio.reports.update",
            "datastudio.workspaces.createUnder",
            "datastudio.workspaces.get",
            "datastudio.workspaces.getIamPolicy",
            "datastudio.workspaces.moveIn",
            "datastudio.workspaces.search",
            "resourcemanager.projects.get",
            "resourcemanager.projects.getIamPolicy"
          ],
          "title": "Data Studio Workspace Content Manager"
        },
        {
          "description": "Contributor of a Data Studio resource",
          "id": "roles/datastudio.contributor",
          "is_beta": true,
          "permissions": [
            "datastudio.datasources.get",
            "datastudio.datasources.getIamPolicy",
            "datastudio.datasources.restoreTrash",
            "datastudio.datasources.search",
            "datastudio.datasources.settingsShare",
            "datastudio.datasources.share",
            "datastudio.datasources.update",
            "datastudio.reports.get",
            "datastudio.reports.getIamPolicy",
            "datastudio.reports.restoreTrash",
            "datastudio.reports.search",
            "datastudio.reports.settingsShare",
            "datastudio.reports.share",
            "datastudio.reports.update",
            "datastudio.workspaces.createUnder",
            "datastudio.workspaces.get",
            "datastudio.workspaces.getIamPolicy",
            "datastudio.workspaces.moveIn",
            "datastudio.workspaces.search",
            "resourcemanager.projects.get",
            "resourcemanager.projects.getIamPolicy"
          ],
          "title": "Data Studio Workspace Contributor"
        },
        {
          "description": "Editor of a Data Studio resource",
          "id": "roles/datastudio.editor",
          "is_beta": true,
          "permissions": [
            "datastudio.datasources.get",
            "datastudio.datasources.getIamPolicy",
            "datastudio.datasources.search",
            "datastudio.datasources.update",
            "datastudio.reports.get",
            "datastudio.reports.getIamPolicy",
            "datastudio.reports.search",
            "datastudio.reports.update",
            "resourcemanager.projects.get",
            "resourcemanager.projects.getIamPolicy"
          ],
          "title": "Data Studio Asset Editor"
        },
        {
          "description": "Manager of a Data Studio resource",
          "id": "roles/datastudio.manager",
          "is_beta": true,
          "permissions": [
            "datastudio.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.getIamPolicy"
          ],
          "title": "Data Studio Workspace Manager"
        },
        {
          "description": "Viewer of a Data Studio resource",
          "id": "roles/datastudio.viewer",
          "is_beta": true,
          "permissions": [
            "datastudio.datasources.get",
            "datastudio.datasources.search",
            "datastudio.reports.get",
            "datastudio.reports.search",
            "resourcemanager.projects.get"
          ],
          "title": "Data Studio Asset Viewer"
        },
        {
          "description": "Viewer of a Data Studio Workspace",
          "id": "roles/datastudio.workspaceViewer",
          "is_beta": true,
          "permissions": [
            "datastudio.datasources.get",
            "datastudio.datasources.search",
            "datastudio.reports.get",
            "datastudio.reports.search",
            "datastudio.workspaces.get",
            "datastudio.workspaces.search",
            "resourcemanager.projects.get"
          ],
          "title": "Data Studio Workspace Viewer"
        },
        {
          "description": "Admin of Looker instance mapping to a Studio subscription",
          "id": "roles/lookerstudio.lookerAdmin",
          "is_beta": true,
          "permissions": [
            "datastudio.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.getIamPolicy"
          ],
          "title": "Looker Admin"
        },
        {
          "description": "Looker Studio Pro Manager",
          "id": "roles/lookerstudio.proManager",
          "is_beta": true,
          "permissions": [
            "lookerstudio.pro.manage",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "resourcemanager.projects.updateLiens"
          ],
          "title": "Looker Studio Pro Manager"
        },
        {
          "description": "Minimal role for creating and managing dataflow jobs.",
          "id": "roles/dataflow.admin",
          "is_beta": false,
          "permissions": [
            "cloudbuild.builds.create",
            "cloudbuild.builds.get",
            "cloudbuild.builds.list",
            "cloudbuild.builds.update",
            "cloudbuild.locations.*",
            "cloudbuild.operations.*",
            "compute.machineTypes.get",
            "compute.projects.get",
            "compute.regions.list",
            "compute.zones.list",
            "dataflow.jobs.*",
            "dataflow.messages.list",
            "dataflow.metrics.get",
            "dataflow.snapshots.*",
            "recommender.dataflowDiagnosticsInsights.*",
            "remotebuildexecution.blobs.get",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "storage.buckets.get",
            "storage.objects.create",
            "storage.objects.get",
            "storage.objects.list"
          ],
          "title": "Dataflow Admin"
        },
        {
          "description": "Provides the permissions necessary to execute and manipulate Dataflow jobs.",
          "id": "roles/dataflow.developer",
          "is_beta": false,
          "permissions": [
            "cloudbuild.builds.create",
            "cloudbuild.builds.get",
            "cloudbuild.builds.list",
            "cloudbuild.builds.update",
            "cloudbuild.locations.*",
            "cloudbuild.operations.*",
            "compute.projects.get",
            "compute.regions.list",
            "compute.zones.list",
            "dataflow.jobs.*",
            "dataflow.messages.list",
            "dataflow.metrics.get",
            "dataflow.snapshots.*",
            "recommender.dataflowDiagnosticsInsights.*",
            "remotebuildexecution.blobs.get",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Dataflow Developer"
        },
        {
          "description": "Provides read-only access to all Dataflow-related resources.",
          "id": "roles/dataflow.viewer",
          "is_beta": false,
          "permissions": [
            "dataflow.jobs.get",
            "dataflow.jobs.list",
            "dataflow.messages.list",
            "dataflow.metrics.get",
            "dataflow.snapshots.get",
            "dataflow.snapshots.list",
            "recommender.dataflowDiagnosticsInsights.get",
            "recommender.dataflowDiagnosticsInsights.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Dataflow Viewer"
        },
        {
          "description": "Provides the permissions necessary for a Compute Engine service account to execute work units for a Dataflow pipeline.",
          "id": "roles/dataflow.worker",
          "is_beta": false,
          "permissions": [
            "autoscaling.sites.readRecommendations",
            "autoscaling.sites.writeMetrics",
            "autoscaling.sites.writeState",
            "compute.instanceGroupManagers.update",
            "compute.instances.delete",
            "compute.instances.setDiskAutoDelete",
            "dataflow.jobs.get",
            "dataflow.shuffle.*",
            "dataflow.streamingWorkItems.*",
            "dataflow.workItems.*",
            "logging.logEntries.create",
            "logging.logEntries.route",
            "monitoring.timeSeries.create",
            "storage.buckets.get",
            "storage.objects.create",
            "storage.objects.get"
          ],
          "title": "Dataflow Worker"
        },
        {
          "description": "Full access to all Dataform resources.",
          "id": "roles/dataform.admin",
          "is_beta": false,
          "permissions": [
            "dataform.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Dataform Admin"
        },
        {
          "description": "Permissions to comment, at the repository level. Grants CRUD access over commentThread and comment resources.",
          "id": "roles/dataform.codeCommenter",
          "is_beta": true,
          "permissions": [
            "dataform.commentThreads.*",
            "dataform.comments.*"
          ],
          "title": "Code Commenter"
        },
        {
          "description": "Access only to private and shared code resources. The permissions in the Code Creator let you create and list code in Dataform, and access only the code that you created and code that was explicitly shared with you.",
          "id": "roles/dataform.codeCreator",
          "is_beta": false,
          "permissions": [
            "dataform.commentThreads.get",
            "dataform.commentThreads.list",
            "dataform.comments.get",
            "dataform.comments.list",
            "dataform.locations.*",
            "dataform.repositories.create",
            "dataform.repositories.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Code Creator"
        },
        {
          "description": "Edit access code resources.",
          "id": "roles/dataform.codeEditor",
          "is_beta": false,
          "permissions": [
            "dataform.commentThreads.*",
            "dataform.comments.*",
            "dataform.compilationResults.*",
            "dataform.locations.*",
            "dataform.repositories.commit",
            "dataform.repositories.computeAccessTokenStatus",
            "dataform.repositories.create",
            "dataform.repositories.fetchHistory",
            "dataform.repositories.fetchRemoteBranches",
            "dataform.repositories.get",
            "dataform.repositories.getIamPolicy",
            "dataform.repositories.list",
            "dataform.repositories.queryDirectoryContents",
            "dataform.repositories.readFile",
            "dataform.workspaces.commit",
            "dataform.workspaces.create",
            "dataform.workspaces.delete",
            "dataform.workspaces.fetchFileDiff",
            "dataform.workspaces.fetchFileGitStatuses",
            "dataform.workspaces.fetchGitAheadBehind",
            "dataform.workspaces.get",
            "dataform.workspaces.getIamPolicy",
            "dataform.workspaces.installNpmPackages",
            "dataform.workspaces.list",
            "dataform.workspaces.makeDirectory",
            "dataform.workspaces.moveDirectory",
            "dataform.workspaces.moveFile",
            "dataform.workspaces.pull",
            "dataform.workspaces.push",
            "dataform.workspaces.queryDirectoryContents",
            "dataform.workspaces.readFile",
            "dataform.workspaces.removeDirectory",
            "dataform.workspaces.removeFile",
            "dataform.workspaces.reset",
            "dataform.workspaces.searchFiles",
            "dataform.workspaces.writeFile",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Code Editor"
        },
        {
          "description": "Full access to code resources.",
          "id": "roles/dataform.codeOwner",
          "is_beta": false,
          "permissions": [
            "dataform.commentThreads.*",
            "dataform.comments.*",
            "dataform.compilationResults.*",
            "dataform.locations.*",
            "dataform.repositories.*",
            "dataform.workspaces.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Code Owner"
        },
        {
          "description": "Read-only access to all code resources.",
          "id": "roles/dataform.codeViewer",
          "is_beta": false,
          "permissions": [
            "dataform.compilationResults.*",
            "dataform.locations.*",
            "dataform.repositories.computeAccessTokenStatus",
            "dataform.repositories.fetchHistory",
            "dataform.repositories.fetchRemoteBranches",
            "dataform.repositories.get",
            "dataform.repositories.getIamPolicy",
            "dataform.repositories.list",
            "dataform.repositories.queryDirectoryContents",
            "dataform.repositories.readFile",
            "dataform.workspaces.fetchFileDiff",
            "dataform.workspaces.fetchFileGitStatuses",
            "dataform.workspaces.fetchGitAheadBehind",
            "dataform.workspaces.get",
            "dataform.workspaces.getIamPolicy",
            "dataform.workspaces.list",
            "dataform.workspaces.queryDirectoryContents",
            "dataform.workspaces.readFile",
            "dataform.workspaces.searchFiles",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Code Viewer"
        },
        {
          "description": "Edit access to Workspaces and Read-only access to Repositories.",
          "id": "roles/dataform.editor",
          "is_beta": false,
          "permissions": [
            "dataform.commentThreads.get",
            "dataform.commentThreads.list",
            "dataform.comments.get",
            "dataform.comments.list",
            "dataform.compilationResults.*",
            "dataform.config.get",
            "dataform.locations.*",
            "dataform.releaseConfigs.get",
            "dataform.releaseConfigs.list",
            "dataform.repositories.computeAccessTokenStatus",
            "dataform.repositories.fetchHistory",
            "dataform.repositories.fetchRemoteBranches",
            "dataform.repositories.get",
            "dataform.repositories.getIamPolicy",
            "dataform.repositories.list",
            "dataform.repositories.queryDirectoryContents",
            "dataform.repositories.readFile",
            "dataform.workflowConfigs.get",
            "dataform.workflowConfigs.list",
            "dataform.workflowInvocations.*",
            "dataform.workspaces.commit",
            "dataform.workspaces.create",
            "dataform.workspaces.delete",
            "dataform.workspaces.fetchFileDiff",
            "dataform.workspaces.fetchFileGitStatuses",
            "dataform.workspaces.fetchGitAheadBehind",
            "dataform.workspaces.get",
            "dataform.workspaces.getIamPolicy",
            "dataform.workspaces.installNpmPackages",
            "dataform.workspaces.list",
            "dataform.workspaces.makeDirectory",
            "dataform.workspaces.moveDirectory",
            "dataform.workspaces.moveFile",
            "dataform.workspaces.pull",
            "dataform.workspaces.push",
            "dataform.workspaces.queryDirectoryContents",
            "dataform.workspaces.readFile",
            "dataform.workspaces.removeDirectory",
            "dataform.workspaces.removeFile",
            "dataform.workspaces.reset",
            "dataform.workspaces.searchFiles",
            "dataform.workspaces.writeFile",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Dataform Editor"
        },
        {
          "description": "Read-only access to all Dataform resources.",
          "id": "roles/dataform.viewer",
          "is_beta": false,
          "permissions": [
            "dataform.commentThreads.get",
            "dataform.commentThreads.list",
            "dataform.comments.get",
            "dataform.comments.list",
            "dataform.compilationResults.get",
            "dataform.compilationResults.list",
            "dataform.compilationResults.query",
            "dataform.config.get",
            "dataform.locations.*",
            "dataform.releaseConfigs.get",
            "dataform.releaseConfigs.list",
            "dataform.repositories.computeAccessTokenStatus",
            "dataform.repositories.fetchHistory",
            "dataform.repositories.fetchRemoteBranches",
            "dataform.repositories.get",
            "dataform.repositories.getIamPolicy",
            "dataform.repositories.list",
            "dataform.repositories.queryDirectoryContents",
            "dataform.repositories.readFile",
            "dataform.workflowConfigs.get",
            "dataform.workflowConfigs.list",
            "dataform.workflowInvocations.get",
            "dataform.workflowInvocations.list",
            "dataform.workflowInvocations.query",
            "dataform.workspaces.fetchFileDiff",
            "dataform.workspaces.fetchFileGitStatuses",
            "dataform.workspaces.fetchGitAheadBehind",
            "dataform.workspaces.get",
            "dataform.workspaces.getIamPolicy",
            "dataform.workspaces.list",
            "dataform.workspaces.queryDirectoryContents",
            "dataform.workspaces.readFile",
            "dataform.workspaces.searchFiles",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Dataform Viewer"
        },
        {
          "description": "Use of Dataprep.",
          "id": "roles/dataprep.projects.user",
          "is_beta": true,
          "permissions": [
            "dataprep.projects.use",
            "resourcemanager.projects.get",
            "serviceusage.quotas.get",
            "serviceusage.services.get",
            "serviceusage.services.list"
          ],
          "title": "Dataprep User"
        },
        {
          "description": "Full control of Dataproc resources.",
          "id": "roles/dataproc.admin",
          "is_beta": false,
          "permissions": [
            "compute.machineTypes.*",
            "compute.networks.get",
            "compute.networks.list",
            "compute.projects.get",
            "compute.regions.*",
            "compute.zones.*",
            "dataproc.autoscalingPolicies.*",
            "dataproc.batches.*",
            "dataproc.clusters.*",
            "dataproc.jobs.*",
            "dataproc.nodeGroups.*",
            "dataproc.operations.*",
            "dataproc.sessionTemplates.*",
            "dataproc.sessions.*",
            "dataproc.workflowTemplates.*",
            "dataprocrm.nodePools.*",
            "dataprocrm.nodes.get",
            "dataprocrm.nodes.heartbeat",
            "dataprocrm.nodes.list",
            "dataprocrm.nodes.update",
            "dataprocrm.operations.get",
            "dataprocrm.operations.list",
            "dataprocrm.workloads.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Dataproc Administrator"
        },
        {
          "description": "Provides the permissions necessary for viewing the resources required to manage Dataproc, including machine types, networks, projects, and zones.",
          "id": "roles/dataproc.editor",
          "is_beta": false,
          "permissions": [
            "compute.machineTypes.*",
            "compute.networks.get",
            "compute.networks.list",
            "compute.projects.get",
            "compute.regions.*",
            "compute.zones.*",
            "dataproc.autoscalingPolicies.create",
            "dataproc.autoscalingPolicies.delete",
            "dataproc.autoscalingPolicies.get",
            "dataproc.autoscalingPolicies.list",
            "dataproc.autoscalingPolicies.update",
            "dataproc.autoscalingPolicies.use",
            "dataproc.batches.*",
            "dataproc.clusters.create",
            "dataproc.clusters.delete",
            "dataproc.clusters.get",
            "dataproc.clusters.list",
            "dataproc.clusters.start",
            "dataproc.clusters.stop",
            "dataproc.clusters.update",
            "dataproc.clusters.use",
            "dataproc.jobs.cancel",
            "dataproc.jobs.create",
            "dataproc.jobs.delete",
            "dataproc.jobs.get",
            "dataproc.jobs.list",
            "dataproc.jobs.update",
            "dataproc.nodeGroups.*",
            "dataproc.operations.cancel",
            "dataproc.operations.delete",
            "dataproc.operations.get",
            "dataproc.operations.list",
            "dataproc.sessionTemplates.*",
            "dataproc.sessions.*",
            "dataproc.workflowTemplates.create",
            "dataproc.workflowTemplates.delete",
            "dataproc.workflowTemplates.get",
            "dataproc.workflowTemplates.instantiate",
            "dataproc.workflowTemplates.instantiateInline",
            "dataproc.workflowTemplates.list",
            "dataproc.workflowTemplates.update",
            "dataprocrm.nodePools.*",
            "dataprocrm.nodes.get",
            "dataprocrm.nodes.heartbeat",
            "dataprocrm.nodes.list",
            "dataprocrm.nodes.update",
            "dataprocrm.operations.get",
            "dataprocrm.operations.list",
            "dataprocrm.workloads.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Dataproc Editor"
        },
        {
          "description": "Allows management of Dataproc resources. Intended for service accounts running Dataproc Hub instances.",
          "id": "roles/dataproc.hubAgent",
          "is_beta": false,
          "permissions": [
            "compute.instances.get",
            "compute.instances.setMetadata",
            "compute.instances.setTags",
            "compute.zoneOperations.get",
            "compute.zones.list",
            "dataproc.autoscalingPolicies.get",
            "dataproc.autoscalingPolicies.list",
            "dataproc.autoscalingPolicies.use",
            "dataproc.clusters.create",
            "dataproc.clusters.delete",
            "dataproc.clusters.get",
            "dataproc.clusters.list",
            "dataproc.clusters.update",
            "dataproc.operations.cancel",
            "dataproc.operations.delete",
            "dataproc.operations.get",
            "dataproc.operations.list",
            "iam.serviceAccounts.actAs",
            "iam.serviceAccounts.get",
            "iam.serviceAccounts.list",
            "logging.buckets.get",
            "logging.buckets.list",
            "logging.exclusions.get",
            "logging.exclusions.list",
            "logging.links.get",
            "logging.links.list",
            "logging.locations.*",
            "logging.logEntries.create",
            "logging.logEntries.list",
            "logging.logEntries.route",
            "logging.logMetrics.get",
            "logging.logMetrics.list",
            "logging.logScopes.get",
            "logging.logScopes.list",
            "logging.logServiceIndexes.list",
            "logging.logServices.list",
            "logging.logs.list",
            "logging.operations.get",
            "logging.operations.list",
            "logging.queries.getShared",
            "logging.queries.listShared",
            "logging.queries.usePrivate",
            "logging.sinks.get",
            "logging.sinks.list",
            "logging.usage.get",
            "logging.views.get",
            "logging.views.list",
            "observability.scopes.get",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "storage.buckets.get",
            "storage.objects.get",
            "storage.objects.list"
          ],
          "title": "Dataproc Hub Agent"
        },
        {
          "description": "Permissions needed to run serverless sessions and batches as a user",
          "id": "roles/dataproc.serverlessEditor",
          "is_beta": false,
          "permissions": [
            "compute.projects.get",
            "compute.regions.*",
            "compute.zones.*",
            "dataproc.batches.*",
            "dataproc.operations.cancel",
            "dataproc.operations.delete",
            "dataproc.operations.get",
            "dataproc.operations.list",
            "dataproc.sessionTemplates.*",
            "dataproc.sessions.*",
            "dataprocrm.nodePools.*",
            "dataprocrm.nodes.get",
            "dataprocrm.nodes.heartbeat",
            "dataprocrm.nodes.list",
            "dataprocrm.nodes.update",
            "dataprocrm.operations.get",
            "dataprocrm.operations.list",
            "dataprocrm.workloads.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Dataproc Serverless Editor"
        },
        {
          "description": "Node access to Dataproc Serverless sessions and batches. Intended for service accounts.",
          "id": "roles/dataproc.serverlessNode",
          "is_beta": false,
          "permissions": [
            "dataproc.batches.sparkApplicationWrite",
            "dataproc.sessions.sparkApplicationRead",
            "dataproc.sessions.sparkApplicationWrite",
            "dataprocrm.nodePools.*",
            "dataprocrm.nodes.list"
          ],
          "title": "Dataproc Serverless Node."
        },
        {
          "description": "Permissions needed to view serverless sessions and batches",
          "id": "roles/dataproc.serverlessViewer",
          "is_beta": false,
          "permissions": [
            "compute.projects.get",
            "compute.regions.*",
            "compute.zones.*",
            "dataproc.batches.get",
            "dataproc.batches.list",
            "dataproc.sessionTemplates.get",
            "dataproc.sessionTemplates.list",
            "dataproc.sessions.get",
            "dataproc.sessions.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Dataproc Serverless Viewer"
        },
        {
          "description": "Provides read-only access to Dataproc resources.",
          "id": "roles/dataproc.viewer",
          "is_beta": false,
          "permissions": [
            "compute.machineTypes.get",
            "compute.regions.*",
            "compute.zones.*",
            "dataproc.autoscalingPolicies.get",
            "dataproc.autoscalingPolicies.list",
            "dataproc.batches.analyze",
            "dataproc.batches.get",
            "dataproc.batches.list",
            "dataproc.batches.sparkApplicationRead",
            "dataproc.clusters.get",
            "dataproc.clusters.list",
            "dataproc.jobs.get",
            "dataproc.jobs.list",
            "dataproc.nodeGroups.get",
            "dataproc.operations.get",
            "dataproc.operations.list",
            "dataproc.sessionTemplates.get",
            "dataproc.sessionTemplates.list",
            "dataproc.sessions.get",
            "dataproc.sessions.list",
            "dataproc.sessions.sparkApplicationRead",
            "dataproc.workflowTemplates.get",
            "dataproc.workflowTemplates.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Dataproc Viewer"
        },
        {
          "description": "Provides worker access to Dataproc resources. Intended for service accounts.",
          "id": "roles/dataproc.worker",
          "is_beta": false,
          "permissions": [
            "cloudprofiler.profiles.create",
            "cloudprofiler.profiles.update",
            "dataproc.agents.*",
            "dataproc.batches.sparkApplicationWrite",
            "dataproc.sessions.sparkApplicationWrite",
            "dataproc.tasks.*",
            "dataprocrm.nodePools.*",
            "dataprocrm.nodes.get",
            "dataprocrm.nodes.heartbeat",
            "dataprocrm.nodes.list",
            "dataprocrm.nodes.mintOAuthToken",
            "logging.logEntries.create",
            "logging.logEntries.route",
            "monitoring.metricDescriptors.create",
            "monitoring.metricDescriptors.get",
            "monitoring.metricDescriptors.list",
            "monitoring.monitoredResourceDescriptors.*",
            "monitoring.timeSeries.create",
            "storage.buckets.get",
            "storage.folders.*",
            "storage.managedFolders.create",
            "storage.managedFolders.delete",
            "storage.managedFolders.get",
            "storage.managedFolders.list",
            "storage.multipartUploads.*",
            "storage.objects.create",
            "storage.objects.delete",
            "storage.objects.get",
            "storage.objects.getIamPolicy",
            "storage.objects.list",
            "storage.objects.overrideUnlockedRetention",
            "storage.objects.restore",
            "storage.objects.setIamPolicy",
            "storage.objects.setRetention",
            "storage.objects.update"
          ],
          "title": "Dataproc Worker"
        },
        {
          "description": "Full access to all Dataproc Metastore resources.",
          "id": "roles/metastore.admin",
          "is_beta": false,
          "permissions": [
            "metastore.backups.*",
            "metastore.federations.*",
            "metastore.imports.*",
            "metastore.locations.*",
            "metastore.migrations.*",
            "metastore.operations.*",
            "metastore.services.create",
            "metastore.services.delete",
            "metastore.services.export",
            "metastore.services.get",
            "metastore.services.getIamPolicy",
            "metastore.services.list",
            "metastore.services.restore",
            "metastore.services.setIamPolicy",
            "metastore.services.update",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Dataproc Metastore Admin"
        },
        {
          "description": "Read and write access to all Dataproc Metastore resources.",
          "id": "roles/metastore.editor",
          "is_beta": false,
          "permissions": [
            "metastore.backups.create",
            "metastore.backups.delete",
            "metastore.backups.get",
            "metastore.backups.list",
            "metastore.backups.use",
            "metastore.federations.create",
            "metastore.federations.delete",
            "metastore.federations.get",
            "metastore.federations.list",
            "metastore.federations.update",
            "metastore.imports.*",
            "metastore.locations.*",
            "metastore.migrations.*",
            "metastore.operations.*",
            "metastore.services.create",
            "metastore.services.delete",
            "metastore.services.export",
            "metastore.services.get",
            "metastore.services.getIamPolicy",
            "metastore.services.list",
            "metastore.services.restore",
            "metastore.services.update",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Dataproc Metastore Editor"
        },
        {
          "description": "Access to the Metastore Federation resource.",
          "id": "roles/metastore.federationAccessor",
          "is_beta": false,
          "permissions": [
            "metastore.federations.use"
          ],
          "title": "Metastore Federation Accessor"
        },
        {
          "description": "Access to read and modify the metadata of databases and tables under those databases.",
          "id": "roles/metastore.metadataEditor",
          "is_beta": false,
          "permissions": [
            "metastore.databases.create",
            "metastore.databases.delete",
            "metastore.databases.get",
            "metastore.databases.getIamPolicy",
            "metastore.databases.list",
            "metastore.databases.update",
            "metastore.services.get",
            "metastore.services.use",
            "metastore.tables.create",
            "metastore.tables.delete",
            "metastore.tables.get",
            "metastore.tables.getIamPolicy",
            "metastore.tables.list",
            "metastore.tables.update"
          ],
          "title": "Dataproc Metastore Metadata Editor"
        },
        {
          "description": "Access to mutate metadata from a Dataproc Metastore service's underlying metadata store.",
          "id": "roles/metastore.metadataMutateAdmin",
          "is_beta": false,
          "permissions": [
            "metastore.services.mutateMetadata"
          ],
          "title": "Dataproc Metastore Metadata Mutate Admin"
        },
        {
          "description": "Read-only access to Dataproc Metastore resources with additional metadata operations permission.",
          "id": "roles/metastore.metadataOperator",
          "is_beta": false,
          "permissions": [
            "metastore.backups.create",
            "metastore.backups.delete",
            "metastore.backups.get",
            "metastore.backups.list",
            "metastore.backups.use",
            "metastore.imports.*",
            "metastore.locations.*",
            "metastore.operations.get",
            "metastore.operations.list",
            "metastore.services.export",
            "metastore.services.get",
            "metastore.services.getIamPolicy",
            "metastore.services.list",
            "metastore.services.restore",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Dataproc Metastore Metadata Operator"
        },
        {
          "description": "Full access to the metadata of databases and tables under those databases.",
          "id": "roles/metastore.metadataOwner",
          "is_beta": false,
          "permissions": [
            "metastore.databases.*",
            "metastore.services.get",
            "metastore.services.getIamPolicy",
            "metastore.services.list",
            "metastore.services.use",
            "metastore.tables.*"
          ],
          "title": "Dataproc Metastore Data Owner"
        },
        {
          "description": "Access to query metadata from a Dataproc Metastore service's underlying metadata store.",
          "id": "roles/metastore.metadataQueryAdmin",
          "is_beta": false,
          "permissions": [
            "metastore.services.queryMetadata"
          ],
          "title": "Dataproc Metastore Metadata Query Admin"
        },
        {
          "description": "Access to the Dataproc Metastore gRPC endpoint",
          "id": "roles/metastore.metadataUser",
          "is_beta": false,
          "permissions": [
            "metastore.databases.get",
            "metastore.databases.list",
            "metastore.services.get",
            "metastore.services.use"
          ],
          "title": "Dataproc Metastore Metadata User"
        },
        {
          "description": "Access to read the metadata of databases and tables under those databases",
          "id": "roles/metastore.metadataViewer",
          "is_beta": false,
          "permissions": [
            "metastore.databases.get",
            "metastore.databases.getIamPolicy",
            "metastore.databases.list",
            "metastore.services.get",
            "metastore.services.use",
            "metastore.tables.get",
            "metastore.tables.getIamPolicy",
            "metastore.tables.list"
          ],
          "title": "Dataproc Metastore Metadata Viewer"
        },
        {
          "description": "Access to Dataproc Metastore Managed Migration resources and workflow.",
          "id": "roles/metastore.migrationAdmin",
          "is_beta": false,
          "permissions": [
            "cloudsql.instances.connect",
            "cloudsql.instances.get",
            "cloudsql.instances.login",
            "compute.autoscalers.create",
            "compute.autoscalers.delete",
            "compute.disks.create",
            "compute.disks.delete",
            "compute.forwardingRules.create",
            "compute.forwardingRules.delete",
            "compute.forwardingRules.use",
            "compute.instanceGroupManagers.create",
            "compute.instanceGroupManagers.delete",
            "compute.instanceGroupManagers.use",
            "compute.instanceGroups.delete",
            "compute.instanceGroups.use",
            "compute.instanceTemplates.create",
            "compute.instanceTemplates.delete",
            "compute.instanceTemplates.get",
            "compute.instanceTemplates.useReadOnly",
            "compute.instances.create",
            "compute.instances.delete",
            "compute.instances.get",
            "compute.instances.setMetadata",
            "compute.machineTypes.list",
            "compute.regionBackendServices.create",
            "compute.regionBackendServices.delete",
            "compute.regionBackendServices.use",
            "compute.regionHealthChecks.create",
            "compute.regionHealthChecks.delete",
            "compute.regionHealthChecks.use",
            "compute.regionHealthChecks.useReadOnly",
            "compute.serviceAttachments.create",
            "compute.serviceAttachments.delete",
            "compute.subnetworks.get",
            "compute.subnetworks.use",
            "compute.zones.list",
            "datastream.connectionProfiles.create",
            "datastream.connectionProfiles.delete",
            "datastream.objects.*",
            "datastream.operations.get",
            "datastream.privateConnections.create",
            "datastream.privateConnections.delete",
            "datastream.streams.create",
            "datastream.streams.delete",
            "datastream.streams.get",
            "datastream.streams.update"
          ],
          "title": "Dataproc Metastore Managed Migration Admin"
        },
        {
          "description": "Read-only access to all Dataproc Metastore resources.",
          "id": "roles/metastore.user",
          "is_beta": false,
          "permissions": [
            "metastore.backups.get",
            "metastore.backups.list",
            "metastore.federations.get",
            "metastore.federations.getIamPolicy",
            "metastore.federations.list",
            "metastore.imports.get",
            "metastore.imports.list",
            "metastore.locations.*",
            "metastore.operations.get",
            "metastore.operations.list",
            "metastore.services.export",
            "metastore.services.get",
            "metastore.services.getIamPolicy",
            "metastore.services.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Dataproc Metastore Viewer"
        },
        {
          "description": "Manage backup schedules in Cloud Datastore.",
          "id": "roles/datastore.backupSchedulesAdmin",
          "is_beta": false,
          "permissions": [
            "datastore.backupSchedules.*",
            "datastore.databases.getMetadata",
            "datastore.databases.list"
          ],
          "title": "Cloud Datastore Backup Schedules Admin"
        },
        {
          "description": "Read access to backup schedules in Cloud Datastore.",
          "id": "roles/datastore.backupSchedulesViewer",
          "is_beta": false,
          "permissions": [
            "datastore.backupSchedules.get",
            "datastore.backupSchedules.list"
          ],
          "title": "Cloud Datastore Backup Schedules Viewer"
        },
        {
          "description": "Read/Write access to metadata about backups in Cloud Datastore but restore is not allowed.",
          "id": "roles/datastore.backupsAdmin",
          "is_beta": false,
          "permissions": [
            "datastore.backups.delete",
            "datastore.backups.get",
            "datastore.backups.list"
          ],
          "title": "Cloud Datastore Backups Admin"
        },
        {
          "description": "Read access to metadata about backups in Cloud Datastore.",
          "id": "roles/datastore.backupsViewer",
          "is_beta": false,
          "permissions": [
            "datastore.backups.get",
            "datastore.backups.list"
          ],
          "title": "Cloud Datastore Backups Viewer"
        },
        {
          "description": "Full access to manage bulk operations.",
          "id": "roles/datastore.bulkAdmin",
          "is_beta": false,
          "permissions": [
            "datastore.databases.bulkDelete",
            "datastore.databases.getMetadata",
            "datastore.operations.cancel",
            "datastore.operations.get",
            "datastore.operations.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Cloud Datastore Bulk Admin"
        },
        {
          "description": "Provides full access to manage imports and exports.",
          "id": "roles/datastore.importExportAdmin",
          "is_beta": false,
          "permissions": [
            "appengine.applications.get",
            "datastore.databases.export",
            "datastore.databases.getMetadata",
            "datastore.databases.import",
            "datastore.operations.cancel",
            "datastore.operations.get",
            "datastore.operations.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Cloud Datastore Import Export Admin"
        },
        {
          "description": "Provides full access to manage index definitions.",
          "id": "roles/datastore.indexAdmin",
          "is_beta": false,
          "permissions": [
            "appengine.applications.get",
            "datastore.databases.getMetadata",
            "datastore.indexes.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Cloud Datastore Index Admin"
        },
        {
          "description": "Full access to Key Visualizer scans.",
          "id": "roles/datastore.keyVisualizerViewer",
          "is_beta": false,
          "permissions": [
            "datastore.databases.getMetadata",
            "datastore.keyVisualizerScans.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Cloud Datastore Key Visualizer Viewer"
        },
        {
          "description": "Provides full access to Datastore resources.",
          "id": "roles/datastore.owner",
          "is_beta": false,
          "permissions": [
            "appengine.applications.get",
            "datastore.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Cloud Datastore Owner"
        },
        {
          "description": "Restore into Cloud Datastore Databases from Cloud Datastore Backups.",
          "id": "roles/datastore.restoreAdmin",
          "is_beta": false,
          "permissions": [
            "datastore.backups.get",
            "datastore.backups.list",
            "datastore.backups.restoreDatabase",
            "datastore.databases.create",
            "datastore.databases.getMetadata",
            "datastore.databases.list",
            "datastore.operations.get",
            "datastore.operations.list"
          ],
          "title": "Cloud Datastore Restore Admin"
        },
        {
          "description": "Provides read/write access to data in a Datastore database.",
          "id": "roles/datastore.user",
          "is_beta": false,
          "permissions": [
            "appengine.applications.get",
            "datastore.databases.get",
            "datastore.databases.getMetadata",
            "datastore.databases.list",
            "datastore.entities.*",
            "datastore.indexes.list",
            "datastore.namespaces.*",
            "datastore.statistics.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Cloud Datastore User"
        },
        {
          "description": "Manage user creds in Cloud Datastore.",
          "id": "roles/datastore.userCredsAdmin",
          "is_beta": false,
          "permissions": [
            "datastore.databases.getMetadata",
            "datastore.databases.list",
            "datastore.userCreds.*"
          ],
          "title": "Cloud Datastore User Creds Admin"
        },
        {
          "description": "Read access to user creds in Cloud Datastore.",
          "id": "roles/datastore.userCredsViewer",
          "is_beta": false,
          "permissions": [
            "datastore.userCreds.get",
            "datastore.userCreds.list"
          ],
          "title": "Cloud Datastore User Creds Viewer"
        },
        {
          "description": "Provides read access to Datastore resources.",
          "id": "roles/datastore.viewer",
          "is_beta": false,
          "permissions": [
            "appengine.applications.get",
            "datastore.databases.get",
            "datastore.databases.getMetadata",
            "datastore.databases.list",
            "datastore.entities.get",
            "datastore.entities.list",
            "datastore.indexes.get",
            "datastore.indexes.list",
            "datastore.namespaces.*",
            "datastore.statistics.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Cloud Datastore Viewer"
        },
        {
          "description": "Full access to all Datastream resources.",
          "id": "roles/datastream.admin",
          "is_beta": false,
          "permissions": [
            "datastream.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Datastream Admin"
        },
        {
          "description": "Read-only access to all Datastream resources.",
          "id": "roles/datastream.viewer",
          "is_beta": false,
          "permissions": [
            "datastream.connectionProfiles.destinationTypes",
            "datastream.connectionProfiles.discover",
            "datastream.connectionProfiles.get",
            "datastream.connectionProfiles.getIamPolicy",
            "datastream.connectionProfiles.list",
            "datastream.connectionProfiles.listEffectiveTags",
            "datastream.connectionProfiles.listStaticServiceIps",
            "datastream.connectionProfiles.listTagBindings",
            "datastream.connectionProfiles.sourceTypes",
            "datastream.locations.*",
            "datastream.objects.get",
            "datastream.objects.list",
            "datastream.operations.get",
            "datastream.operations.list",
            "datastream.privateConnections.get",
            "datastream.privateConnections.getIamPolicy",
            "datastream.privateConnections.list",
            "datastream.privateConnections.listEffectiveTags",
            "datastream.privateConnections.listTagBindings",
            "datastream.routes.get",
            "datastream.routes.getIamPolicy",
            "datastream.routes.list",
            "datastream.streams.fetchErrors",
            "datastream.streams.get",
            "datastream.streams.getIamPolicy",
            "datastream.streams.list",
            "datastream.streams.listEffectiveTags",
            "datastream.streams.listTagBindings",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Datastream Viewer"
        },
        {
          "description": "Provides the permissions necessary to create and manage deployments.",
          "id": "roles/deploymentmanager.editor",
          "is_beta": false,
          "permissions": [
            "deploymentmanager.compositeTypes.*",
            "deploymentmanager.deployments.cancelPreview",
            "deploymentmanager.deployments.create",
            "deploymentmanager.deployments.delete",
            "deploymentmanager.deployments.get",
            "deploymentmanager.deployments.list",
            "deploymentmanager.deployments.stop",
            "deploymentmanager.deployments.update",
            "deploymentmanager.manifests.*",
            "deploymentmanager.operations.*",
            "deploymentmanager.resources.*",
            "deploymentmanager.typeProviders.*",
            "deploymentmanager.types.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "serviceusage.quotas.get",
            "serviceusage.services.get",
            "serviceusage.services.list"
          ],
          "title": "Deployment Manager Editor"
        },
        {
          "description": "Provides read and write access to all Type Registry resources.",
          "id": "roles/deploymentmanager.typeEditor",
          "is_beta": false,
          "permissions": [
            "deploymentmanager.compositeTypes.*",
            "deploymentmanager.operations.get",
            "deploymentmanager.typeProviders.*",
            "deploymentmanager.types.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "serviceusage.quotas.get",
            "serviceusage.services.get"
          ],
          "title": "Deployment Manager Type Editor"
        },
        {
          "description": "Provides read-only access to all Type Registry resources.",
          "id": "roles/deploymentmanager.typeViewer",
          "is_beta": false,
          "permissions": [
            "deploymentmanager.compositeTypes.get",
            "deploymentmanager.compositeTypes.list",
            "deploymentmanager.typeProviders.get",
            "deploymentmanager.typeProviders.getType",
            "deploymentmanager.typeProviders.list",
            "deploymentmanager.typeProviders.listTypes",
            "deploymentmanager.types.get",
            "deploymentmanager.types.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "serviceusage.quotas.get",
            "serviceusage.services.get"
          ],
          "title": "Deployment Manager Type Viewer"
        },
        {
          "description": "Provides read-only access to all Deployment Manager-related resources.",
          "id": "roles/deploymentmanager.viewer",
          "is_beta": false,
          "permissions": [
            "deploymentmanager.compositeTypes.get",
            "deploymentmanager.compositeTypes.list",
            "deploymentmanager.deployments.get",
            "deploymentmanager.deployments.list",
            "deploymentmanager.manifests.*",
            "deploymentmanager.operations.*",
            "deploymentmanager.resources.*",
            "deploymentmanager.typeProviders.get",
            "deploymentmanager.typeProviders.getType",
            "deploymentmanager.typeProviders.list",
            "deploymentmanager.typeProviders.listTypes",
            "deploymentmanager.types.get",
            "deploymentmanager.types.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "serviceusage.quotas.get",
            "serviceusage.services.get",
            "serviceusage.services.list"
          ],
          "title": "Deployment Manager Viewer"
        },
        {
          "description": "An admin has access to all resources and can perform all administrative actions in an AAM project.",
          "id": "roles/dialogflow.aamAdmin",
          "is_beta": false,
          "permissions": [
            "dialogflow.agents.export",
            "dialogflow.agents.get",
            "dialogflow.agents.list",
            "dialogflow.agents.search",
            "dialogflow.agents.searchResources",
            "dialogflow.answerrecords.get",
            "dialogflow.answerrecords.list",
            "dialogflow.callMatchers.list",
            "dialogflow.changelogs.*",
            "dialogflow.contexts.get",
            "dialogflow.contexts.list",
            "dialogflow.conversationDatasets.get",
            "dialogflow.conversationDatasets.list",
            "dialogflow.conversationModels.get",
            "dialogflow.conversationModels.list",
            "dialogflow.conversationProfiles.get",
            "dialogflow.conversationProfiles.list",
            "dialogflow.conversations.get",
            "dialogflow.conversations.list",
            "dialogflow.deployments.*",
            "dialogflow.documents.get",
            "dialogflow.documents.list",
            "dialogflow.encryptionspec.get",
            "dialogflow.entityTypes.get",
            "dialogflow.entityTypes.list",
            "dialogflow.environments.get",
            "dialogflow.environments.list",
            "dialogflow.examples.get",
            "dialogflow.examples.list",
            "dialogflow.experiments.get",
            "dialogflow.experiments.list",
            "dialogflow.flows.get",
            "dialogflow.flows.list",
            "dialogflow.fulfillments.get",
            "dialogflow.generators.get",
            "dialogflow.generators.list",
            "dialogflow.integrations.get",
            "dialogflow.integrations.list",
            "dialogflow.intents.get",
            "dialogflow.intents.list",
            "dialogflow.knowledgeBases.get",
            "dialogflow.knowledgeBases.list",
            "dialogflow.messages.list",
            "dialogflow.modelEvaluations.*",
            "dialogflow.operations.get",
            "dialogflow.pages.get",
            "dialogflow.pages.list",
            "dialogflow.participants.get",
            "dialogflow.participants.list",
            "dialogflow.phoneNumberOrders.get",
            "dialogflow.phoneNumberOrders.list",
            "dialogflow.phoneNumbers.list",
            "dialogflow.playbooks.get",
            "dialogflow.playbooks.list",
            "dialogflow.securitySettings.get",
            "dialogflow.securitySettings.list",
            "dialogflow.sessionEntityTypes.get",
            "dialogflow.sessionEntityTypes.list",
            "dialogflow.smartMessagingEntries.get",
            "dialogflow.smartMessagingEntries.list",
            "dialogflow.testcases.get",
            "dialogflow.testcases.list",
            "dialogflow.tools.get",
            "dialogflow.tools.list",
            "dialogflow.transitionRouteGroups.get",
            "dialogflow.transitionRouteGroups.list",
            "dialogflow.versions.get",
            "dialogflow.versions.list",
            "dialogflow.webhooks.get",
            "dialogflow.webhooks.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "CX Premium Admin"
        },
        {
          "description": "A Conversational Architect can label conversational data, approve taxonomy changes and design virtual agents for a customer's use cases.",
          "id": "roles/dialogflow.aamConversationalArchitect",
          "is_beta": false,
          "permissions": [
            "dialogflow.agents.export",
            "dialogflow.agents.get",
            "dialogflow.agents.list",
            "dialogflow.agents.search",
            "dialogflow.agents.searchResources",
            "dialogflow.answerrecords.get",
            "dialogflow.answerrecords.list",
            "dialogflow.callMatchers.list",
            "dialogflow.changelogs.*",
            "dialogflow.contexts.get",
            "dialogflow.contexts.list",
            "dialogflow.conversationDatasets.get",
            "dialogflow.conversationDatasets.list",
            "dialogflow.conversationModels.get",
            "dialogflow.conversationModels.list",
            "dialogflow.conversationProfiles.get",
            "dialogflow.conversationProfiles.list",
            "dialogflow.conversations.get",
            "dialogflow.conversations.list",
            "dialogflow.deployments.*",
            "dialogflow.documents.get",
            "dialogflow.documents.list",
            "dialogflow.encryptionspec.get",
            "dialogflow.entityTypes.get",
            "dialogflow.entityTypes.list",
            "dialogflow.environments.get",
            "dialogflow.environments.list",
            "dialogflow.examples.get",
            "dialogflow.examples.list",
            "dialogflow.experiments.get",
            "dialogflow.experiments.list",
            "dialogflow.flows.get",
            "dialogflow.flows.list",
            "dialogflow.fulfillments.get",
            "dialogflow.generators.get",
            "dialogflow.generators.list",
            "dialogflow.integrations.get",
            "dialogflow.integrations.list",
            "dialogflow.intents.get",
            "dialogflow.intents.list",
            "dialogflow.knowledgeBases.get",
            "dialogflow.knowledgeBases.list",
            "dialogflow.messages.list",
            "dialogflow.modelEvaluations.*",
            "dialogflow.operations.get",
            "dialogflow.pages.get",
            "dialogflow.pages.list",
            "dialogflow.participants.get",
            "dialogflow.participants.list",
            "dialogflow.phoneNumberOrders.get",
            "dialogflow.phoneNumberOrders.list",
            "dialogflow.phoneNumbers.list",
            "dialogflow.playbooks.get",
            "dialogflow.playbooks.list",
            "dialogflow.securitySettings.get",
            "dialogflow.securitySettings.list",
            "dialogflow.sessionEntityTypes.get",
            "dialogflow.sessionEntityTypes.list",
            "dialogflow.smartMessagingEntries.get",
            "dialogflow.smartMessagingEntries.list",
            "dialogflow.testcases.get",
            "dialogflow.testcases.list",
            "dialogflow.tools.get",
            "dialogflow.tools.list",
            "dialogflow.transitionRouteGroups.get",
            "dialogflow.transitionRouteGroups.list",
            "dialogflow.versions.get",
            "dialogflow.versions.list",
            "dialogflow.webhooks.get",
            "dialogflow.webhooks.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "CX Premium Conversational Architect"
        },
        {
          "description": "A Dialog Designer can label conversational data and propose taxonomy changes for virtual agent modeling.",
          "id": "roles/dialogflow.aamDialogDesigner",
          "is_beta": false,
          "permissions": [
            "dialogflow.agents.export",
            "dialogflow.agents.get",
            "dialogflow.agents.list",
            "dialogflow.agents.search",
            "dialogflow.agents.searchResources",
            "dialogflow.answerrecords.get",
            "dialogflow.answerrecords.list",
            "dialogflow.callMatchers.list",
            "dialogflow.changelogs.*",
            "dialogflow.contexts.get",
            "dialogflow.contexts.list",
            "dialogflow.conversationDatasets.get",
            "dialogflow.conversationDatasets.list",
            "dialogflow.conversationModels.get",
            "dialogflow.conversationModels.list",
            "dialogflow.conversationProfiles.get",
            "dialogflow.conversationProfiles.list",
            "dialogflow.conversations.get",
            "dialogflow.conversations.list",
            "dialogflow.deployments.*",
            "dialogflow.documents.get",
            "dialogflow.documents.list",
            "dialogflow.encryptionspec.get",
            "dialogflow.entityTypes.get",
            "dialogflow.entityTypes.list",
            "dialogflow.environments.get",
            "dialogflow.environments.list",
            "dialogflow.examples.get",
            "dialogflow.examples.list",
            "dialogflow.experiments.get",
            "dialogflow.experiments.list",
            "dialogflow.flows.get",
            "dialogflow.flows.list",
            "dialogflow.fulfillments.get",
            "dialogflow.generators.get",
            "dialogflow.generators.list",
            "dialogflow.integrations.get",
            "dialogflow.integrations.list",
            "dialogflow.intents.get",
            "dialogflow.intents.list",
            "dialogflow.knowledgeBases.get",
            "dialogflow.knowledgeBases.list",
            "dialogflow.messages.list",
            "dialogflow.modelEvaluations.*",
            "dialogflow.operations.get",
            "dialogflow.pages.get",
            "dialogflow.pages.list",
            "dialogflow.participants.get",
            "dialogflow.participants.list",
            "dialogflow.phoneNumberOrders.get",
            "dialogflow.phoneNumberOrders.list",
            "dialogflow.phoneNumbers.list",
            "dialogflow.playbooks.get",
            "dialogflow.playbooks.list",
            "dialogflow.securitySettings.get",
            "dialogflow.securitySettings.list",
            "dialogflow.sessionEntityTypes.get",
            "dialogflow.sessionEntityTypes.list",
            "dialogflow.smartMessagingEntries.get",
            "dialogflow.smartMessagingEntries.list",
            "dialogflow.testcases.get",
            "dialogflow.testcases.list",
            "dialogflow.tools.get",
            "dialogflow.tools.list",
            "dialogflow.transitionRouteGroups.get",
            "dialogflow.transitionRouteGroups.list",
            "dialogflow.versions.get",
            "dialogflow.versions.list",
            "dialogflow.webhooks.get",
            "dialogflow.webhooks.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "CX Premium Dialog Designer"
        },
        {
          "description": "A Dialog Designer Lead can label conversational data and approve taxonomy changes for virtual agent modeling.",
          "id": "roles/dialogflow.aamLeadDialogDesigner",
          "is_beta": false,
          "permissions": [
            "dialogflow.agents.export",
            "dialogflow.agents.get",
            "dialogflow.agents.list",
            "dialogflow.agents.search",
            "dialogflow.agents.searchResources",
            "dialogflow.answerrecords.get",
            "dialogflow.answerrecords.list",
            "dialogflow.callMatchers.list",
            "dialogflow.changelogs.*",
            "dialogflow.contexts.get",
            "dialogflow.contexts.list",
            "dialogflow.conversationDatasets.get",
            "dialogflow.conversationDatasets.list",
            "dialogflow.conversationModels.get",
            "dialogflow.conversationModels.list",
            "dialogflow.conversationProfiles.get",
            "dialogflow.conversationProfiles.list",
            "dialogflow.conversations.get",
            "dialogflow.conversations.list",
            "dialogflow.deployments.*",
            "dialogflow.documents.get",
            "dialogflow.documents.list",
            "dialogflow.encryptionspec.get",
            "dialogflow.entityTypes.get",
            "dialogflow.entityTypes.list",
            "dialogflow.environments.get",
            "dialogflow.environments.list",
            "dialogflow.examples.get",
            "dialogflow.examples.list",
            "dialogflow.experiments.get",
            "dialogflow.experiments.list",
            "dialogflow.flows.get",
            "dialogflow.flows.list",
            "dialogflow.fulfillments.get",
            "dialogflow.generators.get",
            "dialogflow.generators.list",
            "dialogflow.integrations.get",
            "dialogflow.integrations.list",
            "dialogflow.intents.get",
            "dialogflow.intents.list",
            "dialogflow.knowledgeBases.get",
            "dialogflow.knowledgeBases.list",
            "dialogflow.messages.list",
            "dialogflow.modelEvaluations.*",
            "dialogflow.operations.get",
            "dialogflow.pages.get",
            "dialogflow.pages.list",
            "dialogflow.participants.get",
            "dialogflow.participants.list",
            "dialogflow.phoneNumberOrders.get",
            "dialogflow.phoneNumberOrders.list",
            "dialogflow.phoneNumbers.list",
            "dialogflow.playbooks.get",
            "dialogflow.playbooks.list",
            "dialogflow.securitySettings.get",
            "dialogflow.securitySettings.list",
            "dialogflow.sessionEntityTypes.get",
            "dialogflow.sessionEntityTypes.list",
            "dialogflow.smartMessagingEntries.get",
            "dialogflow.smartMessagingEntries.list",
            "dialogflow.testcases.get",
            "dialogflow.testcases.list",
            "dialogflow.tools.get",
            "dialogflow.tools.list",
            "dialogflow.transitionRouteGroups.get",
            "dialogflow.transitionRouteGroups.list",
            "dialogflow.versions.get",
            "dialogflow.versions.list",
            "dialogflow.webhooks.get",
            "dialogflow.webhooks.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "CX Premium Lead Dialog Designer"
        },
        {
          "description": "A user can view the taxonomy and data reports in an AAM project.",
          "id": "roles/dialogflow.aamViewer",
          "is_beta": false,
          "permissions": [
            "dialogflow.agents.export",
            "dialogflow.agents.get",
            "dialogflow.agents.list",
            "dialogflow.agents.search",
            "dialogflow.agents.searchResources",
            "dialogflow.answerrecords.get",
            "dialogflow.answerrecords.list",
            "dialogflow.callMatchers.list",
            "dialogflow.changelogs.*",
            "dialogflow.contexts.get",
            "dialogflow.contexts.list",
            "dialogflow.conversationDatasets.get",
            "dialogflow.conversationDatasets.list",
            "dialogflow.conversationModels.get",
            "dialogflow.conversationModels.list",
            "dialogflow.conversationProfiles.get",
            "dialogflow.conversationProfiles.list",
            "dialogflow.conversations.get",
            "dialogflow.conversations.list",
            "dialogflow.deployments.*",
            "dialogflow.documents.get",
            "dialogflow.documents.list",
            "dialogflow.encryptionspec.get",
            "dialogflow.entityTypes.get",
            "dialogflow.entityTypes.list",
            "dialogflow.environments.get",
            "dialogflow.environments.list",
            "dialogflow.examples.get",
            "dialogflow.examples.list",
            "dialogflow.experiments.get",
            "dialogflow.experiments.list",
            "dialogflow.flows.get",
            "dialogflow.flows.list",
            "dialogflow.fulfillments.get",
            "dialogflow.generators.get",
            "dialogflow.generators.list",
            "dialogflow.integrations.get",
            "dialogflow.integrations.list",
            "dialogflow.intents.get",
            "dialogflow.intents.list",
            "dialogflow.knowledgeBases.get",
            "dialogflow.knowledgeBases.list",
            "dialogflow.messages.list",
            "dialogflow.modelEvaluations.*",
            "dialogflow.operations.get",
            "dialogflow.pages.get",
            "dialogflow.pages.list",
            "dialogflow.participants.get",
            "dialogflow.participants.list",
            "dialogflow.phoneNumberOrders.get",
            "dialogflow.phoneNumberOrders.list",
            "dialogflow.phoneNumbers.list",
            "dialogflow.playbooks.get",
            "dialogflow.playbooks.list",
            "dialogflow.securitySettings.get",
            "dialogflow.securitySettings.list",
            "dialogflow.sessionEntityTypes.get",
            "dialogflow.sessionEntityTypes.list",
            "dialogflow.smartMessagingEntries.get",
            "dialogflow.smartMessagingEntries.list",
            "dialogflow.testcases.get",
            "dialogflow.testcases.list",
            "dialogflow.tools.get",
            "dialogflow.tools.list",
            "dialogflow.transitionRouteGroups.get",
            "dialogflow.transitionRouteGroups.list",
            "dialogflow.versions.get",
            "dialogflow.versions.list",
            "dialogflow.webhooks.get",
            "dialogflow.webhooks.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "CX Premium Viewer"
        },
        {
          "description": "Grant to Dialogflow API admins that need full access to Dialogflow-specific resources. Also see Dialogflow access control.",
          "id": "roles/dialogflow.admin",
          "is_beta": false,
          "permissions": [
            "dialogflow.*",
            "resourcemanager.projects.get"
          ],
          "title": "Dialogflow API Admin"
        },
        {
          "description": "Can create and handle live conversations using Agent Assist features.",
          "id": "roles/dialogflow.agentAssistClient",
          "is_beta": false,
          "permissions": [
            "dialogflow.answerrecords.*",
            "dialogflow.conversationModels.get",
            "dialogflow.conversationModels.list",
            "dialogflow.conversationProfiles.get",
            "dialogflow.conversationProfiles.list",
            "dialogflow.conversations.*",
            "dialogflow.documents.get",
            "dialogflow.documents.list",
            "dialogflow.generators.get",
            "dialogflow.knowledgeBases.get",
            "dialogflow.knowledgeBases.list",
            "dialogflow.messages.list",
            "dialogflow.participants.*",
            "dialogflow.sessions.detectIntent"
          ],
          "title": "Dialogflow Agent Assist Client"
        },
        {
          "description": "Grant to Dialogflow API clients that perform Dialogflow-specific edits and detect intent calls using the API. Also see Dialogflow access control.",
          "id": "roles/dialogflow.client",
          "is_beta": false,
          "permissions": [
            "dialogflow.contexts.*",
            "dialogflow.conversations.*",
            "dialogflow.environments.runContinuousTest",
            "dialogflow.messages.list",
            "dialogflow.participants.*",
            "dialogflow.sessionEntityTypes.*",
            "dialogflow.sessions.*"
          ],
          "title": "Dialogflow API Client"
        },
        {
          "description": "Grant to Dialogflow Console editors that edit existing agents. Also see Dialogflow access control.",
          "id": "roles/dialogflow.consoleAgentEditor",
          "is_beta": false,
          "permissions": [
            "actions.agentVersions.create",
            "dialogflow.*",
            "resourcemanager.projects.get"
          ],
          "title": "Dialogflow Console Agent Editor"
        },
        {
          "description": "Can perform query of dialogflow suggestions in the simulator in web console.",
          "id": "roles/dialogflow.consoleSimulatorUser",
          "is_beta": false,
          "permissions": [
            "dialogflow.conversationModels.get",
            "dialogflow.conversationModels.list",
            "dialogflow.conversationProfiles.get",
            "dialogflow.conversationProfiles.list",
            "dialogflow.conversations.*",
            "dialogflow.documents.get",
            "dialogflow.documents.list",
            "dialogflow.knowledgeBases.get",
            "dialogflow.knowledgeBases.list",
            "dialogflow.participants.*",
            "dialogflow.sessions.detectIntent",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Dialogflow Console Simulator User"
        },
        {
          "description": "Can edit allowlist for smart messaging associated with conversation model in the agent assist console",
          "id": "roles/dialogflow.consoleSmartMessagingAllowlistEditor",
          "is_beta": false,
          "permissions": [
            "dialogflow.conversationDatasets.get",
            "dialogflow.conversationDatasets.list",
            "dialogflow.conversationModels.get",
            "dialogflow.conversationModels.list",
            "dialogflow.conversationProfiles.list",
            "dialogflow.documents.get",
            "dialogflow.documents.list",
            "dialogflow.operations.get",
            "dialogflow.smartMessagingEntries.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Dialogflow Console Smart Messaging Allowlist Editor"
        },
        {
          "description": "Can manage all the resources related to Dialogflow Conversations.",
          "id": "roles/dialogflow.conversationManager",
          "is_beta": false,
          "permissions": [
            "dialogflow.conversationProfiles.*",
            "dialogflow.conversations.*",
            "dialogflow.participants.*"
          ],
          "title": "Dialogflow Conversation Manager"
        },
        {
          "description": "Can read & write entity types.",
          "id": "roles/dialogflow.entityTypeAdmin",
          "is_beta": false,
          "permissions": [
            "dialogflow.entityTypes.*"
          ],
          "title": "Dialogflow Entity Type Admin"
        },
        {
          "description": "Can read & update environment and its sub-resources.",
          "id": "roles/dialogflow.environmentEditor",
          "is_beta": false,
          "permissions": [
            "dialogflow.deployments.*",
            "dialogflow.environments.get",
            "dialogflow.environments.getHistory",
            "dialogflow.environments.list",
            "dialogflow.environments.lookupHistory",
            "dialogflow.environments.runContinuousTest",
            "dialogflow.environments.update",
            "dialogflow.experiments.*"
          ],
          "title": "Dialogflow Environment editor"
        },
        {
          "description": "Can read & update flow and its sub-resources.",
          "id": "roles/dialogflow.flowEditor",
          "is_beta": false,
          "permissions": [
            "dialogflow.flows.get",
            "dialogflow.flows.list",
            "dialogflow.flows.train",
            "dialogflow.flows.update",
            "dialogflow.flows.validate",
            "dialogflow.pages.*",
            "dialogflow.transitionRouteGroups.*",
            "dialogflow.versions.*"
          ],
          "title": "Dialogflow Flow editor"
        },
        {
          "description": "Can add, remove, enable and disable Dialogflow integrations.",
          "id": "roles/dialogflow.integrationManager",
          "is_beta": false,
          "permissions": [
            "dialogflow.integrations.*"
          ],
          "title": "Dialogflow Integration Manager"
        },
        {
          "description": "Can read & write intents.",
          "id": "roles/dialogflow.intentAdmin",
          "is_beta": false,
          "permissions": [
            "dialogflow.intents.*"
          ],
          "title": "Dialogflow Intent Admin"
        },
        {
          "description": "Grant to Dialogflow API clients that perform Dialogflow-specific read-only calls using the API. Also see Dialogflow access control.",
          "id": "roles/dialogflow.reader",
          "is_beta": false,
          "permissions": [
            "dialogflow.agents.export",
            "dialogflow.agents.get",
            "dialogflow.agents.list",
            "dialogflow.agents.search",
            "dialogflow.agents.searchResources",
            "dialogflow.answerrecords.get",
            "dialogflow.answerrecords.list",
            "dialogflow.callMatchers.list",
            "dialogflow.changelogs.*",
            "dialogflow.contexts.get",
            "dialogflow.contexts.list",
            "dialogflow.conversationDatasets.get",
            "dialogflow.conversationDatasets.list",
            "dialogflow.conversationModels.get",
            "dialogflow.conversationModels.list",
            "dialogflow.conversationProfiles.get",
            "dialogflow.conversationProfiles.list",
            "dialogflow.conversations.get",
            "dialogflow.conversations.list",
            "dialogflow.deployments.*",
            "dialogflow.documents.get",
            "dialogflow.documents.list",
            "dialogflow.encryptionspec.get",
            "dialogflow.entityTypes.get",
            "dialogflow.entityTypes.list",
            "dialogflow.environments.get",
            "dialogflow.environments.list",
            "dialogflow.examples.get",
            "dialogflow.examples.list",
            "dialogflow.experiments.get",
            "dialogflow.experiments.list",
            "dialogflow.flows.get",
            "dialogflow.flows.list",
            "dialogflow.fulfillments.get",
            "dialogflow.generators.get",
            "dialogflow.generators.list",
            "dialogflow.integrations.get",
            "dialogflow.integrations.list",
            "dialogflow.intents.get",
            "dialogflow.intents.list",
            "dialogflow.knowledgeBases.get",
            "dialogflow.knowledgeBases.list",
            "dialogflow.messages.list",
            "dialogflow.modelEvaluations.*",
            "dialogflow.operations.get",
            "dialogflow.pages.get",
            "dialogflow.pages.list",
            "dialogflow.participants.get",
            "dialogflow.participants.list",
            "dialogflow.phoneNumberOrders.get",
            "dialogflow.phoneNumberOrders.list",
            "dialogflow.phoneNumbers.list",
            "dialogflow.playbooks.get",
            "dialogflow.playbooks.list",
            "dialogflow.securitySettings.get",
            "dialogflow.securitySettings.list",
            "dialogflow.sessionEntityTypes.get",
            "dialogflow.sessionEntityTypes.list",
            "dialogflow.smartMessagingEntries.get",
            "dialogflow.smartMessagingEntries.list",
            "dialogflow.testcases.get",
            "dialogflow.testcases.list",
            "dialogflow.tools.get",
            "dialogflow.tools.list",
            "dialogflow.transitionRouteGroups.get",
            "dialogflow.transitionRouteGroups.list",
            "dialogflow.versions.get",
            "dialogflow.versions.list",
            "dialogflow.webhooks.get",
            "dialogflow.webhooks.list",
            "resourcemanager.projects.get"
          ],
          "title": "Dialogflow API Reader"
        },
        {
          "description": "Can read & write test cases.",
          "id": "roles/dialogflow.testCaseAdmin",
          "is_beta": false,
          "permissions": [
            "dialogflow.testcases.*"
          ],
          "title": "Dialogflow Test Case Admin"
        },
        {
          "description": "Can read & write webhooks.",
          "id": "roles/dialogflow.webhookAdmin",
          "is_beta": false,
          "permissions": [
            "dialogflow.webhooks.*"
          ],
          "title": "Dialogflow Webhook Admin"
        },
        {
          "description": "Provides read-write access to all Cloud DNS resources.",
          "id": "roles/dns.admin",
          "is_beta": false,
          "permissions": [
            "compute.networks.get",
            "compute.networks.list",
            "dns.changes.*",
            "dns.dnsKeys.*",
            "dns.gkeClusters.*",
            "dns.managedZoneOperations.*",
            "dns.managedZones.create",
            "dns.managedZones.delete",
            "dns.managedZones.get",
            "dns.managedZones.getIamPolicy",
            "dns.managedZones.list",
            "dns.managedZones.update",
            "dns.networks.*",
            "dns.policies.*",
            "dns.projects.get",
            "dns.resourceRecordSets.*",
            "dns.responsePolicies.*",
            "dns.responsePolicyRules.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "DNS Administrator"
        },
        {
          "description": "Access to target networks with DNS peering zones",
          "id": "roles/dns.peer",
          "is_beta": false,
          "permissions": [
            "dns.networks.targetWithPeeringZone"
          ],
          "title": "DNS Peer"
        },
        {
          "description": "Provides read-only access to all Cloud DNS resources.",
          "id": "roles/dns.reader",
          "is_beta": false,
          "permissions": [
            "compute.networks.get",
            "dns.changes.get",
            "dns.changes.list",
            "dns.dnsKeys.*",
            "dns.managedZoneOperations.*",
            "dns.managedZones.get",
            "dns.managedZones.list",
            "dns.policies.get",
            "dns.policies.list",
            "dns.projects.get",
            "dns.resourceRecordSets.get",
            "dns.resourceRecordSets.list",
            "dns.responsePolicies.get",
            "dns.responsePolicies.list",
            "dns.responsePolicyRules.get",
            "dns.responsePolicyRules.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "DNS Reader"
        },
        {
          "description": "Grants full access to all resources in Document AI",
          "id": "roles/documentai.admin",
          "is_beta": true,
          "permissions": [
            "documentai.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Document AI Administrator"
        },
        {
          "description": "Grants access to process documents in Document AI",
          "id": "roles/documentai.apiUser",
          "is_beta": true,
          "permissions": [
            "documentai.humanReviewConfigs.review",
            "documentai.operations.getLegacy",
            "documentai.processorVersions.processBatch",
            "documentai.processorVersions.processOnline",
            "documentai.processors.processBatch",
            "documentai.processors.processOnline"
          ],
          "title": "Document AI API User"
        },
        {
          "description": "Grants access to use all resources in Document AI",
          "id": "roles/documentai.editor",
          "is_beta": true,
          "permissions": [
            "documentai.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Document AI Editor"
        },
        {
          "description": "Grants access to view all resources and process documents in Document AI",
          "id": "roles/documentai.viewer",
          "is_beta": true,
          "permissions": [
            "documentai.dataLabelingJobs.list",
            "documentai.datasetSchemas.get",
            "documentai.datasets.get",
            "documentai.datasets.getDocuments",
            "documentai.datasets.listDocuments",
            "documentai.evaluationDocuments.get",
            "documentai.evaluations.get",
            "documentai.evaluations.list",
            "documentai.humanReviewConfigs.get",
            "documentai.humanReviewConfigs.review",
            "documentai.labelerPools.get",
            "documentai.labelerPools.list",
            "documentai.locations.*",
            "documentai.operations.getLegacy",
            "documentai.processedDocumentsSets.*",
            "documentai.processorTypes.*",
            "documentai.processorVersions.get",
            "documentai.processorVersions.list",
            "documentai.processorVersions.processBatch",
            "documentai.processorVersions.processOnline",
            "documentai.processors.fetchHumanReviewDetails",
            "documentai.processors.get",
            "documentai.processors.list",
            "documentai.processors.processBatch",
            "documentai.processors.processOnline",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Document AI Viewer"
        },
        {
          "description": "Full access to all Earth Engine resource features",
          "id": "roles/earthengine.admin",
          "is_beta": true,
          "permissions": [
            "earthengine.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Earth Engine Resource Admin"
        },
        {
          "description": "Publisher of Earth Engine Apps",
          "id": "roles/earthengine.appsPublisher",
          "is_beta": true,
          "permissions": [
            "iam.serviceAccounts.create",
            "iam.serviceAccounts.disable",
            "iam.serviceAccounts.enable",
            "iam.serviceAccounts.get",
            "iam.serviceAccounts.getIamPolicy",
            "iam.serviceAccounts.setIamPolicy",
            "resourcemanager.projects.get",
            "serviceusage.services.get"
          ],
          "title": "Earth Engine Apps Publisher"
        },
        {
          "description": "Viewer of all Earth Engine resources",
          "id": "roles/earthengine.viewer",
          "is_beta": true,
          "permissions": [
            "earthengine.assets.get",
            "earthengine.assets.getIamPolicy",
            "earthengine.assets.list",
            "earthengine.computations.create",
            "earthengine.config.get",
            "earthengine.filmstripthumbnails.get",
            "earthengine.maps.get",
            "earthengine.operations.get",
            "earthengine.operations.list",
            "earthengine.tables.get",
            "earthengine.thumbnails.get",
            "earthengine.videothumbnails.get",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Earth Engine Resource Viewer"
        },
        {
          "description": "Writer of all Earth Engine resources",
          "id": "roles/earthengine.writer",
          "is_beta": true,
          "permissions": [
            "earthengine.assets.create",
            "earthengine.assets.delete",
            "earthengine.assets.get",
            "earthengine.assets.getIamPolicy",
            "earthengine.assets.list",
            "earthengine.assets.update",
            "earthengine.computations.create",
            "earthengine.config.*",
            "earthengine.exports.create",
            "earthengine.featureviews.create",
            "earthengine.filmstripthumbnails.*",
            "earthengine.imports.create",
            "earthengine.maps.*",
            "earthengine.operations.*",
            "earthengine.tables.*",
            "earthengine.thumbnails.*",
            "earthengine.videothumbnails.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Earth Engine Resource Writer"
        },
        {
          "description": "Full access to Edge Container all resources.",
          "id": "roles/edgecontainer.admin",
          "is_beta": false,
          "permissions": [
            "edgecontainer.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Edge Container Admin"
        },
        {
          "description": "Access to use Edge Container Machine resources.",
          "id": "roles/edgecontainer.machineUser",
          "is_beta": false,
          "permissions": [
            "edgecontainer.machines.get",
            "edgecontainer.machines.getIamPolicy",
            "edgecontainer.machines.list",
            "edgecontainer.machines.use",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Edge Container Machine User"
        },
        {
          "description": "Access to get Edge Container cluster offline credentials",
          "id": "roles/edgecontainer.offlineCredentialUser",
          "is_beta": false,
          "permissions": [
            "edgecontainer.clusters.generateOfflineCredential",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Edge Container Cluster offline Credential User"
        },
        {
          "description": "Read-only access to Edge Container all resources.",
          "id": "roles/edgecontainer.viewer",
          "is_beta": false,
          "permissions": [
            "edgecontainer.clusters.generateAccessToken",
            "edgecontainer.clusters.get",
            "edgecontainer.clusters.getIamPolicy",
            "edgecontainer.clusters.list",
            "edgecontainer.locations.*",
            "edgecontainer.machines.get",
            "edgecontainer.machines.getIamPolicy",
            "edgecontainer.machines.list",
            "edgecontainer.nodePools.get",
            "edgecontainer.nodePools.getIamPolicy",
            "edgecontainer.nodePools.list",
            "edgecontainer.operations.get",
            "edgecontainer.operations.list",
            "edgecontainer.serverconfig.get",
            "edgecontainer.vpnConnections.get",
            "edgecontainer.vpnConnections.getIamPolicy",
            "edgecontainer.vpnConnections.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Edge Container Viewer"
        },
        {
          "description": "Full access to Edge Network all resources.",
          "id": "roles/edgenetwork.admin",
          "is_beta": false,
          "permissions": [
            "edgenetwork.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Edge Network Admin"
        },
        {
          "description": "Read-only access to Edge Network all resources.",
          "id": "roles/edgenetwork.viewer",
          "is_beta": false,
          "permissions": [
            "edgenetwork.interconnectAttachments.get",
            "edgenetwork.interconnectAttachments.getIamPolicy",
            "edgenetwork.interconnectAttachments.list",
            "edgenetwork.interconnects.get",
            "edgenetwork.interconnects.getDiagnostics",
            "edgenetwork.interconnects.getIamPolicy",
            "edgenetwork.interconnects.list",
            "edgenetwork.locations.*",
            "edgenetwork.networks.get",
            "edgenetwork.networks.getIamPolicy",
            "edgenetwork.networks.getStatus",
            "edgenetwork.networks.list",
            "edgenetwork.operations.get",
            "edgenetwork.operations.list",
            "edgenetwork.routers.get",
            "edgenetwork.routers.getIamPolicy",
            "edgenetwork.routers.getRouterStatus",
            "edgenetwork.routers.list",
            "edgenetwork.routes.get",
            "edgenetwork.routes.list",
            "edgenetwork.subnetworks.get",
            "edgenetwork.subnetworks.getIamPolicy",
            "edgenetwork.subnetworks.getStatus",
            "edgenetwork.subnetworks.list",
            "edgenetwork.zones.get",
            "edgenetwork.zones.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Edge Network Viewer"
        },
        {
          "description": "Administrator of Enterprise Knowledge Graph resources",
          "id": "roles/enterpriseknowledgegraph.admin",
          "is_beta": true,
          "permissions": [
            "enterpriseknowledgegraph.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Enterprise Knowledge Graph Admin"
        },
        {
          "description": "Editor of Enterprise Knowledge Graph resources",
          "id": "roles/enterpriseknowledgegraph.editor",
          "is_beta": true,
          "permissions": [
            "enterpriseknowledgegraph.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Enterprise Knowledge Graph Editor"
        },
        {
          "description": "Viewer of Enterprise Knowledge Graph resources",
          "id": "roles/enterpriseknowledgegraph.viewer",
          "is_beta": true,
          "permissions": [
            "enterpriseknowledgegraph.cloudKnowledgeGraphEntities.*",
            "enterpriseknowledgegraph.entityReconciliationJobs.get",
            "enterpriseknowledgegraph.entityReconciliationJobs.list",
            "enterpriseknowledgegraph.publicKnowledgeGraphEntities.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Enterprise Knowledge Graph Viewer"
        },
        {
          "description": "Provides full access to Error Reporting data.",
          "id": "roles/errorreporting.admin",
          "is_beta": true,
          "permissions": [
            "cloudnotifications.activities.list",
            "errorreporting.*",
            "logging.notificationRules.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "stackdriver.projects.get"
          ],
          "title": "Error Reporting Admin"
        },
        {
          "description": "Provides the permissions to read and write Error Reporting data, except for sending new error events.",
          "id": "roles/errorreporting.user",
          "is_beta": true,
          "permissions": [
            "cloudnotifications.activities.list",
            "errorreporting.applications.list",
            "errorreporting.errorEvents.delete",
            "errorreporting.errorEvents.list",
            "errorreporting.groupMetadata.*",
            "errorreporting.groups.list",
            "logging.notificationRules.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "stackdriver.projects.get"
          ],
          "title": "Error Reporting User"
        },
        {
          "description": "Provides read-only access to Error Reporting data.",
          "id": "roles/errorreporting.viewer",
          "is_beta": true,
          "permissions": [
            "cloudnotifications.activities.list",
            "errorreporting.applications.list",
            "errorreporting.errorEvents.list",
            "errorreporting.groupMetadata.get",
            "errorreporting.groups.list",
            "logging.notificationRules.get",
            "logging.notificationRules.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "stackdriver.projects.get"
          ],
          "title": "Error Reporting Viewer"
        },
        {
          "description": "Provides the permissions to send error events to Error Reporting.",
          "id": "roles/errorreporting.writer",
          "is_beta": true,
          "permissions": [
            "errorreporting.errorEvents.create"
          ],
          "title": "Error Reporting Writer"
        },
        {
          "description": "Full control over all Eventarc resources.",
          "id": "roles/eventarc.admin",
          "is_beta": false,
          "permissions": [
            "eventarc.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Eventarc Admin"
        },
        {
          "description": "Can publish events to Eventarc channel connections.",
          "id": "roles/eventarc.connectionPublisher",
          "is_beta": true,
          "permissions": [
            "eventarc.channelConnections.get",
            "eventarc.channelConnections.list",
            "eventarc.channelConnections.publish",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Eventarc Connection Publisher"
        },
        {
          "description": "Access to read and write Eventarc resources.",
          "id": "roles/eventarc.developer",
          "is_beta": false,
          "permissions": [
            "eventarc.channelConnections.create",
            "eventarc.channelConnections.delete",
            "eventarc.channelConnections.get",
            "eventarc.channelConnections.getIamPolicy",
            "eventarc.channelConnections.list",
            "eventarc.channelConnections.publish",
            "eventarc.channels.attach",
            "eventarc.channels.create",
            "eventarc.channels.delete",
            "eventarc.channels.get",
            "eventarc.channels.getIamPolicy",
            "eventarc.channels.list",
            "eventarc.channels.publish",
            "eventarc.channels.undelete",
            "eventarc.channels.update",
            "eventarc.enrollments.create",
            "eventarc.enrollments.delete",
            "eventarc.enrollments.get",
            "eventarc.enrollments.getIamPolicy",
            "eventarc.enrollments.list",
            "eventarc.enrollments.update",
            "eventarc.googleApiSources.create",
            "eventarc.googleApiSources.delete",
            "eventarc.googleApiSources.get",
            "eventarc.googleApiSources.getIamPolicy",
            "eventarc.googleApiSources.list",
            "eventarc.googleApiSources.update",
            "eventarc.googleChannelConfigs.*",
            "eventarc.kafkaSources.create",
            "eventarc.kafkaSources.delete",
            "eventarc.kafkaSources.get",
            "eventarc.kafkaSources.getIamPolicy",
            "eventarc.kafkaSources.list",
            "eventarc.locations.*",
            "eventarc.operations.*",
            "eventarc.pipelines.create",
            "eventarc.pipelines.delete",
            "eventarc.pipelines.get",
            "eventarc.pipelines.getIamPolicy",
            "eventarc.pipelines.list",
            "eventarc.pipelines.update",
            "eventarc.providers.*",
            "eventarc.triggers.create",
            "eventarc.triggers.delete",
            "eventarc.triggers.get",
            "eventarc.triggers.getIamPolicy",
            "eventarc.triggers.list",
            "eventarc.triggers.undelete",
            "eventarc.triggers.update",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Eventarc Developer"
        },
        {
          "description": "Can receive events from all event providers.",
          "id": "roles/eventarc.eventReceiver",
          "is_beta": false,
          "permissions": [
            "eventarc.events.*"
          ],
          "title": "Eventarc Event Receiver"
        },
        {
          "description": "Full control over Message Buses resources.",
          "id": "roles/eventarc.messageBusAdmin",
          "is_beta": true,
          "permissions": [
            "eventarc.messageBuses.create",
            "eventarc.messageBuses.delete",
            "eventarc.messageBuses.get",
            "eventarc.messageBuses.getIamPolicy",
            "eventarc.messageBuses.list",
            "eventarc.messageBuses.publish",
            "eventarc.messageBuses.update",
            "eventarc.messageBuses.use"
          ],
          "title": "Eventarc Message Bus Admin"
        },
        {
          "description": "Access to publish to or bind to a Message Bus.",
          "id": "roles/eventarc.messageBusUser",
          "is_beta": true,
          "permissions": [
            "eventarc.messageBuses.get",
            "eventarc.messageBuses.list",
            "eventarc.messageBuses.publish",
            "eventarc.messageBuses.use"
          ],
          "title": "Eventarc Message Bus User"
        },
        {
          "description": "Can publish events to Eventarc channels.",
          "id": "roles/eventarc.publisher",
          "is_beta": true,
          "permissions": [
            "eventarc.channels.get",
            "eventarc.channels.list",
            "eventarc.channels.publish",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Eventarc Publisher"
        },
        {
          "description": "Can view the state of all Eventarc resources, including IAM policies.",
          "id": "roles/eventarc.viewer",
          "is_beta": false,
          "permissions": [
            "eventarc.channelConnections.get",
            "eventarc.channelConnections.getIamPolicy",
            "eventarc.channelConnections.list",
            "eventarc.channels.get",
            "eventarc.channels.getIamPolicy",
            "eventarc.channels.list",
            "eventarc.enrollments.get",
            "eventarc.enrollments.getIamPolicy",
            "eventarc.enrollments.list",
            "eventarc.googleApiSources.get",
            "eventarc.googleApiSources.getIamPolicy",
            "eventarc.googleApiSources.list",
            "eventarc.googleChannelConfigs.get",
            "eventarc.kafkaSources.get",
            "eventarc.kafkaSources.getIamPolicy",
            "eventarc.kafkaSources.list",
            "eventarc.locations.*",
            "eventarc.messageBuses.get",
            "eventarc.messageBuses.getIamPolicy",
            "eventarc.messageBuses.list",
            "eventarc.messageBuses.use",
            "eventarc.operations.get",
            "eventarc.operations.list",
            "eventarc.pipelines.get",
            "eventarc.pipelines.getIamPolicy",
            "eventarc.pipelines.list",
            "eventarc.providers.*",
            "eventarc.triggers.get",
            "eventarc.triggers.getIamPolicy",
            "eventarc.triggers.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Eventarc Viewer"
        },
        {
          "description": "Full access to Firebase products.",
          "id": "roles/firebase.admin",
          "is_beta": false,
          "permissions": [
            "apikeys.keys.get",
            "apikeys.keys.getKeyString",
            "apikeys.keys.list",
            "apikeys.keys.lookup",
            "appengine.applications.get",
            "artifactregistry.attachments.get",
            "artifactregistry.attachments.list",
            "artifactregistry.dockerimages.*",
            "artifactregistry.files.download",
            "artifactregistry.files.get",
            "artifactregistry.files.list",
            "artifactregistry.locations.*",
            "artifactregistry.mavenartifacts.*",
            "artifactregistry.npmpackages.*",
            "artifactregistry.packages.get",
            "artifactregistry.packages.list",
            "artifactregistry.projectsettings.get",
            "artifactregistry.pythonpackages.*",
            "artifactregistry.repositories.downloadArtifacts",
            "artifactregistry.repositories.get",
            "artifactregistry.repositories.list",
            "artifactregistry.repositories.listEffectiveTags",
            "artifactregistry.repositories.listTagBindings",
            "artifactregistry.repositories.readViaVirtualRepository",
            "artifactregistry.rules.get",
            "artifactregistry.rules.list",
            "artifactregistry.tags.get",
            "artifactregistry.tags.list",
            "artifactregistry.versions.get",
            "artifactregistry.versions.list",
            "automl.*",
            "clientauthconfig.brands.get",
            "clientauthconfig.brands.list",
            "clientauthconfig.brands.update",
            "clientauthconfig.clients.create",
            "clientauthconfig.clients.delete",
            "clientauthconfig.clients.get",
            "clientauthconfig.clients.list",
            "clientauthconfig.clients.update",
            "cloudasset.assets.searchAllResources",
            "cloudbuild.builds.get",
            "cloudbuild.builds.list",
            "cloudbuild.locations.*",
            "cloudbuild.operations.*",
            "cloudconfig.*",
            "cloudfunctions.*",
            "cloudkms.keyHandles.*",
            "cloudkms.operations.get",
            "cloudkms.projects.showEffectiveAutokeyConfig",
            "cloudmessaging.messages.create",
            "cloudnotifications.activities.list",
            "cloudtestservice.environmentcatalog.get",
            "cloudtestservice.matrices.*",
            "cloudtoolresults.*",
            "datastore.*",
            "errorreporting.groups.list",
            "eventarc.*",
            "fcmdata.deliverydata.list",
            "firebase.*",
            "firebaseabt.*",
            "firebaseanalytics.*",
            "firebaseappcheck.*",
            "firebaseappdistro.*",
            "firebaseauth.*",
            "firebasecrash.*",
            "firebasecrashlytics.*",
            "firebasedatabase.*",
            "firebasedataconnect.*",
            "firebasedynamiclinks.*",
            "firebaseextensions.*",
            "firebaseextensionspublisher.*",
            "firebasehosting.*",
            "firebaseinappmessaging.*",
            "firebasemessagingcampaigns.*",
            "firebaseml.*",
            "firebasenotifications.*",
            "firebaseperformance.*",
            "firebaserules.*",
            "firebasestorage.*",
            "logging.logEntries.list",
            "monitoring.timeSeries.list",
            "oauthconfig.verification.get",
            "orgpolicy.policy.get",
            "recommender.cloudFunctionsPerformanceInsights.*",
            "recommender.cloudFunctionsPerformanceRecommendations.*",
            "recommender.iamPolicyInsights.*",
            "recommender.iamPolicyRecommendations.*",
            "recommender.locations.*",
            "recommender.runServiceCostInsights.*",
            "recommender.runServiceCostRecommendations.*",
            "recommender.runServiceIdentityInsights.*",
            "recommender.runServiceIdentityRecommendations.*",
            "recommender.runServicePerformanceInsights.*",
            "recommender.runServicePerformanceRecommendations.*",
            "recommender.runServiceSecurityInsights.*",
            "recommender.runServiceSecurityRecommendations.*",
            "recommender.storageBucketSoftDeleteInsights.*",
            "recommender.storageBucketSoftDeleteRecommendations.*",
            "remotebuildexecution.blobs.get",
            "resourcemanager.hierarchyNodes.listEffectiveTags",
            "resourcemanager.projects.get",
            "resourcemanager.projects.getIamPolicy",
            "resourcemanager.projects.list",
            "run.*",
            "runtimeconfig.configs.create",
            "runtimeconfig.configs.delete",
            "runtimeconfig.configs.get",
            "runtimeconfig.configs.list",
            "runtimeconfig.configs.update",
            "runtimeconfig.operations.*",
            "runtimeconfig.variables.create",
            "runtimeconfig.variables.delete",
            "runtimeconfig.variables.get",
            "runtimeconfig.variables.list",
            "runtimeconfig.variables.update",
            "runtimeconfig.variables.watch",
            "runtimeconfig.waiters.create",
            "runtimeconfig.waiters.delete",
            "runtimeconfig.waiters.get",
            "runtimeconfig.waiters.list",
            "runtimeconfig.waiters.update",
            "serviceusage.quotas.get",
            "serviceusage.services.get",
            "serviceusage.services.list",
            "storage.anywhereCaches.*",
            "storage.bucketOperations.*",
            "storage.buckets.*",
            "storage.folders.*",
            "storage.intelligenceConfigs.*",
            "storage.managedFolders.*",
            "storage.multipartUploads.*",
            "storage.objects.*"
          ],
          "title": "Firebase Admin"
        },
        {
          "description": "Full access to Google Analytics for Firebase.",
          "id": "roles/firebase.analyticsAdmin",
          "is_beta": false,
          "permissions": [
            "cloudnotifications.activities.list",
            "firebase.billingPlans.get",
            "firebase.clients.get",
            "firebase.clients.list",
            "firebase.links.list",
            "firebase.playLinks.get",
            "firebase.playLinks.list",
            "firebase.projects.get",
            "firebaseanalytics.*",
            "firebaseextensions.configs.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.getIamPolicy",
            "resourcemanager.projects.list"
          ],
          "title": "Firebase Analytics Admin"
        },
        {
          "description": "Read access to Google Analytics for Firebase.",
          "id": "roles/firebase.analyticsViewer",
          "is_beta": false,
          "permissions": [
            "cloudnotifications.activities.list",
            "firebase.billingPlans.get",
            "firebase.clients.get",
            "firebase.clients.list",
            "firebase.links.list",
            "firebase.playLinks.get",
            "firebase.playLinks.list",
            "firebase.projects.get",
            "firebaseanalytics.resources.googleAnalyticsReadAndAnalyze",
            "firebaseextensions.configs.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.getIamPolicy",
            "resourcemanager.projects.list"
          ],
          "title": "Firebase Analytics Viewer"
        },
        {
          "description": "Full access to Firebase Develop products and Analytics.",
          "id": "roles/firebase.developAdmin",
          "is_beta": false,
          "permissions": [
            "apikeys.keys.get",
            "apikeys.keys.getKeyString",
            "apikeys.keys.list",
            "apikeys.keys.lookup",
            "appengine.applications.get",
            "artifactregistry.attachments.get",
            "artifactregistry.attachments.list",
            "artifactregistry.dockerimages.*",
            "artifactregistry.files.download",
            "artifactregistry.files.get",
            "artifactregistry.files.list",
            "artifactregistry.locations.*",
            "artifactregistry.mavenartifacts.*",
            "artifactregistry.npmpackages.*",
            "artifactregistry.packages.get",
            "artifactregistry.packages.list",
            "artifactregistry.projectsettings.get",
            "artifactregistry.pythonpackages.*",
            "artifactregistry.repositories.downloadArtifacts",
            "artifactregistry.repositories.get",
            "artifactregistry.repositories.list",
            "artifactregistry.repositories.listEffectiveTags",
            "artifactregistry.repositories.listTagBindings",
            "artifactregistry.repositories.readViaVirtualRepository",
            "artifactregistry.rules.get",
            "artifactregistry.rules.list",
            "artifactregistry.tags.get",
            "artifactregistry.tags.list",
            "artifactregistry.versions.get",
            "artifactregistry.versions.list",
            "automl.*",
            "clientauthconfig.brands.get",
            "clientauthconfig.brands.list",
            "clientauthconfig.brands.update",
            "clientauthconfig.clients.get",
            "clientauthconfig.clients.list",
            "cloudasset.assets.searchAllResources",
            "cloudbuild.builds.get",
            "cloudbuild.builds.list",
            "cloudbuild.locations.*",
            "cloudbuild.operations.*",
            "cloudfunctions.*",
            "cloudkms.keyHandles.*",
            "cloudkms.operations.get",
            "cloudkms.projects.showEffectiveAutokeyConfig",
            "cloudnotifications.activities.list",
            "datastore.*",
            "errorreporting.groups.list",
            "eventarc.*",
            "firebase.billingPlans.get",
            "firebase.clients.get",
            "firebase.clients.list",
            "firebase.links.list",
            "firebase.playLinks.get",
            "firebase.playLinks.list",
            "firebase.projects.get",
            "firebaseanalytics.*",
            "firebaseappcheck.*",
            "firebaseauth.*",
            "firebasedatabase.*",
            "firebasedataconnect.*",
            "firebaseextensions.configs.list",
            "firebasehosting.*",
            "firebaseml.*",
            "firebaserules.*",
            "firebasestorage.*",
            "logging.logEntries.list",
            "monitoring.timeSeries.list",
            "oauthconfig.verification.get",
            "orgpolicy.policy.get",
            "recommender.cloudFunctionsPerformanceInsights.*",
            "recommender.cloudFunctionsPerformanceRecommendations.*",
            "recommender.iamPolicyInsights.*",
            "recommender.iamPolicyRecommendations.*",
            "recommender.locations.*",
            "recommender.runServiceCostInsights.*",
            "recommender.runServiceCostRecommendations.*",
            "recommender.runServiceIdentityInsights.*",
            "recommender.runServiceIdentityRecommendations.*",
            "recommender.runServicePerformanceInsights.*",
            "recommender.runServicePerformanceRecommendations.*",
            "recommender.runServiceSecurityInsights.*",
            "recommender.runServiceSecurityRecommendations.*",
            "recommender.storageBucketSoftDeleteInsights.*",
            "recommender.storageBucketSoftDeleteRecommendations.*",
            "remotebuildexecution.blobs.get",
            "resourcemanager.hierarchyNodes.listEffectiveTags",
            "resourcemanager.projects.get",
            "resourcemanager.projects.getIamPolicy",
            "resourcemanager.projects.list",
            "run.*",
            "runtimeconfig.configs.create",
            "runtimeconfig.configs.delete",
            "runtimeconfig.configs.get",
            "runtimeconfig.configs.list",
            "runtimeconfig.configs.update",
            "runtimeconfig.operations.*",
            "runtimeconfig.variables.create",
            "runtimeconfig.variables.delete",
            "runtimeconfig.variables.get",
            "runtimeconfig.variables.list",
            "runtimeconfig.variables.update",
            "runtimeconfig.variables.watch",
            "runtimeconfig.waiters.create",
            "runtimeconfig.waiters.delete",
            "runtimeconfig.waiters.get",
            "runtimeconfig.waiters.list",
            "runtimeconfig.waiters.update",
            "serviceusage.quotas.get",
            "serviceusage.services.get",
            "serviceusage.services.list",
            "storage.anywhereCaches.*",
            "storage.bucketOperations.*",
            "storage.buckets.*",
            "storage.folders.*",
            "storage.intelligenceConfigs.*",
            "storage.managedFolders.*",
            "storage.multipartUploads.*",
            "storage.objects.*"
          ],
          "title": "Firebase Develop Admin"
        },
        {
          "description": "Read access to Firebase Develop products and Analytics.",
          "id": "roles/firebase.developViewer",
          "is_beta": false,
          "permissions": [
            "apikeys.keys.get",
            "apikeys.keys.list",
            "automl.annotationSpecs.get",
            "automl.annotationSpecs.list",
            "automl.annotations.list",
            "automl.columnSpecs.get",
            "automl.columnSpecs.list",
            "automl.datasets.get",
            "automl.datasets.list",
            "automl.examples.get",
            "automl.examples.list",
            "automl.files.list",
            "automl.humanAnnotationTasks.get",
            "automl.humanAnnotationTasks.list",
            "automl.locations.get",
            "automl.locations.list",
            "automl.modelEvaluations.get",
            "automl.modelEvaluations.list",
            "automl.models.get",
            "automl.models.list",
            "automl.operations.get",
            "automl.operations.list",
            "automl.tableSpecs.get",
            "automl.tableSpecs.list",
            "clientauthconfig.brands.get",
            "clientauthconfig.brands.list",
            "cloudasset.assets.searchAllResources",
            "cloudbuild.builds.get",
            "cloudbuild.builds.list",
            "cloudbuild.locations.*",
            "cloudbuild.operations.*",
            "cloudfunctions.functions.get",
            "cloudfunctions.functions.getIamPolicy",
            "cloudfunctions.functions.list",
            "cloudfunctions.locations.list",
            "cloudfunctions.operations.*",
            "cloudnotifications.activities.list",
            "datastore.backups.get",
            "datastore.backups.list",
            "datastore.databases.get",
            "datastore.databases.getMetadata",
            "datastore.databases.list",
            "datastore.entities.get",
            "datastore.entities.list",
            "datastore.indexes.get",
            "datastore.indexes.list",
            "datastore.namespaces.*",
            "datastore.statistics.*",
            "errorreporting.groups.list",
            "eventarc.channelConnections.get",
            "eventarc.channelConnections.getIamPolicy",
            "eventarc.channelConnections.list",
            "eventarc.channels.get",
            "eventarc.channels.getIamPolicy",
            "eventarc.channels.list",
            "eventarc.enrollments.get",
            "eventarc.enrollments.getIamPolicy",
            "eventarc.enrollments.list",
            "eventarc.googleApiSources.get",
            "eventarc.googleApiSources.getIamPolicy",
            "eventarc.googleApiSources.list",
            "eventarc.googleChannelConfigs.get",
            "eventarc.kafkaSources.get",
            "eventarc.kafkaSources.getIamPolicy",
            "eventarc.kafkaSources.list",
            "eventarc.locations.*",
            "eventarc.messageBuses.get",
            "eventarc.messageBuses.getIamPolicy",
            "eventarc.messageBuses.list",
            "eventarc.messageBuses.use",
            "eventarc.operations.get",
            "eventarc.operations.list",
            "eventarc.pipelines.get",
            "eventarc.pipelines.getIamPolicy",
            "eventarc.pipelines.list",
            "eventarc.providers.*",
            "eventarc.triggers.get",
            "eventarc.triggers.getIamPolicy",
            "eventarc.triggers.list",
            "firebase.billingPlans.get",
            "firebase.clients.get",
            "firebase.clients.list",
            "firebase.links.list",
            "firebase.playLinks.get",
            "firebase.playLinks.list",
            "firebase.projects.get",
            "firebaseanalytics.resources.googleAnalyticsReadAndAnalyze",
            "firebaseappcheck.appAttestConfig.get",
            "firebaseappcheck.debugTokens.get",
            "firebaseappcheck.deviceCheckConfig.get",
            "firebaseappcheck.playIntegrityConfig.get",
            "firebaseappcheck.recaptchaEnterpriseConfig.get",
            "firebaseappcheck.recaptchaV3Config.get",
            "firebaseappcheck.resourcePolicies.get",
            "firebaseappcheck.safetyNetConfig.get",
            "firebaseappcheck.services.get",
            "firebaseauth.configs.get",
            "firebaseauth.users.get",
            "firebasedatabase.instances.get",
            "firebasedatabase.instances.list",
            "firebasedataconnect.connectorRevisions.get",
            "firebasedataconnect.connectorRevisions.list",
            "firebasedataconnect.connectors.get",
            "firebasedataconnect.connectors.list",
            "firebasedataconnect.locations.*",
            "firebasedataconnect.operations.get",
            "firebasedataconnect.operations.list",
            "firebasedataconnect.schemaRevisions.get",
            "firebasedataconnect.schemaRevisions.list",
            "firebasedataconnect.schemas.get",
            "firebasedataconnect.schemas.list",
            "firebasedataconnect.services.get",
            "firebasedataconnect.services.list",
            "firebaseextensions.configs.list",
            "firebasehosting.sites.get",
            "firebasehosting.sites.list",
            "firebaseml.models.get",
            "firebaseml.models.list",
            "firebaseml.modelversions.get",
            "firebaseml.modelversions.list",
            "firebaserules.releases.get",
            "firebaserules.releases.list",
            "firebaserules.rulesets.get",
            "firebaserules.rulesets.list",
            "firebasestorage.buckets.get",
            "firebasestorage.buckets.list",
            "firebasestorage.defaultBucket.get",
            "logging.logEntries.list",
            "monitoring.timeSeries.list",
            "oauthconfig.verification.get",
            "recommender.cloudFunctionsPerformanceInsights.get",
            "recommender.cloudFunctionsPerformanceInsights.list",
            "recommender.cloudFunctionsPerformanceRecommendations.get",
            "recommender.cloudFunctionsPerformanceRecommendations.list",
            "recommender.locations.*",
            "recommender.runServiceCostInsights.get",
            "recommender.runServiceCostInsights.list",
            "recommender.runServiceCostRecommendations.get",
            "recommender.runServiceCostRecommendations.list",
            "recommender.runServiceIdentityInsights.get",
            "recommender.runServiceIdentityInsights.list",
            "recommender.runServiceIdentityRecommendations.get",
            "recommender.runServiceIdentityRecommendations.list",
            "recommender.runServicePerformanceInsights.get",
            "recommender.runServicePerformanceInsights.list",
            "recommender.runServicePerformanceRecommendations.get",
            "recommender.runServicePerformanceRecommendations.list",
            "recommender.runServiceSecurityInsights.get",
            "recommender.runServiceSecurityInsights.list",
            "recommender.runServiceSecurityRecommendations.get",
            "recommender.runServiceSecurityRecommendations.list",
            "remotebuildexecution.blobs.get",
            "resourcemanager.projects.get",
            "resourcemanager.projects.getIamPolicy",
            "resourcemanager.projects.list",
            "run.configurations.*",
            "run.executions.get",
            "run.executions.list",
            "run.jobs.get",
            "run.jobs.getIamPolicy",
            "run.jobs.list",
            "run.jobs.listEffectiveTags",
            "run.jobs.listTagBindings",
            "run.locations.list",
            "run.operations.get",
            "run.operations.list",
            "run.revisions.get",
            "run.revisions.list",
            "run.routes.get",
            "run.routes.list",
            "run.services.get",
            "run.services.getIamPolicy",
            "run.services.list",
            "run.services.listEffectiveTags",
            "run.services.listTagBindings",
            "run.tasks.*",
            "serviceusage.quotas.get",
            "serviceusage.services.get",
            "serviceusage.services.list",
            "storage.buckets.get",
            "storage.buckets.getIamPolicy",
            "storage.buckets.list",
            "storage.objects.get",
            "storage.objects.getIamPolicy",
            "storage.objects.list"
          ],
          "title": "Firebase Develop Viewer"
        },
        {
          "description": "Full access to Firebase Grow products and Analytics.",
          "id": "roles/firebase.growthAdmin",
          "is_beta": false,
          "permissions": [
            "apikeys.keys.get",
            "apikeys.keys.list",
            "clientauthconfig.clients.get",
            "clientauthconfig.clients.list",
            "cloudconfig.*",
            "cloudmessaging.messages.create",
            "cloudnotifications.activities.list",
            "fcmdata.deliverydata.list",
            "firebase.billingPlans.get",
            "firebase.clients.get",
            "firebase.clients.list",
            "firebase.links.list",
            "firebase.playLinks.get",
            "firebase.playLinks.list",
            "firebase.projects.get",
            "firebaseabt.*",
            "firebaseanalytics.*",
            "firebasedynamiclinks.*",
            "firebaseextensions.configs.list",
            "firebaseinappmessaging.*",
            "firebasemessagingcampaigns.*",
            "firebasenotifications.*",
            "monitoring.timeSeries.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.getIamPolicy",
            "resourcemanager.projects.list",
            "serviceusage.quotas.get",
            "serviceusage.services.get",
            "serviceusage.services.list"
          ],
          "title": "Firebase Grow Admin"
        },
        {
          "description": "Read access to Firebase Grow products and Analytics.",
          "id": "roles/firebase.growthViewer",
          "is_beta": false,
          "permissions": [
            "apikeys.keys.get",
            "apikeys.keys.list",
            "cloudconfig.configs.get",
            "cloudnotifications.activities.list",
            "fcmdata.deliverydata.list",
            "firebase.billingPlans.get",
            "firebase.clients.get",
            "firebase.clients.list",
            "firebase.links.list",
            "firebase.playLinks.get",
            "firebase.playLinks.list",
            "firebase.projects.get",
            "firebaseabt.experimentresults.get",
            "firebaseabt.experiments.get",
            "firebaseabt.experiments.list",
            "firebaseabt.projectmetadata.get",
            "firebaseanalytics.resources.googleAnalyticsReadAndAnalyze",
            "firebasedynamiclinks.destinations.list",
            "firebasedynamiclinks.domains.get",
            "firebasedynamiclinks.domains.list",
            "firebasedynamiclinks.links.get",
            "firebasedynamiclinks.links.list",
            "firebasedynamiclinks.stats.get",
            "firebaseextensions.configs.list",
            "firebaseinappmessaging.campaigns.get",
            "firebaseinappmessaging.campaigns.list",
            "firebasemessagingcampaigns.campaigns.get",
            "firebasemessagingcampaigns.campaigns.list",
            "firebasenotifications.messages.get",
            "firebasenotifications.messages.list",
            "monitoring.timeSeries.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.getIamPolicy",
            "resourcemanager.projects.list",
            "serviceusage.quotas.get",
            "serviceusage.services.get",
            "serviceusage.services.list"
          ],
          "title": "Firebase Grow Viewer"
        },
        {
          "description": "Full access to Firebase Quality products and Analytics.",
          "id": "roles/firebase.qualityAdmin",
          "is_beta": false,
          "permissions": [
            "apikeys.keys.get",
            "apikeys.keys.list",
            "cloudnotifications.activities.list",
            "firebase.billingPlans.get",
            "firebase.clients.get",
            "firebase.clients.list",
            "firebase.links.list",
            "firebase.playLinks.get",
            "firebase.playLinks.list",
            "firebase.projects.get",
            "firebaseanalytics.*",
            "firebaseappdistro.*",
            "firebasecrash.*",
            "firebasecrashlytics.*",
            "firebaseextensions.configs.list",
            "firebaseperformance.*",
            "monitoring.timeSeries.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.getIamPolicy",
            "resourcemanager.projects.list",
            "serviceusage.quotas.get",
            "serviceusage.services.get",
            "serviceusage.services.list"
          ],
          "title": "Firebase Quality Admin"
        },
        {
          "description": "Read access to Firebase Quality products and Analytics.",
          "id": "roles/firebase.qualityViewer",
          "is_beta": false,
          "permissions": [
            "apikeys.keys.get",
            "apikeys.keys.list",
            "cloudnotifications.activities.list",
            "firebase.billingPlans.get",
            "firebase.clients.get",
            "firebase.clients.list",
            "firebase.links.list",
            "firebase.playLinks.get",
            "firebase.playLinks.list",
            "firebase.projects.get",
            "firebaseanalytics.resources.googleAnalyticsReadAndAnalyze",
            "firebaseappdistro.groups.list",
            "firebaseappdistro.releases.list",
            "firebaseappdistro.testers.list",
            "firebasecrash.reports.get",
            "firebasecrashlytics.config.get",
            "firebasecrashlytics.data.get",
            "firebasecrashlytics.issues.get",
            "firebasecrashlytics.issues.list",
            "firebasecrashlytics.sessions.get",
            "firebaseextensions.configs.list",
            "firebaseperformance.data.get",
            "monitoring.timeSeries.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.getIamPolicy",
            "resourcemanager.projects.list",
            "serviceusage.quotas.get",
            "serviceusage.services.get",
            "serviceusage.services.list"
          ],
          "title": "Firebase Quality Viewer"
        },
        {
          "description": "Read and write access to Firebase products available in the Admin SDK",
          "id": "roles/firebase.sdkAdminServiceAgent",
          "is_beta": false,
          "permissions": [
            "appengine.applications.get",
            "cloudconfig.*",
            "cloudmessaging.messages.create",
            "datastore.databases.get",
            "datastore.databases.getMetadata",
            "datastore.databases.list",
            "datastore.entities.*",
            "datastore.indexes.get",
            "datastore.indexes.list",
            "datastore.namespaces.*",
            "datastore.statistics.*",
            "firebase.clients.*",
            "firebase.projects.get",
            "firebase.projects.update",
            "firebaseappcheck.*",
            "firebaseauth.configs.create",
            "firebaseauth.configs.get",
            "firebaseauth.configs.getSecret",
            "firebaseauth.configs.update",
            "firebaseauth.users.*",
            "firebasedatabase.*",
            "firebasedataconnect.*",
            "firebasehosting.*",
            "firebaseml.*",
            "firebasenotifications.*",
            "firebaserules.releases.get",
            "firebaserules.releases.list",
            "firebaserules.releases.update",
            "firebaserules.rulesets.create",
            "firebaserules.rulesets.delete",
            "firebaserules.rulesets.get",
            "firebaserules.rulesets.list",
            "identitytoolkit.*",
            "orgpolicy.policy.get",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "resourcemanager.projects.update",
            "storage.buckets.create",
            "storage.buckets.delete",
            "storage.buckets.get",
            "storage.buckets.list",
            "storage.buckets.update",
            "storage.folders.*",
            "storage.managedFolders.create",
            "storage.managedFolders.delete",
            "storage.managedFolders.get",
            "storage.managedFolders.list",
            "storage.multipartUploads.*",
            "storage.objects.*"
          ],
          "title": "Firebase Admin SDK Administrator Service Agent"
        },
        {
          "description": "Access to provision apps with the Admin SDK.",
          "id": "roles/firebase.sdkProvisioningServiceAgent",
          "is_beta": false,
          "permissions": [
            "apikeys.keys.list",
            "clientauthconfig.clients.list",
            "cloudmessaging.messages.create",
            "firebase.clients.create",
            "servicemanagement.services.bind",
            "serviceusage.services.enable",
            "serviceusage.services.get"
          ],
          "title": "Firebase SDK Provisioning Service Agent"
        },
        {
          "description": "Read-only access to Firebase products.",
          "id": "roles/firebase.viewer",
          "is_beta": false,
          "permissions": [
            "apikeys.keys.get",
            "apikeys.keys.list",
            "automl.annotationSpecs.get",
            "automl.annotationSpecs.list",
            "automl.annotations.list",
            "automl.columnSpecs.get",
            "automl.columnSpecs.list",
            "automl.datasets.get",
            "automl.datasets.list",
            "automl.examples.get",
            "automl.examples.list",
            "automl.files.list",
            "automl.humanAnnotationTasks.get",
            "automl.humanAnnotationTasks.list",
            "automl.locations.get",
            "automl.locations.list",
            "automl.modelEvaluations.get",
            "automl.modelEvaluations.list",
            "automl.models.get",
            "automl.models.list",
            "automl.operations.get",
            "automl.operations.list",
            "automl.tableSpecs.get",
            "automl.tableSpecs.list",
            "clientauthconfig.brands.get",
            "clientauthconfig.brands.list",
            "cloudasset.assets.searchAllResources",
            "cloudbuild.builds.get",
            "cloudbuild.builds.list",
            "cloudbuild.locations.*",
            "cloudbuild.operations.*",
            "cloudconfig.configs.get",
            "cloudfunctions.functions.get",
            "cloudfunctions.functions.getIamPolicy",
            "cloudfunctions.functions.list",
            "cloudfunctions.locations.list",
            "cloudfunctions.operations.*",
            "cloudnotifications.activities.list",
            "cloudtestservice.environmentcatalog.get",
            "cloudtestservice.matrices.get",
            "cloudtoolresults.executions.get",
            "cloudtoolresults.executions.list",
            "cloudtoolresults.histories.get",
            "cloudtoolresults.histories.list",
            "cloudtoolresults.settings.get",
            "cloudtoolresults.steps.get",
            "cloudtoolresults.steps.list",
            "datastore.backups.get",
            "datastore.backups.list",
            "datastore.databases.get",
            "datastore.databases.getMetadata",
            "datastore.databases.list",
            "datastore.entities.get",
            "datastore.entities.list",
            "datastore.indexes.get",
            "datastore.indexes.list",
            "datastore.namespaces.*",
            "datastore.statistics.*",
            "errorreporting.groups.list",
            "eventarc.channelConnections.get",
            "eventarc.channelConnections.getIamPolicy",
            "eventarc.channelConnections.list",
            "eventarc.channels.get",
            "eventarc.channels.getIamPolicy",
            "eventarc.channels.list",
            "eventarc.enrollments.get",
            "eventarc.enrollments.getIamPolicy",
            "eventarc.enrollments.list",
            "eventarc.googleApiSources.get",
            "eventarc.googleApiSources.getIamPolicy",
            "eventarc.googleApiSources.list",
            "eventarc.googleChannelConfigs.get",
            "eventarc.kafkaSources.get",
            "eventarc.kafkaSources.getIamPolicy",
            "eventarc.kafkaSources.list",
            "eventarc.locations.*",
            "eventarc.messageBuses.get",
            "eventarc.messageBuses.getIamPolicy",
            "eventarc.messageBuses.list",
            "eventarc.messageBuses.use",
            "eventarc.operations.get",
            "eventarc.operations.list",
            "eventarc.pipelines.get",
            "eventarc.pipelines.getIamPolicy",
            "eventarc.pipelines.list",
            "eventarc.providers.*",
            "eventarc.triggers.get",
            "eventarc.triggers.getIamPolicy",
            "eventarc.triggers.list",
            "fcmdata.deliverydata.list",
            "firebase.billingPlans.get",
            "firebase.clients.get",
            "firebase.clients.list",
            "firebase.links.list",
            "firebase.playLinks.get",
            "firebase.playLinks.list",
            "firebase.projects.get",
            "firebaseabt.experimentresults.get",
            "firebaseabt.experiments.get",
            "firebaseabt.experiments.list",
            "firebaseabt.projectmetadata.get",
            "firebaseanalytics.resources.googleAnalyticsReadAndAnalyze",
            "firebaseappcheck.appAttestConfig.get",
            "firebaseappcheck.debugTokens.get",
            "firebaseappcheck.deviceCheckConfig.get",
            "firebaseappcheck.playIntegrityConfig.get",
            "firebaseappcheck.recaptchaEnterpriseConfig.get",
            "firebaseappcheck.recaptchaV3Config.get",
            "firebaseappcheck.resourcePolicies.get",
            "firebaseappcheck.safetyNetConfig.get",
            "firebaseappcheck.services.get",
            "firebaseappdistro.groups.list",
            "firebaseappdistro.releases.list",
            "firebaseappdistro.testers.list",
            "firebaseauth.configs.get",
            "firebaseauth.users.get",
            "firebasecrash.reports.get",
            "firebasecrashlytics.config.get",
            "firebasecrashlytics.data.get",
            "firebasecrashlytics.issues.get",
            "firebasecrashlytics.issues.list",
            "firebasecrashlytics.sessions.get",
            "firebasedatabase.instances.get",
            "firebasedatabase.instances.list",
            "firebasedataconnect.connectorRevisions.get",
            "firebasedataconnect.connectorRevisions.list",
            "firebasedataconnect.connectors.get",
            "firebasedataconnect.connectors.list",
            "firebasedataconnect.locations.*",
            "firebasedataconnect.operations.get",
            "firebasedataconnect.operations.list",
            "firebasedataconnect.schemaRevisions.get",
            "firebasedataconnect.schemaRevisions.list",
            "firebasedataconnect.schemas.get",
            "firebasedataconnect.schemas.list",
            "firebasedataconnect.services.get",
            "firebasedataconnect.services.list",
            "firebasedynamiclinks.destinations.list",
            "firebasedynamiclinks.domains.get",
            "firebasedynamiclinks.domains.list",
            "firebasedynamiclinks.links.get",
            "firebasedynamiclinks.links.list",
            "firebasedynamiclinks.stats.get",
            "firebaseextensions.configs.list",
            "firebaseextensionspublisher.extensions.get",
            "firebaseextensionspublisher.extensions.list",
            "firebasehosting.sites.get",
            "firebasehosting.sites.list",
            "firebaseinappmessaging.campaigns.get",
            "firebaseinappmessaging.campaigns.list",
            "firebasemessagingcampaigns.campaigns.get",
            "firebasemessagingcampaigns.campaigns.list",
            "firebaseml.models.get",
            "firebaseml.models.list",
            "firebaseml.modelversions.get",
            "firebaseml.modelversions.list",
            "firebasenotifications.messages.get",
            "firebasenotifications.messages.list",
            "firebaseperformance.data.get",
            "firebaserules.releases.get",
            "firebaserules.releases.list",
            "firebaserules.rulesets.get",
            "firebaserules.rulesets.list",
            "firebasestorage.buckets.get",
            "firebasestorage.buckets.list",
            "firebasestorage.defaultBucket.get",
            "logging.logEntries.list",
            "monitoring.timeSeries.list",
            "oauthconfig.verification.get",
            "recommender.cloudFunctionsPerformanceInsights.get",
            "recommender.cloudFunctionsPerformanceInsights.list",
            "recommender.cloudFunctionsPerformanceRecommendations.get",
            "recommender.cloudFunctionsPerformanceRecommendations.list",
            "recommender.locations.*",
            "recommender.runServiceCostInsights.get",
            "recommender.runServiceCostInsights.list",
            "recommender.runServiceCostRecommendations.get",
            "recommender.runServiceCostRecommendations.list",
            "recommender.runServiceIdentityInsights.get",
            "recommender.runServiceIdentityInsights.list",
            "recommender.runServiceIdentityRecommendations.get",
            "recommender.runServiceIdentityRecommendations.list",
            "recommender.runServicePerformanceInsights.get",
            "recommender.runServicePerformanceInsights.list",
            "recommender.runServicePerformanceRecommendations.get",
            "recommender.runServicePerformanceRecommendations.list",
            "recommender.runServiceSecurityInsights.get",
            "recommender.runServiceSecurityInsights.list",
            "recommender.runServiceSecurityRecommendations.get",
            "recommender.runServiceSecurityRecommendations.list",
            "remotebuildexecution.blobs.get",
            "resourcemanager.projects.get",
            "resourcemanager.projects.getIamPolicy",
            "resourcemanager.projects.list",
            "run.configurations.*",
            "run.executions.get",
            "run.executions.list",
            "run.jobs.get",
            "run.jobs.getIamPolicy",
            "run.jobs.list",
            "run.jobs.listEffectiveTags",
            "run.jobs.listTagBindings",
            "run.locations.list",
            "run.operations.get",
            "run.operations.list",
            "run.revisions.get",
            "run.revisions.list",
            "run.routes.get",
            "run.routes.list",
            "run.services.get",
            "run.services.getIamPolicy",
            "run.services.list",
            "run.services.listEffectiveTags",
            "run.services.listTagBindings",
            "run.tasks.*",
            "serviceusage.quotas.get",
            "serviceusage.services.get",
            "serviceusage.services.list",
            "storage.buckets.get",
            "storage.buckets.getIamPolicy",
            "storage.buckets.list",
            "storage.objects.get",
            "storage.objects.getIamPolicy",
            "storage.objects.list"
          ],
          "title": "Firebase Viewer"
        },
        {
          "description": "Grants Firebase App Check Service Account access to consumer app attestation resources, such as reCAPTCHA Enterprise and Play Integrity API.",
          "id": "roles/firebaseappcheck.serviceAgent",
          "is_beta": false,
          "permissions": [
            "recaptchaenterprise.assessments.*",
            "serviceusage.services.use"
          ],
          "title": "Firebase App Check Service Agent"
        },
        {
          "description": "Grants Firebase Extensions API Service Account access to manage resources.",
          "id": "roles/firebasemods.serviceAgent",
          "is_beta": false,
          "permissions": [
            "appengine.applications.get",
            "artifactregistry.packages.delete",
            "cloudfunctions.functions.getIamPolicy",
            "cloudfunctions.functions.setIamPolicy",
            "cloudtasks.locations.*",
            "cloudtasks.queues.*",
            "cloudtasks.tasks.create",
            "cloudtasks.tasks.fullView",
            "deploymentmanager.compositeTypes.*",
            "deploymentmanager.deployments.cancelPreview",
            "deploymentmanager.deployments.create",
            "deploymentmanager.deployments.delete",
            "deploymentmanager.deployments.get",
            "deploymentmanager.deployments.list",
            "deploymentmanager.deployments.stop",
            "deploymentmanager.deployments.update",
            "deploymentmanager.manifests.*",
            "deploymentmanager.operations.*",
            "deploymentmanager.resources.*",
            "deploymentmanager.typeProviders.*",
            "deploymentmanager.types.*",
            "eventarc.channels.create",
            "eventarc.channels.delete",
            "eventarc.channels.get",
            "eventarc.channels.setIamPolicy",
            "iam.serviceAccounts.actAs",
            "iam.serviceAccounts.create",
            "iam.serviceAccounts.get",
            "iam.serviceAccounts.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "resourcemanager.projects.updateLiens",
            "run.services.getIamPolicy",
            "run.services.setIamPolicy",
            "serviceusage.quotas.get",
            "serviceusage.services.enable",
            "serviceusage.services.get",
            "serviceusage.services.list"
          ],
          "title": "Firebase Extensions API Service Agent"
        },
        {
          "description": "Full access to Firebase Remote Config resources.",
          "id": "roles/cloudconfig.admin",
          "is_beta": false,
          "permissions": [
            "cloudconfig.*",
            "firebase.clients.get",
            "firebase.clients.list",
            "firebase.projects.get",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Firebase Remote Config Admin"
        },
        {
          "description": "Read access to Firebase Remote Config resources.",
          "id": "roles/cloudconfig.viewer",
          "is_beta": false,
          "permissions": [
            "cloudconfig.configs.get",
            "firebase.clients.get",
            "firebase.clients.list",
            "firebase.projects.get",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Firebase Remote Config Viewer"
        },
        {
          "description": "Administrator owning access to Direct Access",
          "id": "roles/cloudtestservice.directAccessAdmin",
          "is_beta": true,
          "permissions": [
            "cloudtestservice.devicesession.*",
            "cloudtestservice.environmentcatalog.get",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Firebase Test Lab Direct Access Admin"
        },
        {
          "description": "Viewer, able to see what direct access sessions exist",
          "id": "roles/cloudtestservice.directAccessViewer",
          "is_beta": true,
          "permissions": [
            "cloudtestservice.devicesession.get",
            "cloudtestservice.devicesession.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Firebase Test Lab Direct Access Viewer"
        },
        {
          "description": "Full access to all Test Lab features",
          "id": "roles/cloudtestservice.testAdmin",
          "is_beta": false,
          "permissions": [
            "cloudtestservice.environmentcatalog.get",
            "cloudtestservice.matrices.*",
            "cloudtoolresults.*",
            "firebase.billingPlans.get",
            "firebase.clients.get",
            "firebase.clients.list",
            "firebase.projects.get",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "storage.buckets.create",
            "storage.buckets.get",
            "storage.buckets.update",
            "storage.objects.create",
            "storage.objects.delete",
            "storage.objects.get",
            "storage.objects.list"
          ],
          "title": "Firebase Test Lab Admin"
        },
        {
          "description": "Read access to Test Lab features",
          "id": "roles/cloudtestservice.testViewer",
          "is_beta": false,
          "permissions": [
            "cloudtestservice.environmentcatalog.get",
            "cloudtestservice.matrices.get",
            "cloudtoolresults.executions.get",
            "cloudtoolresults.executions.list",
            "cloudtoolresults.histories.get",
            "cloudtoolresults.histories.list",
            "cloudtoolresults.settings.get",
            "cloudtoolresults.steps.get",
            "cloudtoolresults.steps.list",
            "firebase.clients.get",
            "firebase.clients.list",
            "firebase.projects.get",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "storage.objects.get",
            "storage.objects.list"
          ],
          "title": "Firebase Test Lab Viewer"
        },
        {
          "description": "Full read/write access to Firebase A/B Testing resources.",
          "id": "roles/firebaseabt.admin",
          "is_beta": true,
          "permissions": [
            "firebase.clients.get",
            "firebase.clients.list",
            "firebase.projects.get",
            "firebaseabt.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Firebase A/B Testing Admin"
        },
        {
          "description": "Read-only access to Firebase A/B Testing resources.",
          "id": "roles/firebaseabt.viewer",
          "is_beta": true,
          "permissions": [
            "firebase.clients.get",
            "firebase.clients.list",
            "firebase.projects.get",
            "firebaseabt.experimentresults.get",
            "firebaseabt.experiments.get",
            "firebaseabt.experiments.list",
            "firebaseabt.projectmetadata.get",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Firebase A/B Testing Viewer"
        },
        {
          "description": "Full management of Firebase App Check.",
          "id": "roles/firebaseappcheck.admin",
          "is_beta": false,
          "permissions": [
            "firebaseappcheck.*"
          ],
          "title": "Firebase App Check Admin"
        },
        {
          "description": "Access to token verification capabilities for Firebase App Check.",
          "id": "roles/firebaseappcheck.tokenVerifier",
          "is_beta": false,
          "permissions": [
            "firebaseappcheck.appCheckTokens.verify"
          ],
          "title": "Firebase App Check Token Verifier"
        },
        {
          "description": "Read-only access for Firebase App Check.",
          "id": "roles/firebaseappcheck.viewer",
          "is_beta": false,
          "permissions": [
            "firebaseappcheck.appAttestConfig.get",
            "firebaseappcheck.debugTokens.get",
            "firebaseappcheck.deviceCheckConfig.get",
            "firebaseappcheck.playIntegrityConfig.get",
            "firebaseappcheck.recaptchaEnterpriseConfig.get",
            "firebaseappcheck.recaptchaV3Config.get",
            "firebaseappcheck.resourcePolicies.get",
            "firebaseappcheck.safetyNetConfig.get",
            "firebaseappcheck.services.get"
          ],
          "title": "Firebase App Check Viewer"
        },
        {
          "description": "Full read/write access to Firebase App Distribution resources.",
          "id": "roles/firebaseappdistro.admin",
          "is_beta": false,
          "permissions": [
            "firebase.clients.get",
            "firebase.clients.list",
            "firebase.projects.get",
            "firebaseappdistro.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Firebase App Distribution Admin"
        },
        {
          "description": "Read-only access to Firebase App Distribution resources.",
          "id": "roles/firebaseappdistro.viewer",
          "is_beta": false,
          "permissions": [
            "firebase.clients.get",
            "firebase.clients.list",
            "firebase.projects.get",
            "firebaseappdistro.groups.list",
            "firebaseappdistro.releases.list",
            "firebaseappdistro.testers.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Firebase App Distribution Viewer"
        },
        {
          "description": "Full read/write access to Firebase Authentication resources.",
          "id": "roles/firebaseauth.admin",
          "is_beta": false,
          "permissions": [
            "firebase.clients.get",
            "firebase.clients.list",
            "firebase.projects.get",
            "firebaseauth.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Firebase Authentication Admin"
        },
        {
          "description": "Read-only access to Firebase Authentication resources.",
          "id": "roles/firebaseauth.viewer",
          "is_beta": false,
          "permissions": [
            "firebase.clients.get",
            "firebase.clients.list",
            "firebase.projects.get",
            "firebaseauth.configs.get",
            "firebaseauth.users.get",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Firebase Authentication Viewer"
        },
        {
          "description": "Full read/write access to Firebase Crashlytics resources.",
          "id": "roles/firebasecrashlytics.admin",
          "is_beta": false,
          "permissions": [
            "firebase.clients.get",
            "firebase.clients.list",
            "firebase.projects.get",
            "firebasecrashlytics.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Firebase Crashlytics Admin"
        },
        {
          "description": "Read-only access to Firebase Crashlytics resources.",
          "id": "roles/firebasecrashlytics.viewer",
          "is_beta": false,
          "permissions": [
            "firebase.clients.get",
            "firebase.clients.list",
            "firebase.projects.get",
            "firebasecrashlytics.config.get",
            "firebasecrashlytics.data.get",
            "firebasecrashlytics.issues.get",
            "firebasecrashlytics.issues.list",
            "firebasecrashlytics.sessions.get",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Firebase Crashlytics Viewer"
        },
        {
          "description": "Full read/write access to Firebase Realtime Database resources.",
          "id": "roles/firebasedatabase.admin",
          "is_beta": false,
          "permissions": [
            "firebase.clients.get",
            "firebase.clients.list",
            "firebase.projects.get",
            "firebasedatabase.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Firebase Realtime Database Admin"
        },
        {
          "description": "Read-only access to Firebase Realtime Database resources.",
          "id": "roles/firebasedatabase.viewer",
          "is_beta": false,
          "permissions": [
            "firebase.clients.get",
            "firebase.clients.list",
            "firebase.projects.get",
            "firebasedatabase.instances.get",
            "firebasedatabase.instances.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Firebase Realtime Database Viewer"
        },
        {
          "description": "Full read/write access to Firebase Dynamic Links resources.",
          "id": "roles/firebasedynamiclinks.admin",
          "is_beta": false,
          "permissions": [
            "firebase.clients.get",
            "firebase.clients.list",
            "firebase.projects.get",
            "firebasedynamiclinks.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Firebase Dynamic Links Admin"
        },
        {
          "description": "Read-only access to Firebase Dynamic Links resources.",
          "id": "roles/firebasedynamiclinks.viewer",
          "is_beta": false,
          "permissions": [
            "firebase.clients.get",
            "firebase.clients.list",
            "firebase.projects.get",
            "firebasedynamiclinks.destinations.list",
            "firebasedynamiclinks.domains.get",
            "firebasedynamiclinks.domains.list",
            "firebasedynamiclinks.links.get",
            "firebasedynamiclinks.links.list",
            "firebasedynamiclinks.stats.get",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Firebase Dynamic Links Viewer"
        },
        {
          "description": "View, create, and delete Firebase Extensions Instances and Extensions Versions, and update Extensions Instances",
          "id": "roles/firebaseextensions.developer",
          "is_beta": true,
          "permissions": [
            "firebase.clients.get",
            "firebase.clients.list",
            "firebase.projects.get",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Firebase Extensions Developer"
        },
        {
          "description": "Viewer of Firebase Extensions Instances",
          "id": "roles/firebaseextensions.viewer",
          "is_beta": true,
          "permissions": [
            "firebase.clients.get",
            "firebase.clients.list",
            "firebase.projects.get",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Firebase Extensions Viewer"
        },
        {
          "description": "Fully manage Firebase Extensions",
          "id": "roles/firebaseextensionspublisher.extensionsAdmin",
          "is_beta": true,
          "permissions": [
            "firebase.clients.get",
            "firebase.clients.list",
            "firebase.projects.get",
            "firebaseextensionspublisher.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Firebase Extensions Publisher - Extensions Admin"
        },
        {
          "description": "View Firebase Extensions",
          "id": "roles/firebaseextensionspublisher.extensionsViewer",
          "is_beta": true,
          "permissions": [
            "firebase.clients.get",
            "firebase.clients.list",
            "firebase.projects.get",
            "firebaseextensionspublisher.extensions.get",
            "firebaseextensionspublisher.extensions.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Firebase Extensions Publisher - Extensions Viewer"
        },
        {
          "description": "Full read/write access to Firebase Hosting resources.",
          "id": "roles/firebasehosting.admin",
          "is_beta": false,
          "permissions": [
            "firebase.clients.get",
            "firebase.clients.list",
            "firebase.projects.get",
            "firebasehosting.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Firebase Hosting Admin"
        },
        {
          "description": "Read-only access to Firebase Hosting resources.",
          "id": "roles/firebasehosting.viewer",
          "is_beta": false,
          "permissions": [
            "firebase.clients.get",
            "firebase.clients.list",
            "firebase.projects.get",
            "firebasehosting.sites.get",
            "firebasehosting.sites.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Firebase Hosting Viewer"
        },
        {
          "description": "Full read/write access to Firebase In-App Messaging resources.",
          "id": "roles/firebaseinappmessaging.admin",
          "is_beta": true,
          "permissions": [
            "firebase.clients.get",
            "firebase.clients.list",
            "firebase.projects.get",
            "firebaseinappmessaging.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Firebase In-App Messaging Admin"
        },
        {
          "description": "Read-only access to Firebase In-App Messaging resources.",
          "id": "roles/firebaseinappmessaging.viewer",
          "is_beta": true,
          "permissions": [
            "firebase.clients.get",
            "firebase.clients.list",
            "firebase.projects.get",
            "firebaseinappmessaging.campaigns.get",
            "firebaseinappmessaging.campaigns.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Firebase In-App Messaging Viewer"
        },
        {
          "description": "Full management of Firebase Messaging Campaigns.",
          "id": "roles/firebasemessagingcampaigns.admin",
          "is_beta": true,
          "permissions": [
            "firebasemessagingcampaigns.*"
          ],
          "title": "Firebase Messaging Campaigns Admin"
        },
        {
          "description": "Read-only access for Firebase Messaging Campaigns.",
          "id": "roles/firebasemessagingcampaigns.viewer",
          "is_beta": true,
          "permissions": [
            "firebasemessagingcampaigns.campaigns.get",
            "firebasemessagingcampaigns.campaigns.list"
          ],
          "title": "Firebase Messaging Campaigns Viewer"
        },
        {
          "description": "Full read/write access to Firebase ML Kit resources.",
          "id": "roles/firebaseml.admin",
          "is_beta": true,
          "permissions": [
            "firebase.clients.get",
            "firebase.clients.list",
            "firebase.projects.get",
            "firebaseml.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Firebase ML Kit Admin"
        },
        {
          "description": "Read-only access to Firebase ML Kit resources.",
          "id": "roles/firebaseml.viewer",
          "is_beta": true,
          "permissions": [
            "firebase.clients.get",
            "firebase.clients.list",
            "firebase.projects.get",
            "firebaseml.models.get",
            "firebaseml.models.list",
            "firebaseml.modelversions.get",
            "firebaseml.modelversions.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Firebase ML Kit Viewer"
        },
        {
          "description": "Full read/write access to Firebase Cloud Messaging resources.",
          "id": "roles/firebasenotifications.admin",
          "is_beta": false,
          "permissions": [
            "fcmdata.deliverydata.list",
            "firebase.clients.get",
            "firebase.clients.list",
            "firebase.projects.get",
            "firebasenotifications.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Firebase Cloud Messaging Admin"
        },
        {
          "description": "Read-only access to Firebase Cloud Messaging resources.",
          "id": "roles/firebasenotifications.viewer",
          "is_beta": false,
          "permissions": [
            "fcmdata.deliverydata.list",
            "firebase.clients.get",
            "firebase.clients.list",
            "firebase.projects.get",
            "firebasenotifications.messages.get",
            "firebasenotifications.messages.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Firebase Cloud Messaging Viewer"
        },
        {
          "description": "Full access to firebaseperformance resources.",
          "id": "roles/firebaseperformance.admin",
          "is_beta": false,
          "permissions": [
            "firebase.clients.get",
            "firebase.clients.list",
            "firebase.projects.get",
            "firebaseperformance.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Firebase Performance Reporting Admin"
        },
        {
          "description": "Read-only access to firebaseperformance resources.",
          "id": "roles/firebaseperformance.viewer",
          "is_beta": false,
          "permissions": [
            "firebase.clients.get",
            "firebase.clients.list",
            "firebase.projects.get",
            "firebaseperformance.data.get",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Firebase Performance Reporting Viewer"
        },
        {
          "description": "Full management of Firebase Rules.",
          "id": "roles/firebaserules.admin",
          "is_beta": false,
          "permissions": [
            "firebaserules.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Firebase Rules Admin"
        },
        {
          "description": "Read/write/list access for Datastore entities and Cloud Storage objects, as well as get/list/publish access for PubSub topics.",
          "id": "roles/firebaserules.system",
          "is_beta": false,
          "permissions": [
            "datastore.databases.get",
            "datastore.entities.*",
            "pubsub.topics.get",
            "pubsub.topics.list",
            "pubsub.topics.publish",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "storage.objects.create",
            "storage.objects.delete",
            "storage.objects.get",
            "storage.objects.list",
            "storage.objects.update"
          ],
          "title": "Firebase Rules System"
        },
        {
          "description": "Read-only access on all resources with the ability to test Rulesets.",
          "id": "roles/firebaserules.viewer",
          "is_beta": false,
          "permissions": [
            "firebaserules.releases.get",
            "firebaserules.releases.list",
            "firebaserules.rulesets.get",
            "firebaserules.rulesets.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Firebase Rules Viewer"
        },
        {
          "description": "Full management of Cloud Storage for Firebase.",
          "id": "roles/firebasestorage.admin",
          "is_beta": true,
          "permissions": [
            "firebase.clients.get",
            "firebase.clients.list",
            "firebase.projects.get",
            "firebasestorage.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Cloud Storage for Firebase Admin"
        },
        {
          "description": "Read-only access for Cloud Storage for Firebase.",
          "id": "roles/firebasestorage.viewer",
          "is_beta": true,
          "permissions": [
            "firebasestorage.buckets.get",
            "firebasestorage.buckets.list",
            "firebasestorage.defaultBucket.get",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Cloud Storage for Firebase Viewer"
        },
        {
          "description": "Limited read access to Fleet Engine resources",
          "id": "roles/fleetengine.consumerSdkUser",
          "is_beta": false,
          "permissions": [
            "fleetengine.trips.get",
            "fleetengine.vehicles.get",
            "fleetengine.vehicles.search",
            "fleetengine.vehicles.searchFuzzed"
          ],
          "title": "Fleet Engine Consumer SDK User"
        },
        {
          "description": "Full access to Fleet Engine Delivery resources.",
          "id": "roles/fleetengine.deliveryAdmin",
          "is_beta": false,
          "permissions": [
            "fleetengine.deliveryvehicles.*",
            "fleetengine.tasks.*",
            "fleetengine.tasktrackinginfo.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "serviceusage.services.use"
          ],
          "title": "Fleet Engine Delivery Admin"
        },
        {
          "description": "Limited read access to Fleet Engine Delivery resources",
          "id": "roles/fleetengine.deliveryConsumer",
          "is_beta": false,
          "permissions": [
            "fleetengine.tasks.searchWithTrackingId",
            "fleetengine.tasktrackinginfo.get"
          ],
          "title": "Fleet Engine Delivery Consumer User"
        },
        {
          "description": "Grants read access to all Fleet Engine Delivery resources",
          "id": "roles/fleetengine.deliveryFleetReader",
          "is_beta": false,
          "permissions": [
            "fleetengine.deliveryvehicles.get",
            "fleetengine.deliveryvehicles.list",
            "fleetengine.tasks.get",
            "fleetengine.tasks.list",
            "fleetengine.tasks.searchWithTrackingId",
            "fleetengine.tasktrackinginfo.get"
          ],
          "title": "Fleet Engine Delivery Fleet Reader User"
        },
        {
          "description": "Full access to Fleet Engine DeliveryVehicles and Tasks resources.",
          "id": "roles/fleetengine.deliverySuperUser",
          "is_beta": false,
          "permissions": [
            "fleetengine.deliveryvehicles.create",
            "fleetengine.deliveryvehicles.delete",
            "fleetengine.deliveryvehicles.get",
            "fleetengine.deliveryvehicles.list",
            "fleetengine.deliveryvehicles.update",
            "fleetengine.deliveryvehicles.updateLocation",
            "fleetengine.deliveryvehicles.updateVehicleStops",
            "fleetengine.tasks.create",
            "fleetengine.tasks.delete",
            "fleetengine.tasks.get",
            "fleetengine.tasks.list",
            "fleetengine.tasks.searchWithTrackingId",
            "fleetengine.tasks.update",
            "fleetengine.tasktrackinginfo.get",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Fleet Engine Delivery Super User"
        },
        {
          "description": "Read and write access to Fleet Engine Delivery resources",
          "id": "roles/fleetengine.deliveryTrustedDriver",
          "is_beta": false,
          "permissions": [
            "fleetengine.deliveryvehicles.create",
            "fleetengine.deliveryvehicles.get",
            "fleetengine.deliveryvehicles.update",
            "fleetengine.deliveryvehicles.updateLocation",
            "fleetengine.deliveryvehicles.updateVehicleStops",
            "fleetengine.tasks.create",
            "fleetengine.tasks.update"
          ],
          "title": "Fleet Engine Delivery Trusted Driver User"
        },
        {
          "description": "Limited write access to Fleet Engine Delivery Vehicle resources",
          "id": "roles/fleetengine.deliveryUntrustedDriver",
          "is_beta": false,
          "permissions": [
            "fleetengine.deliveryvehicles.get",
            "fleetengine.deliveryvehicles.updateLocation"
          ],
          "title": "Fleet Engine Delivery Untrusted Driver User"
        },
        {
          "description": "Read and limited update access to Fleet Engine resources",
          "id": "roles/fleetengine.driverSdkUser",
          "is_beta": false,
          "permissions": [
            "fleetengine.trips.get",
            "fleetengine.trips.search",
            "fleetengine.trips.update",
            "fleetengine.vehicles.get",
            "fleetengine.vehicles.updateLocation"
          ],
          "title": "Fleet Engine Driver SDK User"
        },
        {
          "description": "Full access to Vehicle and Trip resources.",
          "id": "roles/fleetengine.ondemandAdmin",
          "is_beta": false,
          "permissions": [
            "fleetengine.trips.*",
            "fleetengine.vehicles.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "serviceusage.services.use"
          ],
          "title": "Fleet Engine On-Demand Admin"
        },
        {
          "description": "Full access to all Fleet Engine resources.",
          "id": "roles/fleetengine.serviceSuperUser",
          "is_beta": false,
          "permissions": [
            "fleetengine.trips.create",
            "fleetengine.trips.delete",
            "fleetengine.trips.get",
            "fleetengine.trips.search",
            "fleetengine.trips.update",
            "fleetengine.trips.updateState",
            "fleetengine.vehicles.create",
            "fleetengine.vehicles.delete",
            "fleetengine.vehicles.get",
            "fleetengine.vehicles.list",
            "fleetengine.vehicles.search",
            "fleetengine.vehicles.searchFuzzed",
            "fleetengine.vehicles.update",
            "fleetengine.vehicles.updateLocation",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Fleet Engine Service Super User"
        },
        {
          "description": "Full access to genomics datasets and operations.",
          "id": "roles/genomics.admin",
          "is_beta": false,
          "permissions": [
            "genomics.*"
          ],
          "title": "Genomics Admin"
        },
        {
          "description": "Access to read and edit genomics datasets and operations.",
          "id": "roles/genomics.editor",
          "is_beta": false,
          "permissions": [
            "genomics.datasets.create",
            "genomics.datasets.delete",
            "genomics.datasets.get",
            "genomics.datasets.list",
            "genomics.datasets.update",
            "genomics.operations.*"
          ],
          "title": "Genomics Editor"
        },
        {
          "description": "Full access to operate on genomics pipelines.",
          "id": "roles/genomics.pipelinesRunner",
          "is_beta": false,
          "permissions": [
            "genomics.operations.*"
          ],
          "title": "Genomics Pipelines Runner"
        },
        {
          "description": "Access to view genomics datasets and operations.",
          "id": "roles/genomics.viewer",
          "is_beta": false,
          "permissions": [
            "genomics.datasets.get",
            "genomics.datasets.list",
            "genomics.operations.get",
            "genomics.operations.list"
          ],
          "title": "Genomics Viewer"
        },
        {
          "description": "Full access to Fleet resources.",
          "id": "roles/gkehub.admin",
          "is_beta": false,
          "permissions": [
            "gkehub.features.*",
            "gkehub.fleet.*",
            "gkehub.locations.*",
            "gkehub.membershipbindings.*",
            "gkehub.membershipfeatures.*",
            "gkehub.memberships.*",
            "gkehub.namespaces.*",
            "gkehub.operations.*",
            "gkehub.rbacrolebindings.*",
            "gkehub.scopes.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Fleet Admin (formerly GKE Hub Admin)"
        },
        {
          "description": "Ability to set up GKE Connect between external clusters and Google.",
          "id": "roles/gkehub.connect",
          "is_beta": false,
          "permissions": [
            "gkehub.endpoints.connect"
          ],
          "title": "GKE Connect Agent"
        },
        {
          "description": "Edit access to Fleet resources.",
          "id": "roles/gkehub.editor",
          "is_beta": false,
          "permissions": [
            "gkehub.features.create",
            "gkehub.features.delete",
            "gkehub.features.get",
            "gkehub.features.getIamPolicy",
            "gkehub.features.list",
            "gkehub.features.update",
            "gkehub.fleet.*",
            "gkehub.locations.*",
            "gkehub.membershipbindings.*",
            "gkehub.membershipfeatures.*",
            "gkehub.memberships.create",
            "gkehub.memberships.delete",
            "gkehub.memberships.generateConnectManifest",
            "gkehub.memberships.get",
            "gkehub.memberships.getIamPolicy",
            "gkehub.memberships.list",
            "gkehub.memberships.update",
            "gkehub.namespaces.*",
            "gkehub.operations.*",
            "gkehub.rbacrolebindings.*",
            "gkehub.scopes.create",
            "gkehub.scopes.delete",
            "gkehub.scopes.get",
            "gkehub.scopes.getIamPolicy",
            "gkehub.scopes.list",
            "gkehub.scopes.listBoundMemberships",
            "gkehub.scopes.update",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Fleet Editor (formerly GKE Hub Editor)"
        },
        {
          "description": "Full access to Connect Gateway.",
          "id": "roles/gkehub.gatewayAdmin",
          "is_beta": false,
          "permissions": [
            "gkehub.gateway.*",
            "gkehub.memberships.get",
            "serviceusage.services.get"
          ],
          "title": "Connect Gateway Admin"
        },
        {
          "description": "Edit access to Connect Gateway.",
          "id": "roles/gkehub.gatewayEditor",
          "is_beta": false,
          "permissions": [
            "gkehub.gateway.delete",
            "gkehub.gateway.generateCredentials",
            "gkehub.gateway.get",
            "gkehub.gateway.patch",
            "gkehub.gateway.post",
            "gkehub.gateway.put",
            "gkehub.memberships.get",
            "serviceusage.services.get"
          ],
          "title": "Connect Gateway Editor"
        },
        {
          "description": "Read-only access to Connect Gateway.",
          "id": "roles/gkehub.gatewayReader",
          "is_beta": false,
          "permissions": [
            "gkehub.gateway.generateCredentials",
            "gkehub.gateway.get",
            "gkehub.memberships.get",
            "serviceusage.services.get"
          ],
          "title": "Connect Gateway Reader"
        },
        {
          "description": "Admin access to Fleet Scopes to set IAM Bindings and RBACRoleBindings.",
          "id": "roles/gkehub.scopeAdmin",
          "is_beta": false,
          "permissions": [
            "gkehub.namespaces.create",
            "gkehub.namespaces.delete",
            "gkehub.namespaces.get",
            "gkehub.namespaces.list",
            "gkehub.rbacrolebindings.*",
            "gkehub.scopes.get",
            "gkehub.scopes.getIamPolicy",
            "gkehub.scopes.listBoundMemberships",
            "gkehub.scopes.setIamPolicy"
          ],
          "title": "Fleet Scope Admin"
        },
        {
          "description": "Edit access to Namespaces under Fleet Scopes.",
          "id": "roles/gkehub.scopeEditor",
          "is_beta": false,
          "permissions": [
            "gkehub.namespaces.create",
            "gkehub.namespaces.delete",
            "gkehub.namespaces.get",
            "gkehub.namespaces.list",
            "gkehub.rbacrolebindings.get",
            "gkehub.rbacrolebindings.list",
            "gkehub.scopes.get",
            "gkehub.scopes.getIamPolicy",
            "gkehub.scopes.listBoundMemberships"
          ],
          "title": "Fleet Scope Editor"
        },
        {
          "description": "Role for project-level permissions for editor of Fleet Scopes.",
          "id": "roles/gkehub.scopeEditorProjectLevel",
          "is_beta": false,
          "permissions": [
            "gkehub.gateway.delete",
            "gkehub.gateway.generateCredentials",
            "gkehub.gateway.get",
            "gkehub.gateway.patch",
            "gkehub.gateway.post",
            "gkehub.gateway.put",
            "gkehub.memberships.get",
            "gkehub.operations.get",
            "monitoring.timeSeries.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "serviceusage.services.get"
          ],
          "title": "Fleet Project-level Scope Editor"
        },
        {
          "description": "Viewer of Fleet Scopes and associated resources.",
          "id": "roles/gkehub.scopeViewer",
          "is_beta": false,
          "permissions": [
            "gkehub.namespaces.get",
            "gkehub.namespaces.list",
            "gkehub.rbacrolebindings.get",
            "gkehub.rbacrolebindings.list",
            "gkehub.scopes.get",
            "gkehub.scopes.getIamPolicy",
            "gkehub.scopes.listBoundMemberships"
          ],
          "title": "Fleet Scope Viewer"
        },
        {
          "description": "Role for project-level permissions for viewer of Fleet Scopes.",
          "id": "roles/gkehub.scopeViewerProjectLevel",
          "is_beta": false,
          "permissions": [
            "gkehub.gateway.generateCredentials",
            "gkehub.gateway.get",
            "gkehub.memberships.get",
            "monitoring.timeSeries.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "serviceusage.services.get"
          ],
          "title": "Fleet Project-level Scope Viewer"
        },
        {
          "description": "Read-only access to Fleets and related resources.",
          "id": "roles/gkehub.viewer",
          "is_beta": false,
          "permissions": [
            "gkehub.features.get",
            "gkehub.features.getIamPolicy",
            "gkehub.features.list",
            "gkehub.fleet.get",
            "gkehub.fleet.getFreeTrial",
            "gkehub.locations.*",
            "gkehub.membershipbindings.get",
            "gkehub.membershipbindings.list",
            "gkehub.membershipfeatures.get",
            "gkehub.membershipfeatures.list",
            "gkehub.memberships.generateConnectManifest",
            "gkehub.memberships.get",
            "gkehub.memberships.getIamPolicy",
            "gkehub.memberships.list",
            "gkehub.namespaces.get",
            "gkehub.namespaces.list",
            "gkehub.operations.get",
            "gkehub.operations.list",
            "gkehub.rbacrolebindings.get",
            "gkehub.rbacrolebindings.list",
            "gkehub.scopes.get",
            "gkehub.scopes.list",
            "gkehub.scopes.listBoundMemberships",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Fleet Viewer (formerly GKE Hub Viewer)"
        },
        {
          "description": "Full access to GKE on-prem all resources.",
          "id": "roles/gkeonprem.admin",
          "is_beta": false,
          "permissions": [
            "gkeonprem.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "GKE on-prem Admin"
        },
        {
          "description": "Read-only access to GKE on-prem all resources.",
          "id": "roles/gkeonprem.viewer",
          "is_beta": false,
          "permissions": [
            "gkeonprem.bareMetalAdminClusters.connect",
            "gkeonprem.bareMetalAdminClusters.get",
            "gkeonprem.bareMetalAdminClusters.getIamPolicy",
            "gkeonprem.bareMetalAdminClusters.list",
            "gkeonprem.bareMetalAdminClusters.queryVersionConfig",
            "gkeonprem.bareMetalClusters.get",
            "gkeonprem.bareMetalClusters.getIamPolicy",
            "gkeonprem.bareMetalClusters.list",
            "gkeonprem.bareMetalClusters.queryVersionConfig",
            "gkeonprem.bareMetalNodePools.get",
            "gkeonprem.bareMetalNodePools.getIamPolicy",
            "gkeonprem.bareMetalNodePools.list",
            "gkeonprem.locations.*",
            "gkeonprem.operations.get",
            "gkeonprem.operations.list",
            "gkeonprem.vmwareAdminClusters.connect",
            "gkeonprem.vmwareAdminClusters.get",
            "gkeonprem.vmwareAdminClusters.getIamPolicy",
            "gkeonprem.vmwareAdminClusters.list",
            "gkeonprem.vmwareClusters.get",
            "gkeonprem.vmwareClusters.getIamPolicy",
            "gkeonprem.vmwareClusters.list",
            "gkeonprem.vmwareClusters.queryVersionConfig",
            "gkeonprem.vmwareNodePools.get",
            "gkeonprem.vmwareNodePools.getIamPolicy",
            "gkeonprem.vmwareNodePools.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "GKE on-prem Viewer"
        },
        {
          "description": "Full access to Google Workspace Add-ons resources",
          "id": "roles/gsuiteaddons.developer",
          "is_beta": false,
          "permissions": [
            "gsuiteaddons.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Google Workspace Add-ons Developer"
        },
        {
          "description": "Read-only access to Google Workspace Add-ons resources",
          "id": "roles/gsuiteaddons.reader",
          "is_beta": false,
          "permissions": [
            "gsuiteaddons.authorizations.get",
            "gsuiteaddons.deployments.get",
            "gsuiteaddons.deployments.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Google Workspace Add-ons Reader"
        },
        {
          "description": "Testing execution access to Google Workspace Add-ons resources",
          "id": "roles/gsuiteaddons.tester",
          "is_beta": false,
          "permissions": [
            "gsuiteaddons.deployments.execute",
            "gsuiteaddons.deployments.install",
            "gsuiteaddons.deployments.installStatus",
            "gsuiteaddons.deployments.uninstall",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Google Workspace Add-ons Tester"
        },
        {
          "description": "Deny admin role, with permissions to read and modify deny policies",
          "id": "roles/iam.denyAdmin",
          "is_beta": false,
          "permissions": [
            "cloudasset.assets.listResource",
            "iam.denypolicies.*",
            "policyanalyzer.resourceAuthorizationActivities.query",
            "policysimulator.accessPolicySimulationResults.list",
            "policysimulator.accessPolicySimulations.*"
          ],
          "title": "Deny Admin"
        },
        {
          "description": "Deny Reviewer role, with permissions to read deny policies",
          "id": "roles/iam.denyReviewer",
          "is_beta": false,
          "permissions": [
            "iam.denypolicies.get",
            "iam.denypolicies.list"
          ],
          "title": "Deny Reviewer"
        },
        {
          "description": "Operation user role, with permissions to view and list operations in IAM v3",
          "id": "roles/iam.operationViewer",
          "is_beta": true,
          "permissions": [
            "iam.operations.get"
          ],
          "title": "IAM Operation Viewer"
        },
        {
          "description": "Principal Access Boundary admin role, with permissions to read and modify principal access boundary policies, and to bind and unbind principal access boundary policies to targets. Also includes permissions to read principal authorization activities analysis and permissions to list assets from Cloud Asset Inventory",
          "id": "roles/iam.principalAccessBoundaryAdmin",
          "is_beta": true,
          "permissions": [
            "cloudasset.assets.listResource",
            "cloudasset.assets.searchAllResources",
            "iam.principalaccessboundarypolicies.*"
          ],
          "title": "Principal Access Boundary Policy Admin"
        },
        {
          "description": "Principal Access Boundary Policies user role, with permissions to view principal access boundary policies, and to bind and unbind principal access boundary policies to targets",
          "id": "roles/iam.principalAccessBoundaryUser",
          "is_beta": true,
          "permissions": [
            "iam.principalaccessboundarypolicies.bind",
            "iam.principalaccessboundarypolicies.get",
            "iam.principalaccessboundarypolicies.list",
            "iam.principalaccessboundarypolicies.unbind"
          ],
          "title": "Principal Access Boundary Policy User"
        },
        {
          "description": "Principal Access Boundary Reviewer role, with permissions to read principal access boundary policies and view associated policy bindings",
          "id": "roles/iam.principalAccessBoundaryViewer",
          "is_beta": true,
          "permissions": [
            "iam.principalaccessboundarypolicies.get",
            "iam.principalaccessboundarypolicies.list",
            "iam.principalaccessboundarypolicies.searchPolicyBindings"
          ],
          "title": "Principal Access Boundary Policy Viewer"
        },
        {
          "description": "Security admin role, with permissions to get and set any IAM policy.",
          "id": "roles/iam.securityAdmin",
          "is_beta": false,
          "permissions": [
            "accessapproval.requests.list",
            "accesscontextmanager.accessLevels.list",
            "accesscontextmanager.authorizedOrgsDescs.list",
            "accesscontextmanager.gcpUserAccessBindings.list",
            "accesscontextmanager.policies.getIamPolicy",
            "accesscontextmanager.policies.list",
            "accesscontextmanager.policies.setIamPolicy",
            "accesscontextmanager.servicePerimeters.list",
            "actions.agentVersions.list",
            "advisorynotifications.notifications.*",
            "aiplatform.agentExamples.list",
            "aiplatform.agents.list",
            "aiplatform.annotationSpecs.list",
            "aiplatform.annotations.list",
            "aiplatform.apps.list",
            "aiplatform.artifacts.list",
            "aiplatform.batchPredictionJobs.list",
            "aiplatform.cachedContents.list",
            "aiplatform.contexts.list",
            "aiplatform.customJobs.list",
            "aiplatform.dataItems.list",
            "aiplatform.dataLabelingJobs.list",
            "aiplatform.datasetVersions.list",
            "aiplatform.datasets.list",
            "aiplatform.deploymentResourcePools.list",
            "aiplatform.edgeDeploymentJobs.list",
            "aiplatform.edgeDevices.list",
            "aiplatform.endpoints.getIamPolicy",
            "aiplatform.endpoints.list",
            "aiplatform.endpoints.setIamPolicy",
            "aiplatform.entityTypes.getIamPolicy",
            "aiplatform.entityTypes.list",
            "aiplatform.entityTypes.setIamPolicy",
            "aiplatform.executions.list",
            "aiplatform.extensions.list",
            "aiplatform.featureGroups.getIamPolicy",
            "aiplatform.featureGroups.list",
            "aiplatform.featureGroups.setIamPolicy",
            "aiplatform.featureOnlineStores.getIamPolicy",
            "aiplatform.featureOnlineStores.list",
            "aiplatform.featureOnlineStores.setIamPolicy",
            "aiplatform.featureViewSyncs.list",
            "aiplatform.featureViews.getIamPolicy",
            "aiplatform.featureViews.list",
            "aiplatform.featureViews.setIamPolicy",
            "aiplatform.features.list",
            "aiplatform.featurestores.getIamPolicy",
            "aiplatform.featurestores.list",
            "aiplatform.featurestores.setIamPolicy",
            "aiplatform.humanInTheLoops.list",
            "aiplatform.hyperparameterTuningJobs.list",
            "aiplatform.indexEndpoints.list",
            "aiplatform.indexes.list",
            "aiplatform.locations.list",
            "aiplatform.metadataSchemas.list",
            "aiplatform.metadataStores.list",
            "aiplatform.modelDeploymentMonitoringJobs.list",
            "aiplatform.modelEvaluationSlices.list",
            "aiplatform.modelEvaluations.list",
            "aiplatform.modelMonitoringJobs.list",
            "aiplatform.modelMonitors.list",
            "aiplatform.models.list",
            "aiplatform.nasJobs.list",
            "aiplatform.nasTrialDetails.list",
            "aiplatform.notebookExecutionJobs.list",
            "aiplatform.notebookRuntimeTemplates.getIamPolicy",
            "aiplatform.notebookRuntimeTemplates.list",
            "aiplatform.notebookRuntimeTemplates.setIamPolicy",
            "aiplatform.notebookRuntimes.list",
            "aiplatform.operations.list",
            "aiplatform.persistentResources.list",
            "aiplatform.pipelineJobs.list",
            "aiplatform.provisionedThroughputRevisions.list",
            "aiplatform.provisionedThroughputs.list",
            "aiplatform.ragCorpora.list",
            "aiplatform.ragFiles.list",
            "aiplatform.reasoningEngines.list",
            "aiplatform.schedules.list",
            "aiplatform.sessions.list",
            "aiplatform.specialistPools.list",
            "aiplatform.studies.list",
            "aiplatform.tensorboardExperiments.list",
            "aiplatform.tensorboardRuns.list",
            "aiplatform.tensorboardTimeSeries.list",
            "aiplatform.tensorboards.list",
            "aiplatform.trainingPipelines.list",
            "aiplatform.trials.list",
            "aiplatform.tuningJobs.list",
            "alloydb.backups.list",
            "alloydb.clusters.list",
            "alloydb.databases.list",
            "alloydb.instances.list",
            "alloydb.locations.list",
            "alloydb.operations.list",
            "alloydb.supportedDatabaseFlags.list",
            "alloydb.users.list",
            "analyticshub.dataExchanges.getIamPolicy",
            "analyticshub.dataExchanges.list",
            "analyticshub.dataExchanges.setIamPolicy",
            "analyticshub.listings.getIamPolicy",
            "analyticshub.listings.list",
            "analyticshub.listings.setIamPolicy",
            "analyticshub.subscriptions.list",
            "apigateway.apiconfigs.getIamPolicy",
            "apigateway.apiconfigs.list",
            "apigateway.apiconfigs.setIamPolicy",
            "apigateway.apis.getIamPolicy",
            "apigateway.apis.list",
            "apigateway.apis.setIamPolicy",
            "apigateway.gateways.getIamPolicy",
            "apigateway.gateways.list",
            "apigateway.gateways.setIamPolicy",
            "apigateway.locations.list",
            "apigateway.operations.list",
            "apigee.apiproductattributes.list",
            "apigee.apiproducts.list",
            "apigee.appgroupapps.list",
            "apigee.appgroups.list",
            "apigee.apps.list",
            "apigee.archivedeployments.list",
            "apigee.caches.list",
            "apigee.datacollectors.list",
            "apigee.datastores.list",
            "apigee.deployments.getIamPolicy",
            "apigee.deployments.list",
            "apigee.deployments.setIamPolicy",
            "apigee.developerappattributes.list",
            "apigee.developerapps.list",
            "apigee.developerattributes.list",
            "apigee.developers.list",
            "apigee.developersubscriptions.list",
            "apigee.dnsZones.list",
            "apigee.endpointattachments.list",
            "apigee.envgroupattachments.list",
            "apigee.envgroups.list",
            "apigee.environments.getIamPolicy",
            "apigee.environments.list",
            "apigee.environments.setIamPolicy",
            "apigee.exports.list",
            "apigee.flowhooks.list",
            "apigee.hostqueries.list",
            "apigee.hostsecurityreports.list",
            "apigee.instanceattachments.list",
            "apigee.instances.list",
            "apigee.keystorealiases.list",
            "apigee.keystores.list",
            "apigee.keyvaluemapentries.list",
            "apigee.keyvaluemaps.list",
            "apigee.nataddresses.list",
            "apigee.operations.list",
            "apigee.organizations.list",
            "apigee.portals.list",
            "apigee.proxies.list",
            "apigee.proxyrevisions.list",
            "apigee.queries.list",
            "apigee.rateplans.list",
            "apigee.references.list",
            "apigee.reports.list",
            "apigee.resourcefiles.list",
            "apigee.securityActions.list",
            "apigee.securityFeedback.list",
            "apigee.securityIncidents.list",
            "apigee.securityMonitoringConditions.list",
            "apigee.securityProfiles.list",
            "apigee.securityProfilesV2.list",
            "apigee.securityreports.list",
            "apigee.sharedflowrevisions.list",
            "apigee.sharedflows.list",
            "apigee.spaces.getIamPolicy",
            "apigee.spaces.list",
            "apigee.spaces.setIamPolicy",
            "apigee.targetservers.list",
            "apigee.traceconfigoverrides.list",
            "apigee.tracesessions.list",
            "apigeeconnect.connections.list",
            "apigeeregistry.apis.getIamPolicy",
            "apigeeregistry.apis.list",
            "apigeeregistry.apis.setIamPolicy",
            "apigeeregistry.artifacts.getIamPolicy",
            "apigeeregistry.artifacts.list",
            "apigeeregistry.artifacts.setIamPolicy",
            "apigeeregistry.deployments.list",
            "apigeeregistry.locations.list",
            "apigeeregistry.operations.list",
            "apigeeregistry.specs.getIamPolicy",
            "apigeeregistry.specs.list",
            "apigeeregistry.specs.setIamPolicy",
            "apigeeregistry.versions.getIamPolicy",
            "apigeeregistry.versions.list",
            "apigeeregistry.versions.setIamPolicy",
            "apihub.apiHubInstances.list",
            "apihub.apiOperations.list",
            "apihub.apis.list",
            "apihub.attributes.list",
            "apihub.curations.list",
            "apihub.definitions.list",
            "apihub.dependencies.list",
            "apihub.deployments.list",
            "apihub.externalApis.list",
            "apihub.hostProjectRegistrations.list",
            "apihub.llmEnablements.list",
            "apihub.operations.list",
            "apihub.plugininstances.list",
            "apihub.plugins.list",
            "apihub.runTimeProjectAttachments.list",
            "apihub.specs.list",
            "apihub.versions.list",
            "apikeys.keys.list",
            "apim.apiObservations.list",
            "apim.apiOperations.list",
            "apim.locations.list",
            "apim.observationJobs.list",
            "apim.observationSources.list",
            "apim.operations.list",
            "appengine.instances.list",
            "appengine.memcache.list",
            "appengine.operations.list",
            "appengine.services.list",
            "appengine.versions.list",
            "apphub.applications.getIamPolicy",
            "apphub.applications.list",
            "apphub.applications.setIamPolicy",
            "apphub.discoveredServices.list",
            "apphub.discoveredWorkloads.list",
            "apphub.locations.list",
            "apphub.operations.list",
            "apphub.serviceProjectAttachments.list",
            "apphub.services.list",
            "apphub.workloads.list",
            "applianceactivation.rttCommands.list",
            "artifactregistry.attachments.list",
            "artifactregistry.dockerimages.list",
            "artifactregistry.files.list",
            "artifactregistry.locations.list",
            "artifactregistry.mavenartifacts.list",
            "artifactregistry.npmpackages.list",
            "artifactregistry.packages.list",
            "artifactregistry.pythonpackages.list",
            "artifactregistry.repositories.getIamPolicy",
            "artifactregistry.repositories.list",
            "artifactregistry.repositories.setIamPolicy",
            "artifactregistry.rules.list",
            "artifactregistry.tags.list",
            "artifactregistry.versions.list",
            "assuredoss.locations.list",
            "assuredoss.metadata.list",
            "assuredoss.operations.list",
            "assuredworkloads.operations.list",
            "assuredworkloads.updates.list",
            "assuredworkloads.violations.list",
            "assuredworkloads.workload.list",
            "auditmanager.auditReports.list",
            "auditmanager.controlReports.list",
            "auditmanager.controls.list",
            "auditmanager.customComplianceFrameworks.list",
            "auditmanager.findings.list",
            "auditmanager.locations.list",
            "auditmanager.operations.list",
            "auditmanager.resourceEnrollmentStatuses.list",
            "automl.annotationSpecs.list",
            "automl.annotations.list",
            "automl.columnSpecs.list",
            "automl.datasets.getIamPolicy",
            "automl.datasets.list",
            "automl.datasets.setIamPolicy",
            "automl.examples.list",
            "automl.files.list",
            "automl.humanAnnotationTasks.list",
            "automl.locations.getIamPolicy",
            "automl.locations.list",
            "automl.locations.setIamPolicy",
            "automl.modelEvaluations.list",
            "automl.models.getIamPolicy",
            "automl.models.list",
            "automl.models.setIamPolicy",
            "automl.operations.list",
            "automl.tableSpecs.list",
            "automlrecommendations.apiKeys.list",
            "automlrecommendations.catalogItems.list",
            "automlrecommendations.catalogs.list",
            "automlrecommendations.eventStores.list",
            "automlrecommendations.events.list",
            "automlrecommendations.placements.list",
            "automlrecommendations.recommendations.list",
            "autoscaling.sites.getIamPolicy",
            "autoscaling.sites.setIamPolicy",
            "backupdr.backupPlanAssociations.list",
            "backupdr.backupPlans.list",
            "backupdr.backupVaults.list",
            "backupdr.bvbackups.list",
            "backupdr.bvdataSources.list",
            "backupdr.locations.list",
            "backupdr.managementServers.getIamPolicy",
            "backupdr.managementServers.list",
            "backupdr.managementServers.setIamPolicy",
            "backupdr.operations.list",
            "backupdr.resourceBackupConfigs.list",
            "baremetalsolution.instancequotas.list",
            "baremetalsolution.instances.list",
            "baremetalsolution.luns.list",
            "baremetalsolution.maintenanceevents.list",
            "baremetalsolution.networkquotas.list",
            "baremetalsolution.networks.list",
            "baremetalsolution.nfsshares.list",
            "baremetalsolution.osimages.list",
            "baremetalsolution.pods.list",
            "baremetalsolution.procurements.list",
            "baremetalsolution.skus.list",
            "baremetalsolution.snapshotschedulepolicies.list",
            "baremetalsolution.sshKeys.list",
            "baremetalsolution.storageaggregatepools.list",
            "baremetalsolution.volumequotas.list",
            "baremetalsolution.volumes.list",
            "baremetalsolution.volumesnapshots.list",
            "batch.jobs.list",
            "batch.locations.list",
            "batch.operations.list",
            "batch.resourceAllowances.list",
            "batch.tasks.list",
            "beyondcorp.appConnections.getIamPolicy",
            "beyondcorp.appConnections.list",
            "beyondcorp.appConnections.setIamPolicy",
            "beyondcorp.appConnectors.getIamPolicy",
            "beyondcorp.appConnectors.list",
            "beyondcorp.appConnectors.setIamPolicy",
            "beyondcorp.appGateways.getIamPolicy",
            "beyondcorp.appGateways.list",
            "beyondcorp.appGateways.setIamPolicy",
            "beyondcorp.clientConnectorServices.getIamPolicy",
            "beyondcorp.clientConnectorServices.list",
            "beyondcorp.clientConnectorServices.setIamPolicy",
            "beyondcorp.clientGateways.getIamPolicy",
            "beyondcorp.clientGateways.list",
            "beyondcorp.clientGateways.setIamPolicy",
            "beyondcorp.locations.list",
            "beyondcorp.operations.list",
            "beyondcorp.partnerTenants.list",
            "beyondcorp.proxyConfigs.list",
            "beyondcorp.subscriptions.list",
            "biglake.catalogs.list",
            "biglake.databases.list",
            "biglake.locks.list",
            "biglake.tables.list",
            "bigquery.capacityCommitments.list",
            "bigquery.connections.getIamPolicy",
            "bigquery.connections.list",
            "bigquery.connections.setIamPolicy",
            "bigquery.dataPolicies.getIamPolicy",
            "bigquery.dataPolicies.list",
            "bigquery.dataPolicies.setIamPolicy",
            "bigquery.datasets.getIamPolicy",
            "bigquery.datasets.setIamPolicy",
            "bigquery.jobs.list",
            "bigquery.models.list",
            "bigquery.reservationAssignments.list",
            "bigquery.reservations.list",
            "bigquery.routines.list",
            "bigquery.rowAccessPolicies.getIamPolicy",
            "bigquery.rowAccessPolicies.list",
            "bigquery.rowAccessPolicies.setIamPolicy",
            "bigquery.savedqueries.list",
            "bigquery.tables.getIamPolicy",
            "bigquery.tables.list",
            "bigquery.tables.setIamPolicy",
            "bigquerymigration.subtasks.list",
            "bigquerymigration.workflows.list",
            "bigtable.appProfiles.list",
            "bigtable.authorizedViews.getIamPolicy",
            "bigtable.authorizedViews.list",
            "bigtable.authorizedViews.setIamPolicy",
            "bigtable.backups.getIamPolicy",
            "bigtable.backups.list",
            "bigtable.backups.setIamPolicy",
            "bigtable.clusters.list",
            "bigtable.hotTablets.list",
            "bigtable.instances.getIamPolicy",
            "bigtable.instances.list",
            "bigtable.instances.setIamPolicy",
            "bigtable.keyvisualizer.list",
            "bigtable.locations.list",
            "bigtable.logicalViews.getIamPolicy",
            "bigtable.logicalViews.list",
            "bigtable.logicalViews.setIamPolicy",
            "bigtable.materializedViews.getIamPolicy",
            "bigtable.materializedViews.list",
            "bigtable.materializedViews.setIamPolicy",
            "bigtable.tables.getIamPolicy",
            "bigtable.tables.list",
            "bigtable.tables.setIamPolicy",
            "billing.accounts.getIamPolicy",
            "billing.accounts.list",
            "billing.accounts.setIamPolicy",
            "billing.anomalies.list",
            "billing.billingAccountPrices.list",
            "billing.billingAccountServices.list",
            "billing.billingAccountSkuGroupSkus.list",
            "billing.billingAccountSkuGroups.list",
            "billing.billingAccountSkus.list",
            "billing.budgets.list",
            "billing.credits.list",
            "billing.resourceAssociations.list",
            "billing.subscriptions.list",
            "binaryauthorization.attestors.getIamPolicy",
            "binaryauthorization.attestors.list",
            "binaryauthorization.attestors.setIamPolicy",
            "binaryauthorization.continuousValidationConfig.getIamPolicy",
            "binaryauthorization.continuousValidationConfig.setIamPolicy",
            "binaryauthorization.platformPolicies.list",
            "binaryauthorization.policy.getIamPolicy",
            "binaryauthorization.policy.setIamPolicy",
            "blockchainnodeengine.blockchainNodes.list",
            "blockchainnodeengine.locations.list",
            "blockchainnodeengine.operations.list",
            "blockchainvalidatormanager.blockchainValidatorConfigs.list",
            "blockchainvalidatormanager.locations.list",
            "blockchainvalidatormanager.operations.list",
            "capacityplanner.forecasts.list",
            "capacityplanner.usageHistories.list",
            "carestudio.patients.list",
            "certificatemanager.certissuanceconfigs.list",
            "certificatemanager.certmapentries.list",
            "certificatemanager.certmaps.list",
            "certificatemanager.certs.list",
            "certificatemanager.dnsauthorizations.list",
            "certificatemanager.locations.list",
            "certificatemanager.operations.list",
            "certificatemanager.trustconfigs.list",
            "chronicle.analyticValues.list",
            "chronicle.analytics.list",
            "chronicle.collectors.list",
            "chronicle.conversations.list",
            "chronicle.curatedRuleSetCategories.list",
            "chronicle.curatedRuleSetDeployments.list",
            "chronicle.curatedRuleSets.list",
            "chronicle.curatedRules.list",
            "chronicle.dashboardCharts.list",
            "chronicle.dashboardQueries.list",
            "chronicle.dashboards.list",
            "chronicle.dataAccessLabels.list",
            "chronicle.dataAccessScopes.list",
            "chronicle.dataTableRows.list",
            "chronicle.dataTables.list",
            "chronicle.dataTaps.list",
            "chronicle.enrichmentControls.list",
            "chronicle.entities.list",
            "chronicle.errorNotificationConfigs.list",
            "chronicle.extensionValidationReports.list",
            "chronicle.federationGroups.list",
            "chronicle.feedSourceTypeSchemas.list",
            "chronicle.feeds.list",
            "chronicle.findingsRefinementDeployments.list",
            "chronicle.findingsRefinements.list",
            "chronicle.forwarders.list",
            "chronicle.ingestionLogLabels.list",
            "chronicle.ingestionLogNamespaces.list",
            "chronicle.iocMatches.list",
            "chronicle.logTypeSchemas.list",
            "chronicle.logTypes.list",
            "chronicle.logs.list",
            "chronicle.messages.list",
            "chronicle.nativeDashboards.list",
            "chronicle.operations.list",
            "chronicle.parserExtensions.list",
            "chronicle.parsers.list",
            "chronicle.parsingErrors.list",
            "chronicle.referenceLists.list",
            "chronicle.retrohunts.list",
            "chronicle.ruleDeployments.list",
            "chronicle.ruleExecutionErrors.list",
            "chronicle.rules.list",
            "chronicle.searchQueries.list",
            "chronicle.validationErrors.list",
            "chronicle.watchlists.list",
            "chroniclesm.gcpAssociations.list",
            "clientauthconfig.brands.list",
            "clientauthconfig.clients.list",
            "cloud.locations.list",
            "cloudaicompanion.codeRepositoryIndexes.list",
            "cloudaicompanion.codeToolsSettings.list",
            "cloudaicompanion.dataSharingWithGoogleSettings.list",
            "cloudaicompanion.geminiGcpEnablementSettings.list",
            "cloudaicompanion.loggingSettings.list",
            "cloudaicompanion.operations.list",
            "cloudaicompanion.releaseChannelSettings.list",
            "cloudaicompanion.repositoryGroups.getIamPolicy",
            "cloudaicompanion.repositoryGroups.list",
            "cloudaicompanion.repositoryGroups.setIamPolicy",
            "cloudaicompanion.topics.getIamPolicy",
            "cloudaicompanion.topics.setIamPolicy",
            "cloudasset.assets.searchAllResources",
            "cloudasset.feeds.list",
            "cloudasset.othercloudconnections.list",
            "cloudasset.savedqueries.list",
            "cloudbuild.builds.list",
            "cloudbuild.connections.getIamPolicy",
            "cloudbuild.connections.list",
            "cloudbuild.connections.setIamPolicy",
            "cloudbuild.integrations.list",
            "cloudbuild.locations.list",
            "cloudbuild.operations.list",
            "cloudbuild.repositories.list",
            "cloudbuild.workerpools.list",
            "cloudcontrolspartner.accessapprovalrequests.list",
            "cloudcontrolspartner.customers.list",
            "cloudcontrolspartner.violations.list",
            "cloudcontrolspartner.workloads.list",
            "clouddebugger.breakpoints.list",
            "clouddebugger.debuggees.list",
            "clouddeploy.automationRuns.list",
            "clouddeploy.automations.list",
            "clouddeploy.customTargetTypes.getIamPolicy",
            "clouddeploy.customTargetTypes.list",
            "clouddeploy.customTargetTypes.setIamPolicy",
            "clouddeploy.deliveryPipelines.getIamPolicy",
            "clouddeploy.deliveryPipelines.list",
            "clouddeploy.deliveryPipelines.setIamPolicy",
            "clouddeploy.deployPolicies.getIamPolicy",
            "clouddeploy.deployPolicies.list",
            "clouddeploy.deployPolicies.setIamPolicy",
            "clouddeploy.jobRuns.list",
            "clouddeploy.locations.list",
            "clouddeploy.operations.list",
            "clouddeploy.releases.list",
            "clouddeploy.rollouts.list",
            "clouddeploy.targets.getIamPolicy",
            "clouddeploy.targets.list",
            "clouddeploy.targets.setIamPolicy",
            "cloudfunctions.functions.getIamPolicy",
            "cloudfunctions.functions.list",
            "cloudfunctions.functions.setIamPolicy",
            "cloudfunctions.locations.list",
            "cloudfunctions.operations.list",
            "cloudjobdiscovery.companies.list",
            "cloudkms.cryptoKeyVersions.list",
            "cloudkms.cryptoKeys.getIamPolicy",
            "cloudkms.cryptoKeys.list",
            "cloudkms.cryptoKeys.setIamPolicy",
            "cloudkms.ekmConfigs.getIamPolicy",
            "cloudkms.ekmConfigs.setIamPolicy",
            "cloudkms.ekmConnections.getIamPolicy",
            "cloudkms.ekmConnections.list",
            "cloudkms.ekmConnections.setIamPolicy",
            "cloudkms.importJobs.getIamPolicy",
            "cloudkms.importJobs.list",
            "cloudkms.importJobs.setIamPolicy",
            "cloudkms.keyHandles.list",
            "cloudkms.keyRings.getIamPolicy",
            "cloudkms.keyRings.list",
            "cloudkms.keyRings.setIamPolicy",
            "cloudkms.locations.list",
            "cloudnotifications.activities.list",
            "cloudonefs.isiloncloud.com/clusters.list",
            "cloudonefs.isiloncloud.com/fileshares.list",
            "cloudprivatecatalogproducer.associations.list",
            "cloudprivatecatalogproducer.catalogAssociations.list",
            "cloudprivatecatalogproducer.catalogs.getIamPolicy",
            "cloudprivatecatalogproducer.catalogs.list",
            "cloudprivatecatalogproducer.catalogs.setIamPolicy",
            "cloudprivatecatalogproducer.producerCatalogs.getIamPolicy",
            "cloudprivatecatalogproducer.producerCatalogs.list",
            "cloudprivatecatalogproducer.producerCatalogs.setIamPolicy",
            "cloudprivatecatalogproducer.products.getIamPolicy",
            "cloudprivatecatalogproducer.products.list",
            "cloudprivatecatalogproducer.products.setIamPolicy",
            "cloudprofiler.profiles.list",
            "cloudscheduler.jobs.list",
            "cloudscheduler.locations.list",
            "cloudsecurityscanner.crawledurls.list",
            "cloudsecurityscanner.results.list",
            "cloudsecurityscanner.scanruns.list",
            "cloudsecurityscanner.scans.list",
            "cloudsql.backupRuns.list",
            "cloudsql.databases.list",
            "cloudsql.instances.list",
            "cloudsql.sslCerts.list",
            "cloudsql.users.list",
            "cloudsupport.accounts.getIamPolicy",
            "cloudsupport.accounts.list",
            "cloudsupport.accounts.setIamPolicy",
            "cloudsupport.techCases.list",
            "cloudtasks.locations.list",
            "cloudtasks.queues.getIamPolicy",
            "cloudtasks.queues.list",
            "cloudtasks.queues.setIamPolicy",
            "cloudtasks.tasks.list",
            "cloudtestservice.devicesession.list",
            "cloudtoolresults.executions.list",
            "cloudtoolresults.histories.list",
            "cloudtoolresults.steps.list",
            "cloudtrace.insights.list",
            "cloudtrace.tasks.list",
            "cloudtrace.traceScopes.list",
            "cloudtrace.traces.list",
            "cloudtranslate.adaptiveMtDatasets.list",
            "cloudtranslate.adaptiveMtFiles.list",
            "cloudtranslate.adaptiveMtSentences.list",
            "cloudtranslate.customModels.list",
            "cloudtranslate.datasets.list",
            "cloudtranslate.glossaries.list",
            "cloudtranslate.glossaryentries.list",
            "cloudtranslate.locations.list",
            "cloudtranslate.operations.list",
            "cloudvolumesgcp-api.netapp.com/activeDirectories.list",
            "cloudvolumesgcp-api.netapp.com/ipRanges.list",
            "cloudvolumesgcp-api.netapp.com/jobs.list",
            "cloudvolumesgcp-api.netapp.com/regions.list",
            "cloudvolumesgcp-api.netapp.com/serviceLevels.list",
            "cloudvolumesgcp-api.netapp.com/snapshots.list",
            "cloudvolumesgcp-api.netapp.com/volumereplication.list",
            "cloudvolumesgcp-api.netapp.com/volumes.list",
            "commerceagreementpublishing.agreements.list",
            "commerceagreementpublishing.documents.list",
            "commercebusinessenablement.operations.list",
            "commercebusinessenablement.partnerAccounts.list",
            "commercebusinessenablement.refunds.list",
            "commercebusinessenablement.resellerDiscountOffers.list",
            "commercebusinessenablement.resellerPrivateOfferPlans.list",
            "commercebusinessenablement.resellerRestrictions.list",
            "commerceoffercatalog.agreements.list",
            "commerceoffercatalog.documents.list",
            "commerceorggovernance.collectionRequestApprovals.list",
            "commerceorggovernance.collections.list",
            "commerceorggovernance.populateCollectionJobs.list",
            "commerceorggovernance.services.list",
            "commerceprice.events.list",
            "commerceprice.privateoffers.list",
            "composer.dags.list",
            "composer.environments.list",
            "composer.imageversions.list",
            "composer.operations.list",
            "composer.userworkloadsconfigmaps.list",
            "composer.userworkloadssecrets.list",
            "compute.acceleratorTypes.list",
            "compute.addresses.list",
            "compute.autoscalers.list",
            "compute.backendBuckets.getIamPolicy",
            "compute.backendBuckets.list",
            "compute.backendBuckets.setIamPolicy",
            "compute.backendServices.getIamPolicy",
            "compute.backendServices.list",
            "compute.backendServices.setIamPolicy",
            "compute.commitments.list",
            "compute.crossSiteNetworks.list",
            "compute.diskTypes.list",
            "compute.disks.getIamPolicy",
            "compute.disks.list",
            "compute.disks.setIamPolicy",
            "compute.externalVpnGateways.list",
            "compute.firewallPolicies.getIamPolicy",
            "compute.firewallPolicies.list",
            "compute.firewallPolicies.setIamPolicy",
            "compute.firewalls.list",
            "compute.forwardingRules.list",
            "compute.futureReservations.getIamPolicy",
            "compute.futureReservations.list",
            "compute.futureReservations.setIamPolicy",
            "compute.globalAddresses.list",
            "compute.globalForwardingRules.list",
            "compute.globalNetworkEndpointGroups.list",
            "compute.globalOperations.getIamPolicy",
            "compute.globalOperations.list",
            "compute.globalOperations.setIamPolicy",
            "compute.globalPublicDelegatedPrefixes.list",
            "compute.healthChecks.list",
            "compute.httpHealthChecks.list",
            "compute.httpsHealthChecks.list",
            "compute.images.getIamPolicy",
            "compute.images.list",
            "compute.images.setIamPolicy",
            "compute.instanceGroupManagers.list",
            "compute.instanceGroups.list",
            "compute.instanceTemplates.getIamPolicy",
            "compute.instanceTemplates.list",
            "compute.instanceTemplates.setIamPolicy",
            "compute.instances.getIamPolicy",
            "compute.instances.list",
            "compute.instances.setIamPolicy",
            "compute.instantSnapshots.getIamPolicy",
            "compute.instantSnapshots.list",
            "compute.instantSnapshots.setIamPolicy",
            "compute.interconnectAttachments.list",
            "compute.interconnectLocations.list",
            "compute.interconnectRemoteLocations.list",
            "compute.interconnects.list",
            "compute.licenseCodes.getIamPolicy",
            "compute.licenseCodes.list",
            "compute.licenseCodes.setIamPolicy",
            "compute.licenses.getIamPolicy",
            "compute.licenses.list",
            "compute.licenses.setIamPolicy",
            "compute.machineImages.getIamPolicy",
            "compute.machineImages.list",
            "compute.machineImages.setIamPolicy",
            "compute.machineTypes.list",
            "compute.multiMig.list",
            "compute.networkAttachments.getIamPolicy",
            "compute.networkAttachments.list",
            "compute.networkAttachments.setIamPolicy",
            "compute.networkEdgeSecurityServices.list",
            "compute.networkEndpointGroups.list",
            "compute.networkProfiles.list",
            "compute.networks.list",
            "compute.nodeGroups.getIamPolicy",
            "compute.nodeGroups.list",
            "compute.nodeGroups.setIamPolicy",
            "compute.nodeTemplates.getIamPolicy",
            "compute.nodeTemplates.list",
            "compute.nodeTemplates.setIamPolicy",
            "compute.nodeTypes.list",
            "compute.packetMirrorings.list",
            "compute.publicAdvertisedPrefixes.list",
            "compute.publicDelegatedPrefixes.list",
            "compute.regionBackendServices.getIamPolicy",
            "compute.regionBackendServices.list",
            "compute.regionBackendServices.setIamPolicy",
            "compute.regionFirewallPolicies.getIamPolicy",
            "compute.regionFirewallPolicies.list",
            "compute.regionFirewallPolicies.setIamPolicy",
            "compute.regionHealthCheckServices.list",
            "compute.regionHealthChecks.list",
            "compute.regionNetworkEndpointGroups.list",
            "compute.regionNotificationEndpoints.list",
            "compute.regionOperations.getIamPolicy",
            "compute.regionOperations.list",
            "compute.regionOperations.setIamPolicy",
            "compute.regionSecurityPolicies.list",
            "compute.regionSslCertificates.list",
            "compute.regionSslPolicies.list",
            "compute.regionTargetHttpProxies.list",
            "compute.regionTargetHttpsProxies.list",
            "compute.regionTargetTcpProxies.list",
            "compute.regionUrlMaps.list",
            "compute.regions.list",
            "compute.reservationBlocks.list",
            "compute.reservations.list",
            "compute.resourcePolicies.getIamPolicy",
            "compute.resourcePolicies.list",
            "compute.resourcePolicies.setIamPolicy",
            "compute.routers.list",
            "compute.routes.list",
            "compute.securityPolicies.list",
            "compute.serviceAttachments.getIamPolicy",
            "compute.serviceAttachments.list",
            "compute.serviceAttachments.setIamPolicy",
            "compute.snapshots.getIamPolicy",
            "compute.snapshots.list",
            "compute.snapshots.setIamPolicy",
            "compute.sslCertificates.list",
            "compute.sslPolicies.list",
            "compute.storagePools.getIamPolicy",
            "compute.storagePools.list",
            "compute.storagePools.setIamPolicy",
            "compute.subnetworks.getIamPolicy",
            "compute.subnetworks.list",
            "compute.subnetworks.setIamPolicy",
            "compute.targetGrpcProxies.list",
            "compute.targetHttpProxies.list",
            "compute.targetHttpsProxies.list",
            "compute.targetInstances.list",
            "compute.targetPools.list",
            "compute.targetSslProxies.list",
            "compute.targetTcpProxies.list",
            "compute.targetVpnGateways.list",
            "compute.urlMaps.list",
            "compute.vpnGateways.list",
            "compute.vpnTunnels.list",
            "compute.wireGroups.list",
            "compute.zoneOperations.getIamPolicy",
            "compute.zoneOperations.list",
            "compute.zoneOperations.setIamPolicy",
            "compute.zones.list",
            "confidentialcomputing.locations.list",
            "config.deployments.getIamPolicy",
            "config.deployments.list",
            "config.deployments.setIamPolicy",
            "config.locations.list",
            "config.operations.list",
            "config.previews.list",
            "config.resources.list",
            "config.revisions.list",
            "config.terraformversions.list",
            "configdelivery.fleetPackages.list",
            "configdelivery.locations.list",
            "configdelivery.operations.list",
            "configdelivery.releases.list",
            "configdelivery.resourceBundles.list",
            "configdelivery.rollouts.list",
            "connectors.actions.list",
            "connectors.connections.getIamPolicy",
            "connectors.connections.list",
            "connectors.connections.setIamPolicy",
            "connectors.connectors.list",
            "connectors.customConnectorVersions.getIamPolicy",
            "connectors.customConnectorVersions.list",
            "connectors.customConnectorVersions.setIamPolicy",
            "connectors.customConnectors.getIamPolicy",
            "connectors.customConnectors.list",
            "connectors.customConnectors.setIamPolicy",
            "connectors.endpointAttachments.getIamPolicy",
            "connectors.endpointAttachments.list",
            "connectors.endpointAttachments.setIamPolicy",
            "connectors.entities.list",
            "connectors.entityTypes.list",
            "connectors.eventSubscriptions.list",
            "connectors.eventtypes.list",
            "connectors.locations.list",
            "connectors.managedZones.getIamPolicy",
            "connectors.managedZones.list",
            "connectors.managedZones.setIamPolicy",
            "connectors.operations.list",
            "connectors.providers.list",
            "connectors.versions.list",
            "consumerprocurement.accounts.list",
            "consumerprocurement.consents.list",
            "consumerprocurement.entitlements.list",
            "consumerprocurement.events.list",
            "consumerprocurement.freeTrials.list",
            "consumerprocurement.orderAttributions.list",
            "consumerprocurement.orders.list",
            "contactcenteraiplatform.contactCenters.list",
            "contactcenteraiplatform.locations.list",
            "contactcenteraiplatform.operations.list",
            "contactcenterinsights.analyses.list",
            "contactcenterinsights.analysisRules.list",
            "contactcenterinsights.assessmentRules.list",
            "contactcenterinsights.authorizedAnalyses.list",
            "contactcenterinsights.authorizedConversations.list",
            "contactcenterinsights.authorizedFeedbackLabels.list",
            "contactcenterinsights.authorizedOperations.list",
            "contactcenterinsights.authorizedViewSets.list",
            "contactcenterinsights.authorizedViews.getIamPolicy",
            "contactcenterinsights.authorizedViews.list",
            "contactcenterinsights.authorizedViews.setIamPolicy",
            "contactcenterinsights.conversations.list",
            "contactcenterinsights.faqEntries.list",
            "contactcenterinsights.faqModels.list",
            "contactcenterinsights.feedbackLabels.list",
            "contactcenterinsights.issueModels.list",
            "contactcenterinsights.issues.list",
            "contactcenterinsights.operations.list",
            "contactcenterinsights.phraseMatchers.list",
            "contactcenterinsights.qaQuestionTags.list",
            "contactcenterinsights.qaQuestions.list",
            "contactcenterinsights.qaScorecardRevisions.list",
            "contactcenterinsights.qaScorecards.list",
            "contactcenterinsights.views.list",
            "contactcenterinsights.visibilityLabels.list",
            "container.apiServices.list",
            "container.auditSinks.list",
            "container.backendConfigs.list",
            "container.bindings.list",
            "container.certificateSigningRequests.list",
            "container.clusterRoleBindings.list",
            "container.clusterRoles.list",
            "container.clusters.list",
            "container.componentStatuses.list",
            "container.configMaps.list",
            "container.controllerRevisions.list",
            "container.cronJobs.list",
            "container.csiDrivers.list",
            "container.csiNodeInfos.list",
            "container.csiNodes.list",
            "container.customResourceDefinitions.list",
            "container.daemonSets.list",
            "container.deployments.list",
            "container.endpointSlices.list",
            "container.endpoints.list",
            "container.events.list",
            "container.frontendConfigs.list",
            "container.horizontalPodAutoscalers.list",
            "container.ingresses.list",
            "container.initializerConfigurations.list",
            "container.jobs.list",
            "container.leases.list",
            "container.limitRanges.list",
            "container.localSubjectAccessReviews.list",
            "container.managedCertificates.list",
            "container.mutatingWebhookConfigurations.list",
            "container.namespaces.list",
            "container.networkPolicies.list",
            "container.nodes.list",
            "container.operations.list",
            "container.persistentVolumeClaims.list",
            "container.persistentVolumes.list",
            "container.petSets.list",
            "container.podDisruptionBudgets.list",
            "container.podPresets.list",
            "container.podSecurityPolicies.list",
            "container.podTemplates.list",
            "container.pods.list",
            "container.priorityClasses.list",
            "container.replicaSets.list",
            "container.replicationControllers.list",
            "container.resourceQuotas.list",
            "container.roleBindings.list",
            "container.roles.list",
            "container.runtimeClasses.list",
            "container.scheduledJobs.list",
            "container.selfSubjectAccessReviews.list",
            "container.serviceAccounts.list",
            "container.services.list",
            "container.statefulSets.list",
            "container.storageClasses.list",
            "container.storageStates.list",
            "container.storageVersionMigrations.list",
            "container.subjectAccessReviews.list",
            "container.thirdPartyObjects.list",
            "container.thirdPartyResources.list",
            "container.updateInfos.list",
            "container.validatingWebhookConfigurations.list",
            "container.volumeAttachments.list",
            "container.volumeSnapshotClasses.list",
            "container.volumeSnapshotContents.list",
            "container.volumeSnapshots.list",
            "containeranalysis.notes.getIamPolicy",
            "containeranalysis.notes.list",
            "containeranalysis.notes.setIamPolicy",
            "containeranalysis.occurrences.getIamPolicy",
            "containeranalysis.occurrences.list",
            "containeranalysis.occurrences.setIamPolicy",
            "containersecurity.clusterSummaries.list",
            "containersecurity.findings.list",
            "containersecurity.locations.list",
            "contentwarehouse.corpora.list",
            "contentwarehouse.documentSchemas.list",
            "contentwarehouse.documents.getIamPolicy",
            "contentwarehouse.documents.list",
            "contentwarehouse.documents.setIamPolicy",
            "contentwarehouse.ruleSets.list",
            "contentwarehouse.synonymSets.list",
            "databasecenter.*",
            "databaseinsights.locations.list",
            "databasesconsole.locations.list",
            "databasesconsole.operations.list",
            "databasesconsole.studioQueries.list",
            "datacatalog.categories.getIamPolicy",
            "datacatalog.categories.setIamPolicy",
            "datacatalog.entries.getIamPolicy",
            "datacatalog.entries.list",
            "datacatalog.entries.setIamPolicy",
            "datacatalog.entryGroups.getIamPolicy",
            "datacatalog.entryGroups.list",
            "datacatalog.entryGroups.setIamPolicy",
            "datacatalog.operations.list",
            "datacatalog.relationships.list",
            "datacatalog.tagTemplates.getIamPolicy",
            "datacatalog.tagTemplates.setIamPolicy",
            "datacatalog.taxonomies.getIamPolicy",
            "datacatalog.taxonomies.list",
            "datacatalog.taxonomies.setIamPolicy",
            "dataconnectors.connectors.getIamPolicy",
            "dataconnectors.connectors.list",
            "dataconnectors.connectors.setIamPolicy",
            "dataconnectors.locations.list",
            "dataconnectors.operations.list",
            "dataflow.jobs.list",
            "dataflow.messages.list",
            "dataflow.snapshots.list",
            "dataform.commentThreads.list",
            "dataform.comments.list",
            "dataform.compilationResults.list",
            "dataform.locations.list",
            "dataform.releaseConfigs.list",
            "dataform.repositories.getIamPolicy",
            "dataform.repositories.list",
            "dataform.repositories.setIamPolicy",
            "dataform.workflowConfigs.list",
            "dataform.workflowInvocations.list",
            "dataform.workspaces.getIamPolicy",
            "dataform.workspaces.list",
            "dataform.workspaces.setIamPolicy",
            "datafusion.artifacts.list",
            "datafusion.instances.getIamPolicy",
            "datafusion.instances.list",
            "datafusion.instances.setIamPolicy",
            "datafusion.locations.list",
            "datafusion.namespaces.getIamPolicy",
            "datafusion.namespaces.list",
            "datafusion.namespaces.setIamPolicy",
            "datafusion.operations.list",
            "datafusion.pipelineConnections.list",
            "datafusion.pipelines.list",
            "datafusion.profiles.list",
            "datafusion.secureKeys.list",
            "datalabeling.annotateddatasets.list",
            "datalabeling.annotationspecsets.list",
            "datalabeling.dataitems.list",
            "datalabeling.datasets.list",
            "datalabeling.examples.list",
            "datalabeling.instructions.list",
            "datalabeling.operations.list",
            "datalineage.events.list",
            "datalineage.processes.list",
            "datalineage.runs.list",
            "datamigration.connectionprofiles.getIamPolicy",
            "datamigration.connectionprofiles.list",
            "datamigration.connectionprofiles.setIamPolicy",
            "datamigration.conversionworkspaces.getIamPolicy",
            "datamigration.conversionworkspaces.list",
            "datamigration.conversionworkspaces.setIamPolicy",
            "datamigration.locations.list",
            "datamigration.mappingrules.getIamPolicy",
            "datamigration.mappingrules.setIamPolicy",
            "datamigration.migrationjobs.getIamPolicy",
            "datamigration.migrationjobs.list",
            "datamigration.migrationjobs.setIamPolicy",
            "datamigration.objects.list",
            "datamigration.operations.list",
            "datamigration.privateconnections.getIamPolicy",
            "datamigration.privateconnections.list",
            "datamigration.privateconnections.setIamPolicy",
            "datapipelines.jobs.list",
            "datapipelines.pipelines.list",
            "dataplex.aspectTypes.getIamPolicy",
            "dataplex.aspectTypes.list",
            "dataplex.aspectTypes.setIamPolicy",
            "dataplex.assetActions.list",
            "dataplex.assets.getIamPolicy",
            "dataplex.assets.list",
            "dataplex.assets.setIamPolicy",
            "dataplex.content.getIamPolicy",
            "dataplex.content.list",
            "dataplex.content.setIamPolicy",
            "dataplex.dataAttributeBindings.getIamPolicy",
            "dataplex.dataAttributeBindings.list",
            "dataplex.dataAttributeBindings.setIamPolicy",
            "dataplex.dataAttributes.getIamPolicy",
            "dataplex.dataAttributes.list",
            "dataplex.dataAttributes.setIamPolicy",
            "dataplex.dataTaxonomies.getIamPolicy",
            "dataplex.dataTaxonomies.list",
            "dataplex.dataTaxonomies.setIamPolicy",
            "dataplex.datascans.getIamPolicy",
            "dataplex.datascans.list",
            "dataplex.datascans.setIamPolicy",
            "dataplex.encryptionConfig.list",
            "dataplex.entities.list",
            "dataplex.entries.list",
            "dataplex.entryGroups.getIamPolicy",
            "dataplex.entryGroups.list",
            "dataplex.entryGroups.setIamPolicy",
            "dataplex.entryTypes.getIamPolicy",
            "dataplex.entryTypes.list",
            "dataplex.entryTypes.setIamPolicy",
            "dataplex.environments.getIamPolicy",
            "dataplex.environments.list",
            "dataplex.environments.setIamPolicy",
            "dataplex.lakeActions.list",
            "dataplex.lakes.getIamPolicy",
            "dataplex.lakes.list",
            "dataplex.lakes.setIamPolicy",
            "dataplex.locations.list",
            "dataplex.metadataJobs.list",
            "dataplex.operations.list",
            "dataplex.partitions.list",
            "dataplex.tasks.getIamPolicy",
            "dataplex.tasks.list",
            "dataplex.tasks.setIamPolicy",
            "dataplex.zoneActions.list",
            "dataplex.zones.getIamPolicy",
            "dataplex.zones.list",
            "dataplex.zones.setIamPolicy",
            "dataproc.agents.list",
            "dataproc.autoscalingPolicies.getIamPolicy",
            "dataproc.autoscalingPolicies.list",
            "dataproc.autoscalingPolicies.setIamPolicy",
            "dataproc.batches.list",
            "dataproc.clusters.getIamPolicy",
            "dataproc.clusters.list",
            "dataproc.clusters.setIamPolicy",
            "dataproc.jobs.getIamPolicy",
            "dataproc.jobs.list",
            "dataproc.jobs.setIamPolicy",
            "dataproc.operations.getIamPolicy",
            "dataproc.operations.list",
            "dataproc.operations.setIamPolicy",
            "dataproc.sessionTemplates.list",
            "dataproc.sessions.list",
            "dataproc.workflowTemplates.getIamPolicy",
            "dataproc.workflowTemplates.list",
            "dataproc.workflowTemplates.setIamPolicy",
            "dataprocessing.datasources.list",
            "dataprocessing.featurecontrols.list",
            "dataprocessing.groupcontrols.list",
            "dataprocrm.locations.list",
            "dataprocrm.nodePools.list",
            "dataprocrm.nodes.list",
            "dataprocrm.operations.list",
            "dataprocrm.workloads.list",
            "datastore.backupSchedules.list",
            "datastore.backups.list",
            "datastore.databases.list",
            "datastore.entities.list",
            "datastore.indexes.list",
            "datastore.keyVisualizerScans.list",
            "datastore.locations.list",
            "datastore.namespaces.list",
            "datastore.operations.list",
            "datastore.statistics.list",
            "datastore.userCreds.list",
            "datastream.connectionProfiles.getIamPolicy",
            "datastream.connectionProfiles.list",
            "datastream.connectionProfiles.setIamPolicy",
            "datastream.locations.list",
            "datastream.objects.list",
            "datastream.operations.list",
            "datastream.privateConnections.getIamPolicy",
            "datastream.privateConnections.list",
            "datastream.privateConnections.setIamPolicy",
            "datastream.routes.getIamPolicy",
            "datastream.routes.list",
            "datastream.routes.setIamPolicy",
            "datastream.streams.getIamPolicy",
            "datastream.streams.list",
            "datastream.streams.setIamPolicy",
            "datastudio.datasources.getIamPolicy",
            "datastudio.datasources.setIamPolicy",
            "datastudio.reports.getIamPolicy",
            "datastudio.reports.setIamPolicy",
            "datastudio.workspaces.getIamPolicy",
            "datastudio.workspaces.setIamPolicy",
            "deploymentmanager.compositeTypes.list",
            "deploymentmanager.deployments.getIamPolicy",
            "deploymentmanager.deployments.list",
            "deploymentmanager.deployments.setIamPolicy",
            "deploymentmanager.manifests.list",
            "deploymentmanager.operations.list",
            "deploymentmanager.resources.list",
            "deploymentmanager.typeProviders.list",
            "deploymentmanager.types.list",
            "designcenter.applicationTemplateRevisions.list",
            "designcenter.applicationTemplates.list",
            "designcenter.applications.list",
            "designcenter.catalogTemplateRevisions.list",
            "designcenter.catalogTemplates.list",
            "designcenter.catalogs.list",
            "designcenter.components.list",
            "designcenter.connections.list",
            "designcenter.locations.list",
            "designcenter.operations.list",
            "designcenter.sharedTemplateRevisions.list",
            "designcenter.sharedTemplates.list",
            "designcenter.shares.list",
            "designcenter.spaces.getIamPolicy",
            "designcenter.spaces.list",
            "designcenter.spaces.setIamPolicy",
            "developerconnect.accountConnectors.list",
            "developerconnect.connections.list",
            "developerconnect.gitRepositoryLinks.list",
            "developerconnect.locations.list",
            "developerconnect.operations.list",
            "developerconnect.providers.list",
            "developerconnect.users.list",
            "dialogflow.agents.list",
            "dialogflow.answerrecords.list",
            "dialogflow.callMatchers.list",
            "dialogflow.changelogs.list",
            "dialogflow.contexts.list",
            "dialogflow.conversationDatasets.list",
            "dialogflow.conversationModels.list",
            "dialogflow.conversationProfiles.list",
            "dialogflow.conversations.list",
            "dialogflow.deployments.list",
            "dialogflow.documents.list",
            "dialogflow.entityTypes.list",
            "dialogflow.environments.list",
            "dialogflow.examples.list",
            "dialogflow.experiments.list",
            "dialogflow.flows.list",
            "dialogflow.generators.list",
            "dialogflow.integrations.list",
            "dialogflow.intents.list",
            "dialogflow.knowledgeBases.list",
            "dialogflow.messages.list",
            "dialogflow.modelEvaluations.list",
            "dialogflow.pages.list",
            "dialogflow.participants.list",
            "dialogflow.phoneNumberOrders.list",
            "dialogflow.phoneNumbers.list",
            "dialogflow.playbooks.list",
            "dialogflow.securitySettings.list",
            "dialogflow.sessionEntityTypes.list",
            "dialogflow.smartMessagingEntries.list",
            "dialogflow.testcases.list",
            "dialogflow.tools.list",
            "dialogflow.transitionRouteGroups.list",
            "dialogflow.versions.list",
            "dialogflow.webhooks.list",
            "discoveryengine.branches.list",
            "discoveryengine.cmekConfigs.list",
            "discoveryengine.collections.list",
            "discoveryengine.controls.list",
            "discoveryengine.conversations.list",
            "discoveryengine.dataStores.list",
            "discoveryengine.documents.list",
            "discoveryengine.engines.list",
            "discoveryengine.evaluations.list",
            "discoveryengine.models.list",
            "discoveryengine.operations.list",
            "discoveryengine.sampleQueries.list",
            "discoveryengine.sampleQuerySets.list",
            "discoveryengine.schemas.list",
            "discoveryengine.servingConfigs.list",
            "discoveryengine.sessions.list",
            "discoveryengine.targetSites.list",
            "dlp.analyzeRiskTemplates.list",
            "dlp.columnDataProfiles.list",
            "dlp.connections.list",
            "dlp.deidentifyTemplates.list",
            "dlp.estimates.list",
            "dlp.fileStoreProfiles.list",
            "dlp.inspectFindings.list",
            "dlp.inspectTemplates.list",
            "dlp.jobTriggers.list",
            "dlp.jobs.list",
            "dlp.locations.list",
            "dlp.projectDataProfiles.list",
            "dlp.storedInfoTypes.list",
            "dlp.subscriptions.list",
            "dlp.tableDataProfiles.list",
            "dns.changes.list",
            "dns.dnsKeys.list",
            "dns.managedZoneOperations.list",
            "dns.managedZones.getIamPolicy",
            "dns.managedZones.list",
            "dns.managedZones.setIamPolicy",
            "dns.policies.list",
            "dns.resourceRecordSets.list",
            "dns.responsePolicies.list",
            "dns.responsePolicyRules.list",
            "documentai.dataLabelingJobs.list",
            "documentai.evaluations.list",
            "documentai.labelerPools.list",
            "documentai.locations.list",
            "documentai.processorTypes.list",
            "documentai.processorVersions.list",
            "documentai.processors.list",
            "domains.locations.list",
            "domains.operations.list",
            "domains.registrations.getIamPolicy",
            "domains.registrations.list",
            "domains.registrations.setIamPolicy",
            "earthengine.assets.getIamPolicy",
            "earthengine.assets.list",
            "earthengine.assets.setIamPolicy",
            "earthengine.operations.list",
            "edgecontainer.clusters.getIamPolicy",
            "edgecontainer.clusters.list",
            "edgecontainer.clusters.setIamPolicy",
            "edgecontainer.locations.list",
            "edgecontainer.machines.getIamPolicy",
            "edgecontainer.machines.list",
            "edgecontainer.machines.setIamPolicy",
            "edgecontainer.nodePools.getIamPolicy",
            "edgecontainer.nodePools.list",
            "edgecontainer.nodePools.setIamPolicy",
            "edgecontainer.operations.list",
            "edgecontainer.vpnConnections.getIamPolicy",
            "edgecontainer.vpnConnections.list",
            "edgecontainer.vpnConnections.setIamPolicy",
            "edgenetwork.interconnectAttachments.getIamPolicy",
            "edgenetwork.interconnectAttachments.list",
            "edgenetwork.interconnectAttachments.setIamPolicy",
            "edgenetwork.interconnects.getIamPolicy",
            "edgenetwork.interconnects.list",
            "edgenetwork.interconnects.setIamPolicy",
            "edgenetwork.locations.list",
            "edgenetwork.networks.getIamPolicy",
            "edgenetwork.networks.list",
            "edgenetwork.networks.setIamPolicy",
            "edgenetwork.operations.list",
            "edgenetwork.routers.getIamPolicy",
            "edgenetwork.routers.list",
            "edgenetwork.routers.setIamPolicy",
            "edgenetwork.routes.list",
            "edgenetwork.subnetworks.getIamPolicy",
            "edgenetwork.subnetworks.list",
            "edgenetwork.subnetworks.setIamPolicy",
            "edgenetwork.zones.list",
            "enterpriseknowledgegraph.entityReconciliationJobs.list",
            "enterprisepurchasing.gcveCuds.list",
            "enterprisepurchasing.gcveNodePricingInfo.list",
            "enterprisepurchasing.locations.list",
            "enterprisepurchasing.operations.list",
            "errorreporting.applications.list",
            "errorreporting.errorEvents.list",
            "errorreporting.groups.list",
            "essentialcontacts.contacts.list",
            "eventarc.channelConnections.getIamPolicy",
            "eventarc.channelConnections.list",
            "eventarc.channelConnections.setIamPolicy",
            "eventarc.channels.getIamPolicy",
            "eventarc.channels.list",
            "eventarc.channels.setIamPolicy",
            "eventarc.enrollments.getIamPolicy",
            "eventarc.enrollments.list",
            "eventarc.enrollments.setIamPolicy",
            "eventarc.googleApiSources.getIamPolicy",
            "eventarc.googleApiSources.list",
            "eventarc.googleApiSources.setIamPolicy",
            "eventarc.kafkaSources.getIamPolicy",
            "eventarc.kafkaSources.list",
            "eventarc.kafkaSources.setIamPolicy",
            "eventarc.locations.list",
            "eventarc.messageBuses.getIamPolicy",
            "eventarc.messageBuses.list",
            "eventarc.messageBuses.setIamPolicy",
            "eventarc.operations.list",
            "eventarc.pipelines.getIamPolicy",
            "eventarc.pipelines.list",
            "eventarc.pipelines.setIamPolicy",
            "eventarc.providers.list",
            "eventarc.triggers.getIamPolicy",
            "eventarc.triggers.list",
            "eventarc.triggers.setIamPolicy",
            "fcmdata.deliverydata.list",
            "file.backups.list",
            "file.instances.list",
            "file.locations.list",
            "file.operations.list",
            "financialservices.locations.list",
            "financialservices.operations.list",
            "financialservices.v1backtests.list",
            "financialservices.v1datasets.list",
            "financialservices.v1engineconfigs.list",
            "financialservices.v1engineversions.list",
            "financialservices.v1instances.list",
            "financialservices.v1models.list",
            "financialservices.v1predictions.list",
            "firebase.clients.list",
            "firebase.links.list",
            "firebase.playLinks.list",
            "firebaseabt.experiments.list",
            "firebaseappdistro.groups.list",
            "firebaseappdistro.releases.list",
            "firebaseappdistro.testers.list",
            "firebasecrashlytics.issues.list",
            "firebasedatabase.instances.list",
            "firebasedataconnect.connectorRevisions.list",
            "firebasedataconnect.connectors.list",
            "firebasedataconnect.locations.list",
            "firebasedataconnect.operations.list",
            "firebasedataconnect.schemaRevisions.list",
            "firebasedataconnect.schemas.list",
            "firebasedataconnect.services.list",
            "firebasedynamiclinks.destinations.list",
            "firebasedynamiclinks.domains.list",
            "firebasedynamiclinks.links.list",
            "firebaseextensions.configs.list",
            "firebaseextensionspublisher.extensions.list",
            "firebasehosting.sites.list",
            "firebaseinappmessaging.campaigns.list",
            "firebasemessagingcampaigns.campaigns.list",
            "firebaseml.models.list",
            "firebaseml.modelversions.list",
            "firebasenotifications.messages.list",
            "firebaserules.releases.list",
            "firebaserules.rulesets.list",
            "firebasestorage.buckets.list",
            "fleetengine.deliveryvehicles.list",
            "fleetengine.tasks.list",
            "fleetengine.vehicles.list",
            "gcp.redisenterprise.com/databases.list",
            "gcp.redisenterprise.com/subscriptions.list",
            "gdchardwaremanagement.changeLogEntries.list",
            "gdchardwaremanagement.comments.list",
            "gdchardwaremanagement.hardware.list",
            "gdchardwaremanagement.hardwareGroups.list",
            "gdchardwaremanagement.locations.list",
            "gdchardwaremanagement.operations.list",
            "gdchardwaremanagement.orders.list",
            "gdchardwaremanagement.sites.list",
            "gdchardwaremanagement.skus.list",
            "gdchardwaremanagement.zones.list",
            "genomics.datasets.getIamPolicy",
            "genomics.datasets.list",
            "genomics.datasets.setIamPolicy",
            "genomics.operations.list",
            "gkebackup.backupPlans.getIamPolicy",
            "gkebackup.backupPlans.list",
            "gkebackup.backupPlans.setIamPolicy",
            "gkebackup.backups.list",
            "gkebackup.locations.list",
            "gkebackup.operations.list",
            "gkebackup.restorePlans.getIamPolicy",
            "gkebackup.restorePlans.list",
            "gkebackup.restorePlans.setIamPolicy",
            "gkebackup.restores.list",
            "gkebackup.volumeBackups.list",
            "gkebackup.volumeRestores.list",
            "gkehub.features.getIamPolicy",
            "gkehub.features.list",
            "gkehub.features.setIamPolicy",
            "gkehub.locations.list",
            "gkehub.membershipbindings.list",
            "gkehub.membershipfeatures.list",
            "gkehub.memberships.getIamPolicy",
            "gkehub.memberships.list",
            "gkehub.memberships.setIamPolicy",
            "gkehub.namespaces.list",
            "gkehub.operations.list",
            "gkehub.rbacrolebindings.list",
            "gkehub.scopes.getIamPolicy",
            "gkehub.scopes.list",
            "gkehub.scopes.setIamPolicy",
            "gkemulticloud.attachedClusters.list",
            "gkemulticloud.awsClusters.list",
            "gkemulticloud.awsNodePools.list",
            "gkemulticloud.azureClients.list",
            "gkemulticloud.azureClusters.list",
            "gkemulticloud.azureNodePools.list",
            "gkemulticloud.operations.list",
            "gkeonprem.bareMetalAdminClusters.getIamPolicy",
            "gkeonprem.bareMetalAdminClusters.list",
            "gkeonprem.bareMetalAdminClusters.setIamPolicy",
            "gkeonprem.bareMetalClusters.getIamPolicy",
            "gkeonprem.bareMetalClusters.list",
            "gkeonprem.bareMetalClusters.setIamPolicy",
            "gkeonprem.bareMetalNodePools.getIamPolicy",
            "gkeonprem.bareMetalNodePools.list",
            "gkeonprem.bareMetalNodePools.setIamPolicy",
            "gkeonprem.locations.list",
            "gkeonprem.operations.list",
            "gkeonprem.vmwareAdminClusters.getIamPolicy",
            "gkeonprem.vmwareAdminClusters.list",
            "gkeonprem.vmwareAdminClusters.setIamPolicy",
            "gkeonprem.vmwareClusters.getIamPolicy",
            "gkeonprem.vmwareClusters.list",
            "gkeonprem.vmwareClusters.setIamPolicy",
            "gkeonprem.vmwareNodePools.getIamPolicy",
            "gkeonprem.vmwareNodePools.list",
            "gkeonprem.vmwareNodePools.setIamPolicy",
            "gsuiteaddons.deployments.list",
            "healthcare.annotationStores.getIamPolicy",
            "healthcare.annotationStores.list",
            "healthcare.annotationStores.setIamPolicy",
            "healthcare.annotations.list",
            "healthcare.attributeDefinitions.list",
            "healthcare.consentArtifacts.list",
            "healthcare.consentStores.getIamPolicy",
            "healthcare.consentStores.list",
            "healthcare.consentStores.setIamPolicy",
            "healthcare.consents.list",
            "healthcare.datasets.getIamPolicy",
            "healthcare.datasets.list",
            "healthcare.datasets.setIamPolicy",
            "healthcare.dicomStores.getIamPolicy",
            "healthcare.dicomStores.list",
            "healthcare.dicomStores.setIamPolicy",
            "healthcare.fhirStores.getIamPolicy",
            "healthcare.fhirStores.list",
            "healthcare.fhirStores.setIamPolicy",
            "healthcare.hl7V2Messages.list",
            "healthcare.hl7V2Stores.getIamPolicy",
            "healthcare.hl7V2Stores.list",
            "healthcare.hl7V2Stores.setIamPolicy",
            "healthcare.locations.list",
            "healthcare.operations.list",
            "healthcare.userDataMappings.list",
            "iam.denypolicies.list",
            "iam.googleapis.com/oauthClientCredentials.list",
            "iam.googleapis.com/oauthClients.list",
            "iam.googleapis.com/workforcePoolProviderKeys.list",
            "iam.googleapis.com/workforcePoolProviders.list",
            "iam.googleapis.com/workforcePools.getIamPolicy",
            "iam.googleapis.com/workforcePools.list",
            "iam.googleapis.com/workforcePools.setIamPolicy",
            "iam.googleapis.com/workloadIdentityPoolProviderKeys.list",
            "iam.googleapis.com/workloadIdentityPoolProviders.list",
            "iam.googleapis.com/workloadIdentityPools.list",
            "iam.policybindings.list",
            "iam.principalaccessboundarypolicies.list",
            "iam.roles.get",
            "iam.roles.list",
            "iam.serviceAccountKeys.list",
            "iam.serviceAccounts.get",
            "iam.serviceAccounts.getIamPolicy",
            "iam.serviceAccounts.list",
            "iam.serviceAccounts.setIamPolicy",
            "iap.tunnel.*",
            "iap.tunnelDestGroups.getIamPolicy",
            "iap.tunnelDestGroups.list",
            "iap.tunnelDestGroups.setIamPolicy",
            "iap.tunnelInstances.getIamPolicy",
            "iap.tunnelInstances.setIamPolicy",
            "iap.tunnelLocations.*",
            "iap.tunnelZones.*",
            "iap.web.getIamPolicy",
            "iap.web.setIamPolicy",
            "iap.webServiceVersions.getIamPolicy",
            "iap.webServiceVersions.setIamPolicy",
            "iap.webServices.getIamPolicy",
            "iap.webServices.setIamPolicy",
            "iap.webTypes.getIamPolicy",
            "iap.webTypes.setIamPolicy",
            "identitytoolkit.tenants.getIamPolicy",
            "identitytoolkit.tenants.list",
            "identitytoolkit.tenants.setIamPolicy",
            "ids.endpoints.getIamPolicy",
            "ids.endpoints.list",
            "ids.endpoints.setIamPolicy",
            "ids.locations.list",
            "ids.operations.list",
            "integrations.apigeeAuthConfigs.list",
            "integrations.apigeeCertificates.list",
            "integrations.apigeeExecutions.list",
            "integrations.apigeeIntegrationVers.list",
            "integrations.apigeeIntegrations.list",
            "integrations.apigeeSfdcChannels.list",
            "integrations.apigeeSfdcInstances.list",
            "integrations.apigeeSuspensions.list",
            "integrations.authConfigs.list",
            "integrations.certificates.list",
            "integrations.executions.list",
            "integrations.integrationVersions.list",
            "integrations.integrations.list",
            "integrations.securityAuthConfigs.list",
            "integrations.securityExecutions.list",
            "integrations.securityIntegTempVers.list",
            "integrations.securityIntegrationVers.list",
            "integrations.securityIntegrations.list",
            "integrations.sfdcChannels.list",
            "integrations.sfdcInstances.list",
            "integrations.suspensions.list",
            "integrations.testCases.list",
            "issuerswitch.accountManagerTransactions.list",
            "issuerswitch.complaintTransactions.list",
            "issuerswitch.financialTransactions.list",
            "issuerswitch.mandateTransactions.list",
            "issuerswitch.metadataTransactions.list",
            "issuerswitch.operations.list",
            "issuerswitch.ruleMetadata.list",
            "issuerswitch.ruleMetadataValues.list",
            "issuerswitch.rules.list",
            "krmapihosting.krmApiHosts.getIamPolicy",
            "krmapihosting.krmApiHosts.list",
            "krmapihosting.krmApiHosts.setIamPolicy",
            "krmapihosting.locations.list",
            "krmapihosting.operations.list",
            "licensemanager.configurations.list",
            "licensemanager.instances.list",
            "licensemanager.locations.list",
            "licensemanager.operations.list",
            "licensemanager.products.list",
            "lifesciences.operations.list",
            "livestream.assets.list",
            "livestream.channels.list",
            "livestream.clips.list",
            "livestream.events.list",
            "livestream.inputs.list",
            "livestream.locations.list",
            "livestream.operations.list",
            "logging.buckets.list",
            "logging.exclusions.list",
            "logging.links.list",
            "logging.locations.list",
            "logging.logEntries.list",
            "logging.logMetrics.list",
            "logging.logScopes.list",
            "logging.logServiceIndexes.list",
            "logging.logServices.list",
            "logging.logs.list",
            "logging.notificationRules.list",
            "logging.operations.list",
            "logging.privateLogEntries.list",
            "logging.queries.usePrivate",
            "logging.sinks.list",
            "logging.views.getIamPolicy",
            "logging.views.list",
            "logging.views.setIamPolicy",
            "looker.backups.list",
            "looker.instances.list",
            "looker.locations.list",
            "looker.operations.list",
            "maintenance.locations.list",
            "maintenance.resourceMaintenances.list",
            "managedflink.deployments.list",
            "managedflink.jobs.list",
            "managedflink.locations.list",
            "managedflink.operations.list",
            "managedflink.sessions.list",
            "managedidentities.backups.getIamPolicy",
            "managedidentities.backups.list",
            "managedidentities.backups.setIamPolicy",
            "managedidentities.domains.getIamPolicy",
            "managedidentities.domains.list",
            "managedidentities.domains.setIamPolicy",
            "managedidentities.locations.list",
            "managedidentities.operations.list",
            "managedidentities.peerings.getIamPolicy",
            "managedidentities.peerings.list",
            "managedidentities.peerings.setIamPolicy",
            "managedidentities.sqlintegrations.list",
            "managedkafka.clusters.list",
            "managedkafka.connectClusters.list",
            "managedkafka.connectors.list",
            "managedkafka.consumerGroups.list",
            "managedkafka.locations.list",
            "managedkafka.operations.list",
            "managedkafka.topics.list",
            "mapsadmin.clientMaps.list",
            "mapsadmin.clientStyleSheetSnapshots.list",
            "mapsadmin.clientStyles.list",
            "mapsadmin.mapViews.list",
            "mapsadmin.styleSnapshots.list",
            "mapsanalytics.metricMetadata.list",
            "mapsplatformdatasets.datasets.list",
            "marketplacesolutions.locations.list",
            "marketplacesolutions.operations.list",
            "marketplacesolutions.powerImages.list",
            "marketplacesolutions.powerInstances.list",
            "marketplacesolutions.powerNetworks.list",
            "marketplacesolutions.powerSshKeys.list",
            "marketplacesolutions.powerVolumes.list",
            "memcache.instances.list",
            "memcache.locations.list",
            "memcache.operations.list",
            "memorystore.backupCollections.list",
            "memorystore.backups.list",
            "memorystore.instances.list",
            "memorystore.locations.list",
            "memorystore.operations.list",
            "metastore.backups.getIamPolicy",
            "metastore.backups.list",
            "metastore.backups.setIamPolicy",
            "metastore.databases.getIamPolicy",
            "metastore.databases.list",
            "metastore.databases.setIamPolicy",
            "metastore.federations.getIamPolicy",
            "metastore.federations.list",
            "metastore.federations.setIamPolicy",
            "metastore.imports.list",
            "metastore.locations.list",
            "metastore.migrations.list",
            "metastore.operations.list",
            "metastore.services.getIamPolicy",
            "metastore.services.list",
            "metastore.services.setIamPolicy",
            "metastore.tables.getIamPolicy",
            "metastore.tables.list",
            "metastore.tables.setIamPolicy",
            "migrationcenter.assets.list",
            "migrationcenter.assetsExportJobs.list",
            "migrationcenter.discoveryClients.list",
            "migrationcenter.errorFrames.list",
            "migrationcenter.groups.list",
            "migrationcenter.importDataFiles.list",
            "migrationcenter.importJobs.list",
            "migrationcenter.locations.list",
            "migrationcenter.operations.list",
            "migrationcenter.preferenceSets.list",
            "migrationcenter.relations.list",
            "migrationcenter.reportConfigs.list",
            "migrationcenter.reports.list",
            "migrationcenter.sources.list",
            "ml.jobs.getIamPolicy",
            "ml.jobs.list",
            "ml.jobs.setIamPolicy",
            "ml.locations.list",
            "ml.models.getIamPolicy",
            "ml.models.list",
            "ml.models.setIamPolicy",
            "ml.operations.list",
            "ml.studies.getIamPolicy",
            "ml.studies.list",
            "ml.studies.setIamPolicy",
            "ml.trials.list",
            "ml.versions.list",
            "modelarmor.locations.list",
            "modelarmor.templates.list",
            "monitoring.alertPolicies.list",
            "monitoring.dashboards.list",
            "monitoring.groups.list",
            "monitoring.metricDescriptors.list",
            "monitoring.monitoredResourceDescriptors.list",
            "monitoring.notificationChannelDescriptors.list",
            "monitoring.notificationChannels.list",
            "monitoring.services.list",
            "monitoring.slos.list",
            "monitoring.snoozes.list",
            "monitoring.timeSeries.list",
            "monitoring.uptimeCheckConfigs.list",
            "netapp.activeDirectories.list",
            "netapp.backupPolicies.list",
            "netapp.backupVaults.list",
            "netapp.backups.list",
            "netapp.kmsConfigs.list",
            "netapp.locations.list",
            "netapp.operations.list",
            "netapp.quotaRules.list",
            "netapp.replications.list",
            "netapp.snapshots.list",
            "netapp.storagePools.list",
            "netapp.volumes.list",
            "networkconnectivity.groups.getIamPolicy",
            "networkconnectivity.groups.list",
            "networkconnectivity.groups.setIamPolicy",
            "networkconnectivity.hubRouteTables.getIamPolicy",
            "networkconnectivity.hubRouteTables.list",
            "networkconnectivity.hubRouteTables.setIamPolicy",
            "networkconnectivity.hubRoutes.getIamPolicy",
            "networkconnectivity.hubRoutes.list",
            "networkconnectivity.hubRoutes.setIamPolicy",
            "networkconnectivity.hubs.getIamPolicy",
            "networkconnectivity.hubs.list",
            "networkconnectivity.hubs.setIamPolicy",
            "networkconnectivity.internalRanges.getIamPolicy",
            "networkconnectivity.internalRanges.list",
            "networkconnectivity.internalRanges.setIamPolicy",
            "networkconnectivity.locations.list",
            "networkconnectivity.operations.list",
            "networkconnectivity.policyBasedRoutes.getIamPolicy",
            "networkconnectivity.policyBasedRoutes.list",
            "networkconnectivity.policyBasedRoutes.setIamPolicy",
            "networkconnectivity.regionalEndpoints.list",
            "networkconnectivity.serviceClasses.list",
            "networkconnectivity.serviceConnectionMaps.list",
            "networkconnectivity.serviceConnectionPolicies.list",
            "networkconnectivity.spokes.getIamPolicy",
            "networkconnectivity.spokes.list",
            "networkconnectivity.spokes.setIamPolicy",
            "networkmanagement.connectivitytests.getIamPolicy",
            "networkmanagement.connectivitytests.list",
            "networkmanagement.connectivitytests.setIamPolicy",
            "networkmanagement.locations.list",
            "networkmanagement.operations.list",
            "networkmanagement.vpcflowlogsconfigs.list",
            "networksecurity.addressGroups.getIamPolicy",
            "networksecurity.addressGroups.list",
            "networksecurity.addressGroups.setIamPolicy",
            "networksecurity.authorizationPolicies.getIamPolicy",
            "networksecurity.authorizationPolicies.list",
            "networksecurity.authorizationPolicies.setIamPolicy",
            "networksecurity.authzPolicies.getIamPolicy",
            "networksecurity.authzPolicies.list",
            "networksecurity.authzPolicies.setIamPolicy",
            "networksecurity.backendAuthenticationConfigs.list",
            "networksecurity.clientTlsPolicies.getIamPolicy",
            "networksecurity.clientTlsPolicies.list",
            "networksecurity.clientTlsPolicies.setIamPolicy",
            "networksecurity.firewallEndpointAssociations.list",
            "networksecurity.firewallEndpoints.list",
            "networksecurity.gatewaySecurityPolicies.list",
            "networksecurity.gatewaySecurityPolicyRules.list",
            "networksecurity.interceptDeploymentGroups.list",
            "networksecurity.interceptDeployments.list",
            "networksecurity.interceptEndpointGroupAssociations.list",
            "networksecurity.interceptEndpointGroups.list",
            "networksecurity.locations.list",
            "networksecurity.mirroringDeploymentGroups.list",
            "networksecurity.mirroringDeployments.list",
            "networksecurity.mirroringEndpointGroupAssociations.list",
            "networksecurity.mirroringEndpointGroups.list",
            "networksecurity.operations.list",
            "networksecurity.securityProfileGroups.list",
            "networksecurity.securityProfiles.list",
            "networksecurity.serverTlsPolicies.getIamPolicy",
            "networksecurity.serverTlsPolicies.list",
            "networksecurity.serverTlsPolicies.setIamPolicy",
            "networksecurity.tlsInspectionPolicies.list",
            "networksecurity.urlLists.list",
            "networkservices.authzExtensions.list",
            "networkservices.endpointPolicies.list",
            "networkservices.gateways.list",
            "networkservices.grpcRoutes.list",
            "networkservices.httpFilters.list",
            "networkservices.httpRoutes.list",
            "networkservices.httpfilters.getIamPolicy",
            "networkservices.httpfilters.list",
            "networkservices.httpfilters.setIamPolicy",
            "networkservices.lbRouteExtensions.list",
            "networkservices.lbTrafficExtensions.list",
            "networkservices.locations.list",
            "networkservices.meshes.list",
            "networkservices.operations.list",
            "networkservices.route_views.list",
            "networkservices.serviceBindings.list",
            "networkservices.serviceLbPolicies.list",
            "networkservices.tcpRoutes.list",
            "networkservices.tlsRoutes.list",
            "networkservices.wasmPlugins.list",
            "notebooks.environments.getIamPolicy",
            "notebooks.environments.list",
            "notebooks.environments.setIamPolicy",
            "notebooks.executions.getIamPolicy",
            "notebooks.executions.list",
            "notebooks.executions.setIamPolicy",
            "notebooks.instances.getIamPolicy",
            "notebooks.instances.list",
            "notebooks.instances.setIamPolicy",
            "notebooks.locations.list",
            "notebooks.operations.list",
            "notebooks.runtimes.getIamPolicy",
            "notebooks.runtimes.list",
            "notebooks.runtimes.setIamPolicy",
            "notebooks.schedules.getIamPolicy",
            "notebooks.schedules.list",
            "notebooks.schedules.setIamPolicy",
            "observability.analyticsViews.list",
            "ondemandscanning.operations.list",
            "opsconfigmonitoring.resourceMetadata.list",
            "oracledatabase.autonomousDatabaseBackups.list",
            "oracledatabase.autonomousDatabaseCharacterSets.list",
            "oracledatabase.autonomousDatabases.list",
            "oracledatabase.autonomousDbVersions.list",
            "oracledatabase.cloudExadataInfrastructures.list",
            "oracledatabase.cloudVmClusters.list",
            "oracledatabase.dbNodes.list",
            "oracledatabase.dbServers.list",
            "oracledatabase.dbSystemShapes.list",
            "oracledatabase.entitlements.list",
            "oracledatabase.giVersions.list",
            "oracledatabase.locations.list",
            "oracledatabase.operations.list",
            "orgpolicy.constraints.list",
            "orgpolicy.customConstraints.list",
            "orgpolicy.policies.list",
            "osconfig.guestPolicies.list",
            "osconfig.instanceOSPoliciesCompliances.list",
            "osconfig.inventories.list",
            "osconfig.locations.list",
            "osconfig.operations.list",
            "osconfig.osPolicyAssignmentReports.list",
            "osconfig.osPolicyAssignments.list",
            "osconfig.patchDeployments.list",
            "osconfig.patchJobs.list",
            "osconfig.policyOrchestrators.list",
            "osconfig.upgradeReports.list",
            "osconfig.vulnerabilityReports.list",
            "parallelstore.instances.list",
            "parallelstore.locations.list",
            "parallelstore.operations.list",
            "parametermanager.locations.list",
            "parametermanager.parameterVersions.list",
            "parametermanager.parameters.list",
            "paymentsresellersubscription.products.list",
            "paymentsresellersubscription.promotions.list",
            "policyremediatormanager.locations.list",
            "policyremediatormanager.operations.list",
            "policysimulator.accessPolicySimulationResults.list",
            "policysimulator.accessPolicySimulations.list",
            "policysimulator.orgPolicyViolations.list",
            "policysimulator.orgPolicyViolationsPreviews.list",
            "policysimulator.replayResults.list",
            "policysimulator.replays.*",
            "privateca.caPools.getIamPolicy",
            "privateca.caPools.list",
            "privateca.caPools.setIamPolicy",
            "privateca.certificateAuthorities.getIamPolicy",
            "privateca.certificateAuthorities.list",
            "privateca.certificateAuthorities.setIamPolicy",
            "privateca.certificateRevocationLists.getIamPolicy",
            "privateca.certificateRevocationLists.list",
            "privateca.certificateRevocationLists.setIamPolicy",
            "privateca.certificateTemplates.getIamPolicy",
            "privateca.certificateTemplates.list",
            "privateca.certificateTemplates.setIamPolicy",
            "privateca.certificates.getIamPolicy",
            "privateca.certificates.list",
            "privateca.certificates.setIamPolicy",
            "privateca.locations.list",
            "privateca.operations.list",
            "privateca.reusableConfigs.getIamPolicy",
            "privateca.reusableConfigs.list",
            "privateca.reusableConfigs.setIamPolicy",
            "privilegedaccessmanager.entitlements.list",
            "privilegedaccessmanager.entitlements.setIamPolicy",
            "privilegedaccessmanager.grants.list",
            "privilegedaccessmanager.locations.list",
            "privilegedaccessmanager.operations.list",
            "proximitybeacon.attachments.list",
            "proximitybeacon.beacons.getIamPolicy",
            "proximitybeacon.beacons.list",
            "proximitybeacon.beacons.setIamPolicy",
            "proximitybeacon.namespaces.getIamPolicy",
            "proximitybeacon.namespaces.list",
            "proximitybeacon.namespaces.setIamPolicy",
            "pubsub.schemas.getIamPolicy",
            "pubsub.schemas.list",
            "pubsub.schemas.setIamPolicy",
            "pubsub.snapshots.getIamPolicy",
            "pubsub.snapshots.list",
            "pubsub.snapshots.setIamPolicy",
            "pubsub.subscriptions.getIamPolicy",
            "pubsub.subscriptions.list",
            "pubsub.subscriptions.setIamPolicy",
            "pubsub.topics.getIamPolicy",
            "pubsub.topics.list",
            "pubsub.topics.setIamPolicy",
            "pubsublite.operations.list",
            "pubsublite.reservations.list",
            "pubsublite.subscriptions.list",
            "pubsublite.topics.list",
            "recaptchaenterprise.firewallpolicies.list",
            "recaptchaenterprise.keys.list",
            "recaptchaenterprise.relatedaccountgroupmemberships.list",
            "recaptchaenterprise.relatedaccountgroups.list",
            "recommender.alloydbClusterPerformanceInsights.list",
            "recommender.alloydbClusterPerformanceRecommendations.list",
            "recommender.alloydbClusterReliabilityInsights.list",
            "recommender.alloydbClusterReliabilityRecommendations.list",
            "recommender.alloydbInstanceSecurityInsights.list",
            "recommender.alloydbInstanceSecurityRecommendations.list",
            "recommender.bigqueryCapacityCommitmentsInsights.list",
            "recommender.bigqueryCapacityCommitmentsRecommendations.list",
            "recommender.bigqueryMaterializedViewInsights.list",
            "recommender.bigqueryMaterializedViewRecommendations.list",
            "recommender.bigqueryPartitionClusterRecommendations.list",
            "recommender.bigqueryTableStatsInsights.list",
            "recommender.bigtableClusterPerformanceInsights.list",
            "recommender.bigtableClusterPerformanceRecommendations.list",
            "recommender.cloudAssetInsights.list",
            "recommender.cloudCostGeneralInsights.list",
            "recommender.cloudCostGeneralRecommendations.list",
            "recommender.cloudDeprecationGeneralInsights.list",
            "recommender.cloudDeprecationGeneralRecommendations.list",
            "recommender.cloudFunctionsPerformanceInsights.list",
            "recommender.cloudFunctionsPerformanceRecommendations.list",
            "recommender.cloudManageabilityGeneralInsights.list",
            "recommender.cloudManageabilityGeneralRecommendations.list",
            "recommender.cloudPerformanceGeneralInsights.list",
            "recommender.cloudPerformanceGeneralRecommendations.list",
            "recommender.cloudRecentChangeInsights.list",
            "recommender.cloudRecentChangeRecommendations.list",
            "recommender.cloudReliabilityGeneralInsights.list",
            "recommender.cloudReliabilityGeneralRecommendations.list",
            "recommender.cloudSecurityGeneralInsights.list",
            "recommender.cloudSecurityGeneralRecommendations.list",
            "recommender.cloudsqlIdleInstanceRecommendations.list",
            "recommender.cloudsqlInstanceActivityInsights.list",
            "recommender.cloudsqlInstanceCpuUsageInsights.list",
            "recommender.cloudsqlInstanceDiskUsageTrendInsights.list",
            "recommender.cloudsqlInstanceMemoryUsageInsights.list",
            "recommender.cloudsqlInstanceOomProbabilityInsights.list",
            "recommender.cloudsqlInstanceOutOfDiskRecommendations.list",
            "recommender.cloudsqlInstancePerformanceInsights.list",
            "recommender.cloudsqlInstancePerformanceRecommendations.list",
            "recommender.cloudsqlInstanceReliabilityInsights.list",
            "recommender.cloudsqlInstanceReliabilityRecommendations.list",
            "recommender.cloudsqlInstanceSecurityInsights.list",
            "recommender.cloudsqlInstanceSecurityRecommendations.list",
            "recommender.cloudsqlInstanceUnderprovisionedCpuUsageInsights.list",
            "recommender.cloudsqlInstanceUnderprovisionedMemoryUsageInsights.list",
            "recommender.cloudsqlOverprovisionedInstanceRecommendations.list",
            "recommender.cloudsqlUnderProvisionedInstanceRecommendations.list",
            "recommender.commitmentUtilizationInsights.list",
            "recommender.computeAddressIdleResourceInsights.list",
            "recommender.computeAddressIdleResourceRecommendations.list",
            "recommender.computeDiskIdleResourceInsights.list",
            "recommender.computeDiskIdleResourceRecommendations.list",
            "recommender.computeFirewallInsights.list",
            "recommender.computeImageIdleResourceInsights.list",
            "recommender.computeImageIdleResourceRecommendations.list",
            "recommender.computeInstanceCpuUsageInsights.list",
            "recommender.computeInstanceCpuUsagePredictionInsights.list",
            "recommender.computeInstanceCpuUsageTrendInsights.list",
            "recommender.computeInstanceGroupManagerCpuUsageInsights.list",
            "recommender.computeInstanceGroupManagerCpuUsagePredictionInsights.list",
            "recommender.computeInstanceGroupManagerCpuUsageTrendInsights.list",
            "recommender.computeInstanceGroupManagerMachineTypeRecommendations.list",
            "recommender.computeInstanceGroupManagerMemoryUsageInsights.list",
            "recommender.computeInstanceGroupManagerMemoryUsagePredictionInsights.list",
            "recommender.computeInstanceIdleResourceRecommendations.list",
            "recommender.computeInstanceMachineTypeRecommendations.list",
            "recommender.computeInstanceMemoryUsageInsights.list",
            "recommender.computeInstanceMemoryUsagePredictionInsights.list",
            "recommender.computeInstanceNetworkThroughputInsights.list",
            "recommender.containerDiagnosisInsights.list",
            "recommender.containerDiagnosisRecommendations.list",
            "recommender.costInsights.list",
            "recommender.dataflowDiagnosticsInsights.list",
            "recommender.errorReportingInsights.list",
            "recommender.errorReportingRecommendations.list",
            "recommender.firestoreDatabaseReliabilityInsights.list",
            "recommender.firestoreDatabaseReliabilityRecommendations.list",
            "recommender.gmpGuidedExperienceInsights.list",
            "recommender.gmpGuidedExperienceRecommendations.list",
            "recommender.gmpProjectManagementInsights.list",
            "recommender.gmpProjectManagementRecommendations.list",
            "recommender.gmpProjectProductSuggestionsInsights.list",
            "recommender.gmpProjectProductSuggestionsRecommendations.list",
            "recommender.iamPolicyChangeRiskInsights.list",
            "recommender.iamPolicyChangeRiskRecommendations.list",
            "recommender.iamPolicyInsights.list",
            "recommender.iamPolicyLateralMovementInsights.list",
            "recommender.iamPolicyRecommendations.list",
            "recommender.iamServiceAccountChangeRiskInsights.list",
            "recommender.iamServiceAccountChangeRiskRecommendations.list",
            "recommender.iamServiceAccountInsights.list",
            "recommender.locations.list",
            "recommender.loggingProductSuggestionContainerInsights.list",
            "recommender.loggingProductSuggestionContainerRecommendations.list",
            "recommender.memorystoreManageabilityInsights.list",
            "recommender.memorystoreManageabilityRecommendations.list",
            "recommender.memorystorePerformanceInsights.list",
            "recommender.memorystorePerformanceRecommendations.list",
            "recommender.memorystoreReliabilityInsights.list",
            "recommender.memorystoreReliabilityRecommendations.list",
            "recommender.memorystoreUtilizationInsights.list",
            "recommender.monitoringProductSuggestionComputeInsights.list",
            "recommender.monitoringProductSuggestionComputeRecommendations.list",
            "recommender.networkAnalyzerCloudSqlInsights.list",
            "recommender.networkAnalyzerDynamicRouteInsights.list",
            "recommender.networkAnalyzerGkeConnectivityInsights.list",
            "recommender.networkAnalyzerGkeIpAddressInsights.list",
            "recommender.networkAnalyzerGkeServiceAccountInsights.list",
            "recommender.networkAnalyzerIpAddressInsights.list",
            "recommender.networkAnalyzerLoadBalancerInsights.list",
            "recommender.networkAnalyzerVpcConnectivityInsights.list",
            "recommender.orgPolicyInsights.list",
            "recommender.orgPolicyRecommendations.list",
            "recommender.resourcemanagerProjectChangeRiskInsights.list",
            "recommender.resourcemanagerProjectChangeRiskRecommendations.list",
            "recommender.resourcemanagerProjectUtilizationInsights.list",
            "recommender.resourcemanagerProjectUtilizationRecommendations.list",
            "recommender.resourcemanagerServiceLimitInsights.list",
            "recommender.resourcemanagerServiceLimitRecommendations.list",
            "recommender.runServiceCostInsights.list",
            "recommender.runServiceCostRecommendations.list",
            "recommender.runServiceIdentityInsights.list",
            "recommender.runServiceIdentityRecommendations.list",
            "recommender.runServicePerformanceInsights.list",
            "recommender.runServicePerformanceRecommendations.list",
            "recommender.runServiceSecurityInsights.list",
            "recommender.runServiceSecurityRecommendations.list",
            "recommender.spannerProjectReliabilityInsights.list",
            "recommender.spannerProjectReliabilityRecommendations.list",
            "recommender.spendBasedCommitmentInsights.list",
            "recommender.spendBasedCommitmentRecommendations.list",
            "recommender.storageBucketSoftDeleteInsights.list",
            "recommender.storageBucketSoftDeleteRecommendations.list",
            "recommender.usageCommitmentRecommendations.list",
            "redis.backupCollections.list",
            "redis.backups.list",
            "redis.clusters.list",
            "redis.instances.list",
            "redis.locations.list",
            "redis.operations.list",
            "remotebuildexecution.instances.list",
            "remotebuildexecution.workerpools.list",
            "resourcemanager.folders.getIamPolicy",
            "resourcemanager.folders.list",
            "resourcemanager.folders.setIamPolicy",
            "resourcemanager.hierarchyNodes.listTagBindings",
            "resourcemanager.organizations.getIamPolicy",
            "resourcemanager.organizations.setIamPolicy",
            "resourcemanager.projects.getIamPolicy",
            "resourcemanager.projects.list",
            "resourcemanager.projects.setIamPolicy",
            "resourcemanager.tagHolds.list",
            "resourcemanager.tagKeys.getIamPolicy",
            "resourcemanager.tagKeys.list",
            "resourcemanager.tagKeys.setIamPolicy",
            "resourcemanager.tagValues.getIamPolicy",
            "resourcemanager.tagValues.list",
            "resourcemanager.tagValues.setIamPolicy",
            "resourcesettings.settings.list",
            "retail.branches.list",
            "retail.catalogs.list",
            "retail.controls.list",
            "retail.experiments.list",
            "retail.models.list",
            "retail.operations.list",
            "retail.products.list",
            "retail.servingConfigs.list",
            "riskmanager.controlScoreBreakdowns.list",
            "riskmanager.operations.list",
            "riskmanager.policies.list",
            "riskmanager.reports.list",
            "rma.collectors.list",
            "rma.locations.list",
            "rma.operations.list",
            "run.configurations.list",
            "run.executions.list",
            "run.jobs.getIamPolicy",
            "run.jobs.list",
            "run.jobs.setIamPolicy",
            "run.locations.list",
            "run.operations.list",
            "run.revisions.list",
            "run.routes.list",
            "run.services.getIamPolicy",
            "run.services.list",
            "run.services.setIamPolicy",
            "run.tasks.list",
            "runapps.applications.list",
            "runapps.deployments.list",
            "runapps.locations.list",
            "runapps.operations.list",
            "runtimeconfig.configs.getIamPolicy",
            "runtimeconfig.configs.list",
            "runtimeconfig.configs.setIamPolicy",
            "runtimeconfig.operations.list",
            "runtimeconfig.variables.getIamPolicy",
            "runtimeconfig.variables.list",
            "runtimeconfig.variables.setIamPolicy",
            "runtimeconfig.waiters.getIamPolicy",
            "runtimeconfig.waiters.list",
            "runtimeconfig.waiters.setIamPolicy",
            "saasservicemgmt.locations.list",
            "saasservicemgmt.operations.list",
            "saasservicemgmt.releases.list",
            "saasservicemgmt.rolloutKinds.list",
            "saasservicemgmt.rollouts.list",
            "saasservicemgmt.saas.list",
            "saasservicemgmt.unitKinds.list",
            "saasservicemgmt.unitOperations.list",
            "saasservicemgmt.units.list",
            "secretmanager.locations.list",
            "secretmanager.secrets.getIamPolicy",
            "secretmanager.secrets.list",
            "secretmanager.secrets.setIamPolicy",
            "secretmanager.versions.list",
            "securedlandingzone.overwatches.list",
            "securesourcemanager.branchRules.list",
            "securesourcemanager.instances.getIamPolicy",
            "securesourcemanager.instances.list",
            "securesourcemanager.instances.setIamPolicy",
            "securesourcemanager.locations.list",
            "securesourcemanager.operations.list",
            "securesourcemanager.repositories.getIamPolicy",
            "securesourcemanager.repositories.list",
            "securesourcemanager.repositories.setIamPolicy",
            "securesourcemanager.sshkeys.list",
            "securitycenter.assets.list",
            "securitycenter.attackpaths.list",
            "securitycenter.bigQueryExports.list",
            "securitycenter.compliancesnapshots.list",
            "securitycenter.effectivesecurityhealthanalyticscustommodules.list",
            "securitycenter.findings.list",
            "securitycenter.issues.list",
            "securitycenter.muteconfigs.list",
            "securitycenter.notificationconfig.list",
            "securitycenter.resourcevalueconfigs.list",
            "securitycenter.securityhealthanalyticscustommodules.list",
            "securitycenter.sources.getIamPolicy",
            "securitycenter.sources.list",
            "securitycenter.sources.setIamPolicy",
            "securitycenter.valuedresources.list",
            "securitycenter.vulnerabilitysnapshots.list",
            "securitycentermanagement.effectiveEventThreatDetectionCustomModules.list",
            "securitycentermanagement.effectiveSecurityHealthAnalyticsCustomModules.list",
            "securitycentermanagement.eventThreatDetectionCustomModules.list",
            "securitycentermanagement.locations.list",
            "securitycentermanagement.securityCenterServices.list",
            "securitycentermanagement.securityHealthAnalyticsCustomModules.list",
            "securityposture.locations.list",
            "securityposture.operations.list",
            "securityposture.postureDeployments.list",
            "securityposture.postureTemplates.list",
            "securityposture.postures.list",
            "securityposture.reports.list",
            "servicebroker.bindingoperations.list",
            "servicebroker.bindings.getIamPolicy",
            "servicebroker.bindings.list",
            "servicebroker.bindings.setIamPolicy",
            "servicebroker.catalogs.getIamPolicy",
            "servicebroker.catalogs.list",
            "servicebroker.catalogs.setIamPolicy",
            "servicebroker.instanceoperations.list",
            "servicebroker.instances.getIamPolicy",
            "servicebroker.instances.list",
            "servicebroker.instances.setIamPolicy",
            "serviceconsumermanagement.tenancyu.list",
            "servicedirectory.endpoints.getIamPolicy",
            "servicedirectory.endpoints.list",
            "servicedirectory.endpoints.setIamPolicy",
            "servicedirectory.locations.list",
            "servicedirectory.namespaces.getIamPolicy",
            "servicedirectory.namespaces.list",
            "servicedirectory.namespaces.setIamPolicy",
            "servicedirectory.services.getIamPolicy",
            "servicedirectory.services.list",
            "servicedirectory.services.setIamPolicy",
            "servicehealth.events.list",
            "servicehealth.locations.list",
            "servicehealth.organizationEvents.list",
            "servicehealth.organizationImpacts.list",
            "servicemanagement.services.getIamPolicy",
            "servicemanagement.services.list",
            "servicemanagement.services.setIamPolicy",
            "servicenetworking.operations.list",
            "servicesecurityinsights.clusterSecurityInfo.list",
            "servicesecurityinsights.securityInfo.list",
            "servicesecurityinsights.workloadPolicies.list",
            "serviceusage.services.list",
            "source.repos.getIamPolicy",
            "source.repos.list",
            "source.repos.setIamPolicy",
            "spanner.backupOperations.list",
            "spanner.backupSchedules.getIamPolicy",
            "spanner.backupSchedules.list",
            "spanner.backupSchedules.setIamPolicy",
            "spanner.backups.getIamPolicy",
            "spanner.backups.list",
            "spanner.backups.setIamPolicy",
            "spanner.databaseOperations.list",
            "spanner.databaseRoles.list",
            "spanner.databases.getIamPolicy",
            "spanner.databases.list",
            "spanner.databases.setIamPolicy",
            "spanner.instanceConfigOperations.list",
            "spanner.instanceConfigs.list",
            "spanner.instanceOperations.list",
            "spanner.instancePartitionOperations.list",
            "spanner.instancePartitions.list",
            "spanner.instances.getIamPolicy",
            "spanner.instances.list",
            "spanner.instances.setIamPolicy",
            "spanner.sessions.list",
            "speakerid.phrases.list",
            "speakerid.speakers.list",
            "speech.customClasses.list",
            "speech.locations.list",
            "speech.operations.list",
            "speech.phraseSets.list",
            "speech.recognizers.list",
            "stackdriver.resourceMetadata.list",
            "storage.anywhereCaches.list",
            "storage.bucketOperations.list",
            "storage.buckets.getIamPolicy",
            "storage.buckets.list",
            "storage.buckets.setIamPolicy",
            "storage.folders.list",
            "storage.hmacKeys.list",
            "storage.managedFolders.getIamPolicy",
            "storage.managedFolders.list",
            "storage.managedFolders.setIamPolicy",
            "storage.multipartUploads.list",
            "storage.objects.getIamPolicy",
            "storage.objects.list",
            "storage.objects.setIamPolicy",
            "storageinsights.datasetConfigs.list",
            "storageinsights.locations.list",
            "storageinsights.operations.list",
            "storageinsights.reportConfigs.list",
            "storageinsights.reportDetails.list",
            "storagetransfer.agentpools.list",
            "storagetransfer.jobs.list",
            "storagetransfer.operations.list",
            "stream.locations.list",
            "stream.operations.list",
            "stream.streamContents.list",
            "stream.streamInstances.list",
            "telcoautomation.blueprints.list",
            "telcoautomation.deployments.list",
            "telcoautomation.edgeSlms.list",
            "telcoautomation.hydratedDeployments.list",
            "telcoautomation.locations.list",
            "telcoautomation.operations.list",
            "telcoautomation.orchestrationClusters.list",
            "telcoautomation.publicBlueprints.list",
            "timeseriesinsights.datasets.list",
            "timeseriesinsights.locations.list",
            "tpu.acceleratortypes.list",
            "tpu.locations.list",
            "tpu.nodes.list",
            "tpu.operations.list",
            "tpu.runtimeversions.list",
            "tpu.tensorflowversions.list",
            "transcoder.jobTemplates.list",
            "transcoder.jobs.list",
            "transferappliance.appliances.list",
            "transferappliance.locations.list",
            "transferappliance.operations.list",
            "transferappliance.orders.list",
            "transferappliance.savedAddresses.list",
            "translationhub.portals.list",
            "videostitcher.cdnKeys.list",
            "videostitcher.liveAdTagDetails.list",
            "videostitcher.liveConfigs.list",
            "videostitcher.operations.list",
            "videostitcher.slates.list",
            "videostitcher.vodAdTagDetails.list",
            "videostitcher.vodConfigs.list",
            "videostitcher.vodStitchDetails.list",
            "visionai.analyses.getIamPolicy",
            "visionai.analyses.list",
            "visionai.analyses.setIamPolicy",
            "visionai.annotations.list",
            "visionai.applications.list",
            "visionai.assets.list",
            "visionai.clusters.getIamPolicy",
            "visionai.clusters.list",
            "visionai.clusters.setIamPolicy",
            "visionai.corpora.list",
            "visionai.dataSchemas.list",
            "visionai.drafts.list",
            "visionai.events.getIamPolicy",
            "visionai.events.list",
            "visionai.events.setIamPolicy",
            "visionai.indexEndpoints.list",
            "visionai.indexes.list",
            "visionai.instances.list",
            "visionai.locations.list",
            "visionai.operations.list",
            "visionai.operators.getIamPolicy",
            "visionai.operators.list",
            "visionai.operators.setIamPolicy",
            "visionai.processors.list",
            "visionai.searchConfigs.list",
            "visionai.series.getIamPolicy",
            "visionai.series.list",
            "visionai.series.setIamPolicy",
            "visionai.streams.getIamPolicy",
            "visionai.streams.list",
            "visionai.streams.setIamPolicy",
            "visionai.uistreams.list",
            "visualinspection.annotationSets.list",
            "visualinspection.annotationSpecs.list",
            "visualinspection.annotations.list",
            "visualinspection.datasets.list",
            "visualinspection.images.list",
            "visualinspection.locations.list",
            "visualinspection.modelEvaluations.list",
            "visualinspection.models.list",
            "visualinspection.modules.list",
            "visualinspection.operations.list",
            "visualinspection.solutionArtifacts.list",
            "visualinspection.solutions.list",
            "vmmigration.cloneJobs.list",
            "vmmigration.cutoverJobs.list",
            "vmmigration.datacenterConnectors.list",
            "vmmigration.deployments.list",
            "vmmigration.groups.list",
            "vmmigration.locations.list",
            "vmmigration.migratingVms.list",
            "vmmigration.operations.list",
            "vmmigration.replicationCycles.list",
            "vmmigration.sources.list",
            "vmmigration.targets.list",
            "vmmigration.utilizationReports.list",
            "vmwareengine.clusters.getIamPolicy",
            "vmwareengine.clusters.list",
            "vmwareengine.clusters.setIamPolicy",
            "vmwareengine.externalAccessRules.list",
            "vmwareengine.externalAddresses.list",
            "vmwareengine.hcxActivationKeys.getIamPolicy",
            "vmwareengine.hcxActivationKeys.list",
            "vmwareengine.hcxActivationKeys.setIamPolicy",
            "vmwareengine.locations.list",
            "vmwareengine.loggingServers.list",
            "vmwareengine.managementDnsZoneBindings.list",
            "vmwareengine.networkPeerings.list",
            "vmwareengine.networkPolicies.list",
            "vmwareengine.nodeTypes.list",
            "vmwareengine.nodes.list",
            "vmwareengine.operations.list",
            "vmwareengine.privateClouds.getIamPolicy",
            "vmwareengine.privateClouds.list",
            "vmwareengine.privateClouds.setIamPolicy",
            "vmwareengine.privateConnections.list",
            "vmwareengine.subnets.list",
            "vmwareengine.vmwareEngineNetworks.list",
            "vpcaccess.connectors.list",
            "vpcaccess.locations.list",
            "vpcaccess.operations.list",
            "workflows.callbacks.list",
            "workflows.executions.list",
            "workflows.locations.list",
            "workflows.operations.list",
            "workflows.stepEntries.list",
            "workflows.workflows.list",
            "workloadcertificate.locations.list",
            "workloadcertificate.operations.list",
            "workloadcertificate.workloadRegistrations.list",
            "workloadmanager.actuations.list",
            "workloadmanager.deployments.list",
            "workloadmanager.discoveredprofiles.list",
            "workloadmanager.evaluations.list",
            "workloadmanager.executions.list",
            "workloadmanager.locations.list",
            "workloadmanager.operations.list",
            "workloadmanager.results.list",
            "workloadmanager.rules.list",
            "workstations.workstationClusters.list",
            "workstations.workstationConfigs.getIamPolicy",
            "workstations.workstationConfigs.list",
            "workstations.workstationConfigs.setIamPolicy",
            "workstations.workstations.getIamPolicy",
            "workstations.workstations.list",
            "workstations.workstations.setIamPolicy"
          ],
          "title": "Security Admin"
        },
        {
          "description": "Provides permissions to list all resources and allow policies on them.",
          "id": "roles/iam.securityReviewer",
          "is_beta": false,
          "permissions": [
            "accessapproval.requests.list",
            "accesscontextmanager.accessLevels.list",
            "accesscontextmanager.authorizedOrgsDescs.list",
            "accesscontextmanager.gcpUserAccessBindings.list",
            "accesscontextmanager.policies.getIamPolicy",
            "accesscontextmanager.policies.list",
            "accesscontextmanager.servicePerimeters.list",
            "actions.agentVersions.list",
            "advisorynotifications.notifications.*",
            "aiplatform.agentExamples.list",
            "aiplatform.agents.list",
            "aiplatform.annotationSpecs.list",
            "aiplatform.annotations.list",
            "aiplatform.apps.list",
            "aiplatform.artifacts.list",
            "aiplatform.batchPredictionJobs.list",
            "aiplatform.cachedContents.list",
            "aiplatform.contexts.list",
            "aiplatform.customJobs.list",
            "aiplatform.dataItems.list",
            "aiplatform.dataLabelingJobs.list",
            "aiplatform.datasetVersions.list",
            "aiplatform.datasets.list",
            "aiplatform.deploymentResourcePools.list",
            "aiplatform.edgeDeploymentJobs.list",
            "aiplatform.edgeDevices.list",
            "aiplatform.endpoints.getIamPolicy",
            "aiplatform.endpoints.list",
            "aiplatform.entityTypes.getIamPolicy",
            "aiplatform.entityTypes.list",
            "aiplatform.executions.list",
            "aiplatform.extensions.list",
            "aiplatform.featureGroups.getIamPolicy",
            "aiplatform.featureGroups.list",
            "aiplatform.featureOnlineStores.getIamPolicy",
            "aiplatform.featureOnlineStores.list",
            "aiplatform.featureViewSyncs.list",
            "aiplatform.featureViews.getIamPolicy",
            "aiplatform.featureViews.list",
            "aiplatform.features.list",
            "aiplatform.featurestores.getIamPolicy",
            "aiplatform.featurestores.list",
            "aiplatform.humanInTheLoops.list",
            "aiplatform.hyperparameterTuningJobs.list",
            "aiplatform.indexEndpoints.list",
            "aiplatform.indexes.list",
            "aiplatform.locations.list",
            "aiplatform.metadataSchemas.list",
            "aiplatform.metadataStores.list",
            "aiplatform.modelDeploymentMonitoringJobs.list",
            "aiplatform.modelEvaluationSlices.list",
            "aiplatform.modelEvaluations.list",
            "aiplatform.modelMonitoringJobs.list",
            "aiplatform.modelMonitors.list",
            "aiplatform.models.list",
            "aiplatform.nasJobs.list",
            "aiplatform.nasTrialDetails.list",
            "aiplatform.notebookExecutionJobs.list",
            "aiplatform.notebookRuntimeTemplates.getIamPolicy",
            "aiplatform.notebookRuntimeTemplates.list",
            "aiplatform.notebookRuntimes.list",
            "aiplatform.operations.list",
            "aiplatform.persistentResources.list",
            "aiplatform.pipelineJobs.list",
            "aiplatform.provisionedThroughputRevisions.list",
            "aiplatform.provisionedThroughputs.list",
            "aiplatform.ragCorpora.list",
            "aiplatform.ragFiles.list",
            "aiplatform.reasoningEngines.list",
            "aiplatform.schedules.list",
            "aiplatform.sessions.list",
            "aiplatform.specialistPools.list",
            "aiplatform.studies.list",
            "aiplatform.tensorboardExperiments.list",
            "aiplatform.tensorboardRuns.list",
            "aiplatform.tensorboardTimeSeries.list",
            "aiplatform.tensorboards.list",
            "aiplatform.trainingPipelines.list",
            "aiplatform.trials.list",
            "aiplatform.tuningJobs.list",
            "alloydb.backups.list",
            "alloydb.clusters.list",
            "alloydb.databases.list",
            "alloydb.instances.list",
            "alloydb.locations.list",
            "alloydb.operations.list",
            "alloydb.supportedDatabaseFlags.list",
            "alloydb.users.list",
            "analyticshub.dataExchanges.getIamPolicy",
            "analyticshub.dataExchanges.list",
            "analyticshub.listings.getIamPolicy",
            "analyticshub.listings.list",
            "analyticshub.subscriptions.list",
            "apigateway.apiconfigs.getIamPolicy",
            "apigateway.apiconfigs.list",
            "apigateway.apis.getIamPolicy",
            "apigateway.apis.list",
            "apigateway.gateways.getIamPolicy",
            "apigateway.gateways.list",
            "apigateway.locations.list",
            "apigateway.operations.list",
            "apigee.apiproductattributes.list",
            "apigee.apiproducts.list",
            "apigee.appgroupapps.list",
            "apigee.appgroups.list",
            "apigee.apps.list",
            "apigee.archivedeployments.list",
            "apigee.caches.list",
            "apigee.datacollectors.list",
            "apigee.datastores.list",
            "apigee.deployments.getIamPolicy",
            "apigee.deployments.list",
            "apigee.developerappattributes.list",
            "apigee.developerapps.list",
            "apigee.developerattributes.list",
            "apigee.developers.list",
            "apigee.developersubscriptions.list",
            "apigee.dnsZones.list",
            "apigee.endpointattachments.list",
            "apigee.envgroupattachments.list",
            "apigee.envgroups.list",
            "apigee.environments.getIamPolicy",
            "apigee.environments.list",
            "apigee.exports.list",
            "apigee.flowhooks.list",
            "apigee.hostqueries.list",
            "apigee.hostsecurityreports.list",
            "apigee.instanceattachments.list",
            "apigee.instances.list",
            "apigee.keystorealiases.list",
            "apigee.keystores.list",
            "apigee.keyvaluemapentries.list",
            "apigee.keyvaluemaps.list",
            "apigee.nataddresses.list",
            "apigee.operations.list",
            "apigee.organizations.list",
            "apigee.portals.list",
            "apigee.proxies.list",
            "apigee.proxyrevisions.list",
            "apigee.queries.list",
            "apigee.rateplans.list",
            "apigee.references.list",
            "apigee.reports.list",
            "apigee.resourcefiles.list",
            "apigee.securityActions.list",
            "apigee.securityFeedback.list",
            "apigee.securityIncidents.list",
            "apigee.securityMonitoringConditions.list",
            "apigee.securityProfiles.list",
            "apigee.securityProfilesV2.list",
            "apigee.securityreports.list",
            "apigee.sharedflowrevisions.list",
            "apigee.sharedflows.list",
            "apigee.spaces.getIamPolicy",
            "apigee.spaces.list",
            "apigee.targetservers.list",
            "apigee.traceconfigoverrides.list",
            "apigee.tracesessions.list",
            "apigeeconnect.connections.list",
            "apigeeregistry.apis.getIamPolicy",
            "apigeeregistry.apis.list",
            "apigeeregistry.artifacts.getIamPolicy",
            "apigeeregistry.artifacts.list",
            "apigeeregistry.deployments.list",
            "apigeeregistry.locations.list",
            "apigeeregistry.operations.list",
            "apigeeregistry.specs.getIamPolicy",
            "apigeeregistry.specs.list",
            "apigeeregistry.versions.getIamPolicy",
            "apigeeregistry.versions.list",
            "apihub.apiHubInstances.list",
            "apihub.apiOperations.list",
            "apihub.apis.list",
            "apihub.attributes.list",
            "apihub.curations.list",
            "apihub.definitions.list",
            "apihub.dependencies.list",
            "apihub.deployments.list",
            "apihub.externalApis.list",
            "apihub.hostProjectRegistrations.list",
            "apihub.llmEnablements.list",
            "apihub.operations.list",
            "apihub.plugininstances.list",
            "apihub.plugins.list",
            "apihub.runTimeProjectAttachments.list",
            "apihub.specs.list",
            "apihub.versions.list",
            "apikeys.keys.list",
            "apim.apiObservations.list",
            "apim.apiOperations.list",
            "apim.locations.list",
            "apim.observationJobs.list",
            "apim.observationSources.list",
            "apim.operations.list",
            "appengine.instances.list",
            "appengine.memcache.list",
            "appengine.operations.list",
            "appengine.services.list",
            "appengine.versions.list",
            "apphub.applications.getIamPolicy",
            "apphub.applications.list",
            "apphub.discoveredServices.list",
            "apphub.discoveredWorkloads.list",
            "apphub.locations.list",
            "apphub.operations.list",
            "apphub.serviceProjectAttachments.list",
            "apphub.services.list",
            "apphub.workloads.list",
            "applianceactivation.rttCommands.list",
            "artifactregistry.attachments.list",
            "artifactregistry.dockerimages.list",
            "artifactregistry.files.list",
            "artifactregistry.locations.list",
            "artifactregistry.mavenartifacts.list",
            "artifactregistry.npmpackages.list",
            "artifactregistry.packages.list",
            "artifactregistry.pythonpackages.list",
            "artifactregistry.repositories.getIamPolicy",
            "artifactregistry.repositories.list",
            "artifactregistry.rules.list",
            "artifactregistry.tags.list",
            "artifactregistry.versions.list",
            "assuredoss.locations.list",
            "assuredoss.metadata.list",
            "assuredoss.operations.list",
            "assuredworkloads.operations.list",
            "assuredworkloads.updates.list",
            "assuredworkloads.violations.list",
            "assuredworkloads.workload.list",
            "auditmanager.auditReports.list",
            "auditmanager.controlReports.list",
            "auditmanager.controls.list",
            "auditmanager.customComplianceFrameworks.list",
            "auditmanager.findings.list",
            "auditmanager.locations.list",
            "auditmanager.operations.list",
            "auditmanager.resourceEnrollmentStatuses.list",
            "automl.annotationSpecs.list",
            "automl.annotations.list",
            "automl.columnSpecs.list",
            "automl.datasets.getIamPolicy",
            "automl.datasets.list",
            "automl.examples.list",
            "automl.files.list",
            "automl.humanAnnotationTasks.list",
            "automl.locations.getIamPolicy",
            "automl.locations.list",
            "automl.modelEvaluations.list",
            "automl.models.getIamPolicy",
            "automl.models.list",
            "automl.operations.list",
            "automl.tableSpecs.list",
            "automlrecommendations.apiKeys.list",
            "automlrecommendations.catalogItems.list",
            "automlrecommendations.catalogs.list",
            "automlrecommendations.eventStores.list",
            "automlrecommendations.events.list",
            "automlrecommendations.placements.list",
            "automlrecommendations.recommendations.list",
            "autoscaling.sites.getIamPolicy",
            "backupdr.backupPlanAssociations.list",
            "backupdr.backupPlans.list",
            "backupdr.backupVaults.list",
            "backupdr.bvbackups.list",
            "backupdr.bvdataSources.list",
            "backupdr.locations.list",
            "backupdr.managementServers.getIamPolicy",
            "backupdr.managementServers.list",
            "backupdr.operations.list",
            "backupdr.resourceBackupConfigs.list",
            "baremetalsolution.instancequotas.list",
            "baremetalsolution.instances.list",
            "baremetalsolution.luns.list",
            "baremetalsolution.maintenanceevents.list",
            "baremetalsolution.networkquotas.list",
            "baremetalsolution.networks.list",
            "baremetalsolution.nfsshares.list",
            "baremetalsolution.osimages.list",
            "baremetalsolution.pods.list",
            "baremetalsolution.procurements.list",
            "baremetalsolution.skus.list",
            "baremetalsolution.snapshotschedulepolicies.list",
            "baremetalsolution.sshKeys.list",
            "baremetalsolution.storageaggregatepools.list",
            "baremetalsolution.volumequotas.list",
            "baremetalsolution.volumes.list",
            "baremetalsolution.volumesnapshots.list",
            "batch.jobs.list",
            "batch.locations.list",
            "batch.operations.list",
            "batch.resourceAllowances.list",
            "batch.tasks.list",
            "beyondcorp.appConnections.getIamPolicy",
            "beyondcorp.appConnections.list",
            "beyondcorp.appConnectors.getIamPolicy",
            "beyondcorp.appConnectors.list",
            "beyondcorp.appGateways.getIamPolicy",
            "beyondcorp.appGateways.list",
            "beyondcorp.clientConnectorServices.getIamPolicy",
            "beyondcorp.clientConnectorServices.list",
            "beyondcorp.clientGateways.getIamPolicy",
            "beyondcorp.clientGateways.list",
            "beyondcorp.locations.list",
            "beyondcorp.operations.list",
            "beyondcorp.partnerTenants.list",
            "beyondcorp.proxyConfigs.list",
            "beyondcorp.subscriptions.list",
            "biglake.catalogs.list",
            "biglake.databases.list",
            "biglake.locks.list",
            "biglake.tables.list",
            "bigquery.capacityCommitments.list",
            "bigquery.connections.getIamPolicy",
            "bigquery.connections.list",
            "bigquery.dataPolicies.getIamPolicy",
            "bigquery.dataPolicies.list",
            "bigquery.datasets.getIamPolicy",
            "bigquery.jobs.list",
            "bigquery.models.list",
            "bigquery.reservationAssignments.list",
            "bigquery.reservations.list",
            "bigquery.routines.list",
            "bigquery.rowAccessPolicies.getIamPolicy",
            "bigquery.rowAccessPolicies.list",
            "bigquery.savedqueries.list",
            "bigquery.tables.getIamPolicy",
            "bigquery.tables.list",
            "bigquerymigration.subtasks.list",
            "bigquerymigration.workflows.list",
            "bigtable.appProfiles.list",
            "bigtable.authorizedViews.getIamPolicy",
            "bigtable.authorizedViews.list",
            "bigtable.backups.getIamPolicy",
            "bigtable.backups.list",
            "bigtable.clusters.list",
            "bigtable.hotTablets.list",
            "bigtable.instances.getIamPolicy",
            "bigtable.instances.list",
            "bigtable.keyvisualizer.list",
            "bigtable.locations.list",
            "bigtable.logicalViews.getIamPolicy",
            "bigtable.logicalViews.list",
            "bigtable.materializedViews.getIamPolicy",
            "bigtable.materializedViews.list",
            "bigtable.tables.getIamPolicy",
            "bigtable.tables.list",
            "billing.accounts.getIamPolicy",
            "billing.accounts.list",
            "billing.anomalies.list",
            "billing.billingAccountPrices.list",
            "billing.billingAccountServices.list",
            "billing.billingAccountSkuGroupSkus.list",
            "billing.billingAccountSkuGroups.list",
            "billing.billingAccountSkus.list",
            "billing.budgets.list",
            "billing.credits.list",
            "billing.resourceAssociations.list",
            "billing.subscriptions.list",
            "binaryauthorization.attestors.getIamPolicy",
            "binaryauthorization.attestors.list",
            "binaryauthorization.continuousValidationConfig.getIamPolicy",
            "binaryauthorization.platformPolicies.list",
            "binaryauthorization.policy.getIamPolicy",
            "blockchainnodeengine.blockchainNodes.list",
            "blockchainnodeengine.locations.list",
            "blockchainnodeengine.operations.list",
            "blockchainvalidatormanager.blockchainValidatorConfigs.list",
            "blockchainvalidatormanager.locations.list",
            "blockchainvalidatormanager.operations.list",
            "capacityplanner.forecasts.list",
            "capacityplanner.usageHistories.list",
            "carestudio.patients.list",
            "certificatemanager.certissuanceconfigs.list",
            "certificatemanager.certmapentries.list",
            "certificatemanager.certmaps.list",
            "certificatemanager.certs.list",
            "certificatemanager.dnsauthorizations.list",
            "certificatemanager.locations.list",
            "certificatemanager.operations.list",
            "certificatemanager.trustconfigs.list",
            "chronicle.analyticValues.list",
            "chronicle.analytics.list",
            "chronicle.collectors.list",
            "chronicle.conversations.list",
            "chronicle.curatedRuleSetCategories.list",
            "chronicle.curatedRuleSetDeployments.list",
            "chronicle.curatedRuleSets.list",
            "chronicle.curatedRules.list",
            "chronicle.dashboardCharts.list",
            "chronicle.dashboardQueries.list",
            "chronicle.dashboards.list",
            "chronicle.dataAccessLabels.list",
            "chronicle.dataAccessScopes.list",
            "chronicle.dataTableRows.list",
            "chronicle.dataTables.list",
            "chronicle.dataTaps.list",
            "chronicle.enrichmentControls.list",
            "chronicle.entities.list",
            "chronicle.errorNotificationConfigs.list",
            "chronicle.extensionValidationReports.list",
            "chronicle.federationGroups.list",
            "chronicle.feedSourceTypeSchemas.list",
            "chronicle.feeds.list",
            "chronicle.findingsRefinementDeployments.list",
            "chronicle.findingsRefinements.list",
            "chronicle.forwarders.list",
            "chronicle.ingestionLogLabels.list",
            "chronicle.ingestionLogNamespaces.list",
            "chronicle.iocMatches.list",
            "chronicle.logTypeSchemas.list",
            "chronicle.logTypes.list",
            "chronicle.logs.list",
            "chronicle.messages.list",
            "chronicle.nativeDashboards.list",
            "chronicle.operations.list",
            "chronicle.parserExtensions.list",
            "chronicle.parsers.list",
            "chronicle.parsingErrors.list",
            "chronicle.referenceLists.list",
            "chronicle.retrohunts.list",
            "chronicle.ruleDeployments.list",
            "chronicle.ruleExecutionErrors.list",
            "chronicle.rules.list",
            "chronicle.searchQueries.list",
            "chronicle.validationErrors.list",
            "chronicle.watchlists.list",
            "chroniclesm.gcpAssociations.list",
            "clientauthconfig.brands.list",
            "clientauthconfig.clients.list",
            "cloud.locations.list",
            "cloudaicompanion.codeRepositoryIndexes.list",
            "cloudaicompanion.codeToolsSettings.list",
            "cloudaicompanion.dataSharingWithGoogleSettings.list",
            "cloudaicompanion.geminiGcpEnablementSettings.list",
            "cloudaicompanion.loggingSettings.list",
            "cloudaicompanion.operations.list",
            "cloudaicompanion.releaseChannelSettings.list",
            "cloudaicompanion.repositoryGroups.getIamPolicy",
            "cloudaicompanion.repositoryGroups.list",
            "cloudaicompanion.topics.getIamPolicy",
            "cloudasset.feeds.list",
            "cloudasset.othercloudconnections.list",
            "cloudasset.savedqueries.list",
            "cloudbuild.builds.list",
            "cloudbuild.connections.getIamPolicy",
            "cloudbuild.connections.list",
            "cloudbuild.integrations.list",
            "cloudbuild.locations.list",
            "cloudbuild.operations.list",
            "cloudbuild.repositories.list",
            "cloudbuild.workerpools.list",
            "cloudcontrolspartner.accessapprovalrequests.list",
            "cloudcontrolspartner.customers.list",
            "cloudcontrolspartner.violations.list",
            "cloudcontrolspartner.workloads.list",
            "clouddebugger.breakpoints.list",
            "clouddebugger.debuggees.list",
            "clouddeploy.automationRuns.list",
            "clouddeploy.automations.list",
            "clouddeploy.customTargetTypes.getIamPolicy",
            "clouddeploy.customTargetTypes.list",
            "clouddeploy.deliveryPipelines.getIamPolicy",
            "clouddeploy.deliveryPipelines.list",
            "clouddeploy.deployPolicies.getIamPolicy",
            "clouddeploy.deployPolicies.list",
            "clouddeploy.jobRuns.list",
            "clouddeploy.locations.list",
            "clouddeploy.operations.list",
            "clouddeploy.releases.list",
            "clouddeploy.rollouts.list",
            "clouddeploy.targets.getIamPolicy",
            "clouddeploy.targets.list",
            "cloudfunctions.functions.getIamPolicy",
            "cloudfunctions.functions.list",
            "cloudfunctions.locations.list",
            "cloudfunctions.operations.list",
            "cloudjobdiscovery.companies.list",
            "cloudkms.cryptoKeyVersions.list",
            "cloudkms.cryptoKeys.getIamPolicy",
            "cloudkms.cryptoKeys.list",
            "cloudkms.ekmConfigs.getIamPolicy",
            "cloudkms.ekmConnections.getIamPolicy",
            "cloudkms.ekmConnections.list",
            "cloudkms.importJobs.getIamPolicy",
            "cloudkms.importJobs.list",
            "cloudkms.keyHandles.list",
            "cloudkms.keyRings.getIamPolicy",
            "cloudkms.keyRings.list",
            "cloudkms.locations.list",
            "cloudnotifications.activities.list",
            "cloudonefs.isiloncloud.com/clusters.list",
            "cloudonefs.isiloncloud.com/fileshares.list",
            "cloudprivatecatalogproducer.associations.list",
            "cloudprivatecatalogproducer.catalogAssociations.list",
            "cloudprivatecatalogproducer.catalogs.getIamPolicy",
            "cloudprivatecatalogproducer.catalogs.list",
            "cloudprivatecatalogproducer.producerCatalogs.getIamPolicy",
            "cloudprivatecatalogproducer.producerCatalogs.list",
            "cloudprivatecatalogproducer.products.getIamPolicy",
            "cloudprivatecatalogproducer.products.list",
            "cloudprofiler.profiles.list",
            "cloudscheduler.jobs.list",
            "cloudscheduler.locations.list",
            "cloudsecurityscanner.crawledurls.list",
            "cloudsecurityscanner.results.list",
            "cloudsecurityscanner.scanruns.list",
            "cloudsecurityscanner.scans.list",
            "cloudsql.backupRuns.list",
            "cloudsql.databases.list",
            "cloudsql.instances.list",
            "cloudsql.sslCerts.list",
            "cloudsql.users.list",
            "cloudsupport.accounts.getIamPolicy",
            "cloudsupport.accounts.list",
            "cloudsupport.techCases.list",
            "cloudtasks.locations.list",
            "cloudtasks.queues.getIamPolicy",
            "cloudtasks.queues.list",
            "cloudtasks.tasks.list",
            "cloudtestservice.devicesession.list",
            "cloudtoolresults.executions.list",
            "cloudtoolresults.histories.list",
            "cloudtoolresults.steps.list",
            "cloudtrace.insights.list",
            "cloudtrace.tasks.list",
            "cloudtrace.traceScopes.list",
            "cloudtrace.traces.list",
            "cloudtranslate.adaptiveMtDatasets.list",
            "cloudtranslate.adaptiveMtFiles.list",
            "cloudtranslate.adaptiveMtSentences.list",
            "cloudtranslate.customModels.list",
            "cloudtranslate.datasets.list",
            "cloudtranslate.glossaries.list",
            "cloudtranslate.glossaryentries.list",
            "cloudtranslate.locations.list",
            "cloudtranslate.operations.list",
            "cloudvolumesgcp-api.netapp.com/activeDirectories.list",
            "cloudvolumesgcp-api.netapp.com/ipRanges.list",
            "cloudvolumesgcp-api.netapp.com/jobs.list",
            "cloudvolumesgcp-api.netapp.com/regions.list",
            "cloudvolumesgcp-api.netapp.com/serviceLevels.list",
            "cloudvolumesgcp-api.netapp.com/snapshots.list",
            "cloudvolumesgcp-api.netapp.com/volumereplication.list",
            "cloudvolumesgcp-api.netapp.com/volumes.list",
            "commerceagreementpublishing.agreements.list",
            "commerceagreementpublishing.documents.list",
            "commercebusinessenablement.operations.list",
            "commercebusinessenablement.partnerAccounts.list",
            "commercebusinessenablement.refunds.list",
            "commercebusinessenablement.resellerDiscountOffers.list",
            "commercebusinessenablement.resellerPrivateOfferPlans.list",
            "commercebusinessenablement.resellerRestrictions.list",
            "commerceoffercatalog.agreements.list",
            "commerceoffercatalog.documents.list",
            "commerceorggovernance.collectionRequestApprovals.list",
            "commerceorggovernance.collections.list",
            "commerceorggovernance.populateCollectionJobs.list",
            "commerceorggovernance.services.list",
            "commerceprice.events.list",
            "commerceprice.privateoffers.list",
            "composer.dags.list",
            "composer.environments.list",
            "composer.imageversions.list",
            "composer.operations.list",
            "composer.userworkloadsconfigmaps.list",
            "composer.userworkloadssecrets.list",
            "compute.acceleratorTypes.list",
            "compute.addresses.list",
            "compute.autoscalers.list",
            "compute.backendBuckets.getIamPolicy",
            "compute.backendBuckets.list",
            "compute.backendServices.getIamPolicy",
            "compute.backendServices.list",
            "compute.commitments.list",
            "compute.crossSiteNetworks.list",
            "compute.diskTypes.list",
            "compute.disks.getIamPolicy",
            "compute.disks.list",
            "compute.externalVpnGateways.list",
            "compute.firewallPolicies.getIamPolicy",
            "compute.firewallPolicies.list",
            "compute.firewalls.list",
            "compute.forwardingRules.list",
            "compute.futureReservations.getIamPolicy",
            "compute.futureReservations.list",
            "compute.globalAddresses.list",
            "compute.globalForwardingRules.list",
            "compute.globalNetworkEndpointGroups.list",
            "compute.globalOperations.getIamPolicy",
            "compute.globalOperations.list",
            "compute.globalPublicDelegatedPrefixes.list",
            "compute.healthChecks.list",
            "compute.httpHealthChecks.list",
            "compute.httpsHealthChecks.list",
            "compute.images.getIamPolicy",
            "compute.images.list",
            "compute.instanceGroupManagers.list",
            "compute.instanceGroups.list",
            "compute.instanceTemplates.getIamPolicy",
            "compute.instanceTemplates.list",
            "compute.instances.getIamPolicy",
            "compute.instances.list",
            "compute.instantSnapshots.getIamPolicy",
            "compute.instantSnapshots.list",
            "compute.interconnectAttachments.list",
            "compute.interconnectLocations.list",
            "compute.interconnectRemoteLocations.list",
            "compute.interconnects.list",
            "compute.licenseCodes.getIamPolicy",
            "compute.licenseCodes.list",
            "compute.licenses.getIamPolicy",
            "compute.licenses.list",
            "compute.machineImages.getIamPolicy",
            "compute.machineImages.list",
            "compute.machineTypes.list",
            "compute.multiMig.list",
            "compute.networkAttachments.getIamPolicy",
            "compute.networkAttachments.list",
            "compute.networkEdgeSecurityServices.list",
            "compute.networkEndpointGroups.list",
            "compute.networkProfiles.list",
            "compute.networks.list",
            "compute.nodeGroups.getIamPolicy",
            "compute.nodeGroups.list",
            "compute.nodeTemplates.getIamPolicy",
            "compute.nodeTemplates.list",
            "compute.nodeTypes.list",
            "compute.packetMirrorings.list",
            "compute.publicAdvertisedPrefixes.list",
            "compute.publicDelegatedPrefixes.list",
            "compute.regionBackendServices.getIamPolicy",
            "compute.regionBackendServices.list",
            "compute.regionFirewallPolicies.getIamPolicy",
            "compute.regionFirewallPolicies.list",
            "compute.regionHealthCheckServices.list",
            "compute.regionHealthChecks.list",
            "compute.regionNetworkEndpointGroups.list",
            "compute.regionNotificationEndpoints.list",
            "compute.regionOperations.getIamPolicy",
            "compute.regionOperations.list",
            "compute.regionSecurityPolicies.list",
            "compute.regionSslCertificates.list",
            "compute.regionSslPolicies.list",
            "compute.regionTargetHttpProxies.list",
            "compute.regionTargetHttpsProxies.list",
            "compute.regionTargetTcpProxies.list",
            "compute.regionUrlMaps.list",
            "compute.regions.list",
            "compute.reservationBlocks.list",
            "compute.reservations.list",
            "compute.resourcePolicies.getIamPolicy",
            "compute.resourcePolicies.list",
            "compute.routers.list",
            "compute.routes.list",
            "compute.securityPolicies.list",
            "compute.serviceAttachments.getIamPolicy",
            "compute.serviceAttachments.list",
            "compute.snapshots.getIamPolicy",
            "compute.snapshots.list",
            "compute.sslCertificates.list",
            "compute.sslPolicies.list",
            "compute.storagePools.getIamPolicy",
            "compute.storagePools.list",
            "compute.subnetworks.getIamPolicy",
            "compute.subnetworks.list",
            "compute.targetGrpcProxies.list",
            "compute.targetHttpProxies.list",
            "compute.targetHttpsProxies.list",
            "compute.targetInstances.list",
            "compute.targetPools.list",
            "compute.targetSslProxies.list",
            "compute.targetTcpProxies.list",
            "compute.targetVpnGateways.list",
            "compute.urlMaps.list",
            "compute.vpnGateways.list",
            "compute.vpnTunnels.list",
            "compute.wireGroups.list",
            "compute.zoneOperations.getIamPolicy",
            "compute.zoneOperations.list",
            "compute.zones.list",
            "confidentialcomputing.locations.list",
            "config.deployments.getIamPolicy",
            "config.deployments.list",
            "config.locations.list",
            "config.operations.list",
            "config.previews.list",
            "config.resources.list",
            "config.revisions.list",
            "config.terraformversions.list",
            "configdelivery.fleetPackages.list",
            "configdelivery.locations.list",
            "configdelivery.operations.list",
            "configdelivery.releases.list",
            "configdelivery.resourceBundles.list",
            "configdelivery.rollouts.list",
            "connectors.actions.list",
            "connectors.connections.getIamPolicy",
            "connectors.connections.list",
            "connectors.connectors.list",
            "connectors.customConnectorVersions.getIamPolicy",
            "connectors.customConnectorVersions.list",
            "connectors.customConnectors.getIamPolicy",
            "connectors.customConnectors.list",
            "connectors.endpointAttachments.getIamPolicy",
            "connectors.endpointAttachments.list",
            "connectors.entities.list",
            "connectors.entityTypes.list",
            "connectors.eventSubscriptions.list",
            "connectors.eventtypes.list",
            "connectors.locations.list",
            "connectors.managedZones.getIamPolicy",
            "connectors.managedZones.list",
            "connectors.operations.list",
            "connectors.providers.list",
            "connectors.versions.list",
            "consumerprocurement.accounts.list",
            "consumerprocurement.consents.list",
            "consumerprocurement.entitlements.list",
            "consumerprocurement.events.list",
            "consumerprocurement.freeTrials.list",
            "consumerprocurement.orderAttributions.list",
            "consumerprocurement.orders.list",
            "contactcenteraiplatform.contactCenters.list",
            "contactcenteraiplatform.locations.list",
            "contactcenteraiplatform.operations.list",
            "contactcenterinsights.analyses.list",
            "contactcenterinsights.analysisRules.list",
            "contactcenterinsights.assessmentRules.list",
            "contactcenterinsights.authorizedAnalyses.list",
            "contactcenterinsights.authorizedConversations.list",
            "contactcenterinsights.authorizedFeedbackLabels.list",
            "contactcenterinsights.authorizedOperations.list",
            "contactcenterinsights.authorizedViewSets.list",
            "contactcenterinsights.authorizedViews.getIamPolicy",
            "contactcenterinsights.authorizedViews.list",
            "contactcenterinsights.conversations.list",
            "contactcenterinsights.faqEntries.list",
            "contactcenterinsights.faqModels.list",
            "contactcenterinsights.feedbackLabels.list",
            "contactcenterinsights.issueModels.list",
            "contactcenterinsights.issues.list",
            "contactcenterinsights.operations.list",
            "contactcenterinsights.phraseMatchers.list",
            "contactcenterinsights.qaQuestionTags.list",
            "contactcenterinsights.qaQuestions.list",
            "contactcenterinsights.qaScorecardRevisions.list",
            "contactcenterinsights.qaScorecards.list",
            "contactcenterinsights.views.list",
            "contactcenterinsights.visibilityLabels.list",
            "container.apiServices.list",
            "container.auditSinks.list",
            "container.backendConfigs.list",
            "container.bindings.list",
            "container.certificateSigningRequests.list",
            "container.clusterRoleBindings.list",
            "container.clusterRoles.list",
            "container.clusters.list",
            "container.componentStatuses.list",
            "container.configMaps.list",
            "container.controllerRevisions.list",
            "container.cronJobs.list",
            "container.csiDrivers.list",
            "container.csiNodeInfos.list",
            "container.csiNodes.list",
            "container.customResourceDefinitions.list",
            "container.daemonSets.list",
            "container.deployments.list",
            "container.endpointSlices.list",
            "container.endpoints.list",
            "container.events.list",
            "container.frontendConfigs.list",
            "container.horizontalPodAutoscalers.list",
            "container.ingresses.list",
            "container.initializerConfigurations.list",
            "container.jobs.list",
            "container.leases.list",
            "container.limitRanges.list",
            "container.localSubjectAccessReviews.list",
            "container.managedCertificates.list",
            "container.mutatingWebhookConfigurations.list",
            "container.namespaces.list",
            "container.networkPolicies.list",
            "container.nodes.list",
            "container.operations.list",
            "container.persistentVolumeClaims.list",
            "container.persistentVolumes.list",
            "container.petSets.list",
            "container.podDisruptionBudgets.list",
            "container.podPresets.list",
            "container.podSecurityPolicies.list",
            "container.podTemplates.list",
            "container.pods.list",
            "container.priorityClasses.list",
            "container.replicaSets.list",
            "container.replicationControllers.list",
            "container.resourceQuotas.list",
            "container.roleBindings.list",
            "container.roles.list",
            "container.runtimeClasses.list",
            "container.scheduledJobs.list",
            "container.selfSubjectAccessReviews.list",
            "container.serviceAccounts.list",
            "container.services.list",
            "container.statefulSets.list",
            "container.storageClasses.list",
            "container.storageStates.list",
            "container.storageVersionMigrations.list",
            "container.subjectAccessReviews.list",
            "container.thirdPartyObjects.list",
            "container.thirdPartyResources.list",
            "container.updateInfos.list",
            "container.validatingWebhookConfigurations.list",
            "container.volumeAttachments.list",
            "container.volumeSnapshotClasses.list",
            "container.volumeSnapshotContents.list",
            "container.volumeSnapshots.list",
            "containeranalysis.notes.getIamPolicy",
            "containeranalysis.notes.list",
            "containeranalysis.occurrences.getIamPolicy",
            "containeranalysis.occurrences.list",
            "containersecurity.clusterSummaries.list",
            "containersecurity.findings.list",
            "containersecurity.locations.list",
            "contentwarehouse.corpora.list",
            "contentwarehouse.documentSchemas.list",
            "contentwarehouse.documents.getIamPolicy",
            "contentwarehouse.documents.list",
            "contentwarehouse.ruleSets.list",
            "contentwarehouse.synonymSets.list",
            "databasecenter.*",
            "databaseinsights.locations.list",
            "databasesconsole.locations.list",
            "databasesconsole.operations.list",
            "databasesconsole.studioQueries.list",
            "datacatalog.categories.getIamPolicy",
            "datacatalog.entries.getIamPolicy",
            "datacatalog.entries.list",
            "datacatalog.entryGroups.getIamPolicy",
            "datacatalog.entryGroups.list",
            "datacatalog.operations.list",
            "datacatalog.relationships.list",
            "datacatalog.tagTemplates.getIamPolicy",
            "datacatalog.taxonomies.getIamPolicy",
            "datacatalog.taxonomies.list",
            "dataconnectors.connectors.getIamPolicy",
            "dataconnectors.connectors.list",
            "dataconnectors.locations.list",
            "dataconnectors.operations.list",
            "dataflow.jobs.list",
            "dataflow.messages.list",
            "dataflow.snapshots.list",
            "dataform.commentThreads.list",
            "dataform.comments.list",
            "dataform.compilationResults.list",
            "dataform.locations.list",
            "dataform.releaseConfigs.list",
            "dataform.repositories.getIamPolicy",
            "dataform.repositories.list",
            "dataform.workflowConfigs.list",
            "dataform.workflowInvocations.list",
            "dataform.workspaces.getIamPolicy",
            "dataform.workspaces.list",
            "datafusion.artifacts.list",
            "datafusion.instances.getIamPolicy",
            "datafusion.instances.list",
            "datafusion.locations.list",
            "datafusion.namespaces.getIamPolicy",
            "datafusion.namespaces.list",
            "datafusion.operations.list",
            "datafusion.pipelineConnections.list",
            "datafusion.pipelines.list",
            "datafusion.profiles.list",
            "datafusion.secureKeys.list",
            "datalabeling.annotateddatasets.list",
            "datalabeling.annotationspecsets.list",
            "datalabeling.dataitems.list",
            "datalabeling.datasets.list",
            "datalabeling.examples.list",
            "datalabeling.instructions.list",
            "datalabeling.operations.list",
            "datalineage.events.list",
            "datalineage.processes.list",
            "datalineage.runs.list",
            "datamigration.connectionprofiles.getIamPolicy",
            "datamigration.connectionprofiles.list",
            "datamigration.conversionworkspaces.getIamPolicy",
            "datamigration.conversionworkspaces.list",
            "datamigration.locations.list",
            "datamigration.mappingrules.getIamPolicy",
            "datamigration.migrationjobs.getIamPolicy",
            "datamigration.migrationjobs.list",
            "datamigration.objects.list",
            "datamigration.operations.list",
            "datamigration.privateconnections.getIamPolicy",
            "datamigration.privateconnections.list",
            "datapipelines.jobs.list",
            "datapipelines.pipelines.list",
            "dataplex.aspectTypes.getIamPolicy",
            "dataplex.aspectTypes.list",
            "dataplex.assetActions.list",
            "dataplex.assets.getIamPolicy",
            "dataplex.assets.list",
            "dataplex.content.getIamPolicy",
            "dataplex.content.list",
            "dataplex.dataAttributeBindings.getIamPolicy",
            "dataplex.dataAttributeBindings.list",
            "dataplex.dataAttributes.getIamPolicy",
            "dataplex.dataAttributes.list",
            "dataplex.dataTaxonomies.getIamPolicy",
            "dataplex.dataTaxonomies.list",
            "dataplex.datascans.getIamPolicy",
            "dataplex.datascans.list",
            "dataplex.encryptionConfig.list",
            "dataplex.entities.list",
            "dataplex.entries.list",
            "dataplex.entryGroups.getIamPolicy",
            "dataplex.entryGroups.list",
            "dataplex.entryTypes.getIamPolicy",
            "dataplex.entryTypes.list",
            "dataplex.environments.getIamPolicy",
            "dataplex.environments.list",
            "dataplex.lakeActions.list",
            "dataplex.lakes.getIamPolicy",
            "dataplex.lakes.list",
            "dataplex.locations.list",
            "dataplex.metadataJobs.list",
            "dataplex.operations.list",
            "dataplex.partitions.list",
            "dataplex.tasks.getIamPolicy",
            "dataplex.tasks.list",
            "dataplex.zoneActions.list",
            "dataplex.zones.getIamPolicy",
            "dataplex.zones.list",
            "dataproc.agents.list",
            "dataproc.autoscalingPolicies.getIamPolicy",
            "dataproc.autoscalingPolicies.list",
            "dataproc.batches.list",
            "dataproc.clusters.getIamPolicy",
            "dataproc.clusters.list",
            "dataproc.jobs.getIamPolicy",
            "dataproc.jobs.list",
            "dataproc.operations.getIamPolicy",
            "dataproc.operations.list",
            "dataproc.sessionTemplates.list",
            "dataproc.sessions.list",
            "dataproc.workflowTemplates.getIamPolicy",
            "dataproc.workflowTemplates.list",
            "dataprocessing.datasources.list",
            "dataprocessing.featurecontrols.list",
            "dataprocessing.groupcontrols.list",
            "dataprocrm.locations.list",
            "dataprocrm.nodePools.list",
            "dataprocrm.nodes.list",
            "dataprocrm.operations.list",
            "dataprocrm.workloads.list",
            "datastore.backupSchedules.list",
            "datastore.backups.list",
            "datastore.databases.list",
            "datastore.entities.list",
            "datastore.indexes.list",
            "datastore.keyVisualizerScans.list",
            "datastore.locations.list",
            "datastore.namespaces.list",
            "datastore.operations.list",
            "datastore.statistics.list",
            "datastore.userCreds.list",
            "datastream.connectionProfiles.getIamPolicy",
            "datastream.connectionProfiles.list",
            "datastream.locations.list",
            "datastream.objects.list",
            "datastream.operations.list",
            "datastream.privateConnections.getIamPolicy",
            "datastream.privateConnections.list",
            "datastream.routes.getIamPolicy",
            "datastream.routes.list",
            "datastream.streams.getIamPolicy",
            "datastream.streams.list",
            "datastudio.datasources.getIamPolicy",
            "datastudio.reports.getIamPolicy",
            "datastudio.workspaces.getIamPolicy",
            "deploymentmanager.compositeTypes.list",
            "deploymentmanager.deployments.getIamPolicy",
            "deploymentmanager.deployments.list",
            "deploymentmanager.manifests.list",
            "deploymentmanager.operations.list",
            "deploymentmanager.resources.list",
            "deploymentmanager.typeProviders.list",
            "deploymentmanager.types.list",
            "designcenter.applicationTemplateRevisions.list",
            "designcenter.applicationTemplates.list",
            "designcenter.applications.list",
            "designcenter.catalogTemplateRevisions.list",
            "designcenter.catalogTemplates.list",
            "designcenter.catalogs.list",
            "designcenter.components.list",
            "designcenter.connections.list",
            "designcenter.locations.list",
            "designcenter.operations.list",
            "designcenter.sharedTemplateRevisions.list",
            "designcenter.sharedTemplates.list",
            "designcenter.shares.list",
            "designcenter.spaces.getIamPolicy",
            "designcenter.spaces.list",
            "developerconnect.accountConnectors.list",
            "developerconnect.connections.list",
            "developerconnect.gitRepositoryLinks.list",
            "developerconnect.locations.list",
            "developerconnect.operations.list",
            "developerconnect.providers.list",
            "developerconnect.users.list",
            "dialogflow.agents.list",
            "dialogflow.answerrecords.list",
            "dialogflow.callMatchers.list",
            "dialogflow.changelogs.list",
            "dialogflow.contexts.list",
            "dialogflow.conversationDatasets.list",
            "dialogflow.conversationModels.list",
            "dialogflow.conversationProfiles.list",
            "dialogflow.conversations.list",
            "dialogflow.deployments.list",
            "dialogflow.documents.list",
            "dialogflow.entityTypes.list",
            "dialogflow.environments.list",
            "dialogflow.examples.list",
            "dialogflow.experiments.list",
            "dialogflow.flows.list",
            "dialogflow.generators.list",
            "dialogflow.integrations.list",
            "dialogflow.intents.list",
            "dialogflow.knowledgeBases.list",
            "dialogflow.messages.list",
            "dialogflow.modelEvaluations.list",
            "dialogflow.pages.list",
            "dialogflow.participants.list",
            "dialogflow.phoneNumberOrders.list",
            "dialogflow.phoneNumbers.list",
            "dialogflow.playbooks.list",
            "dialogflow.securitySettings.list",
            "dialogflow.sessionEntityTypes.list",
            "dialogflow.smartMessagingEntries.list",
            "dialogflow.testcases.list",
            "dialogflow.tools.list",
            "dialogflow.transitionRouteGroups.list",
            "dialogflow.versions.list",
            "dialogflow.webhooks.list",
            "discoveryengine.branches.list",
            "discoveryengine.cmekConfigs.list",
            "discoveryengine.collections.list",
            "discoveryengine.controls.list",
            "discoveryengine.conversations.list",
            "discoveryengine.dataStores.list",
            "discoveryengine.documents.list",
            "discoveryengine.engines.list",
            "discoveryengine.evaluations.list",
            "discoveryengine.models.list",
            "discoveryengine.operations.list",
            "discoveryengine.sampleQueries.list",
            "discoveryengine.sampleQuerySets.list",
            "discoveryengine.schemas.list",
            "discoveryengine.servingConfigs.list",
            "discoveryengine.sessions.list",
            "discoveryengine.targetSites.list",
            "dlp.analyzeRiskTemplates.list",
            "dlp.columnDataProfiles.list",
            "dlp.connections.list",
            "dlp.deidentifyTemplates.list",
            "dlp.estimates.list",
            "dlp.fileStoreProfiles.list",
            "dlp.inspectFindings.list",
            "dlp.inspectTemplates.list",
            "dlp.jobTriggers.list",
            "dlp.jobs.list",
            "dlp.locations.list",
            "dlp.projectDataProfiles.list",
            "dlp.storedInfoTypes.list",
            "dlp.subscriptions.list",
            "dlp.tableDataProfiles.list",
            "dns.changes.list",
            "dns.dnsKeys.list",
            "dns.managedZoneOperations.list",
            "dns.managedZones.getIamPolicy",
            "dns.managedZones.list",
            "dns.policies.list",
            "dns.resourceRecordSets.list",
            "dns.responsePolicies.list",
            "dns.responsePolicyRules.list",
            "documentai.dataLabelingJobs.list",
            "documentai.evaluations.list",
            "documentai.labelerPools.list",
            "documentai.locations.list",
            "documentai.processorTypes.list",
            "documentai.processorVersions.list",
            "documentai.processors.list",
            "domains.locations.list",
            "domains.operations.list",
            "domains.registrations.getIamPolicy",
            "domains.registrations.list",
            "earthengine.assets.getIamPolicy",
            "earthengine.assets.list",
            "earthengine.operations.list",
            "edgecontainer.clusters.getIamPolicy",
            "edgecontainer.clusters.list",
            "edgecontainer.locations.list",
            "edgecontainer.machines.getIamPolicy",
            "edgecontainer.machines.list",
            "edgecontainer.nodePools.getIamPolicy",
            "edgecontainer.nodePools.list",
            "edgecontainer.operations.list",
            "edgecontainer.vpnConnections.getIamPolicy",
            "edgecontainer.vpnConnections.list",
            "edgenetwork.interconnectAttachments.getIamPolicy",
            "edgenetwork.interconnectAttachments.list",
            "edgenetwork.interconnects.getIamPolicy",
            "edgenetwork.interconnects.list",
            "edgenetwork.locations.list",
            "edgenetwork.networks.getIamPolicy",
            "edgenetwork.networks.list",
            "edgenetwork.operations.list",
            "edgenetwork.routers.getIamPolicy",
            "edgenetwork.routers.list",
            "edgenetwork.routes.list",
            "edgenetwork.subnetworks.getIamPolicy",
            "edgenetwork.subnetworks.list",
            "edgenetwork.zones.list",
            "enterpriseknowledgegraph.entityReconciliationJobs.list",
            "enterprisepurchasing.gcveCuds.list",
            "enterprisepurchasing.gcveNodePricingInfo.list",
            "enterprisepurchasing.locations.list",
            "enterprisepurchasing.operations.list",
            "errorreporting.applications.list",
            "errorreporting.errorEvents.list",
            "errorreporting.groups.list",
            "essentialcontacts.contacts.list",
            "eventarc.channelConnections.getIamPolicy",
            "eventarc.channelConnections.list",
            "eventarc.channels.getIamPolicy",
            "eventarc.channels.list",
            "eventarc.enrollments.getIamPolicy",
            "eventarc.enrollments.list",
            "eventarc.googleApiSources.getIamPolicy",
            "eventarc.googleApiSources.list",
            "eventarc.kafkaSources.getIamPolicy",
            "eventarc.kafkaSources.list",
            "eventarc.locations.list",
            "eventarc.messageBuses.getIamPolicy",
            "eventarc.messageBuses.list",
            "eventarc.operations.list",
            "eventarc.pipelines.getIamPolicy",
            "eventarc.pipelines.list",
            "eventarc.providers.list",
            "eventarc.triggers.getIamPolicy",
            "eventarc.triggers.list",
            "fcmdata.deliverydata.list",
            "file.backups.list",
            "file.instances.list",
            "file.locations.list",
            "file.operations.list",
            "financialservices.locations.list",
            "financialservices.operations.list",
            "financialservices.v1backtests.list",
            "financialservices.v1datasets.list",
            "financialservices.v1engineconfigs.list",
            "financialservices.v1engineversions.list",
            "financialservices.v1instances.list",
            "financialservices.v1models.list",
            "financialservices.v1predictions.list",
            "firebase.clients.list",
            "firebase.links.list",
            "firebase.playLinks.list",
            "firebaseabt.experiments.list",
            "firebaseappdistro.groups.list",
            "firebaseappdistro.releases.list",
            "firebaseappdistro.testers.list",
            "firebasecrashlytics.issues.list",
            "firebasedatabase.instances.list",
            "firebasedataconnect.connectorRevisions.list",
            "firebasedataconnect.connectors.list",
            "firebasedataconnect.locations.list",
            "firebasedataconnect.operations.list",
            "firebasedataconnect.schemaRevisions.list",
            "firebasedataconnect.schemas.list",
            "firebasedataconnect.services.list",
            "firebasedynamiclinks.destinations.list",
            "firebasedynamiclinks.domains.list",
            "firebasedynamiclinks.links.list",
            "firebaseextensions.configs.list",
            "firebaseextensionspublisher.extensions.list",
            "firebasehosting.sites.list",
            "firebaseinappmessaging.campaigns.list",
            "firebasemessagingcampaigns.campaigns.list",
            "firebaseml.models.list",
            "firebaseml.modelversions.list",
            "firebasenotifications.messages.list",
            "firebaserules.releases.list",
            "firebaserules.rulesets.list",
            "firebasestorage.buckets.list",
            "fleetengine.deliveryvehicles.list",
            "fleetengine.tasks.list",
            "fleetengine.vehicles.list",
            "gcp.redisenterprise.com/databases.list",
            "gcp.redisenterprise.com/subscriptions.list",
            "gdchardwaremanagement.changeLogEntries.list",
            "gdchardwaremanagement.comments.list",
            "gdchardwaremanagement.hardware.list",
            "gdchardwaremanagement.hardwareGroups.list",
            "gdchardwaremanagement.locations.list",
            "gdchardwaremanagement.operations.list",
            "gdchardwaremanagement.orders.list",
            "gdchardwaremanagement.sites.list",
            "gdchardwaremanagement.skus.list",
            "gdchardwaremanagement.zones.list",
            "genomics.datasets.getIamPolicy",
            "genomics.datasets.list",
            "genomics.operations.list",
            "gkebackup.backupPlans.getIamPolicy",
            "gkebackup.backupPlans.list",
            "gkebackup.backups.list",
            "gkebackup.locations.list",
            "gkebackup.operations.list",
            "gkebackup.restorePlans.getIamPolicy",
            "gkebackup.restorePlans.list",
            "gkebackup.restores.list",
            "gkebackup.volumeBackups.list",
            "gkebackup.volumeRestores.list",
            "gkehub.features.getIamPolicy",
            "gkehub.features.list",
            "gkehub.locations.list",
            "gkehub.membershipbindings.list",
            "gkehub.membershipfeatures.list",
            "gkehub.memberships.getIamPolicy",
            "gkehub.memberships.list",
            "gkehub.namespaces.list",
            "gkehub.operations.list",
            "gkehub.rbacrolebindings.list",
            "gkehub.scopes.getIamPolicy",
            "gkehub.scopes.list",
            "gkemulticloud.attachedClusters.list",
            "gkemulticloud.awsClusters.list",
            "gkemulticloud.awsNodePools.list",
            "gkemulticloud.azureClients.list",
            "gkemulticloud.azureClusters.list",
            "gkemulticloud.azureNodePools.list",
            "gkemulticloud.operations.list",
            "gkeonprem.bareMetalAdminClusters.getIamPolicy",
            "gkeonprem.bareMetalAdminClusters.list",
            "gkeonprem.bareMetalClusters.getIamPolicy",
            "gkeonprem.bareMetalClusters.list",
            "gkeonprem.bareMetalNodePools.getIamPolicy",
            "gkeonprem.bareMetalNodePools.list",
            "gkeonprem.locations.list",
            "gkeonprem.operations.list",
            "gkeonprem.vmwareAdminClusters.getIamPolicy",
            "gkeonprem.vmwareAdminClusters.list",
            "gkeonprem.vmwareClusters.getIamPolicy",
            "gkeonprem.vmwareClusters.list",
            "gkeonprem.vmwareNodePools.getIamPolicy",
            "gkeonprem.vmwareNodePools.list",
            "gsuiteaddons.deployments.list",
            "healthcare.annotationStores.getIamPolicy",
            "healthcare.annotationStores.list",
            "healthcare.annotations.list",
            "healthcare.attributeDefinitions.list",
            "healthcare.consentArtifacts.list",
            "healthcare.consentStores.getIamPolicy",
            "healthcare.consentStores.list",
            "healthcare.consents.list",
            "healthcare.datasets.getIamPolicy",
            "healthcare.datasets.list",
            "healthcare.dicomStores.getIamPolicy",
            "healthcare.dicomStores.list",
            "healthcare.fhirStores.getIamPolicy",
            "healthcare.fhirStores.list",
            "healthcare.hl7V2Messages.list",
            "healthcare.hl7V2Stores.getIamPolicy",
            "healthcare.hl7V2Stores.list",
            "healthcare.locations.list",
            "healthcare.operations.list",
            "healthcare.userDataMappings.list",
            "iam.denypolicies.list",
            "iam.googleapis.com/oauthClientCredentials.list",
            "iam.googleapis.com/oauthClients.list",
            "iam.googleapis.com/workforcePoolProviderKeys.list",
            "iam.googleapis.com/workforcePoolProviders.list",
            "iam.googleapis.com/workforcePools.getIamPolicy",
            "iam.googleapis.com/workforcePools.list",
            "iam.googleapis.com/workloadIdentityPoolProviderKeys.list",
            "iam.googleapis.com/workloadIdentityPoolProviders.list",
            "iam.googleapis.com/workloadIdentityPools.list",
            "iam.policybindings.list",
            "iam.principalaccessboundarypolicies.list",
            "iam.roles.get",
            "iam.roles.list",
            "iam.serviceAccountKeys.list",
            "iam.serviceAccounts.get",
            "iam.serviceAccounts.getIamPolicy",
            "iam.serviceAccounts.list",
            "iap.tunnel.getIamPolicy",
            "iap.tunnelDestGroups.getIamPolicy",
            "iap.tunnelDestGroups.list",
            "iap.tunnelInstances.getIamPolicy",
            "iap.tunnelLocations.getIamPolicy",
            "iap.tunnelZones.getIamPolicy",
            "iap.web.getIamPolicy",
            "iap.webServiceVersions.getIamPolicy",
            "iap.webServices.getIamPolicy",
            "iap.webTypes.getIamPolicy",
            "identitytoolkit.tenants.getIamPolicy",
            "identitytoolkit.tenants.list",
            "ids.endpoints.getIamPolicy",
            "ids.endpoints.list",
            "ids.locations.list",
            "ids.operations.list",
            "integrations.apigeeAuthConfigs.list",
            "integrations.apigeeCertificates.list",
            "integrations.apigeeExecutions.list",
            "integrations.apigeeIntegrationVers.list",
            "integrations.apigeeIntegrations.list",
            "integrations.apigeeSfdcChannels.list",
            "integrations.apigeeSfdcInstances.list",
            "integrations.apigeeSuspensions.list",
            "integrations.authConfigs.list",
            "integrations.certificates.list",
            "integrations.executions.list",
            "integrations.integrationVersions.list",
            "integrations.integrations.list",
            "integrations.securityAuthConfigs.list",
            "integrations.securityExecutions.list",
            "integrations.securityIntegTempVers.list",
            "integrations.securityIntegrationVers.list",
            "integrations.securityIntegrations.list",
            "integrations.sfdcChannels.list",
            "integrations.sfdcInstances.list",
            "integrations.suspensions.list",
            "integrations.testCases.list",
            "issuerswitch.accountManagerTransactions.list",
            "issuerswitch.complaintTransactions.list",
            "issuerswitch.financialTransactions.list",
            "issuerswitch.mandateTransactions.list",
            "issuerswitch.metadataTransactions.list",
            "issuerswitch.operations.list",
            "issuerswitch.ruleMetadata.list",
            "issuerswitch.ruleMetadataValues.list",
            "issuerswitch.rules.list",
            "krmapihosting.krmApiHosts.getIamPolicy",
            "krmapihosting.krmApiHosts.list",
            "krmapihosting.locations.list",
            "krmapihosting.operations.list",
            "licensemanager.configurations.list",
            "licensemanager.instances.list",
            "licensemanager.locations.list",
            "licensemanager.operations.list",
            "licensemanager.products.list",
            "lifesciences.operations.list",
            "livestream.assets.list",
            "livestream.channels.list",
            "livestream.clips.list",
            "livestream.events.list",
            "livestream.inputs.list",
            "livestream.locations.list",
            "livestream.operations.list",
            "logging.buckets.list",
            "logging.exclusions.list",
            "logging.links.list",
            "logging.locations.list",
            "logging.logEntries.list",
            "logging.logMetrics.list",
            "logging.logScopes.list",
            "logging.logServiceIndexes.list",
            "logging.logServices.list",
            "logging.logs.list",
            "logging.notificationRules.list",
            "logging.operations.list",
            "logging.privateLogEntries.list",
            "logging.queries.usePrivate",
            "logging.sinks.list",
            "logging.views.getIamPolicy",
            "logging.views.list",
            "looker.backups.list",
            "looker.instances.list",
            "looker.locations.list",
            "looker.operations.list",
            "maintenance.locations.list",
            "maintenance.resourceMaintenances.list",
            "managedflink.deployments.list",
            "managedflink.jobs.list",
            "managedflink.locations.list",
            "managedflink.operations.list",
            "managedflink.sessions.list",
            "managedidentities.backups.getIamPolicy",
            "managedidentities.backups.list",
            "managedidentities.domains.getIamPolicy",
            "managedidentities.domains.list",
            "managedidentities.locations.list",
            "managedidentities.operations.list",
            "managedidentities.peerings.getIamPolicy",
            "managedidentities.peerings.list",
            "managedidentities.sqlintegrations.list",
            "managedkafka.clusters.list",
            "managedkafka.connectClusters.list",
            "managedkafka.connectors.list",
            "managedkafka.consumerGroups.list",
            "managedkafka.locations.list",
            "managedkafka.operations.list",
            "managedkafka.topics.list",
            "mapsadmin.clientMaps.list",
            "mapsadmin.clientStyleSheetSnapshots.list",
            "mapsadmin.clientStyles.list",
            "mapsadmin.mapViews.list",
            "mapsadmin.styleSnapshots.list",
            "mapsanalytics.metricMetadata.list",
            "mapsplatformdatasets.datasets.list",
            "marketplacesolutions.locations.list",
            "marketplacesolutions.operations.list",
            "marketplacesolutions.powerImages.list",
            "marketplacesolutions.powerInstances.list",
            "marketplacesolutions.powerNetworks.list",
            "marketplacesolutions.powerSshKeys.list",
            "marketplacesolutions.powerVolumes.list",
            "memcache.instances.list",
            "memcache.locations.list",
            "memcache.operations.list",
            "memorystore.backupCollections.list",
            "memorystore.backups.list",
            "memorystore.instances.list",
            "memorystore.locations.list",
            "memorystore.operations.list",
            "metastore.backups.getIamPolicy",
            "metastore.backups.list",
            "metastore.databases.getIamPolicy",
            "metastore.databases.list",
            "metastore.federations.getIamPolicy",
            "metastore.federations.list",
            "metastore.imports.list",
            "metastore.locations.list",
            "metastore.migrations.list",
            "metastore.operations.list",
            "metastore.services.getIamPolicy",
            "metastore.services.list",
            "metastore.tables.getIamPolicy",
            "metastore.tables.list",
            "migrationcenter.assets.list",
            "migrationcenter.assetsExportJobs.list",
            "migrationcenter.discoveryClients.list",
            "migrationcenter.errorFrames.list",
            "migrationcenter.groups.list",
            "migrationcenter.importDataFiles.list",
            "migrationcenter.importJobs.list",
            "migrationcenter.locations.list",
            "migrationcenter.operations.list",
            "migrationcenter.preferenceSets.list",
            "migrationcenter.relations.list",
            "migrationcenter.reportConfigs.list",
            "migrationcenter.reports.list",
            "migrationcenter.sources.list",
            "ml.jobs.getIamPolicy",
            "ml.jobs.list",
            "ml.locations.list",
            "ml.models.getIamPolicy",
            "ml.models.list",
            "ml.operations.list",
            "ml.studies.getIamPolicy",
            "ml.studies.list",
            "ml.trials.list",
            "ml.versions.list",
            "modelarmor.locations.list",
            "modelarmor.templates.list",
            "monitoring.alertPolicies.list",
            "monitoring.dashboards.list",
            "monitoring.groups.list",
            "monitoring.metricDescriptors.list",
            "monitoring.monitoredResourceDescriptors.list",
            "monitoring.notificationChannelDescriptors.list",
            "monitoring.notificationChannels.list",
            "monitoring.services.list",
            "monitoring.slos.list",
            "monitoring.snoozes.list",
            "monitoring.timeSeries.list",
            "monitoring.uptimeCheckConfigs.list",
            "netapp.activeDirectories.list",
            "netapp.backupPolicies.list",
            "netapp.backupVaults.list",
            "netapp.backups.list",
            "netapp.kmsConfigs.list",
            "netapp.locations.list",
            "netapp.operations.list",
            "netapp.quotaRules.list",
            "netapp.replications.list",
            "netapp.snapshots.list",
            "netapp.storagePools.list",
            "netapp.volumes.list",
            "networkconnectivity.groups.getIamPolicy",
            "networkconnectivity.groups.list",
            "networkconnectivity.hubRouteTables.getIamPolicy",
            "networkconnectivity.hubRouteTables.list",
            "networkconnectivity.hubRoutes.getIamPolicy",
            "networkconnectivity.hubRoutes.list",
            "networkconnectivity.hubs.getIamPolicy",
            "networkconnectivity.hubs.list",
            "networkconnectivity.internalRanges.getIamPolicy",
            "networkconnectivity.internalRanges.list",
            "networkconnectivity.locations.list",
            "networkconnectivity.operations.list",
            "networkconnectivity.policyBasedRoutes.getIamPolicy",
            "networkconnectivity.policyBasedRoutes.list",
            "networkconnectivity.regionalEndpoints.list",
            "networkconnectivity.serviceClasses.list",
            "networkconnectivity.serviceConnectionMaps.list",
            "networkconnectivity.serviceConnectionPolicies.list",
            "networkconnectivity.spokes.getIamPolicy",
            "networkconnectivity.spokes.list",
            "networkmanagement.connectivitytests.getIamPolicy",
            "networkmanagement.connectivitytests.list",
            "networkmanagement.locations.list",
            "networkmanagement.operations.list",
            "networkmanagement.vpcflowlogsconfigs.list",
            "networksecurity.addressGroups.getIamPolicy",
            "networksecurity.addressGroups.list",
            "networksecurity.authorizationPolicies.getIamPolicy",
            "networksecurity.authorizationPolicies.list",
            "networksecurity.authzPolicies.getIamPolicy",
            "networksecurity.authzPolicies.list",
            "networksecurity.backendAuthenticationConfigs.list",
            "networksecurity.clientTlsPolicies.getIamPolicy",
            "networksecurity.clientTlsPolicies.list",
            "networksecurity.firewallEndpointAssociations.list",
            "networksecurity.firewallEndpoints.list",
            "networksecurity.gatewaySecurityPolicies.list",
            "networksecurity.gatewaySecurityPolicyRules.list",
            "networksecurity.interceptDeploymentGroups.list",
            "networksecurity.interceptDeployments.list",
            "networksecurity.interceptEndpointGroupAssociations.list",
            "networksecurity.interceptEndpointGroups.list",
            "networksecurity.locations.list",
            "networksecurity.mirroringDeploymentGroups.list",
            "networksecurity.mirroringDeployments.list",
            "networksecurity.mirroringEndpointGroupAssociations.list",
            "networksecurity.mirroringEndpointGroups.list",
            "networksecurity.operations.list",
            "networksecurity.securityProfileGroups.list",
            "networksecurity.securityProfiles.list",
            "networksecurity.serverTlsPolicies.getIamPolicy",
            "networksecurity.serverTlsPolicies.list",
            "networksecurity.tlsInspectionPolicies.list",
            "networksecurity.urlLists.list",
            "networkservices.authzExtensions.list",
            "networkservices.endpointPolicies.list",
            "networkservices.gateways.list",
            "networkservices.grpcRoutes.list",
            "networkservices.httpFilters.list",
            "networkservices.httpRoutes.list",
            "networkservices.httpfilters.getIamPolicy",
            "networkservices.httpfilters.list",
            "networkservices.lbRouteExtensions.list",
            "networkservices.lbTrafficExtensions.list",
            "networkservices.locations.list",
            "networkservices.meshes.list",
            "networkservices.operations.list",
            "networkservices.route_views.list",
            "networkservices.serviceBindings.list",
            "networkservices.serviceLbPolicies.list",
            "networkservices.tcpRoutes.list",
            "networkservices.tlsRoutes.list",
            "networkservices.wasmPlugins.list",
            "notebooks.environments.getIamPolicy",
            "notebooks.environments.list",
            "notebooks.executions.getIamPolicy",
            "notebooks.executions.list",
            "notebooks.instances.getIamPolicy",
            "notebooks.instances.list",
            "notebooks.locations.list",
            "notebooks.operations.list",
            "notebooks.runtimes.getIamPolicy",
            "notebooks.runtimes.list",
            "notebooks.schedules.getIamPolicy",
            "notebooks.schedules.list",
            "observability.analyticsViews.list",
            "ondemandscanning.operations.list",
            "opsconfigmonitoring.resourceMetadata.list",
            "oracledatabase.autonomousDatabaseBackups.list",
            "oracledatabase.autonomousDatabaseCharacterSets.list",
            "oracledatabase.autonomousDatabases.list",
            "oracledatabase.autonomousDbVersions.list",
            "oracledatabase.cloudExadataInfrastructures.list",
            "oracledatabase.cloudVmClusters.list",
            "oracledatabase.dbNodes.list",
            "oracledatabase.dbServers.list",
            "oracledatabase.dbSystemShapes.list",
            "oracledatabase.entitlements.list",
            "oracledatabase.giVersions.list",
            "oracledatabase.locations.list",
            "oracledatabase.operations.list",
            "orgpolicy.constraints.list",
            "orgpolicy.customConstraints.list",
            "orgpolicy.policies.list",
            "osconfig.guestPolicies.list",
            "osconfig.instanceOSPoliciesCompliances.list",
            "osconfig.inventories.list",
            "osconfig.locations.list",
            "osconfig.operations.list",
            "osconfig.osPolicyAssignmentReports.list",
            "osconfig.osPolicyAssignments.list",
            "osconfig.patchDeployments.list",
            "osconfig.patchJobs.list",
            "osconfig.policyOrchestrators.list",
            "osconfig.upgradeReports.list",
            "osconfig.vulnerabilityReports.list",
            "parallelstore.instances.list",
            "parallelstore.locations.list",
            "parallelstore.operations.list",
            "parametermanager.locations.list",
            "parametermanager.parameterVersions.list",
            "parametermanager.parameters.list",
            "paymentsresellersubscription.products.list",
            "paymentsresellersubscription.promotions.list",
            "policyremediatormanager.locations.list",
            "policyremediatormanager.operations.list",
            "policysimulator.accessPolicySimulationResults.list",
            "policysimulator.accessPolicySimulations.list",
            "policysimulator.orgPolicyViolations.list",
            "policysimulator.orgPolicyViolationsPreviews.list",
            "policysimulator.replayResults.list",
            "policysimulator.replays.list",
            "privateca.caPools.getIamPolicy",
            "privateca.caPools.list",
            "privateca.certificateAuthorities.getIamPolicy",
            "privateca.certificateAuthorities.list",
            "privateca.certificateRevocationLists.getIamPolicy",
            "privateca.certificateRevocationLists.list",
            "privateca.certificateTemplates.getIamPolicy",
            "privateca.certificateTemplates.list",
            "privateca.certificates.getIamPolicy",
            "privateca.certificates.list",
            "privateca.locations.list",
            "privateca.operations.list",
            "privateca.reusableConfigs.getIamPolicy",
            "privateca.reusableConfigs.list",
            "privilegedaccessmanager.entitlements.list",
            "privilegedaccessmanager.grants.list",
            "privilegedaccessmanager.locations.list",
            "privilegedaccessmanager.operations.list",
            "proximitybeacon.attachments.list",
            "proximitybeacon.beacons.getIamPolicy",
            "proximitybeacon.beacons.list",
            "proximitybeacon.namespaces.getIamPolicy",
            "proximitybeacon.namespaces.list",
            "pubsub.schemas.getIamPolicy",
            "pubsub.schemas.list",
            "pubsub.snapshots.getIamPolicy",
            "pubsub.snapshots.list",
            "pubsub.subscriptions.getIamPolicy",
            "pubsub.subscriptions.list",
            "pubsub.topics.getIamPolicy",
            "pubsub.topics.list",
            "pubsublite.operations.list",
            "pubsublite.reservations.list",
            "pubsublite.subscriptions.list",
            "pubsublite.topics.list",
            "recaptchaenterprise.firewallpolicies.list",
            "recaptchaenterprise.keys.list",
            "recaptchaenterprise.relatedaccountgroupmemberships.list",
            "recaptchaenterprise.relatedaccountgroups.list",
            "recommender.alloydbClusterPerformanceInsights.list",
            "recommender.alloydbClusterPerformanceRecommendations.list",
            "recommender.alloydbClusterReliabilityInsights.list",
            "recommender.alloydbClusterReliabilityRecommendations.list",
            "recommender.alloydbInstanceSecurityInsights.list",
            "recommender.alloydbInstanceSecurityRecommendations.list",
            "recommender.bigqueryCapacityCommitmentsInsights.list",
            "recommender.bigqueryCapacityCommitmentsRecommendations.list",
            "recommender.bigqueryMaterializedViewInsights.list",
            "recommender.bigqueryMaterializedViewRecommendations.list",
            "recommender.bigqueryPartitionClusterRecommendations.list",
            "recommender.bigqueryTableStatsInsights.list",
            "recommender.bigtableClusterPerformanceInsights.list",
            "recommender.bigtableClusterPerformanceRecommendations.list",
            "recommender.cloudAssetInsights.list",
            "recommender.cloudCostGeneralInsights.list",
            "recommender.cloudCostGeneralRecommendations.list",
            "recommender.cloudDeprecationGeneralInsights.list",
            "recommender.cloudDeprecationGeneralRecommendations.list",
            "recommender.cloudFunctionsPerformanceInsights.list",
            "recommender.cloudFunctionsPerformanceRecommendations.list",
            "recommender.cloudManageabilityGeneralInsights.list",
            "recommender.cloudManageabilityGeneralRecommendations.list",
            "recommender.cloudPerformanceGeneralInsights.list",
            "recommender.cloudPerformanceGeneralRecommendations.list",
            "recommender.cloudRecentChangeInsights.list",
            "recommender.cloudRecentChangeRecommendations.list",
            "recommender.cloudReliabilityGeneralInsights.list",
            "recommender.cloudReliabilityGeneralRecommendations.list",
            "recommender.cloudSecurityGeneralInsights.list",
            "recommender.cloudSecurityGeneralRecommendations.list",
            "recommender.cloudsqlIdleInstanceRecommendations.list",
            "recommender.cloudsqlInstanceActivityInsights.list",
            "recommender.cloudsqlInstanceCpuUsageInsights.list",
            "recommender.cloudsqlInstanceDiskUsageTrendInsights.list",
            "recommender.cloudsqlInstanceMemoryUsageInsights.list",
            "recommender.cloudsqlInstanceOomProbabilityInsights.list",
            "recommender.cloudsqlInstanceOutOfDiskRecommendations.list",
            "recommender.cloudsqlInstancePerformanceInsights.list",
            "recommender.cloudsqlInstancePerformanceRecommendations.list",
            "recommender.cloudsqlInstanceReliabilityInsights.list",
            "recommender.cloudsqlInstanceReliabilityRecommendations.list",
            "recommender.cloudsqlInstanceSecurityInsights.list",
            "recommender.cloudsqlInstanceSecurityRecommendations.list",
            "recommender.cloudsqlInstanceUnderprovisionedCpuUsageInsights.list",
            "recommender.cloudsqlInstanceUnderprovisionedMemoryUsageInsights.list",
            "recommender.cloudsqlOverprovisionedInstanceRecommendations.list",
            "recommender.cloudsqlUnderProvisionedInstanceRecommendations.list",
            "recommender.commitmentUtilizationInsights.list",
            "recommender.computeAddressIdleResourceInsights.list",
            "recommender.computeAddressIdleResourceRecommendations.list",
            "recommender.computeDiskIdleResourceInsights.list",
            "recommender.computeDiskIdleResourceRecommendations.list",
            "recommender.computeFirewallInsights.list",
            "recommender.computeImageIdleResourceInsights.list",
            "recommender.computeImageIdleResourceRecommendations.list",
            "recommender.computeInstanceCpuUsageInsights.list",
            "recommender.computeInstanceCpuUsagePredictionInsights.list",
            "recommender.computeInstanceCpuUsageTrendInsights.list",
            "recommender.computeInstanceGroupManagerCpuUsageInsights.list",
            "recommender.computeInstanceGroupManagerCpuUsagePredictionInsights.list",
            "recommender.computeInstanceGroupManagerCpuUsageTrendInsights.list",
            "recommender.computeInstanceGroupManagerMachineTypeRecommendations.list",
            "recommender.computeInstanceGroupManagerMemoryUsageInsights.list",
            "recommender.computeInstanceGroupManagerMemoryUsagePredictionInsights.list",
            "recommender.computeInstanceIdleResourceRecommendations.list",
            "recommender.computeInstanceMachineTypeRecommendations.list",
            "recommender.computeInstanceMemoryUsageInsights.list",
            "recommender.computeInstanceMemoryUsagePredictionInsights.list",
            "recommender.computeInstanceNetworkThroughputInsights.list",
            "recommender.containerDiagnosisInsights.list",
            "recommender.containerDiagnosisRecommendations.list",
            "recommender.costInsights.list",
            "recommender.dataflowDiagnosticsInsights.list",
            "recommender.errorReportingInsights.list",
            "recommender.errorReportingRecommendations.list",
            "recommender.firestoreDatabaseReliabilityInsights.list",
            "recommender.firestoreDatabaseReliabilityRecommendations.list",
            "recommender.gmpGuidedExperienceInsights.list",
            "recommender.gmpGuidedExperienceRecommendations.list",
            "recommender.gmpProjectManagementInsights.list",
            "recommender.gmpProjectManagementRecommendations.list",
            "recommender.gmpProjectProductSuggestionsInsights.list",
            "recommender.gmpProjectProductSuggestionsRecommendations.list",
            "recommender.iamPolicyChangeRiskInsights.list",
            "recommender.iamPolicyChangeRiskRecommendations.list",
            "recommender.iamPolicyInsights.list",
            "recommender.iamPolicyLateralMovementInsights.list",
            "recommender.iamPolicyRecommendations.list",
            "recommender.iamServiceAccountChangeRiskInsights.list",
            "recommender.iamServiceAccountChangeRiskRecommendations.list",
            "recommender.iamServiceAccountInsights.list",
            "recommender.locations.list",
            "recommender.loggingProductSuggestionContainerInsights.list",
            "recommender.loggingProductSuggestionContainerRecommendations.list",
            "recommender.memorystoreManageabilityInsights.list",
            "recommender.memorystoreManageabilityRecommendations.list",
            "recommender.memorystorePerformanceInsights.list",
            "recommender.memorystorePerformanceRecommendations.list",
            "recommender.memorystoreReliabilityInsights.list",
            "recommender.memorystoreReliabilityRecommendations.list",
            "recommender.memorystoreUtilizationInsights.list",
            "recommender.monitoringProductSuggestionComputeInsights.list",
            "recommender.monitoringProductSuggestionComputeRecommendations.list",
            "recommender.networkAnalyzerCloudSqlInsights.list",
            "recommender.networkAnalyzerDynamicRouteInsights.list",
            "recommender.networkAnalyzerGkeConnectivityInsights.list",
            "recommender.networkAnalyzerGkeIpAddressInsights.list",
            "recommender.networkAnalyzerGkeServiceAccountInsights.list",
            "recommender.networkAnalyzerIpAddressInsights.list",
            "recommender.networkAnalyzerLoadBalancerInsights.list",
            "recommender.networkAnalyzerVpcConnectivityInsights.list",
            "recommender.orgPolicyInsights.list",
            "recommender.orgPolicyRecommendations.list",
            "recommender.resourcemanagerProjectChangeRiskInsights.list",
            "recommender.resourcemanagerProjectChangeRiskRecommendations.list",
            "recommender.resourcemanagerProjectUtilizationInsights.list",
            "recommender.resourcemanagerProjectUtilizationRecommendations.list",
            "recommender.resourcemanagerServiceLimitInsights.list",
            "recommender.resourcemanagerServiceLimitRecommendations.list",
            "recommender.runServiceCostInsights.list",
            "recommender.runServiceCostRecommendations.list",
            "recommender.runServiceIdentityInsights.list",
            "recommender.runServiceIdentityRecommendations.list",
            "recommender.runServicePerformanceInsights.list",
            "recommender.runServicePerformanceRecommendations.list",
            "recommender.runServiceSecurityInsights.list",
            "recommender.runServiceSecurityRecommendations.list",
            "recommender.spannerProjectReliabilityInsights.list",
            "recommender.spannerProjectReliabilityRecommendations.list",
            "recommender.spendBasedCommitmentInsights.list",
            "recommender.spendBasedCommitmentRecommendations.list",
            "recommender.storageBucketSoftDeleteInsights.list",
            "recommender.storageBucketSoftDeleteRecommendations.list",
            "recommender.usageCommitmentRecommendations.list",
            "redis.backupCollections.list",
            "redis.backups.list",
            "redis.clusters.list",
            "redis.instances.list",
            "redis.locations.list",
            "redis.operations.list",
            "remotebuildexecution.instances.list",
            "remotebuildexecution.workerpools.list",
            "resourcemanager.folders.getIamPolicy",
            "resourcemanager.folders.list",
            "resourcemanager.hierarchyNodes.listTagBindings",
            "resourcemanager.organizations.getIamPolicy",
            "resourcemanager.projects.getIamPolicy",
            "resourcemanager.projects.list",
            "resourcemanager.tagHolds.list",
            "resourcemanager.tagKeys.getIamPolicy",
            "resourcemanager.tagKeys.list",
            "resourcemanager.tagValues.getIamPolicy",
            "resourcemanager.tagValues.list",
            "resourcesettings.settings.list",
            "retail.branches.list",
            "retail.catalogs.list",
            "retail.controls.list",
            "retail.experiments.list",
            "retail.models.list",
            "retail.operations.list",
            "retail.products.list",
            "retail.servingConfigs.list",
            "riskmanager.controlScoreBreakdowns.list",
            "riskmanager.operations.list",
            "riskmanager.policies.list",
            "riskmanager.reports.list",
            "rma.collectors.list",
            "rma.locations.list",
            "rma.operations.list",
            "run.configurations.list",
            "run.executions.list",
            "run.jobs.getIamPolicy",
            "run.jobs.list",
            "run.locations.list",
            "run.operations.list",
            "run.revisions.list",
            "run.routes.list",
            "run.services.getIamPolicy",
            "run.services.list",
            "run.tasks.list",
            "runapps.applications.list",
            "runapps.deployments.list",
            "runapps.locations.list",
            "runapps.operations.list",
            "runtimeconfig.configs.getIamPolicy",
            "runtimeconfig.configs.list",
            "runtimeconfig.operations.list",
            "runtimeconfig.variables.getIamPolicy",
            "runtimeconfig.variables.list",
            "runtimeconfig.waiters.getIamPolicy",
            "runtimeconfig.waiters.list",
            "saasservicemgmt.locations.list",
            "saasservicemgmt.operations.list",
            "saasservicemgmt.releases.list",
            "saasservicemgmt.rolloutKinds.list",
            "saasservicemgmt.rollouts.list",
            "saasservicemgmt.saas.list",
            "saasservicemgmt.unitKinds.list",
            "saasservicemgmt.unitOperations.list",
            "saasservicemgmt.units.list",
            "secretmanager.locations.list",
            "secretmanager.secrets.getIamPolicy",
            "secretmanager.secrets.list",
            "secretmanager.versions.list",
            "securedlandingzone.overwatches.list",
            "securesourcemanager.branchRules.list",
            "securesourcemanager.instances.getIamPolicy",
            "securesourcemanager.instances.list",
            "securesourcemanager.locations.list",
            "securesourcemanager.operations.list",
            "securesourcemanager.repositories.getIamPolicy",
            "securesourcemanager.repositories.list",
            "securesourcemanager.sshkeys.list",
            "securitycenter.assets.list",
            "securitycenter.attackpaths.list",
            "securitycenter.bigQueryExports.list",
            "securitycenter.compliancesnapshots.list",
            "securitycenter.effectivesecurityhealthanalyticscustommodules.list",
            "securitycenter.findings.list",
            "securitycenter.issues.list",
            "securitycenter.muteconfigs.list",
            "securitycenter.notificationconfig.list",
            "securitycenter.resourcevalueconfigs.list",
            "securitycenter.securityhealthanalyticscustommodules.list",
            "securitycenter.sources.getIamPolicy",
            "securitycenter.sources.list",
            "securitycenter.valuedresources.list",
            "securitycenter.vulnerabilitysnapshots.list",
            "securitycentermanagement.effectiveEventThreatDetectionCustomModules.list",
            "securitycentermanagement.effectiveSecurityHealthAnalyticsCustomModules.list",
            "securitycentermanagement.eventThreatDetectionCustomModules.list",
            "securitycentermanagement.locations.list",
            "securitycentermanagement.securityCenterServices.list",
            "securitycentermanagement.securityHealthAnalyticsCustomModules.list",
            "securityposture.locations.list",
            "securityposture.operations.list",
            "securityposture.postureDeployments.list",
            "securityposture.postureTemplates.list",
            "securityposture.postures.list",
            "securityposture.reports.list",
            "servicebroker.bindingoperations.list",
            "servicebroker.bindings.getIamPolicy",
            "servicebroker.bindings.list",
            "servicebroker.catalogs.getIamPolicy",
            "servicebroker.catalogs.list",
            "servicebroker.instanceoperations.list",
            "servicebroker.instances.getIamPolicy",
            "servicebroker.instances.list",
            "serviceconsumermanagement.tenancyu.list",
            "servicedirectory.endpoints.getIamPolicy",
            "servicedirectory.endpoints.list",
            "servicedirectory.locations.list",
            "servicedirectory.namespaces.getIamPolicy",
            "servicedirectory.namespaces.list",
            "servicedirectory.services.getIamPolicy",
            "servicedirectory.services.list",
            "servicehealth.events.list",
            "servicehealth.locations.list",
            "servicehealth.organizationEvents.list",
            "servicehealth.organizationImpacts.list",
            "servicemanagement.services.getIamPolicy",
            "servicemanagement.services.list",
            "servicenetworking.operations.list",
            "servicesecurityinsights.clusterSecurityInfo.list",
            "servicesecurityinsights.securityInfo.list",
            "servicesecurityinsights.workloadPolicies.list",
            "serviceusage.services.list",
            "source.repos.getIamPolicy",
            "source.repos.list",
            "spanner.backupOperations.list",
            "spanner.backupSchedules.getIamPolicy",
            "spanner.backupSchedules.list",
            "spanner.backups.getIamPolicy",
            "spanner.backups.list",
            "spanner.databaseOperations.list",
            "spanner.databaseRoles.list",
            "spanner.databases.getIamPolicy",
            "spanner.databases.list",
            "spanner.instanceConfigOperations.list",
            "spanner.instanceConfigs.list",
            "spanner.instanceOperations.list",
            "spanner.instancePartitionOperations.list",
            "spanner.instancePartitions.list",
            "spanner.instances.getIamPolicy",
            "spanner.instances.list",
            "spanner.sessions.list",
            "speakerid.phrases.list",
            "speakerid.speakers.list",
            "speech.customClasses.list",
            "speech.locations.list",
            "speech.operations.list",
            "speech.phraseSets.list",
            "speech.recognizers.list",
            "stackdriver.resourceMetadata.list",
            "storage.anywhereCaches.list",
            "storage.bucketOperations.list",
            "storage.buckets.getIamPolicy",
            "storage.buckets.list",
            "storage.folders.list",
            "storage.hmacKeys.list",
            "storage.managedFolders.getIamPolicy",
            "storage.managedFolders.list",
            "storage.multipartUploads.list",
            "storage.objects.getIamPolicy",
            "storage.objects.list",
            "storageinsights.datasetConfigs.list",
            "storageinsights.locations.list",
            "storageinsights.operations.list",
            "storageinsights.reportConfigs.list",
            "storageinsights.reportDetails.list",
            "storagetransfer.agentpools.list",
            "storagetransfer.jobs.list",
            "storagetransfer.operations.list",
            "stream.locations.list",
            "stream.operations.list",
            "stream.streamContents.list",
            "stream.streamInstances.list",
            "telcoautomation.blueprints.list",
            "telcoautomation.deployments.list",
            "telcoautomation.edgeSlms.list",
            "telcoautomation.hydratedDeployments.list",
            "telcoautomation.locations.list",
            "telcoautomation.operations.list",
            "telcoautomation.orchestrationClusters.list",
            "telcoautomation.publicBlueprints.list",
            "timeseriesinsights.datasets.list",
            "timeseriesinsights.locations.list",
            "tpu.acceleratortypes.list",
            "tpu.locations.list",
            "tpu.nodes.list",
            "tpu.operations.list",
            "tpu.runtimeversions.list",
            "tpu.tensorflowversions.list",
            "transcoder.jobTemplates.list",
            "transcoder.jobs.list",
            "transferappliance.appliances.list",
            "transferappliance.locations.list",
            "transferappliance.operations.list",
            "transferappliance.orders.list",
            "transferappliance.savedAddresses.list",
            "translationhub.portals.list",
            "videostitcher.cdnKeys.list",
            "videostitcher.liveAdTagDetails.list",
            "videostitcher.liveConfigs.list",
            "videostitcher.operations.list",
            "videostitcher.slates.list",
            "videostitcher.vodAdTagDetails.list",
            "videostitcher.vodConfigs.list",
            "videostitcher.vodStitchDetails.list",
            "visionai.analyses.getIamPolicy",
            "visionai.analyses.list",
            "visionai.annotations.list",
            "visionai.applications.list",
            "visionai.assets.list",
            "visionai.clusters.getIamPolicy",
            "visionai.clusters.list",
            "visionai.corpora.list",
            "visionai.dataSchemas.list",
            "visionai.drafts.list",
            "visionai.events.getIamPolicy",
            "visionai.events.list",
            "visionai.indexEndpoints.list",
            "visionai.indexes.list",
            "visionai.instances.list",
            "visionai.locations.list",
            "visionai.operations.list",
            "visionai.operators.getIamPolicy",
            "visionai.operators.list",
            "visionai.processors.list",
            "visionai.searchConfigs.list",
            "visionai.series.getIamPolicy",
            "visionai.series.list",
            "visionai.streams.getIamPolicy",
            "visionai.streams.list",
            "visionai.uistreams.list",
            "visualinspection.annotationSets.list",
            "visualinspection.annotationSpecs.list",
            "visualinspection.annotations.list",
            "visualinspection.datasets.list",
            "visualinspection.images.list",
            "visualinspection.locations.list",
            "visualinspection.modelEvaluations.list",
            "visualinspection.models.list",
            "visualinspection.modules.list",
            "visualinspection.operations.list",
            "visualinspection.solutionArtifacts.list",
            "visualinspection.solutions.list",
            "vmmigration.cloneJobs.list",
            "vmmigration.cutoverJobs.list",
            "vmmigration.datacenterConnectors.list",
            "vmmigration.deployments.list",
            "vmmigration.groups.list",
            "vmmigration.locations.list",
            "vmmigration.migratingVms.list",
            "vmmigration.operations.list",
            "vmmigration.replicationCycles.list",
            "vmmigration.sources.list",
            "vmmigration.targets.list",
            "vmmigration.utilizationReports.list",
            "vmwareengine.clusters.getIamPolicy",
            "vmwareengine.clusters.list",
            "vmwareengine.externalAccessRules.list",
            "vmwareengine.externalAddresses.list",
            "vmwareengine.hcxActivationKeys.getIamPolicy",
            "vmwareengine.hcxActivationKeys.list",
            "vmwareengine.locations.list",
            "vmwareengine.loggingServers.list",
            "vmwareengine.managementDnsZoneBindings.list",
            "vmwareengine.networkPeerings.list",
            "vmwareengine.networkPolicies.list",
            "vmwareengine.nodeTypes.list",
            "vmwareengine.nodes.list",
            "vmwareengine.operations.list",
            "vmwareengine.privateClouds.getIamPolicy",
            "vmwareengine.privateClouds.list",
            "vmwareengine.privateConnections.list",
            "vmwareengine.subnets.list",
            "vmwareengine.vmwareEngineNetworks.list",
            "vpcaccess.connectors.list",
            "vpcaccess.locations.list",
            "vpcaccess.operations.list",
            "workflows.callbacks.list",
            "workflows.executions.list",
            "workflows.locations.list",
            "workflows.operations.list",
            "workflows.stepEntries.list",
            "workflows.workflows.list",
            "workloadcertificate.locations.list",
            "workloadcertificate.operations.list",
            "workloadcertificate.workloadRegistrations.list",
            "workloadmanager.actuations.list",
            "workloadmanager.deployments.list",
            "workloadmanager.discoveredprofiles.list",
            "workloadmanager.evaluations.list",
            "workloadmanager.executions.list",
            "workloadmanager.locations.list",
            "workloadmanager.operations.list",
            "workloadmanager.results.list",
            "workloadmanager.rules.list",
            "workstations.workstationClusters.list",
            "workstations.workstationConfigs.getIamPolicy",
            "workstations.workstationConfigs.list",
            "workstations.workstations.getIamPolicy",
            "workstations.workstations.list"
          ],
          "title": "Security Reviewer"
        },
        {
          "description": "IAM workspace pool admin able to bind IAM policies to Dasher accounts.",
          "id": "roles/iam.workspacePoolAdmin",
          "is_beta": true,
          "permissions": [
            "iam.workspacePools.*"
          ],
          "title": "Workspace Pool IAM Admin"
        },
        {
          "description": "Full access to Cloud Infrastructure Manager resources.",
          "id": "roles/config.admin",
          "is_beta": true,
          "permissions": [
            "config.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Cloud Infrastructure Manager Admin"
        },
        {
          "description": "Required permissions to make Cloud Infrastructure Manager work with the user-specified service account",
          "id": "roles/config.agent",
          "is_beta": true,
          "permissions": [
            "cloudbuild.connections.list",
            "cloudbuild.repositories.accessReadToken",
            "cloudbuild.repositories.list",
            "cloudquotas.quotas.get",
            "config.artifacts.import",
            "config.deployments.deleteState",
            "config.deployments.getLock",
            "config.deployments.getState",
            "config.deployments.updateState",
            "config.previews.upload",
            "config.revisions.getState",
            "logging.logEntries.create",
            "monitoring.timeSeries.list",
            "storage.buckets.create",
            "storage.buckets.delete",
            "storage.buckets.get",
            "storage.buckets.list",
            "storage.buckets.update",
            "storage.objects.create",
            "storage.objects.delete",
            "storage.objects.get",
            "storage.objects.list",
            "storage.objects.update"
          ],
          "title": "Cloud Infrastructure Manager Agent"
        },
        {
          "description": "Read-only access to Cloud Infrastructure Manager resources.",
          "id": "roles/config.viewer",
          "is_beta": true,
          "permissions": [
            "config.deployments.get",
            "config.deployments.getIamPolicy",
            "config.deployments.list",
            "config.locations.*",
            "config.operations.get",
            "config.operations.list",
            "config.previews.get",
            "config.previews.list",
            "config.resources.*",
            "config.revisions.get",
            "config.revisions.list",
            "config.terraformversions.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Cloud Infrastructure Manager Viewer"
        },
        {
          "description": "Full access to all Config Controller resources.",
          "id": "roles/krmapihosting.admin",
          "is_beta": false,
          "permissions": [
            "krmapihosting.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Config Controller Admin"
        },
        {
          "description": "Read-only access to all Config Controller resources.",
          "id": "roles/krmapihosting.viewer",
          "is_beta": false,
          "permissions": [
            "krmapihosting.krmApiHosts.get",
            "krmapihosting.krmApiHosts.getIamPolicy",
            "krmapihosting.krmApiHosts.list",
            "krmapihosting.locations.*",
            "krmapihosting.operations.get",
            "krmapihosting.operations.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Config Controller Viewer"
        },
        {
          "description": "Provides access to full management of clusters and their Kubernetes API objects. To set a service account on nodes, you must also have the Service Account User role (roles/iam.serviceAccountUser) on the user-managed service account that your nodes will use.",
          "id": "roles/container.admin",
          "is_beta": false,
          "permissions": [
            "container.*",
            "recommender.containerDiagnosisInsights.*",
            "recommender.containerDiagnosisRecommendations.*",
            "recommender.locations.*",
            "recommender.networkAnalyzerGkeConnectivityInsights.*",
            "recommender.networkAnalyzerGkeIpAddressInsights.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Kubernetes Engine Admin"
        },
        {
          "description": "Allow the Kubernetes Engine service agent in the cluster project to call KMS with user provided crypto keys to sign payloads.",
          "id": "roles/container.cloudKmsKeyUser",
          "is_beta": false,
          "permissions": [
            "cloudkms.cryptoKeyVersions.get",
            "cloudkms.cryptoKeyVersions.useToSign",
            "cloudkms.cryptoKeyVersions.useToVerify",
            "cloudkms.cryptoKeyVersions.viewPublicKey",
            "cloudkms.cryptoKeys.get",
            "cloudkms.locations.get",
            "cloudkms.locations.list",
            "resourcemanager.projects.get"
          ],
          "title": "Kubernetes Engine KMS Crypto Key User"
        },
        {
          "description": "Provides access to management of clusters. To set a service account on nodes, you must also have the Service Account User role (roles/iam.serviceAccountUser) on the user-managed service account that your nodes will use.",
          "id": "roles/container.clusterAdmin",
          "is_beta": false,
          "permissions": [
            "container.clusters.connect",
            "container.clusters.create",
            "container.clusters.delete",
            "container.clusters.get",
            "container.clusters.list",
            "container.clusters.update",
            "container.operations.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Kubernetes Engine Cluster Admin"
        },
        {
          "description": "Provides access to get and list GKE clusters.",
          "id": "roles/container.clusterViewer",
          "is_beta": false,
          "permissions": [
            "container.clusters.connect",
            "container.clusters.get",
            "container.clusters.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Kubernetes Engine Cluster Viewer"
        },
        {
          "description": "Least privilege role to use as the default service account for GKE Nodes.",
          "id": "roles/container.defaultNodeServiceAccount",
          "is_beta": false,
          "permissions": [
            "autoscaling.sites.writeMetrics",
            "logging.logEntries.create",
            "monitoring.metricDescriptors.create",
            "monitoring.metricDescriptors.list",
            "monitoring.timeSeries.*"
          ],
          "title": "Kubernetes Engine Default Node Service Account"
        },
        {
          "description": "Provides access to Kubernetes API objects inside clusters.",
          "id": "roles/container.developer",
          "is_beta": false,
          "permissions": [
            "container.apiServices.*",
            "container.auditSinks.*",
            "container.backendConfigs.*",
            "container.bindings.*",
            "container.certificateSigningRequests.create",
            "container.certificateSigningRequests.delete",
            "container.certificateSigningRequests.get",
            "container.certificateSigningRequests.list",
            "container.certificateSigningRequests.update",
            "container.certificateSigningRequests.updateStatus",
            "container.clusterRoleBindings.get",
            "container.clusterRoleBindings.list",
            "container.clusterRoles.get",
            "container.clusterRoles.list",
            "container.clusters.connect",
            "container.clusters.get",
            "container.clusters.list",
            "container.componentStatuses.*",
            "container.configMaps.*",
            "container.controllerRevisions.get",
            "container.controllerRevisions.list",
            "container.cronJobs.*",
            "container.csiDrivers.*",
            "container.csiNodeInfos.*",
            "container.csiNodes.*",
            "container.customResourceDefinitions.*",
            "container.daemonSets.*",
            "container.deployments.*",
            "container.endpointSlices.*",
            "container.endpoints.*",
            "container.events.*",
            "container.frontendConfigs.*",
            "container.horizontalPodAutoscalers.*",
            "container.ingresses.*",
            "container.initializerConfigurations.*",
            "container.jobs.*",
            "container.leases.*",
            "container.limitRanges.*",
            "container.localSubjectAccessReviews.*",
            "container.managedCertificates.*",
            "container.mutatingWebhookConfigurations.get",
            "container.mutatingWebhookConfigurations.list",
            "container.namespaces.*",
            "container.networkPolicies.*",
            "container.nodes.*",
            "container.persistentVolumeClaims.*",
            "container.persistentVolumes.*",
            "container.petSets.*",
            "container.podDisruptionBudgets.*",
            "container.podPresets.*",
            "container.podSecurityPolicies.get",
            "container.podSecurityPolicies.list",
            "container.podTemplates.*",
            "container.pods.*",
            "container.priorityClasses.*",
            "container.replicaSets.*",
            "container.replicationControllers.*",
            "container.resourceQuotas.*",
            "container.roleBindings.get",
            "container.roleBindings.list",
            "container.roles.get",
            "container.roles.list",
            "container.runtimeClasses.*",
            "container.scheduledJobs.*",
            "container.secrets.*",
            "container.selfSubjectAccessReviews.*",
            "container.selfSubjectRulesReviews.create",
            "container.serviceAccounts.*",
            "container.services.*",
            "container.statefulSets.*",
            "container.storageClasses.*",
            "container.storageStates.*",
            "container.storageVersionMigrations.*",
            "container.subjectAccessReviews.*",
            "container.thirdPartyObjects.*",
            "container.thirdPartyResources.*",
            "container.tokenReviews.create",
            "container.updateInfos.*",
            "container.validatingWebhookConfigurations.get",
            "container.validatingWebhookConfigurations.list",
            "container.volumeAttachments.*",
            "container.volumeSnapshotClasses.*",
            "container.volumeSnapshotContents.*",
            "container.volumeSnapshots.*",
            "recommender.containerDiagnosisInsights.*",
            "recommender.containerDiagnosisRecommendations.*",
            "recommender.locations.*",
            "recommender.networkAnalyzerGkeConnectivityInsights.*",
            "recommender.networkAnalyzerGkeIpAddressInsights.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Kubernetes Engine Developer"
        },
        {
          "description": "Allows the Kubernetes Engine service account in the host project to configure shared network resources for cluster management. Also gives access to inspect the firewall rules in the host project.",
          "id": "roles/container.hostServiceAgentUser",
          "is_beta": false,
          "permissions": [
            "compute.firewalls.get",
            "container.hostServiceAgent.use",
            "dns.networks.bindDNSResponsePolicy",
            "dns.networks.bindPrivateDNSPolicy",
            "dns.networks.bindPrivateDNSZone",
            "dns.responsePolicies.*",
            "dns.responsePolicyRules.*"
          ],
          "title": "Kubernetes Engine Host Service Agent User"
        },
        {
          "description": "Provides read-only access to resources within GKE clusters, such as nodes, pods, and GKE API objects.",
          "id": "roles/container.viewer",
          "is_beta": false,
          "permissions": [
            "container.apiServices.get",
            "container.apiServices.getStatus",
            "container.apiServices.list",
            "container.auditSinks.get",
            "container.auditSinks.list",
            "container.backendConfigs.get",
            "container.backendConfigs.list",
            "container.bindings.get",
            "container.bindings.list",
            "container.certificateSigningRequests.get",
            "container.certificateSigningRequests.getStatus",
            "container.certificateSigningRequests.list",
            "container.clusterRoleBindings.get",
            "container.clusterRoleBindings.list",
            "container.clusterRoles.get",
            "container.clusterRoles.list",
            "container.clusters.connect",
            "container.clusters.get",
            "container.clusters.list",
            "container.componentStatuses.*",
            "container.configMaps.get",
            "container.configMaps.list",
            "container.controllerRevisions.get",
            "container.controllerRevisions.list",
            "container.cronJobs.get",
            "container.cronJobs.getStatus",
            "container.cronJobs.list",
            "container.csiDrivers.get",
            "container.csiDrivers.list",
            "container.csiNodeInfos.get",
            "container.csiNodeInfos.list",
            "container.csiNodes.get",
            "container.csiNodes.list",
            "container.customResourceDefinitions.get",
            "container.customResourceDefinitions.getStatus",
            "container.customResourceDefinitions.list",
            "container.daemonSets.get",
            "container.daemonSets.getStatus",
            "container.daemonSets.list",
            "container.deployments.get",
            "container.deployments.getScale",
            "container.deployments.getStatus",
            "container.deployments.list",
            "container.endpointSlices.get",
            "container.endpointSlices.list",
            "container.endpoints.get",
            "container.endpoints.list",
            "container.events.get",
            "container.events.list",
            "container.frontendConfigs.get",
            "container.frontendConfigs.list",
            "container.horizontalPodAutoscalers.get",
            "container.horizontalPodAutoscalers.getStatus",
            "container.horizontalPodAutoscalers.list",
            "container.ingresses.get",
            "container.ingresses.getStatus",
            "container.ingresses.list",
            "container.initializerConfigurations.get",
            "container.initializerConfigurations.list",
            "container.jobs.get",
            "container.jobs.getStatus",
            "container.jobs.list",
            "container.leases.get",
            "container.leases.list",
            "container.limitRanges.get",
            "container.limitRanges.list",
            "container.managedCertificates.get",
            "container.managedCertificates.list",
            "container.mutatingWebhookConfigurations.get",
            "container.mutatingWebhookConfigurations.list",
            "container.namespaces.get",
            "container.namespaces.getStatus",
            "container.namespaces.list",
            "container.networkPolicies.get",
            "container.networkPolicies.list",
            "container.nodes.get",
            "container.nodes.getStatus",
            "container.nodes.list",
            "container.operations.*",
            "container.persistentVolumeClaims.get",
            "container.persistentVolumeClaims.getStatus",
            "container.persistentVolumeClaims.list",
            "container.persistentVolumes.get",
            "container.persistentVolumes.getStatus",
            "container.persistentVolumes.list",
            "container.petSets.get",
            "container.petSets.list",
            "container.podDisruptionBudgets.get",
            "container.podDisruptionBudgets.getStatus",
            "container.podDisruptionBudgets.list",
            "container.podPresets.get",
            "container.podPresets.list",
            "container.podSecurityPolicies.get",
            "container.podSecurityPolicies.list",
            "container.podTemplates.get",
            "container.podTemplates.list",
            "container.pods.get",
            "container.pods.getStatus",
            "container.pods.list",
            "container.priorityClasses.get",
            "container.priorityClasses.list",
            "container.replicaSets.get",
            "container.replicaSets.getScale",
            "container.replicaSets.getStatus",
            "container.replicaSets.list",
            "container.replicationControllers.get",
            "container.replicationControllers.getScale",
            "container.replicationControllers.getStatus",
            "container.replicationControllers.list",
            "container.resourceQuotas.get",
            "container.resourceQuotas.getStatus",
            "container.resourceQuotas.list",
            "container.roleBindings.get",
            "container.roleBindings.list",
            "container.roles.get",
            "container.roles.list",
            "container.runtimeClasses.get",
            "container.runtimeClasses.list",
            "container.scheduledJobs.get",
            "container.scheduledJobs.list",
            "container.serviceAccounts.get",
            "container.serviceAccounts.list",
            "container.services.get",
            "container.services.getStatus",
            "container.services.list",
            "container.statefulSets.get",
            "container.statefulSets.getScale",
            "container.statefulSets.getStatus",
            "container.statefulSets.list",
            "container.storageClasses.get",
            "container.storageClasses.list",
            "container.storageStates.get",
            "container.storageStates.getStatus",
            "container.storageStates.list",
            "container.storageVersionMigrations.get",
            "container.storageVersionMigrations.getStatus",
            "container.storageVersionMigrations.list",
            "container.thirdPartyObjects.get",
            "container.thirdPartyObjects.list",
            "container.thirdPartyResources.get",
            "container.thirdPartyResources.list",
            "container.tokenReviews.create",
            "container.updateInfos.get",
            "container.updateInfos.list",
            "container.validatingWebhookConfigurations.get",
            "container.validatingWebhookConfigurations.list",
            "container.volumeAttachments.get",
            "container.volumeAttachments.getStatus",
            "container.volumeAttachments.list",
            "container.volumeSnapshotClasses.get",
            "container.volumeSnapshotClasses.list",
            "container.volumeSnapshotContents.get",
            "container.volumeSnapshotContents.getStatus",
            "container.volumeSnapshotContents.list",
            "container.volumeSnapshots.get",
            "container.volumeSnapshots.list",
            "recommender.containerDiagnosisInsights.get",
            "recommender.containerDiagnosisInsights.list",
            "recommender.containerDiagnosisRecommendations.get",
            "recommender.containerDiagnosisRecommendations.list",
            "recommender.locations.*",
            "recommender.networkAnalyzerGkeConnectivityInsights.get",
            "recommender.networkAnalyzerGkeConnectivityInsights.list",
            "recommender.networkAnalyzerGkeIpAddressInsights.get",
            "recommender.networkAnalyzerGkeIpAddressInsights.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Kubernetes Engine Viewer"
        },
        {
          "description": "Full access to Live Stream resources.",
          "id": "roles/livestream.editor",
          "is_beta": false,
          "permissions": [
            "livestream.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Live Stream Editor"
        },
        {
          "description": "Read access to Live Stream resources.",
          "id": "roles/livestream.viewer",
          "is_beta": false,
          "permissions": [
            "livestream.assets.get",
            "livestream.assets.list",
            "livestream.channels.get",
            "livestream.channels.list",
            "livestream.clips.get",
            "livestream.clips.list",
            "livestream.events.get",
            "livestream.events.list",
            "livestream.inputs.get",
            "livestream.inputs.list",
            "livestream.locations.*",
            "livestream.operations.get",
            "livestream.operations.list",
            "livestream.pools.get",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Live Stream Viewer"
        },
        {
          "description": "Provides all permissions necessary to use all features of Cloud Logging.",
          "id": "roles/logging.admin",
          "is_beta": false,
          "permissions": [
            "logging.buckets.copyLogEntries",
            "logging.buckets.create",
            "logging.buckets.createTagBinding",
            "logging.buckets.delete",
            "logging.buckets.deleteTagBinding",
            "logging.buckets.get",
            "logging.buckets.list",
            "logging.buckets.listEffectiveTags",
            "logging.buckets.listTagBindings",
            "logging.buckets.undelete",
            "logging.buckets.update",
            "logging.exclusions.*",
            "logging.fields.access",
            "logging.links.*",
            "logging.locations.*",
            "logging.logEntries.*",
            "logging.logMetrics.*",
            "logging.logScopes.*",
            "logging.logServiceIndexes.list",
            "logging.logServices.list",
            "logging.logs.*",
            "logging.notificationRules.*",
            "logging.operations.*",
            "logging.privateLogEntries.list",
            "logging.queries.*",
            "logging.settings.*",
            "logging.sinks.*",
            "logging.sqlAlerts.*",
            "logging.usage.get",
            "logging.views.*",
            "observability.scopes.get",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Logging Admin"
        },
        {
          "description": "Ability to write logs to a log bucket.",
          "id": "roles/logging.bucketWriter",
          "is_beta": false,
          "permissions": [
            "logging.buckets.write"
          ],
          "title": "Logs Bucket Writer"
        },
        {
          "description": "Provides permissions to read and write the configurations of logs-based metrics and sinks for exporting logs.",
          "id": "roles/logging.configWriter",
          "is_beta": false,
          "permissions": [
            "logging.buckets.create",
            "logging.buckets.createTagBinding",
            "logging.buckets.delete",
            "logging.buckets.deleteTagBinding",
            "logging.buckets.get",
            "logging.buckets.list",
            "logging.buckets.listEffectiveTags",
            "logging.buckets.listTagBindings",
            "logging.buckets.undelete",
            "logging.buckets.update",
            "logging.exclusions.*",
            "logging.links.*",
            "logging.locations.*",
            "logging.logMetrics.*",
            "logging.logScopes.*",
            "logging.logServiceIndexes.list",
            "logging.logServices.list",
            "logging.logs.list",
            "logging.notificationRules.*",
            "logging.operations.*",
            "logging.settings.*",
            "logging.sinks.*",
            "logging.sqlAlerts.*",
            "logging.views.create",
            "logging.views.delete",
            "logging.views.get",
            "logging.views.getIamPolicy",
            "logging.views.list",
            "logging.views.update",
            "observability.scopes.get",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Logs Configuration Writer"
        },
        {
          "description": "Ability to read restricted fields in a log bucket.",
          "id": "roles/logging.fieldAccessor",
          "is_beta": false,
          "permissions": [
            "logging.fields.access"
          ],
          "title": "Log Field Accessor"
        },
        {
          "description": "Ability to see links for a bucket.",
          "id": "roles/logging.linkViewer",
          "is_beta": false,
          "permissions": [
            "logging.links.get",
            "logging.links.list"
          ],
          "title": "Log Link Accessor"
        },
        {
          "description": "Provides the permissions to write log entries.",
          "id": "roles/logging.logWriter",
          "is_beta": false,
          "permissions": [
            "logging.logEntries.create",
            "logging.logEntries.route"
          ],
          "title": "Logs Writer"
        },
        {
          "description": "Provides permissions of the Logs Viewer role and in addition, provides read-only access to log entries in private logs.",
          "id": "roles/logging.privateLogViewer",
          "is_beta": false,
          "permissions": [
            "logging.buckets.get",
            "logging.buckets.list",
            "logging.exclusions.get",
            "logging.exclusions.list",
            "logging.links.get",
            "logging.links.list",
            "logging.locations.*",
            "logging.logEntries.list",
            "logging.logMetrics.get",
            "logging.logMetrics.list",
            "logging.logServiceIndexes.list",
            "logging.logServices.list",
            "logging.logs.list",
            "logging.operations.get",
            "logging.operations.list",
            "logging.privateLogEntries.list",
            "logging.queries.getShared",
            "logging.queries.listShared",
            "logging.queries.usePrivate",
            "logging.sinks.get",
            "logging.sinks.list",
            "logging.usage.get",
            "logging.views.access",
            "logging.views.get",
            "logging.views.list",
            "observability.scopes.get",
            "resourcemanager.projects.get"
          ],
          "title": "Private Logs Viewer"
        },
        {
          "description": "Ability to write SQL Alerts.",
          "id": "roles/logging.sqlAlertWriter",
          "is_beta": true,
          "permissions": [
            "logging.sqlAlerts.*"
          ],
          "title": "SQL Alert Writer"
        },
        {
          "description": "Ability to read logs in a view.",
          "id": "roles/logging.viewAccessor",
          "is_beta": false,
          "permissions": [
            "logging.logEntries.download",
            "logging.views.access",
            "logging.views.listLogs",
            "logging.views.listResourceKeys",
            "logging.views.listResourceValues"
          ],
          "title": "Logs View Accessor"
        },
        {
          "description": "Provides access to view logs.",
          "id": "roles/logging.viewer",
          "is_beta": false,
          "permissions": [
            "logging.buckets.get",
            "logging.buckets.list",
            "logging.exclusions.get",
            "logging.exclusions.list",
            "logging.links.get",
            "logging.links.list",
            "logging.locations.*",
            "logging.logEntries.list",
            "logging.logMetrics.get",
            "logging.logMetrics.list",
            "logging.logScopes.get",
            "logging.logScopes.list",
            "logging.logServiceIndexes.list",
            "logging.logServices.list",
            "logging.logs.list",
            "logging.operations.get",
            "logging.operations.list",
            "logging.queries.getShared",
            "logging.queries.listShared",
            "logging.queries.usePrivate",
            "logging.sinks.get",
            "logging.sinks.list",
            "logging.usage.get",
            "logging.views.get",
            "logging.views.list",
            "observability.scopes.get",
            "resourcemanager.projects.get"
          ],
          "title": "Logs Viewer"
        },
        {
          "description": "Full access to all Looker resources.",
          "id": "roles/looker.admin",
          "is_beta": false,
          "permissions": [
            "looker.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Looker Admin"
        },
        {
          "description": "Access to log in to a Looker instance.",
          "id": "roles/looker.instanceUser",
          "is_beta": false,
          "permissions": [
            "looker.instances.get",
            "looker.instances.login",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Looker Instance User"
        },
        {
          "description": "Read-only access to all Looker resources.",
          "id": "roles/looker.viewer",
          "is_beta": false,
          "permissions": [
            "looker.backups.get",
            "looker.backups.list",
            "looker.instances.get",
            "looker.instances.list",
            "looker.instances.login",
            "looker.locations.*",
            "looker.operations.get",
            "looker.operations.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Looker Viewer"
        },
        {
          "description": "Read and Write all Maps Management and Maps Styles Resources.",
          "id": "roles/mapsadmin.admin",
          "is_beta": false,
          "permissions": [
            "mapsadmin.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Maps API Admin"
        },
        {
          "description": "Read all Maps Management and Maps Styles Resources.",
          "id": "roles/mapsadmin.viewer",
          "is_beta": false,
          "permissions": [
            "mapsadmin.clientMaps.get",
            "mapsadmin.clientMaps.list",
            "mapsadmin.clientStyleSheetSnapshots.list",
            "mapsadmin.clientStyles.get",
            "mapsadmin.clientStyles.list",
            "mapsadmin.mapViews.get",
            "mapsadmin.mapViews.list",
            "mapsadmin.styleEditorConfigs.get",
            "mapsadmin.styleSnapshots.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Maps API Viewer"
        },
        {
          "description": "Full access to Memcached instances and related resources.",
          "id": "roles/memcache.admin",
          "is_beta": false,
          "permissions": [
            "compute.networks.list",
            "memcache.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Cloud Memorystore Memcached Admin"
        },
        {
          "description": "Read-Write access to Memcached instances and related resources.",
          "id": "roles/memcache.editor",
          "is_beta": false,
          "permissions": [
            "memcache.instances.applyParameters",
            "memcache.instances.get",
            "memcache.instances.list",
            "memcache.instances.update",
            "memcache.instances.updateParameters",
            "memcache.locations.*",
            "memcache.operations.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Cloud Memorystore Memcached Editor"
        },
        {
          "description": "Read-only access to Memcached instances and related resources.",
          "id": "roles/memcache.viewer",
          "is_beta": false,
          "permissions": [
            "memcache.instances.get",
            "memcache.instances.list",
            "memcache.locations.*",
            "memcache.operations.get",
            "memcache.operations.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Cloud Memorystore Memcached Viewer"
        },
        {
          "description": "Full control for all Memorystore for Redis resources.",
          "id": "roles/redis.admin",
          "is_beta": false,
          "permissions": [
            "cloudkms.keyHandles.*",
            "cloudkms.operations.get",
            "cloudkms.projects.showEffectiveAutokeyConfig",
            "compute.networks.list",
            "networkconnectivity.serviceConnectionPolicies.list",
            "redis.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "serviceusage.services.use"
          ],
          "title": "Cloud Memorystore Redis Admin"
        },
        {
          "description": "Access to connecting to Redis Server db.",
          "id": "roles/redis.dbConnectionUser",
          "is_beta": true,
          "permissions": [
            "redis.clusters.connect"
          ],
          "title": "Cloud Memorystore Redis Db Connection User"
        },
        {
          "description": "Manage Memorystore for Redis instances. Can't create or delete instances.",
          "id": "roles/redis.editor",
          "is_beta": false,
          "permissions": [
            "compute.networks.list",
            "redis.backupCollections.get",
            "redis.backupCollections.list",
            "redis.backups.get",
            "redis.backups.list",
            "redis.clusters.backup",
            "redis.clusters.get",
            "redis.clusters.list",
            "redis.clusters.update",
            "redis.instances.failover",
            "redis.instances.get",
            "redis.instances.list",
            "redis.instances.update",
            "redis.locations.*",
            "redis.operations.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "serviceusage.services.use"
          ],
          "title": "Cloud Memorystore Redis Editor"
        },
        {
          "description": "Read-only access to all Memorystore for Redis resources.",
          "id": "roles/redis.viewer",
          "is_beta": false,
          "permissions": [
            "redis.backupCollections.get",
            "redis.backupCollections.list",
            "redis.backups.get",
            "redis.backups.list",
            "redis.clusters.get",
            "redis.clusters.list",
            "redis.instances.get",
            "redis.instances.list",
            "redis.instances.listEffectiveTags",
            "redis.instances.listTagBindings",
            "redis.locations.*",
            "redis.operations.get",
            "redis.operations.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "serviceusage.services.use"
          ],
          "title": "Cloud Memorystore Redis Viewer"
        },
        {
          "description": "Full access to all mesh configuration resources",
          "id": "roles/meshconfig.admin",
          "is_beta": true,
          "permissions": [
            "meshconfig.projects.init"
          ],
          "title": "Mesh Config Admin"
        },
        {
          "description": "Full access to Migration Center all resources.",
          "id": "roles/migrationcenter.admin",
          "is_beta": true,
          "permissions": [
            "migrationcenter.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "rma.*",
            "serviceusage.quotas.get"
          ],
          "title": "Migration Center Admin"
        },
        {
          "description": "Migration Center Discover Client role",
          "id": "roles/migrationcenter.discoveryClient",
          "is_beta": true,
          "permissions": [
            "migrationcenter.assets.reportFrames",
            "migrationcenter.discoveryClients.get",
            "migrationcenter.discoveryClients.sendHeartbeat"
          ],
          "title": "Migration Center Discovery Client"
        },
        {
          "description": "Registrator of Migration Center Discover Clients",
          "id": "roles/migrationcenter.discoveryClientRegistrator",
          "is_beta": true,
          "permissions": [
            "migrationcenter.discoveryClients.create",
            "migrationcenter.discoveryClients.delete",
            "migrationcenter.discoveryClients.update",
            "migrationcenter.operations.get",
            "migrationcenter.sources.create",
            "migrationcenter.sources.delete",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Migration Center Discovery Client Registrator"
        },
        {
          "description": "Read-only access to Migration Center all resources.",
          "id": "roles/migrationcenter.viewer",
          "is_beta": true,
          "permissions": [
            "migrationcenter.assets.get",
            "migrationcenter.assets.list",
            "migrationcenter.assetsExportJobs.get",
            "migrationcenter.assetsExportJobs.list",
            "migrationcenter.discoveryClients.get",
            "migrationcenter.discoveryClients.list",
            "migrationcenter.errorFrames.*",
            "migrationcenter.groups.get",
            "migrationcenter.groups.list",
            "migrationcenter.importDataFiles.get",
            "migrationcenter.importDataFiles.list",
            "migrationcenter.importJobs.get",
            "migrationcenter.importJobs.list",
            "migrationcenter.locations.*",
            "migrationcenter.operations.get",
            "migrationcenter.operations.list",
            "migrationcenter.preferenceSets.get",
            "migrationcenter.preferenceSets.list",
            "migrationcenter.relations.*",
            "migrationcenter.reportConfigs.get",
            "migrationcenter.reportConfigs.list",
            "migrationcenter.reports.get",
            "migrationcenter.reports.list",
            "migrationcenter.settings.get",
            "migrationcenter.sources.get",
            "migrationcenter.sources.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "rma.annotations.get",
            "rma.collectors.get",
            "rma.collectors.list",
            "rma.locations.*",
            "rma.operations.get",
            "rma.operations.list",
            "serviceusage.quotas.get"
          ],
          "title": "Migration Center Viewer"
        },
        {
          "description": "Provides full access to Cloud Monitoring.",
          "id": "roles/monitoring.admin",
          "is_beta": false,
          "permissions": [
            "cloudnotifications.activities.list",
            "monitoring.*",
            "opsconfigmonitoring.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "serviceusage.services.enable",
            "serviceusage.services.get",
            "stackdriver.*"
          ],
          "title": "Monitoring Admin"
        },
        {
          "description": "Read/write access to alerting policies.",
          "id": "roles/monitoring.alertPolicyEditor",
          "is_beta": false,
          "permissions": [
            "monitoring.alertPolicies.*"
          ],
          "title": "Monitoring AlertPolicy Editor"
        },
        {
          "description": "Read-only access to alerting policies.",
          "id": "roles/monitoring.alertPolicyViewer",
          "is_beta": false,
          "permissions": [
            "monitoring.alertPolicies.get",
            "monitoring.alertPolicies.list",
            "monitoring.alertPolicies.listEffectiveTags",
            "monitoring.alertPolicies.listTagBindings"
          ],
          "title": "Monitoring AlertPolicy Viewer"
        },
        {
          "description": "Read/write access to dashboard configurations.",
          "id": "roles/monitoring.dashboardEditor",
          "is_beta": false,
          "permissions": [
            "monitoring.dashboards.*"
          ],
          "title": "Monitoring Dashboard Configuration Editor"
        },
        {
          "description": "Read-only access to dashboard configurations.",
          "id": "roles/monitoring.dashboardViewer",
          "is_beta": false,
          "permissions": [
            "monitoring.dashboards.get",
            "monitoring.dashboards.list"
          ],
          "title": "Monitoring Dashboard Configuration Viewer"
        },
        {
          "description": "Provides full access to information about all monitoring data and configurations.",
          "id": "roles/monitoring.editor",
          "is_beta": false,
          "permissions": [
            "cloudnotifications.activities.list",
            "monitoring.alertPolicies.*",
            "monitoring.dashboards.*",
            "monitoring.groups.*",
            "monitoring.metricDescriptors.*",
            "monitoring.monitoredResourceDescriptors.*",
            "monitoring.notificationChannelDescriptors.*",
            "monitoring.notificationChannels.create",
            "monitoring.notificationChannels.delete",
            "monitoring.notificationChannels.get",
            "monitoring.notificationChannels.list",
            "monitoring.notificationChannels.sendVerificationCode",
            "monitoring.notificationChannels.update",
            "monitoring.notificationChannels.verify",
            "monitoring.services.*",
            "monitoring.slos.*",
            "monitoring.snoozes.*",
            "monitoring.timeSeries.*",
            "monitoring.uptimeCheckConfigs.*",
            "opsconfigmonitoring.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "serviceusage.services.enable",
            "serviceusage.services.get",
            "stackdriver.*"
          ],
          "title": "Monitoring Editor"
        },
        {
          "description": "Provides write-only access to metrics. This provides exactly the permissions needed by the Cloud Monitoring agent and other systems that send metrics.",
          "id": "roles/monitoring.metricWriter",
          "is_beta": false,
          "permissions": [
            "monitoring.metricDescriptors.create",
            "monitoring.metricDescriptors.get",
            "monitoring.metricDescriptors.list",
            "monitoring.monitoredResourceDescriptors.*",
            "monitoring.timeSeries.create"
          ],
          "title": "Monitoring Metric Writer"
        },
        {
          "description": "Access to add and remove monitored projects from metrics scopes.",
          "id": "roles/monitoring.metricsScopesAdmin",
          "is_beta": true,
          "permissions": [
            "monitoring.metricsScopes.link",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Monitoring Metrics Scopes Admin"
        },
        {
          "description": "Read-only access to metrics scopes and their monitored projects.",
          "id": "roles/monitoring.metricsScopesViewer",
          "is_beta": true,
          "permissions": [
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Monitoring Metrics Scopes Viewer"
        },
        {
          "description": "Read/write access to notification channels.",
          "id": "roles/monitoring.notificationChannelEditor",
          "is_beta": true,
          "permissions": [
            "monitoring.notificationChannelDescriptors.*",
            "monitoring.notificationChannels.create",
            "monitoring.notificationChannels.delete",
            "monitoring.notificationChannels.get",
            "monitoring.notificationChannels.list",
            "monitoring.notificationChannels.sendVerificationCode",
            "monitoring.notificationChannels.update",
            "monitoring.notificationChannels.verify"
          ],
          "title": "Monitoring NotificationChannel Editor"
        },
        {
          "description": "Read-only access to notification channels.",
          "id": "roles/monitoring.notificationChannelViewer",
          "is_beta": true,
          "permissions": [
            "monitoring.notificationChannelDescriptors.*",
            "monitoring.notificationChannels.get",
            "monitoring.notificationChannels.list"
          ],
          "title": "Monitoring NotificationChannel Viewer"
        },
        {
          "description": "Read/write access to services.",
          "id": "roles/monitoring.servicesEditor",
          "is_beta": false,
          "permissions": [
            "monitoring.services.*",
            "monitoring.slos.*"
          ],
          "title": "Monitoring Services Editor"
        },
        {
          "description": "Read-only access to services.",
          "id": "roles/monitoring.servicesViewer",
          "is_beta": false,
          "permissions": [
            "monitoring.services.get",
            "monitoring.services.list",
            "monitoring.slos.get",
            "monitoring.slos.list"
          ],
          "title": "Monitoring Services Viewer"
        },
        {
          "description": "Read/write access to uptime check configurations.",
          "id": "roles/monitoring.uptimeCheckConfigEditor",
          "is_beta": true,
          "permissions": [
            "monitoring.uptimeCheckConfigs.*"
          ],
          "title": "Monitoring Uptime Check Configuration Editor"
        },
        {
          "description": "Read-only access to uptime check configurations.",
          "id": "roles/monitoring.uptimeCheckConfigViewer",
          "is_beta": true,
          "permissions": [
            "monitoring.uptimeCheckConfigs.get",
            "monitoring.uptimeCheckConfigs.list"
          ],
          "title": "Monitoring Uptime Check Configuration Viewer"
        },
        {
          "description": "Provides read-only access to get and list information about all monitoring data and configurations.",
          "id": "roles/monitoring.viewer",
          "is_beta": false,
          "permissions": [
            "cloudnotifications.activities.list",
            "monitoring.alertPolicies.get",
            "monitoring.alertPolicies.list",
            "monitoring.alertPolicies.listEffectiveTags",
            "monitoring.alertPolicies.listTagBindings",
            "monitoring.dashboards.get",
            "monitoring.dashboards.list",
            "monitoring.groups.get",
            "monitoring.groups.list",
            "monitoring.metricDescriptors.get",
            "monitoring.metricDescriptors.list",
            "monitoring.monitoredResourceDescriptors.*",
            "monitoring.notificationChannelDescriptors.*",
            "monitoring.notificationChannels.get",
            "monitoring.notificationChannels.list",
            "monitoring.services.get",
            "monitoring.services.list",
            "monitoring.slos.get",
            "monitoring.slos.list",
            "monitoring.snoozes.get",
            "monitoring.snoozes.list",
            "monitoring.timeSeries.list",
            "monitoring.uptimeCheckConfigs.get",
            "monitoring.uptimeCheckConfigs.list",
            "opsconfigmonitoring.resourceMetadata.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "stackdriver.projects.get",
            "stackdriver.resourceMetadata.list"
          ],
          "title": "Monitoring Viewer"
        },
        {
          "description": "Service Automation Consumer Network Admin is responsible for setting up ServiceConnectionPolicies.",
          "id": "roles/networkconnectivity.consumerNetworkAdmin",
          "is_beta": false,
          "permissions": [
            "networkconnectivity.serviceConnectionPolicies.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Service Automation Consumer Network Admin"
        },
        {
          "description": "Enables use access on group resources",
          "id": "roles/networkconnectivity.groupUser",
          "is_beta": false,
          "permissions": [
            "networkconnectivity.groups.use"
          ],
          "title": "Group User"
        },
        {
          "description": "Enables full access to hub and spoke resources.",
          "id": "roles/networkconnectivity.hubAdmin",
          "is_beta": false,
          "permissions": [
            "networkconnectivity.groups.*",
            "networkconnectivity.hubRouteTables.*",
            "networkconnectivity.hubRoutes.*",
            "networkconnectivity.hubs.*",
            "networkconnectivity.locations.*",
            "networkconnectivity.operations.*",
            "networkconnectivity.spokes.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Hub & Spoke Admin"
        },
        {
          "description": "Enables read-only access to hub and spoke resources.",
          "id": "roles/networkconnectivity.hubViewer",
          "is_beta": false,
          "permissions": [
            "networkconnectivity.groups.get",
            "networkconnectivity.groups.getIamPolicy",
            "networkconnectivity.groups.list",
            "networkconnectivity.hubRouteTables.get",
            "networkconnectivity.hubRouteTables.getIamPolicy",
            "networkconnectivity.hubRouteTables.list",
            "networkconnectivity.hubRoutes.get",
            "networkconnectivity.hubRoutes.getIamPolicy",
            "networkconnectivity.hubRoutes.list",
            "networkconnectivity.hubs.get",
            "networkconnectivity.hubs.getIamPolicy",
            "networkconnectivity.hubs.list",
            "networkconnectivity.hubs.listSpokes",
            "networkconnectivity.hubs.queryStatus",
            "networkconnectivity.locations.*",
            "networkconnectivity.spokes.get",
            "networkconnectivity.spokes.getIamPolicy",
            "networkconnectivity.spokes.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Hub & Spoke Viewer"
        },
        {
          "description": "Full access to all Regional Endpoint resources.",
          "id": "roles/networkconnectivity.regionalEndpointAdmin",
          "is_beta": false,
          "permissions": [
            "networkconnectivity.regionalEndpoints.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Regional Endpoint Admin"
        },
        {
          "description": "Read-only access to all Regional Endpoint resources.",
          "id": "roles/networkconnectivity.regionalEndpointViewer",
          "is_beta": false,
          "permissions": [
            "networkconnectivity.regionalEndpoints.get",
            "networkconnectivity.regionalEndpoints.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Regional Endpoint Viewer"
        },
        {
          "description": "Service Class User uses a ServiceClass",
          "id": "roles/networkconnectivity.serviceClassUser",
          "is_beta": false,
          "permissions": [
            "networkconnectivity.serviceClasses.get",
            "networkconnectivity.serviceClasses.list",
            "networkconnectivity.serviceClasses.use",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Service Class User"
        },
        {
          "description": "Service Automation Producer Admin uses information from a consumer request to manage ServiceClasses and ServiceConnectionMaps",
          "id": "roles/networkconnectivity.serviceProducerAdmin",
          "is_beta": false,
          "permissions": [
            "networkconnectivity.operations.get",
            "networkconnectivity.operations.list",
            "networkconnectivity.serviceClasses.*",
            "networkconnectivity.serviceConnectionMaps.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Service Automation Service Producer Admin"
        },
        {
          "description": "Enables full access to spoke resources and read-only access to hub resources.",
          "id": "roles/networkconnectivity.spokeAdmin",
          "is_beta": false,
          "permissions": [
            "networkconnectivity.hubRouteTables.get",
            "networkconnectivity.hubRouteTables.getIamPolicy",
            "networkconnectivity.hubRouteTables.list",
            "networkconnectivity.hubRoutes.get",
            "networkconnectivity.hubRoutes.getIamPolicy",
            "networkconnectivity.hubRoutes.list",
            "networkconnectivity.hubs.get",
            "networkconnectivity.hubs.getIamPolicy",
            "networkconnectivity.hubs.list",
            "networkconnectivity.locations.*",
            "networkconnectivity.operations.get",
            "networkconnectivity.operations.list",
            "networkconnectivity.spokes.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Spoke Admin"
        },
        {
          "description": "Full access to Network Management resources.",
          "id": "roles/networkmanagement.admin",
          "is_beta": false,
          "permissions": [
            "networkmanagement.*",
            "resourcemanager.organizations.get",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Network Management Admin"
        },
        {
          "description": "Read-only access to Network Management resources.",
          "id": "roles/networkmanagement.viewer",
          "is_beta": false,
          "permissions": [
            "networkmanagement.connectivitytests.get",
            "networkmanagement.connectivitytests.getIamPolicy",
            "networkmanagement.connectivitytests.list",
            "networkmanagement.locations.*",
            "networkmanagement.operations.get",
            "networkmanagement.operations.list",
            "networkmanagement.vpcflowlogsconfigs.get",
            "networkmanagement.vpcflowlogsconfigs.list",
            "resourcemanager.organizations.get",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Network Management Viewer"
        },
        {
          "description": "Enables full access to intercept resources on the Producer's side.",
          "id": "roles/networksecurity.interceptDeploymentAdmin",
          "is_beta": true,
          "permissions": [
            "networksecurity.interceptDeploymentGroups.*",
            "networksecurity.interceptDeployments.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Intercept Deployment Admin"
        },
        {
          "description": "Allows a consumer to view and connect to a producer's interceptDeploymentGroup.",
          "id": "roles/networksecurity.interceptDeploymentUser",
          "is_beta": true,
          "permissions": [
            "networksecurity.interceptDeploymentGroups.get",
            "networksecurity.interceptDeploymentGroups.list",
            "networksecurity.interceptDeploymentGroups.use"
          ],
          "title": "Intercept Deployment User"
        },
        {
          "description": "Enables read-only access to intercept resources on the Producer's side.",
          "id": "roles/networksecurity.interceptDeploymentViewer",
          "is_beta": true,
          "permissions": [
            "networksecurity.interceptDeploymentGroups.get",
            "networksecurity.interceptDeploymentGroups.list",
            "networksecurity.interceptDeployments.get",
            "networksecurity.interceptDeployments.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Intercept Deployment Viewer"
        },
        {
          "description": "Enables full access to intercept resources on the consumer's side.",
          "id": "roles/networksecurity.interceptEndpointAdmin",
          "is_beta": true,
          "permissions": [
            "networksecurity.interceptEndpointGroupAssociations.*",
            "networksecurity.interceptEndpointGroups.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Intercept Endpoint Admin"
        },
        {
          "description": "Allows a consumer to connect their networks to a interceptEndpointGroup.",
          "id": "roles/networksecurity.interceptEndpointUser",
          "is_beta": true,
          "permissions": [
            "networksecurity.interceptEndpointGroups.get",
            "networksecurity.interceptEndpointGroups.list",
            "networksecurity.interceptEndpointGroups.use"
          ],
          "title": "Intercept Endpoint User"
        },
        {
          "description": "Enables read-only access to intercept resources on the Consumer's side.",
          "id": "roles/networksecurity.interceptEndpointViewer",
          "is_beta": true,
          "permissions": [
            "networksecurity.interceptEndpointGroupAssociations.get",
            "networksecurity.interceptEndpointGroupAssociations.list",
            "networksecurity.interceptEndpointGroups.get",
            "networksecurity.interceptEndpointGroups.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Intercept Endpoint Viewer"
        },
        {
          "description": "Enables full access to mirroring resources on the Producer's side.",
          "id": "roles/networksecurity.mirroringDeploymentAdmin",
          "is_beta": true,
          "permissions": [
            "networksecurity.mirroringDeploymentGroups.*",
            "networksecurity.mirroringDeployments.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Mirroring Deployment Admin"
        },
        {
          "description": "Allows an external consumer to a producer's mirroringDeploymentGroup.",
          "id": "roles/networksecurity.mirroringDeploymentExternalUser",
          "is_beta": true,
          "permissions": [
            "networksecurity.mirroringDeploymentGroups.use"
          ],
          "title": "Mirroring Deployment External User"
        },
        {
          "description": "Allows a consumer to view and connect to a Producer's mirroringDeploymentGroup.",
          "id": "roles/networksecurity.mirroringDeploymentUser",
          "is_beta": true,
          "permissions": [
            "networksecurity.mirroringDeploymentGroups.get",
            "networksecurity.mirroringDeploymentGroups.list",
            "networksecurity.mirroringDeploymentGroups.use"
          ],
          "title": "Mirroring Deployment User"
        },
        {
          "description": "Enables read-only access to mirroring resources on the Producer's side.",
          "id": "roles/networksecurity.mirroringDeploymentViewer",
          "is_beta": true,
          "permissions": [
            "networksecurity.mirroringDeploymentGroups.get",
            "networksecurity.mirroringDeploymentGroups.list",
            "networksecurity.mirroringDeployments.get",
            "networksecurity.mirroringDeployments.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Mirroring Deployment Viewer"
        },
        {
          "description": "Enables full access to mirroring resources on the consumer's side.",
          "id": "roles/networksecurity.mirroringEndpointAdmin",
          "is_beta": true,
          "permissions": [
            "networksecurity.mirroringEndpointGroupAssociations.*",
            "networksecurity.mirroringEndpointGroups.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Mirroring Endpoint Admin"
        },
        {
          "description": "Allows a consumer to connect their networks to a mirroringEndpointGroup.",
          "id": "roles/networksecurity.mirroringEndpointUser",
          "is_beta": true,
          "permissions": [
            "networksecurity.mirroringEndpointGroups.get",
            "networksecurity.mirroringEndpointGroups.list",
            "networksecurity.mirroringEndpointGroups.use"
          ],
          "title": "Mirroring Endpoint User"
        },
        {
          "description": "Enables read-only access to mirroring resources on the Consumer's side.",
          "id": "roles/networksecurity.mirroringEndpointViewer",
          "is_beta": true,
          "permissions": [
            "networksecurity.mirroringEndpointGroupAssociations.get",
            "networksecurity.mirroringEndpointGroupAssociations.list",
            "networksecurity.mirroringEndpointGroups.get",
            "networksecurity.mirroringEndpointGroups.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Mirroring Endpoint Viewer"
        },
        {
          "description": "Enables full access to security profile and security profile group resources.",
          "id": "roles/networksecurity.securityProfileAdmin",
          "is_beta": true,
          "permissions": [
            "networksecurity.operations.get",
            "networksecurity.operations.list",
            "networksecurity.securityProfileGroups.*",
            "networksecurity.securityProfiles.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Security Profile Admin"
        },
        {
          "description": "Provides full access to Service Extensions resources.",
          "id": "roles/networkservices.serviceExtensionsAdmin",
          "is_beta": true,
          "permissions": [
            "networkservices.authzExtensions.*",
            "networkservices.lbRouteExtensions.*",
            "networkservices.lbTrafficExtensions.*",
            "networkservices.wasmPlugins.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Service Extensions Admin"
        },
        {
          "description": "Provides read-only access to Service Extensions resources.",
          "id": "roles/networkservices.serviceExtensionsViewer",
          "is_beta": true,
          "permissions": [
            "networkservices.authzExtensions.get",
            "networkservices.authzExtensions.list",
            "networkservices.lbRouteExtensions.get",
            "networkservices.lbRouteExtensions.list",
            "networkservices.lbTrafficExtensions.get",
            "networkservices.lbTrafficExtensions.list",
            "networkservices.wasmPlugins.get",
            "networkservices.wasmPlugins.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Service Extensions Viewer"
        },
        {
          "description": "Full access to Observability resources.",
          "id": "roles/observability.admin",
          "is_beta": true,
          "permissions": [
            "observability.*"
          ],
          "title": "Observability Admin"
        },
        {
          "description": "Grants permissions to use Cloud Observability Analytics.",
          "id": "roles/observability.analyticsUser",
          "is_beta": true,
          "permissions": [
            "observability.analyticsViews.*",
            "observability.scopes.get"
          ],
          "title": "Observability Analytics User"
        },
        {
          "description": "Edit access to Observability resources.",
          "id": "roles/observability.editor",
          "is_beta": true,
          "permissions": [
            "observability.*"
          ],
          "title": "Observability Editor"
        },
        {
          "description": "Read only access to Observability resources.",
          "id": "roles/observability.viewer",
          "is_beta": true,
          "permissions": [
            "observability.analyticsViews.get",
            "observability.analyticsViews.list",
            "observability.scopes.get"
          ],
          "title": "Observability Viewer"
        },
        {
          "description": "All permissions for On-Demand Scanning",
          "id": "roles/ondemandscanning.admin",
          "is_beta": true,
          "permissions": [
            "ondemandscanning.*"
          ],
          "title": "On-Demand Scanning Admin"
        },
        {
          "description": "Read-only access to resource metadata.",
          "id": "roles/opsconfigmonitoring.resourceMetadata.viewer",
          "is_beta": true,
          "permissions": [
            "opsconfigmonitoring.resourceMetadata.list"
          ],
          "title": "Ops Config Monitoring Resource Metadata Viewer"
        },
        {
          "description": "Write-only access to resource metadata. This provides exactly the permissions needed by the Ops Config Monitoring metadata agent and other systems that send metadata.",
          "id": "roles/opsconfigmonitoring.resourceMetadata.writer",
          "is_beta": true,
          "permissions": [
            "opsconfigmonitoring.resourceMetadata.write"
          ],
          "title": "Ops Config Monitoring Resource Metadata Writer"
        },
        {
          "description": "Enable Access Transparency for Organization",
          "id": "roles/axt.admin",
          "is_beta": false,
          "permissions": [
            "axt.*",
            "resourcemanager.organizations.get",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Access Transparency Admin"
        },
        {
          "description": "Provides access to define what restrictions an organization wants to place on the configuration of cloud resources by setting Organization Policies.",
          "id": "roles/orgpolicy.policyAdmin",
          "is_beta": false,
          "permissions": [
            "cloudasset.assets.analyzeOrgPolicy",
            "cloudasset.assets.exportResource",
            "cloudasset.assets.listResource",
            "cloudasset.assets.searchAllResources",
            "orgpolicy.*",
            "policysimulator.orgPolicyViolations.list",
            "policysimulator.orgPolicyViolationsPreviews.*",
            "recommender.orgPolicyInsights.*",
            "recommender.orgPolicyRecommendations.*"
          ],
          "title": "Organization Policy Administrator"
        },
        {
          "description": "Provides access to view Organization Policies on resources.",
          "id": "roles/orgpolicy.policyViewer",
          "is_beta": false,
          "permissions": [
            "orgpolicy.constraints.list",
            "orgpolicy.customConstraints.get",
            "orgpolicy.customConstraints.list",
            "orgpolicy.policies.list",
            "orgpolicy.policy.get"
          ],
          "title": "Organization Policy Viewer"
        },
        {
          "description": "Grants write access to settings in Advisory Notifications",
          "id": "roles/advisorynotifications.admin",
          "is_beta": false,
          "permissions": [
            "advisorynotifications.*",
            "resourcemanager.organizations.get",
            "resourcemanager.projects.get"
          ],
          "title": "Advisory Notifications Admin"
        },
        {
          "description": "Grants view access in Advisory Notifications",
          "id": "roles/advisorynotifications.viewer",
          "is_beta": false,
          "permissions": [
            "advisorynotifications.notifications.*",
            "advisorynotifications.settings.get",
            "resourcemanager.organizations.get",
            "resourcemanager.projects.get"
          ],
          "title": "Advisory Notifications Viewer"
        },
        {
          "description": "Full access to all API hub resources.",
          "id": "roles/apihub.admin",
          "is_beta": true,
          "permissions": [
            "apihub.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Cloud API Hub Admin"
        },
        {
          "description": "Full access to all Cloud API hub attribute's resources.",
          "id": "roles/apihub.attributeAdmin",
          "is_beta": true,
          "permissions": [
            "apihub.attributes.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Cloud API hub Attributes Admin"
        },
        {
          "description": "Edit access to most of Cloud API Hub resources.",
          "id": "roles/apihub.editor",
          "is_beta": true,
          "permissions": [
            "apihub.apiHubInstances.get",
            "apihub.apiHubInstances.list",
            "apihub.apiOperations.*",
            "apihub.apis.*",
            "apihub.attributes.get",
            "apihub.attributes.list",
            "apihub.curations.get",
            "apihub.curations.list",
            "apihub.definitions.*",
            "apihub.dependencies.*",
            "apihub.deployments.*",
            "apihub.externalApis.*",
            "apihub.hostProjectRegistrations.get",
            "apihub.hostProjectRegistrations.list",
            "apihub.llmEnablements.*",
            "apihub.locations.*",
            "apihub.operations.get",
            "apihub.operations.list",
            "apihub.plugininstances.get",
            "apihub.plugininstances.list",
            "apihub.plugins.get",
            "apihub.plugins.list",
            "apihub.runTimeProjectAttachments.get",
            "apihub.runTimeProjectAttachments.list",
            "apihub.specs.*",
            "apihub.styleGuides.get",
            "apihub.versions.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Cloud API Hub Editor"
        },
        {
          "description": "Full access to all Cloud API hub plugin's resources.",
          "id": "roles/apihub.pluginAdmin",
          "is_beta": true,
          "permissions": [
            "apihub.curations.*",
            "apihub.locations.collectApiData",
            "apihub.operations.*",
            "apihub.plugininstances.*",
            "apihub.plugins.*",
            "apihub.specs.lint",
            "apihub.styleGuides.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Cloud API hub Plugins Admin"
        },
        {
          "description": "Full access to Cloud API hub provisioning related resources.",
          "id": "roles/apihub.provisioningAdmin",
          "is_beta": true,
          "permissions": [
            "apihub.apiHubInstances.*",
            "apihub.hostProjectRegistrations.*",
            "apihub.operations.*",
            "apihub.runTimeProjectAttachments.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Cloud API hub Provisioning Admin"
        },
        {
          "description": "Access to add/delete project as a runtime project attachment to API hub host project.",
          "id": "roles/apihub.runTimeProjectAttachmentsEditor",
          "is_beta": true,
          "permissions": [
            "apihub.runTimeProjectAttachments.attach"
          ],
          "title": "Cloud API hub Runtime Project Attachment Editor"
        },
        {
          "description": "View access to all Cloud API hub resources.",
          "id": "roles/apihub.viewer",
          "is_beta": true,
          "permissions": [
            "apihub.apiHubInstances.get",
            "apihub.apiHubInstances.list",
            "apihub.apiOperations.get",
            "apihub.apiOperations.list",
            "apihub.apis.get",
            "apihub.apis.list",
            "apihub.apis.listEffectiveTags",
            "apihub.apis.listTagBindings",
            "apihub.attributes.get",
            "apihub.attributes.list",
            "apihub.curations.get",
            "apihub.curations.list",
            "apihub.definitions.get",
            "apihub.definitions.list",
            "apihub.dependencies.get",
            "apihub.dependencies.list",
            "apihub.deployments.get",
            "apihub.deployments.list",
            "apihub.deployments.listEffectiveTags",
            "apihub.deployments.listTagBindings",
            "apihub.externalApis.get",
            "apihub.externalApis.list",
            "apihub.hostProjectRegistrations.get",
            "apihub.hostProjectRegistrations.list",
            "apihub.llmEnablements.get",
            "apihub.llmEnablements.list",
            "apihub.locations.searchResources",
            "apihub.operations.get",
            "apihub.operations.list",
            "apihub.plugininstances.get",
            "apihub.plugininstances.list",
            "apihub.plugins.get",
            "apihub.plugins.list",
            "apihub.runTimeProjectAttachments.get",
            "apihub.runTimeProjectAttachments.list",
            "apihub.specs.get",
            "apihub.specs.list",
            "apihub.styleGuides.get",
            "apihub.versions.get",
            "apihub.versions.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Cloud API hub Viewer"
        },
        {
          "description": "Full access to API Management resources.",
          "id": "roles/apim.admin",
          "is_beta": true,
          "permissions": [
            "apim.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "API Management Admin"
        },
        {
          "description": "Readonly access to API Management resources.",
          "id": "roles/apim.viewer",
          "is_beta": true,
          "permissions": [
            "apim.apiObservations.get",
            "apim.apiObservations.list",
            "apim.apiOperations.*",
            "apim.locations.*",
            "apim.observationJobs.get",
            "apim.observationJobs.list",
            "apim.observationSources.get",
            "apim.observationSources.list",
            "apim.operations.get",
            "apim.operations.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "API Management Viewer"
        },
        {
          "description": "Full access to App Hub resources.",
          "id": "roles/apphub.admin",
          "is_beta": false,
          "permissions": [
            "apphub.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "App Hub Admin"
        },
        {
          "description": "This role, an aggregation of read permissions across multiple app centric products.",
          "id": "roles/apphub.appManagementViewer",
          "is_beta": true,
          "permissions": [
            "apphub.applications.get",
            "apphub.applications.list",
            "apphub.discoveredServices.get",
            "apphub.discoveredServices.list",
            "apphub.discoveredWorkloads.get",
            "apphub.discoveredWorkloads.list",
            "apphub.locations.*",
            "apphub.operations.get",
            "apphub.operations.list",
            "apphub.serviceProjectAttachments.lookup",
            "apphub.services.get",
            "apphub.services.list",
            "apphub.workloads.get",
            "apphub.workloads.list",
            "cloudasset.assets.analyzeIamPolicy",
            "cloudasset.assets.analyzeMove",
            "cloudasset.assets.analyzeOrgPolicy",
            "cloudasset.assets.exportAccessLevel",
            "cloudasset.assets.exportAccessPolicy",
            "cloudasset.assets.exportAiplatformBatchPredictionJobs",
            "cloudasset.assets.exportAiplatformCustomJobs",
            "cloudasset.assets.exportAiplatformDataLabelingJobs",
            "cloudasset.assets.exportAiplatformDatasets",
            "cloudasset.assets.exportAiplatformEndpoints",
            "cloudasset.assets.exportAiplatformHyperparameterTuningJobs",
            "cloudasset.assets.exportAiplatformMetadataStores",
            "cloudasset.assets.exportAiplatformModelDeploymentMonitoringJobs",
            "cloudasset.assets.exportAiplatformModels",
            "cloudasset.assets.exportAiplatformPipelineJobs",
            "cloudasset.assets.exportAiplatformSpecialistPools",
            "cloudasset.assets.exportAiplatformTrainingPipelines",
            "cloudasset.assets.exportAllAccessPolicy",
            "cloudasset.assets.exportAnthosConnectedCluster",
            "cloudasset.assets.exportAnthosedgeCluster",
            "cloudasset.assets.exportApigatewayApi",
            "cloudasset.assets.exportApigatewayApiConfig",
            "cloudasset.assets.exportApigatewayGateway",
            "cloudasset.assets.exportApikeysKeys",
            "cloudasset.assets.exportAppengineApplications",
            "cloudasset.assets.exportAppengineServices",
            "cloudasset.assets.exportAppengineVersions",
            "cloudasset.assets.exportArtifactregistryDockerImages",
            "cloudasset.assets.exportArtifactregistryRepositories",
            "cloudasset.assets.exportAssuredWorkloadsWorkloads",
            "cloudasset.assets.exportBeyondCorpApiGateways",
            "cloudasset.assets.exportBeyondCorpAppConnections",
            "cloudasset.assets.exportBeyondCorpAppConnectors",
            "cloudasset.assets.exportBeyondCorpAppGateways",
            "cloudasset.assets.exportBeyondCorpClientConnectorServices",
            "cloudasset.assets.exportBeyondCorpClientGateways",
            "cloudasset.assets.exportBigqueryDatasets",
            "cloudasset.assets.exportBigqueryModels",
            "cloudasset.assets.exportBigqueryTables",
            "cloudasset.assets.exportBigtableAppProfile",
            "cloudasset.assets.exportBigtableBackup",
            "cloudasset.assets.exportBigtableCluster",
            "cloudasset.assets.exportBigtableInstance",
            "cloudasset.assets.exportBigtableTable",
            "cloudasset.assets.exportCloudAssetFeeds",
            "cloudasset.assets.exportCloudDeployDeliveryPipelines",
            "cloudasset.assets.exportCloudDeployReleases",
            "cloudasset.assets.exportCloudDeployRollouts",
            "cloudasset.assets.exportCloudDeployTargets",
            "cloudasset.assets.exportCloudDocumentAIEvaluation",
            "cloudasset.assets.exportCloudDocumentAIHumanReviewConfig",
            "cloudasset.assets.exportCloudDocumentAILabelerPool",
            "cloudasset.assets.exportCloudDocumentAIProcessor",
            "cloudasset.assets.exportCloudDocumentAIProcessorVersion",
            "cloudasset.assets.exportCloudbillingBillingAccounts",
            "cloudasset.assets.exportCloudbillingProjectBillingInfos",
            "cloudasset.assets.exportCloudfunctionsFunctions",
            "cloudasset.assets.exportCloudfunctionsGen2Functions",
            "cloudasset.assets.exportCloudkmsCryptoKeyVersions",
            "cloudasset.assets.exportCloudkmsCryptoKeys",
            "cloudasset.assets.exportCloudkmsEkmConnections",
            "cloudasset.assets.exportCloudkmsImportJobs",
            "cloudasset.assets.exportCloudkmsKeyRings",
            "cloudasset.assets.exportCloudmemcacheInstances",
            "cloudasset.assets.exportCloudresourcemanagerFolders",
            "cloudasset.assets.exportCloudresourcemanagerOrganizations",
            "cloudasset.assets.exportCloudresourcemanagerProjects",
            "cloudasset.assets.exportCloudresourcemanagerTagBindings",
            "cloudasset.assets.exportCloudresourcemanagerTagKeys",
            "cloudasset.assets.exportCloudresourcemanagerTagValues",
            "cloudasset.assets.exportComposerEnvironments",
            "cloudasset.assets.exportComputeAddress",
            "cloudasset.assets.exportComputeAutoscalers",
            "cloudasset.assets.exportComputeBackendBuckets",
            "cloudasset.assets.exportComputeBackendServices",
            "cloudasset.assets.exportComputeCommitments",
            "cloudasset.assets.exportComputeDisks",
            "cloudasset.assets.exportComputeExternalVpnGateways",
            "cloudasset.assets.exportComputeFirewallPolicies",
            "cloudasset.assets.exportComputeFirewalls",
            "cloudasset.assets.exportComputeForwardingRules",
            "cloudasset.assets.exportComputeGlobalAddress",
            "cloudasset.assets.exportComputeGlobalForwardingRules",
            "cloudasset.assets.exportComputeHealthChecks",
            "cloudasset.assets.exportComputeHttpHealthChecks",
            "cloudasset.assets.exportComputeHttpsHealthChecks",
            "cloudasset.assets.exportComputeImages",
            "cloudasset.assets.exportComputeInstanceGroupManagers",
            "cloudasset.assets.exportComputeInstanceGroups",
            "cloudasset.assets.exportComputeInstanceTemplates",
            "cloudasset.assets.exportComputeInstances",
            "cloudasset.assets.exportComputeInterconnect",
            "cloudasset.assets.exportComputeInterconnectAttachment",
            "cloudasset.assets.exportComputeLicenses",
            "cloudasset.assets.exportComputeNetworkEndpointGroups",
            "cloudasset.assets.exportComputeNetworks",
            "cloudasset.assets.exportComputeNodeGroups",
            "cloudasset.assets.exportComputeNodeTemplates",
            "cloudasset.assets.exportComputePacketMirrorings",
            "cloudasset.assets.exportComputeProjects",
            "cloudasset.assets.exportComputeRegionAutoscaler",
            "cloudasset.assets.exportComputeRegionBackendServices",
            "cloudasset.assets.exportComputeRegionDisk",
            "cloudasset.assets.exportComputeRegionInstanceGroup",
            "cloudasset.assets.exportComputeRegionInstanceGroupManager",
            "cloudasset.assets.exportComputeReservations",
            "cloudasset.assets.exportComputeResourcePolicies",
            "cloudasset.assets.exportComputeRouters",
            "cloudasset.assets.exportComputeRoutes",
            "cloudasset.assets.exportComputeSecurityPolicy",
            "cloudasset.assets.exportComputeServiceAttachments",
            "cloudasset.assets.exportComputeSnapshots",
            "cloudasset.assets.exportComputeSslCertificates",
            "cloudasset.assets.exportComputeSslPolicies",
            "cloudasset.assets.exportComputeSubnetworks",
            "cloudasset.assets.exportComputeTargetHttpProxies",
            "cloudasset.assets.exportComputeTargetHttpsProxies",
            "cloudasset.assets.exportComputeTargetInstances",
            "cloudasset.assets.exportComputeTargetPools",
            "cloudasset.assets.exportComputeTargetSslProxies",
            "cloudasset.assets.exportComputeTargetTcpProxies",
            "cloudasset.assets.exportComputeTargetVpnGateways",
            "cloudasset.assets.exportComputeUrlMaps",
            "cloudasset.assets.exportComputeVpnGateways",
            "cloudasset.assets.exportComputeVpnTunnels",
            "cloudasset.assets.exportConnectorsConnections",
            "cloudasset.assets.exportConnectorsConnectorVersions",
            "cloudasset.assets.exportConnectorsConnectors",
            "cloudasset.assets.exportConnectorsProviders",
            "cloudasset.assets.exportConnectorsRuntimeConfigs",
            "cloudasset.assets.exportContainerAppsDeployment",
            "cloudasset.assets.exportContainerAppsReplicaSets",
            "cloudasset.assets.exportContainerBatchJobs",
            "cloudasset.assets.exportContainerClusterrole",
            "cloudasset.assets.exportContainerClusterrolebinding",
            "cloudasset.assets.exportContainerClusters",
            "cloudasset.assets.exportContainerExtensionsIngresses",
            "cloudasset.assets.exportContainerJobs",
            "cloudasset.assets.exportContainerNamespace",
            "cloudasset.assets.exportContainerNetworkingIngresses",
            "cloudasset.assets.exportContainerNetworkingNetworkPolicies",
            "cloudasset.assets.exportContainerNode",
            "cloudasset.assets.exportContainerNodepool",
            "cloudasset.assets.exportContainerPod",
            "cloudasset.assets.exportContainerReplicaSets",
            "cloudasset.assets.exportContainerRole",
            "cloudasset.assets.exportContainerRolebinding",
            "cloudasset.assets.exportContainerServices",
            "cloudasset.assets.exportContainerregistryImage",
            "cloudasset.assets.exportDataMigrationConnectionProfiles",
            "cloudasset.assets.exportDataMigrationMigrationJobs",
            "cloudasset.assets.exportDataflowJobs",
            "cloudasset.assets.exportDatafusionInstance",
            "cloudasset.assets.exportDataplexAssets",
            "cloudasset.assets.exportDataplexLakes",
            "cloudasset.assets.exportDataplexTasks",
            "cloudasset.assets.exportDataplexZones",
            "cloudasset.assets.exportDataprocAutoscalingPolicies",
            "cloudasset.assets.exportDataprocBatches",
            "cloudasset.assets.exportDataprocClusters",
            "cloudasset.assets.exportDataprocJobs",
            "cloudasset.assets.exportDataprocSessions",
            "cloudasset.assets.exportDataprocWorkflowTemplates",
            "cloudasset.assets.exportDatastreamConnectionProfile",
            "cloudasset.assets.exportDatastreamPrivateConnection",
            "cloudasset.assets.exportDatastreamStream",
            "cloudasset.assets.exportDialogflowAgents",
            "cloudasset.assets.exportDialogflowConversationProfiles",
            "cloudasset.assets.exportDialogflowKnowledgeBases",
            "cloudasset.assets.exportDialogflowLocationSettings",
            "cloudasset.assets.exportDlpDeidentifyTemplates",
            "cloudasset.assets.exportDlpDlpJobs",
            "cloudasset.assets.exportDlpInspectTemplates",
            "cloudasset.assets.exportDlpJobTriggers",
            "cloudasset.assets.exportDlpStoredInfoTypes",
            "cloudasset.assets.exportDnsManagedZones",
            "cloudasset.assets.exportDnsPolicies",
            "cloudasset.assets.exportDomainsRegistrations",
            "cloudasset.assets.exportEventarcTriggers",
            "cloudasset.assets.exportFileBackups",
            "cloudasset.assets.exportFileInstances",
            "cloudasset.assets.exportFirebaseAppInfos",
            "cloudasset.assets.exportFirebaseProjects",
            "cloudasset.assets.exportFirestoreDatabases",
            "cloudasset.assets.exportGKEHubFeatures",
            "cloudasset.assets.exportGKEHubMemberships",
            "cloudasset.assets.exportGameservicesGameServerClusters",
            "cloudasset.assets.exportGameservicesGameServerConfigs",
            "cloudasset.assets.exportGameservicesGameServerDeployments",
            "cloudasset.assets.exportGameservicesRealms",
            "cloudasset.assets.exportGkeBackupBackupPlans",
            "cloudasset.assets.exportGkeBackupBackups",
            "cloudasset.assets.exportGkeBackupRestorePlans",
            "cloudasset.assets.exportGkeBackupRestores",
            "cloudasset.assets.exportGkeBackupVolumeBackups",
            "cloudasset.assets.exportGkeBackupVolumeRestores",
            "cloudasset.assets.exportHealthcareConsentStores",
            "cloudasset.assets.exportHealthcareDatasets",
            "cloudasset.assets.exportHealthcareDicomStores",
            "cloudasset.assets.exportHealthcareFhirStores",
            "cloudasset.assets.exportHealthcareHl7V2Stores",
            "cloudasset.assets.exportIamPolicy",
            "cloudasset.assets.exportIamRoles",
            "cloudasset.assets.exportIamServiceAccountKeys",
            "cloudasset.assets.exportIamServiceAccounts",
            "cloudasset.assets.exportIapTunnel",
            "cloudasset.assets.exportIapTunnelInstances",
            "cloudasset.assets.exportIapTunnelZones",
            "cloudasset.assets.exportIapWeb",
            "cloudasset.assets.exportIapWebServiceVersion",
            "cloudasset.assets.exportIapWebServices",
            "cloudasset.assets.exportIapWebType",
            "cloudasset.assets.exportIdsEndpoints",
            "cloudasset.assets.exportIntegrationsAuthConfigs",
            "cloudasset.assets.exportIntegrationsCertificates",
            "cloudasset.assets.exportIntegrationsExecutions",
            "cloudasset.assets.exportIntegrationsIntegrationVersions",
            "cloudasset.assets.exportIntegrationsIntegrations",
            "cloudasset.assets.exportIntegrationsSfdcChannels",
            "cloudasset.assets.exportIntegrationsSfdcInstances",
            "cloudasset.assets.exportIntegrationsSuspensions",
            "cloudasset.assets.exportLoggingLogMetrics",
            "cloudasset.assets.exportLoggingLogSinks",
            "cloudasset.assets.exportManagedidentitiesDomain",
            "cloudasset.assets.exportMetastoreBackups",
            "cloudasset.assets.exportMetastoreMetadataImports",
            "cloudasset.assets.exportMetastoreServices",
            "cloudasset.assets.exportMonitoringAlertPolicies",
            "cloudasset.assets.exportNetworkConnectivityHubs",
            "cloudasset.assets.exportNetworkConnectivitySpokes",
            "cloudasset.assets.exportNetworkManagementConnectivityTests",
            "cloudasset.assets.exportNetworkServicesEndpointPolicies",
            "cloudasset.assets.exportNetworkServicesGateways",
            "cloudasset.assets.exportNetworkServicesGrpcRoutes",
            "cloudasset.assets.exportNetworkServicesHttpRoutes",
            "cloudasset.assets.exportNetworkServicesMeshes",
            "cloudasset.assets.exportNetworkServicesServiceBindings",
            "cloudasset.assets.exportNetworkServicesTcpRoutes",
            "cloudasset.assets.exportNetworkServicesTlsRoutes",
            "cloudasset.assets.exportOSConfigOSPolicyAssignmentReports",
            "cloudasset.assets.exportOSConfigOSPolicyAssignments",
            "cloudasset.assets.exportOSConfigVulnerabilityReports",
            "cloudasset.assets.exportOSInventories",
            "cloudasset.assets.exportOrgPolicy",
            "cloudasset.assets.exportPatchDeployments",
            "cloudasset.assets.exportPubsubSnapshots",
            "cloudasset.assets.exportPubsubSubscriptions",
            "cloudasset.assets.exportPubsubTopics",
            "cloudasset.assets.exportRedisInstances",
            "cloudasset.assets.exportResource",
            "cloudasset.assets.exportSecretManagerSecretVersions",
            "cloudasset.assets.exportSecretManagerSecrets",
            "cloudasset.assets.exportServiceDirectoryNamespaces",
            "cloudasset.assets.exportServicePerimeter",
            "cloudasset.assets.exportServiceconsumermanagementConsumerProperty",
            "cloudasset.assets.exportServiceconsumermanagementConsumerQuotaLimits",
            "cloudasset.assets.exportServiceconsumermanagementConsumers",
            "cloudasset.assets.exportServiceconsumermanagementProducerOverrides",
            "cloudasset.assets.exportServiceconsumermanagementTenancyUnits",
            "cloudasset.assets.exportServiceconsumermanagementVisibility",
            "cloudasset.assets.exportServicemanagementServices",
            "cloudasset.assets.exportServiceusageAdminOverrides",
            "cloudasset.assets.exportServiceusageConsumerOverrides",
            "cloudasset.assets.exportServiceusageServices",
            "cloudasset.assets.exportSpannerBackups",
            "cloudasset.assets.exportSpannerDatabases",
            "cloudasset.assets.exportSpannerInstances",
            "cloudasset.assets.exportSpeakerIdPhrases",
            "cloudasset.assets.exportSpeakerIdSettings",
            "cloudasset.assets.exportSpeakerIdSpeakers",
            "cloudasset.assets.exportSpeechCustomClasses",
            "cloudasset.assets.exportSpeechPhraseSets",
            "cloudasset.assets.exportSqladminBackupRuns",
            "cloudasset.assets.exportSqladminInstances",
            "cloudasset.assets.exportStorageBuckets",
            "cloudasset.assets.exportTpuNodes",
            "cloudasset.assets.exportVpcaccessConnector",
            "cloudasset.assets.listAccessLevel",
            "cloudasset.assets.listAccessPolicy",
            "cloudasset.assets.listAiplatformBatchPredictionJobs",
            "cloudasset.assets.listAiplatformCustomJobs",
            "cloudasset.assets.listAiplatformDataLabelingJobs",
            "cloudasset.assets.listAiplatformDatasets",
            "cloudasset.assets.listAiplatformEndpoints",
            "cloudasset.assets.listAiplatformHyperparameterTuningJobs",
            "cloudasset.assets.listAiplatformMetadataStores",
            "cloudasset.assets.listAiplatformModelDeploymentMonitoringJobs",
            "cloudasset.assets.listAiplatformModels",
            "cloudasset.assets.listAiplatformPipelineJobs",
            "cloudasset.assets.listAiplatformSpecialistPools",
            "cloudasset.assets.listAiplatformTrainingPipelines",
            "cloudasset.assets.listAllAccessPolicy",
            "cloudasset.assets.listAnthosConnectedCluster",
            "cloudasset.assets.listAnthosedgeCluster",
            "cloudasset.assets.listApigatewayApi",
            "cloudasset.assets.listApigatewayApiConfig",
            "cloudasset.assets.listApigatewayGateway",
            "cloudasset.assets.listApikeysKeys",
            "cloudasset.assets.listAppengineApplications",
            "cloudasset.assets.listAppengineServices",
            "cloudasset.assets.listAppengineVersions",
            "cloudasset.assets.listArtifactregistryDockerImages",
            "cloudasset.assets.listArtifactregistryRepositories",
            "cloudasset.assets.listAssuredWorkloadsWorkloads",
            "cloudasset.assets.listBeyondCorpApiGateways",
            "cloudasset.assets.listBeyondCorpAppConnections",
            "cloudasset.assets.listBeyondCorpAppConnectors",
            "cloudasset.assets.listBeyondCorpAppGateways",
            "cloudasset.assets.listBeyondCorpClientConnectorServices",
            "cloudasset.assets.listBeyondCorpClientGateways",
            "cloudasset.assets.listBigqueryDatasets",
            "cloudasset.assets.listBigqueryModels",
            "cloudasset.assets.listBigqueryTables",
            "cloudasset.assets.listBigtableAppProfile",
            "cloudasset.assets.listBigtableBackup",
            "cloudasset.assets.listBigtableCluster",
            "cloudasset.assets.listBigtableInstance",
            "cloudasset.assets.listBigtableTable",
            "cloudasset.assets.listCloudAssetFeeds",
            "cloudasset.assets.listCloudDeployDeliveryPipelines",
            "cloudasset.assets.listCloudDeployReleases",
            "cloudasset.assets.listCloudDeployRollouts",
            "cloudasset.assets.listCloudDeployTargets",
            "cloudasset.assets.listCloudDocumentAIEvaluation",
            "cloudasset.assets.listCloudDocumentAIHumanReviewConfig",
            "cloudasset.assets.listCloudDocumentAILabelerPool",
            "cloudasset.assets.listCloudDocumentAIProcessor",
            "cloudasset.assets.listCloudDocumentAIProcessorVersion",
            "cloudasset.assets.listCloudbillingBillingAccounts",
            "cloudasset.assets.listCloudbillingProjectBillingInfos",
            "cloudasset.assets.listCloudfunctionsFunctions",
            "cloudasset.assets.listCloudfunctionsGen2Functions",
            "cloudasset.assets.listCloudkmsCryptoKeyVersions",
            "cloudasset.assets.listCloudkmsCryptoKeys",
            "cloudasset.assets.listCloudkmsEkmConnections",
            "cloudasset.assets.listCloudkmsImportJobs",
            "cloudasset.assets.listCloudkmsKeyRings",
            "cloudasset.assets.listCloudmemcacheInstances",
            "cloudasset.assets.listCloudresourcemanagerFolders",
            "cloudasset.assets.listCloudresourcemanagerOrganizations",
            "cloudasset.assets.listCloudresourcemanagerProjects",
            "cloudasset.assets.listCloudresourcemanagerTagBindings",
            "cloudasset.assets.listCloudresourcemanagerTagKeys",
            "cloudasset.assets.listCloudresourcemanagerTagValues",
            "cloudasset.assets.listComposerEnvironments",
            "cloudasset.assets.listComputeAddress",
            "cloudasset.assets.listComputeAutoscalers",
            "cloudasset.assets.listComputeBackendBuckets",
            "cloudasset.assets.listComputeBackendServices",
            "cloudasset.assets.listComputeCommitments",
            "cloudasset.assets.listComputeDisks",
            "cloudasset.assets.listComputeExternalVpnGateways",
            "cloudasset.assets.listComputeFirewallPolicies",
            "cloudasset.assets.listComputeFirewalls",
            "cloudasset.assets.listComputeForwardingRules",
            "cloudasset.assets.listComputeGlobalAddress",
            "cloudasset.assets.listComputeGlobalForwardingRules",
            "cloudasset.assets.listComputeHealthChecks",
            "cloudasset.assets.listComputeHttpHealthChecks",
            "cloudasset.assets.listComputeHttpsHealthChecks",
            "cloudasset.assets.listComputeImages",
            "cloudasset.assets.listComputeInstanceGroupManagers",
            "cloudasset.assets.listComputeInstanceGroups",
            "cloudasset.assets.listComputeInstanceTemplates",
            "cloudasset.assets.listComputeInstances",
            "cloudasset.assets.listComputeInterconnect",
            "cloudasset.assets.listComputeInterconnectAttachment",
            "cloudasset.assets.listComputeLicenses",
            "cloudasset.assets.listComputeNetworkEndpointGroups",
            "cloudasset.assets.listComputeNetworks",
            "cloudasset.assets.listComputeNodeGroups",
            "cloudasset.assets.listComputeNodeTemplates",
            "cloudasset.assets.listComputePacketMirrorings",
            "cloudasset.assets.listComputeProjects",
            "cloudasset.assets.listComputeRegionAutoscaler",
            "cloudasset.assets.listComputeRegionBackendServices",
            "cloudasset.assets.listComputeRegionDisk",
            "cloudasset.assets.listComputeRegionInstanceGroup",
            "cloudasset.assets.listComputeRegionInstanceGroupManager",
            "cloudasset.assets.listComputeReservations",
            "cloudasset.assets.listComputeResourcePolicies",
            "cloudasset.assets.listComputeRouters",
            "cloudasset.assets.listComputeRoutes",
            "cloudasset.assets.listComputeSecurityPolicy",
            "cloudasset.assets.listComputeServiceAttachments",
            "cloudasset.assets.listComputeSnapshots",
            "cloudasset.assets.listComputeSslCertificates",
            "cloudasset.assets.listComputeSslPolicies",
            "cloudasset.assets.listComputeSubnetworks",
            "cloudasset.assets.listComputeTargetHttpProxies",
            "cloudasset.assets.listComputeTargetHttpsProxies",
            "cloudasset.assets.listComputeTargetInstances",
            "cloudasset.assets.listComputeTargetPools",
            "cloudasset.assets.listComputeTargetSslProxies",
            "cloudasset.assets.listComputeTargetTcpProxies",
            "cloudasset.assets.listComputeTargetVpnGateways",
            "cloudasset.assets.listComputeUrlMaps",
            "cloudasset.assets.listComputeVpnGateways",
            "cloudasset.assets.listComputeVpnTunnels",
            "cloudasset.assets.listConnectorsConnections",
            "cloudasset.assets.listConnectorsConnectorVersions",
            "cloudasset.assets.listConnectorsConnectors",
            "cloudasset.assets.listConnectorsProviders",
            "cloudasset.assets.listConnectorsRuntimeConfigs",
            "cloudasset.assets.listContainerAppsDeployment",
            "cloudasset.assets.listContainerAppsReplicaSets",
            "cloudasset.assets.listContainerBatchJobs",
            "cloudasset.assets.listContainerClusterrole",
            "cloudasset.assets.listContainerClusterrolebinding",
            "cloudasset.assets.listContainerClusters",
            "cloudasset.assets.listContainerExtensionsIngresses",
            "cloudasset.assets.listContainerJobs",
            "cloudasset.assets.listContainerNamespace",
            "cloudasset.assets.listContainerNetworkingIngresses",
            "cloudasset.assets.listContainerNetworkingNetworkPolicies",
            "cloudasset.assets.listContainerNode",
            "cloudasset.assets.listContainerNodepool",
            "cloudasset.assets.listContainerPod",
            "cloudasset.assets.listContainerReplicaSets",
            "cloudasset.assets.listContainerRole",
            "cloudasset.assets.listContainerRolebinding",
            "cloudasset.assets.listContainerServices",
            "cloudasset.assets.listContainerregistryImage",
            "cloudasset.assets.listDataMigrationConnectionProfiles",
            "cloudasset.assets.listDataMigrationMigrationJobs",
            "cloudasset.assets.listDataflowJobs",
            "cloudasset.assets.listDatafusionInstance",
            "cloudasset.assets.listDataplexAssets",
            "cloudasset.assets.listDataplexLakes",
            "cloudasset.assets.listDataplexTasks",
            "cloudasset.assets.listDataplexZones",
            "cloudasset.assets.listDataprocAutoscalingPolicies",
            "cloudasset.assets.listDataprocBatches",
            "cloudasset.assets.listDataprocClusters",
            "cloudasset.assets.listDataprocJobs",
            "cloudasset.assets.listDataprocSessions",
            "cloudasset.assets.listDataprocWorkflowTemplates",
            "cloudasset.assets.listDatastreamConnectionProfile",
            "cloudasset.assets.listDatastreamPrivateConnection",
            "cloudasset.assets.listDatastreamStream",
            "cloudasset.assets.listDialogflowAgents",
            "cloudasset.assets.listDialogflowConversationProfiles",
            "cloudasset.assets.listDialogflowKnowledgeBases",
            "cloudasset.assets.listDialogflowLocationSettings",
            "cloudasset.assets.listDlpDeidentifyTemplates",
            "cloudasset.assets.listDlpDlpJobs",
            "cloudasset.assets.listDlpInspectTemplates",
            "cloudasset.assets.listDlpJobTriggers",
            "cloudasset.assets.listDlpStoredInfoTypes",
            "cloudasset.assets.listDnsManagedZones",
            "cloudasset.assets.listDnsPolicies",
            "cloudasset.assets.listDomainsRegistrations",
            "cloudasset.assets.listEventarcTriggers",
            "cloudasset.assets.listFileBackups",
            "cloudasset.assets.listFileInstances",
            "cloudasset.assets.listFirebaseAppInfos",
            "cloudasset.assets.listFirebaseProjects",
            "cloudasset.assets.listFirestoreDatabases",
            "cloudasset.assets.listGKEHubFeatures",
            "cloudasset.assets.listGKEHubMemberships",
            "cloudasset.assets.listGameservicesGameServerClusters",
            "cloudasset.assets.listGameservicesGameServerConfigs",
            "cloudasset.assets.listGameservicesGameServerDeployments",
            "cloudasset.assets.listGameservicesRealms",
            "cloudasset.assets.listGkeBackupBackupPlans",
            "cloudasset.assets.listGkeBackupBackups",
            "cloudasset.assets.listGkeBackupRestorePlans",
            "cloudasset.assets.listGkeBackupRestores",
            "cloudasset.assets.listGkeBackupVolumeBackups",
            "cloudasset.assets.listGkeBackupVolumeRestores",
            "cloudasset.assets.listHealthcareConsentStores",
            "cloudasset.assets.listHealthcareDatasets",
            "cloudasset.assets.listHealthcareDicomStores",
            "cloudasset.assets.listHealthcareFhirStores",
            "cloudasset.assets.listHealthcareHl7V2Stores",
            "cloudasset.assets.listIamPolicy",
            "cloudasset.assets.listIamRoles",
            "cloudasset.assets.listIamServiceAccountKeys",
            "cloudasset.assets.listIamServiceAccounts",
            "cloudasset.assets.listIapTunnel",
            "cloudasset.assets.listIapTunnelInstances",
            "cloudasset.assets.listIapTunnelZones",
            "cloudasset.assets.listIapWeb",
            "cloudasset.assets.listIapWebServiceVersion",
            "cloudasset.assets.listIapWebServices",
            "cloudasset.assets.listIapWebType",
            "cloudasset.assets.listIdsEndpoints",
            "cloudasset.assets.listIntegrationsAuthConfigs",
            "cloudasset.assets.listIntegrationsCertificates",
            "cloudasset.assets.listIntegrationsExecutions",
            "cloudasset.assets.listIntegrationsIntegrationVersions",
            "cloudasset.assets.listIntegrationsIntegrations",
            "cloudasset.assets.listIntegrationsSfdcChannels",
            "cloudasset.assets.listIntegrationsSfdcInstances",
            "cloudasset.assets.listIntegrationsSuspensions",
            "cloudasset.assets.listLoggingLogMetrics",
            "cloudasset.assets.listLoggingLogSinks",
            "cloudasset.assets.listManagedidentitiesDomain",
            "cloudasset.assets.listMetastoreBackups",
            "cloudasset.assets.listMetastoreMetadataImports",
            "cloudasset.assets.listMetastoreServices",
            "cloudasset.assets.listMonitoringAlertPolicies",
            "cloudasset.assets.listNetworkConnectivityHubs",
            "cloudasset.assets.listNetworkConnectivitySpokes",
            "cloudasset.assets.listNetworkManagementConnectivityTests",
            "cloudasset.assets.listNetworkServicesEndpointPolicies",
            "cloudasset.assets.listNetworkServicesGateways",
            "cloudasset.assets.listNetworkServicesGrpcRoutes",
            "cloudasset.assets.listNetworkServicesHttpRoutes",
            "cloudasset.assets.listNetworkServicesMeshes",
            "cloudasset.assets.listNetworkServicesServiceBindings",
            "cloudasset.assets.listNetworkServicesTcpRoutes",
            "cloudasset.assets.listNetworkServicesTlsRoutes",
            "cloudasset.assets.listOSConfigOSPolicyAssignmentReports",
            "cloudasset.assets.listOSConfigOSPolicyAssignments",
            "cloudasset.assets.listOSConfigVulnerabilityReports",
            "cloudasset.assets.listOSInventories",
            "cloudasset.assets.listOrgPolicy",
            "cloudasset.assets.listPatchDeployments",
            "cloudasset.assets.listPubsubSnapshots",
            "cloudasset.assets.listPubsubSubscriptions",
            "cloudasset.assets.listPubsubTopics",
            "cloudasset.assets.listRedisInstances",
            "cloudasset.assets.listResource",
            "cloudasset.assets.listRunDomainMapping",
            "cloudasset.assets.listRunRevision",
            "cloudasset.assets.listRunService",
            "cloudasset.assets.listSecretManagerSecretVersions",
            "cloudasset.assets.listSecretManagerSecrets",
            "cloudasset.assets.listServiceDirectoryNamespaces",
            "cloudasset.assets.listServicePerimeter",
            "cloudasset.assets.listServiceconsumermanagementConsumerProperty",
            "cloudasset.assets.listServiceconsumermanagementConsumerQuotaLimits",
            "cloudasset.assets.listServiceconsumermanagementConsumers",
            "cloudasset.assets.listServiceconsumermanagementProducerOverrides",
            "cloudasset.assets.listServiceconsumermanagementTenancyUnits",
            "cloudasset.assets.listServiceconsumermanagementVisibility",
            "cloudasset.assets.listServicemanagementServices",
            "cloudasset.assets.listServiceusageAdminOverrides",
            "cloudasset.assets.listServiceusageConsumerOverrides",
            "cloudasset.assets.listServiceusageServices",
            "cloudasset.assets.listSpannerBackups",
            "cloudasset.assets.listSpannerDatabases",
            "cloudasset.assets.listSpannerInstances",
            "cloudasset.assets.listSpeakerIdPhrases",
            "cloudasset.assets.listSpeakerIdSettings",
            "cloudasset.assets.listSpeakerIdSpeakers",
            "cloudasset.assets.listSpeechCustomClasses",
            "cloudasset.assets.listSpeechPhraseSets",
            "cloudasset.assets.listSqladminBackupRuns",
            "cloudasset.assets.listSqladminInstances",
            "cloudasset.assets.listStorageBuckets",
            "cloudasset.assets.listTpuNodes",
            "cloudasset.assets.listVpcaccessConnector",
            "cloudasset.assets.queryAccessPolicy",
            "cloudasset.assets.queryIamPolicy",
            "cloudasset.assets.queryOSInventories",
            "cloudasset.assets.queryResource",
            "cloudasset.assets.searchAllIamPolicies",
            "cloudasset.assets.searchAllResources",
            "cloudasset.othercloudconnections.get",
            "cloudasset.othercloudconnections.list",
            "cloudasset.othercloudconnections.verify",
            "cloudnotifications.activities.list",
            "config.deployments.get",
            "config.deployments.getIamPolicy",
            "config.deployments.list",
            "config.locations.*",
            "config.operations.get",
            "config.operations.list",
            "config.previews.get",
            "config.previews.list",
            "config.resources.*",
            "config.revisions.get",
            "config.revisions.list",
            "config.terraformversions.*",
            "designcenter.applicationTemplateRevisions.get",
            "designcenter.applicationTemplateRevisions.list",
            "designcenter.applicationTemplates.get",
            "designcenter.applicationTemplates.list",
            "designcenter.applications.get",
            "designcenter.applications.list",
            "designcenter.catalogTemplateRevisions.get",
            "designcenter.catalogTemplateRevisions.list",
            "designcenter.catalogTemplates.get",
            "designcenter.catalogTemplates.list",
            "designcenter.catalogs.get",
            "designcenter.catalogs.list",
            "designcenter.components.get",
            "designcenter.components.list",
            "designcenter.connections.get",
            "designcenter.connections.list",
            "designcenter.locations.*",
            "designcenter.operations.get",
            "designcenter.operations.list",
            "designcenter.sharedTemplateRevisions.*",
            "designcenter.sharedTemplates.*",
            "designcenter.shares.get",
            "designcenter.shares.list",
            "designcenter.spaces.get",
            "designcenter.spaces.getIamPolicy",
            "designcenter.spaces.list",
            "developerconnect.locations.*",
            "developerconnect.operations.get",
            "developerconnect.operations.list",
            "monitoring.alertPolicies.get",
            "monitoring.alertPolicies.list",
            "monitoring.alertPolicies.listEffectiveTags",
            "monitoring.alertPolicies.listTagBindings",
            "monitoring.dashboards.get",
            "monitoring.dashboards.list",
            "monitoring.groups.get",
            "monitoring.groups.list",
            "monitoring.metricDescriptors.get",
            "monitoring.metricDescriptors.list",
            "monitoring.monitoredResourceDescriptors.*",
            "monitoring.notificationChannelDescriptors.*",
            "monitoring.notificationChannels.get",
            "monitoring.notificationChannels.list",
            "monitoring.services.get",
            "monitoring.services.list",
            "monitoring.slos.get",
            "monitoring.slos.list",
            "monitoring.snoozes.get",
            "monitoring.snoozes.list",
            "monitoring.timeSeries.list",
            "monitoring.uptimeCheckConfigs.get",
            "monitoring.uptimeCheckConfigs.list",
            "opsconfigmonitoring.resourceMetadata.list",
            "recommender.alloydbClusterPerformanceInsights.get",
            "recommender.alloydbClusterPerformanceInsights.list",
            "recommender.alloydbClusterPerformanceRecommendations.get",
            "recommender.alloydbClusterPerformanceRecommendations.list",
            "recommender.alloydbClusterReliabilityInsights.get",
            "recommender.alloydbClusterReliabilityInsights.list",
            "recommender.alloydbClusterReliabilityRecommendations.get",
            "recommender.alloydbClusterReliabilityRecommendations.list",
            "recommender.alloydbInstanceSecurityInsights.get",
            "recommender.alloydbInstanceSecurityInsights.list",
            "recommender.alloydbInstanceSecurityRecommendations.get",
            "recommender.alloydbInstanceSecurityRecommendations.list",
            "recommender.bigqueryCapacityCommitmentsInsights.get",
            "recommender.bigqueryCapacityCommitmentsInsights.list",
            "recommender.bigqueryCapacityCommitmentsRecommendations.get",
            "recommender.bigqueryCapacityCommitmentsRecommendations.list",
            "recommender.bigqueryMaterializedViewInsights.get",
            "recommender.bigqueryMaterializedViewInsights.list",
            "recommender.bigqueryMaterializedViewRecommendations.get",
            "recommender.bigqueryMaterializedViewRecommendations.list",
            "recommender.bigqueryPartitionClusterRecommendations.get",
            "recommender.bigqueryPartitionClusterRecommendations.list",
            "recommender.bigqueryTableStatsInsights.get",
            "recommender.bigqueryTableStatsInsights.list",
            "recommender.bigtableClusterPerformanceInsights.get",
            "recommender.bigtableClusterPerformanceInsights.list",
            "recommender.bigtableClusterPerformanceRecommendations.get",
            "recommender.bigtableClusterPerformanceRecommendations.list",
            "recommender.cloudAssetInsights.get",
            "recommender.cloudAssetInsights.list",
            "recommender.cloudCostGeneralInsights.get",
            "recommender.cloudCostGeneralInsights.list",
            "recommender.cloudCostGeneralRecommendations.get",
            "recommender.cloudCostGeneralRecommendations.list",
            "recommender.cloudDeprecationGeneralInsights.get",
            "recommender.cloudDeprecationGeneralInsights.list",
            "recommender.cloudDeprecationGeneralRecommendations.get",
            "recommender.cloudDeprecationGeneralRecommendations.list",
            "recommender.cloudFunctionsPerformanceInsights.get",
            "recommender.cloudFunctionsPerformanceInsights.list",
            "recommender.cloudFunctionsPerformanceRecommendations.get",
            "recommender.cloudFunctionsPerformanceRecommendations.list",
            "recommender.cloudManageabilityGeneralInsights.get",
            "recommender.cloudManageabilityGeneralInsights.list",
            "recommender.cloudManageabilityGeneralRecommendations.get",
            "recommender.cloudManageabilityGeneralRecommendations.list",
            "recommender.cloudPerformanceGeneralInsights.get",
            "recommender.cloudPerformanceGeneralInsights.list",
            "recommender.cloudPerformanceGeneralRecommendations.get",
            "recommender.cloudPerformanceGeneralRecommendations.list",
            "recommender.cloudRecentChangeInsights.get",
            "recommender.cloudRecentChangeInsights.list",
            "recommender.cloudRecentChangeRecommendations.get",
            "recommender.cloudRecentChangeRecommendations.list",
            "recommender.cloudRecentChangeRecommenderConfig.get",
            "recommender.cloudReliabilityGeneralInsights.get",
            "recommender.cloudReliabilityGeneralInsights.list",
            "recommender.cloudReliabilityGeneralRecommendations.get",
            "recommender.cloudReliabilityGeneralRecommendations.list",
            "recommender.cloudSecurityGeneralInsights.get",
            "recommender.cloudSecurityGeneralInsights.list",
            "recommender.cloudSecurityGeneralRecommendations.get",
            "recommender.cloudSecurityGeneralRecommendations.list",
            "recommender.cloudsqlIdleInstanceRecommendations.get",
            "recommender.cloudsqlIdleInstanceRecommendations.list",
            "recommender.cloudsqlInstanceActivityInsights.get",
            "recommender.cloudsqlInstanceActivityInsights.list",
            "recommender.cloudsqlInstanceCpuUsageInsights.get",
            "recommender.cloudsqlInstanceCpuUsageInsights.list",
            "recommender.cloudsqlInstanceDiskUsageTrendInsights.get",
            "recommender.cloudsqlInstanceDiskUsageTrendInsights.list",
            "recommender.cloudsqlInstanceMemoryUsageInsights.get",
            "recommender.cloudsqlInstanceMemoryUsageInsights.list",
            "recommender.cloudsqlInstanceOomProbabilityInsights.get",
            "recommender.cloudsqlInstanceOomProbabilityInsights.list",
            "recommender.cloudsqlInstanceOutOfDiskRecommendations.get",
            "recommender.cloudsqlInstanceOutOfDiskRecommendations.list",
            "recommender.cloudsqlInstancePerformanceInsights.get",
            "recommender.cloudsqlInstancePerformanceInsights.list",
            "recommender.cloudsqlInstancePerformanceRecommendations.get",
            "recommender.cloudsqlInstancePerformanceRecommendations.list",
            "recommender.cloudsqlInstanceReliabilityInsights.get",
            "recommender.cloudsqlInstanceReliabilityInsights.list",
            "recommender.cloudsqlInstanceReliabilityRecommendations.get",
            "recommender.cloudsqlInstanceReliabilityRecommendations.list",
            "recommender.cloudsqlInstanceSecurityInsights.get",
            "recommender.cloudsqlInstanceSecurityInsights.list",
            "recommender.cloudsqlInstanceSecurityRecommendations.get",
            "recommender.cloudsqlInstanceSecurityRecommendations.list",
            "recommender.cloudsqlInstanceUnderprovisionedCpuUsageInsights.get",
            "recommender.cloudsqlInstanceUnderprovisionedCpuUsageInsights.list",
            "recommender.cloudsqlInstanceUnderprovisionedMemoryUsageInsights.get",
            "recommender.cloudsqlInstanceUnderprovisionedMemoryUsageInsights.list",
            "recommender.cloudsqlOverprovisionedInstanceRecommendations.get",
            "recommender.cloudsqlOverprovisionedInstanceRecommendations.list",
            "recommender.cloudsqlUnderProvisionedInstanceRecommendations.get",
            "recommender.cloudsqlUnderProvisionedInstanceRecommendations.list",
            "recommender.commitmentUtilizationInsights.get",
            "recommender.commitmentUtilizationInsights.list",
            "recommender.computeAddressIdleResourceInsights.get",
            "recommender.computeAddressIdleResourceInsights.list",
            "recommender.computeAddressIdleResourceRecommendations.get",
            "recommender.computeAddressIdleResourceRecommendations.list",
            "recommender.computeDiskIdleResourceInsights.get",
            "recommender.computeDiskIdleResourceInsights.list",
            "recommender.computeDiskIdleResourceRecommendations.get",
            "recommender.computeDiskIdleResourceRecommendations.list",
            "recommender.computeFirewallInsightTypeConfigs.get",
            "recommender.computeFirewallInsights.get",
            "recommender.computeFirewallInsights.list",
            "recommender.computeImageIdleResourceInsights.get",
            "recommender.computeImageIdleResourceInsights.list",
            "recommender.computeImageIdleResourceRecommendations.get",
            "recommender.computeImageIdleResourceRecommendations.list",
            "recommender.computeInstanceCpuUsageInsights.get",
            "recommender.computeInstanceCpuUsageInsights.list",
            "recommender.computeInstanceCpuUsagePredictionInsights.get",
            "recommender.computeInstanceCpuUsagePredictionInsights.list",
            "recommender.computeInstanceCpuUsageTrendInsights.get",
            "recommender.computeInstanceCpuUsageTrendInsights.list",
            "recommender.computeInstanceGroupManagerCpuUsageInsights.get",
            "recommender.computeInstanceGroupManagerCpuUsageInsights.list",
            "recommender.computeInstanceGroupManagerCpuUsagePredictionInsights.get",
            "recommender.computeInstanceGroupManagerCpuUsagePredictionInsights.list",
            "recommender.computeInstanceGroupManagerCpuUsageTrendInsights.get",
            "recommender.computeInstanceGroupManagerCpuUsageTrendInsights.list",
            "recommender.computeInstanceGroupManagerMachineTypeRecommendations.get",
            "recommender.computeInstanceGroupManagerMachineTypeRecommendations.list",
            "recommender.computeInstanceGroupManagerMemoryUsageInsights.get",
            "recommender.computeInstanceGroupManagerMemoryUsageInsights.list",
            "recommender.computeInstanceGroupManagerMemoryUsagePredictionInsights.get",
            "recommender.computeInstanceGroupManagerMemoryUsagePredictionInsights.list",
            "recommender.computeInstanceIdleResourceRecommendations.get",
            "recommender.computeInstanceIdleResourceRecommendations.list",
            "recommender.computeInstanceIdleResourceRecommenderConfig.get",
            "recommender.computeInstanceMachineTypeRecommendations.get",
            "recommender.computeInstanceMachineTypeRecommendations.list",
            "recommender.computeInstanceMemoryUsageInsights.get",
            "recommender.computeInstanceMemoryUsageInsights.list",
            "recommender.computeInstanceMemoryUsagePredictionInsights.get",
            "recommender.computeInstanceMemoryUsagePredictionInsights.list",
            "recommender.computeInstanceNetworkThroughputInsights.get",
            "recommender.computeInstanceNetworkThroughputInsights.list",
            "recommender.containerDiagnosisInsights.get",
            "recommender.containerDiagnosisInsights.list",
            "recommender.containerDiagnosisRecommendations.get",
            "recommender.containerDiagnosisRecommendations.list",
            "recommender.costInsights.get",
            "recommender.costInsights.list",
            "recommender.dataflowDiagnosticsInsights.get",
            "recommender.dataflowDiagnosticsInsights.list",
            "recommender.errorReportingInsights.get",
            "recommender.errorReportingInsights.list",
            "recommender.errorReportingRecommendations.get",
            "recommender.errorReportingRecommendations.list",
            "recommender.firestoreDatabaseReliabilityInsights.get",
            "recommender.firestoreDatabaseReliabilityInsights.list",
            "recommender.firestoreDatabaseReliabilityRecommendations.get",
            "recommender.firestoreDatabaseReliabilityRecommendations.list",
            "recommender.gmpGuidedExperienceInsights.get",
            "recommender.gmpGuidedExperienceInsights.list",
            "recommender.gmpGuidedExperienceRecommendations.get",
            "recommender.gmpGuidedExperienceRecommendations.list",
            "recommender.gmpProjectManagementInsights.get",
            "recommender.gmpProjectManagementInsights.list",
            "recommender.gmpProjectManagementRecommendations.get",
            "recommender.gmpProjectManagementRecommendations.list",
            "recommender.gmpProjectProductSuggestionsInsights.get",
            "recommender.gmpProjectProductSuggestionsInsights.list",
            "recommender.gmpProjectProductSuggestionsRecommendations.get",
            "recommender.gmpProjectProductSuggestionsRecommendations.list",
            "recommender.iamPolicyChangeRiskInsights.get",
            "recommender.iamPolicyChangeRiskInsights.list",
            "recommender.iamPolicyChangeRiskRecommendations.get",
            "recommender.iamPolicyChangeRiskRecommendations.list",
            "recommender.iamPolicyInsights.get",
            "recommender.iamPolicyInsights.list",
            "recommender.iamPolicyLateralMovementInsights.get",
            "recommender.iamPolicyLateralMovementInsights.list",
            "recommender.iamPolicyRecommendations.get",
            "recommender.iamPolicyRecommendations.list",
            "recommender.iamPolicyRecommenderConfig.get",
            "recommender.iamServiceAccountChangeRiskInsights.get",
            "recommender.iamServiceAccountChangeRiskInsights.list",
            "recommender.iamServiceAccountChangeRiskRecommendations.get",
            "recommender.iamServiceAccountChangeRiskRecommendations.list",
            "recommender.iamServiceAccountInsights.get",
            "recommender.iamServiceAccountInsights.list",
            "recommender.locations.*",
            "recommender.loggingProductSuggestionContainerInsights.get",
            "recommender.loggingProductSuggestionContainerInsights.list",
            "recommender.loggingProductSuggestionContainerRecommendations.get",
            "recommender.loggingProductSuggestionContainerRecommendations.list",
            "recommender.memorystoreManageabilityInsights.get",
            "recommender.memorystoreManageabilityInsights.list",
            "recommender.memorystoreManageabilityRecommendations.get",
            "recommender.memorystoreManageabilityRecommendations.list",
            "recommender.memorystorePerformanceInsights.get",
            "recommender.memorystorePerformanceInsights.list",
            "recommender.memorystorePerformanceRecommendations.get",
            "recommender.memorystorePerformanceRecommendations.list",
            "recommender.memorystoreReliabilityInsights.get",
            "recommender.memorystoreReliabilityInsights.list",
            "recommender.memorystoreReliabilityRecommendations.get",
            "recommender.memorystoreReliabilityRecommendations.list",
            "recommender.memorystoreUtilizationInsights.get",
            "recommender.memorystoreUtilizationInsights.list",
            "recommender.monitoringProductSuggestionComputeInsights.get",
            "recommender.monitoringProductSuggestionComputeInsights.list",
            "recommender.monitoringProductSuggestionComputeRecommendations.get",
            "recommender.monitoringProductSuggestionComputeRecommendations.list",
            "recommender.networkAnalyzerCloudSqlInsights.get",
            "recommender.networkAnalyzerCloudSqlInsights.list",
            "recommender.networkAnalyzerDynamicRouteInsights.get",
            "recommender.networkAnalyzerDynamicRouteInsights.list",
            "recommender.networkAnalyzerGkeConnectivityInsights.get",
            "recommender.networkAnalyzerGkeConnectivityInsights.list",
            "recommender.networkAnalyzerGkeIpAddressInsights.get",
            "recommender.networkAnalyzerGkeIpAddressInsights.list",
            "recommender.networkAnalyzerGkeServiceAccountInsights.get",
            "recommender.networkAnalyzerGkeServiceAccountInsights.list",
            "recommender.networkAnalyzerIpAddressInsights.get",
            "recommender.networkAnalyzerIpAddressInsights.list",
            "recommender.networkAnalyzerLoadBalancerInsights.get",
            "recommender.networkAnalyzerLoadBalancerInsights.list",
            "recommender.networkAnalyzerVpcConnectivityInsights.get",
            "recommender.networkAnalyzerVpcConnectivityInsights.list",
            "recommender.orgPolicyInsights.get",
            "recommender.orgPolicyInsights.list",
            "recommender.orgPolicyRecommendations.get",
            "recommender.orgPolicyRecommendations.list",
            "recommender.resourcemanagerProjectChangeRiskInsights.get",
            "recommender.resourcemanagerProjectChangeRiskInsights.list",
            "recommender.resourcemanagerProjectChangeRiskRecommendations.get",
            "recommender.resourcemanagerProjectChangeRiskRecommendations.list",
            "recommender.resourcemanagerProjectUtilizationInsightTypeConfigs.get",
            "recommender.resourcemanagerProjectUtilizationInsights.get",
            "recommender.resourcemanagerProjectUtilizationInsights.list",
            "recommender.resourcemanagerProjectUtilizationRecommendations.get",
            "recommender.resourcemanagerProjectUtilizationRecommendations.list",
            "recommender.resourcemanagerProjectUtilizationRecommenderConfigs.get",
            "recommender.resourcemanagerServiceLimitInsights.get",
            "recommender.resourcemanagerServiceLimitInsights.list",
            "recommender.resourcemanagerServiceLimitRecommendations.get",
            "recommender.resourcemanagerServiceLimitRecommendations.list",
            "recommender.runServiceCostInsights.get",
            "recommender.runServiceCostInsights.list",
            "recommender.runServiceCostRecommendations.get",
            "recommender.runServiceCostRecommendations.list",
            "recommender.runServiceIdentityInsights.get",
            "recommender.runServiceIdentityInsights.list",
            "recommender.runServiceIdentityRecommendations.get",
            "recommender.runServiceIdentityRecommendations.list",
            "recommender.runServicePerformanceInsights.get",
            "recommender.runServicePerformanceInsights.list",
            "recommender.runServicePerformanceRecommendations.get",
            "recommender.runServicePerformanceRecommendations.list",
            "recommender.runServiceSecurityInsights.get",
            "recommender.runServiceSecurityInsights.list",
            "recommender.runServiceSecurityRecommendations.get",
            "recommender.runServiceSecurityRecommendations.list",
            "recommender.spannerProjectReliabilityInsights.get",
            "recommender.spannerProjectReliabilityInsights.list",
            "recommender.spannerProjectReliabilityRecommendations.get",
            "recommender.spannerProjectReliabilityRecommendations.list",
            "recommender.spendBasedCommitmentInsights.get",
            "recommender.spendBasedCommitmentInsights.list",
            "recommender.spendBasedCommitmentRecommendations.get",
            "recommender.spendBasedCommitmentRecommendations.list",
            "recommender.spendBasedCommitmentRecommenderConfig.get",
            "recommender.storageBucketSoftDeleteInsights.get",
            "recommender.storageBucketSoftDeleteInsights.list",
            "recommender.storageBucketSoftDeleteRecommendations.get",
            "recommender.storageBucketSoftDeleteRecommendations.list",
            "recommender.usageCommitmentRecommendations.get",
            "recommender.usageCommitmentRecommendations.list",
            "resourcemanager.folders.get",
            "resourcemanager.folders.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "servicehealth.*",
            "stackdriver.projects.get",
            "stackdriver.resourceMetadata.list",
            "storage.folders.get",
            "storage.folders.list",
            "storage.managedFolders.get",
            "storage.managedFolders.list",
            "storage.objects.get",
            "storage.objects.list"
          ],
          "title": "App Management Viewer"
        },
        {
          "description": "Edit access to App Hub resources.",
          "id": "roles/apphub.editor",
          "is_beta": false,
          "permissions": [
            "apphub.applications.create",
            "apphub.applications.delete",
            "apphub.applications.get",
            "apphub.applications.list",
            "apphub.applications.update",
            "apphub.discoveredServices.*",
            "apphub.discoveredWorkloads.*",
            "apphub.locations.*",
            "apphub.operations.*",
            "apphub.serviceProjectAttachments.lookup",
            "apphub.services.*",
            "apphub.workloads.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "App Hub Editor"
        },
        {
          "description": "View access to App Hub resources.",
          "id": "roles/apphub.viewer",
          "is_beta": false,
          "permissions": [
            "apphub.applications.get",
            "apphub.applications.list",
            "apphub.discoveredServices.get",
            "apphub.discoveredServices.list",
            "apphub.discoveredWorkloads.get",
            "apphub.discoveredWorkloads.list",
            "apphub.locations.*",
            "apphub.operations.get",
            "apphub.operations.list",
            "apphub.serviceProjectAttachments.lookup",
            "apphub.services.get",
            "apphub.services.list",
            "apphub.workloads.get",
            "apphub.workloads.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "App Hub Viewer"
        },
        {
          "description": "Grants access to approve commands to run on appliances",
          "id": "roles/applianceactivation.approver",
          "is_beta": true,
          "permissions": [
            "applianceactivation.rttCommands.approve",
            "applianceactivation.rttCommands.get",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Appliance troubleshooting commands approver"
        },
        {
          "description": "Grants access to read commands for an appliance and send its result.",
          "id": "roles/applianceactivation.client",
          "is_beta": true,
          "permissions": [
            "applianceactivation.rttCommands.get",
            "applianceactivation.rttCommands.sendResult"
          ],
          "title": "On-appliance troubleshooting client"
        },
        {
          "description": "Grants access to send new commands to run on appliances and view the outputs",
          "id": "roles/applianceactivation.troubleshooter",
          "is_beta": true,
          "permissions": [
            "applianceactivation.rttCommands.create",
            "applianceactivation.rttCommands.get",
            "applianceactivation.rttCommands.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Appliance troubleshooter"
        },
        {
          "description": "Access to use Assured OSS and manage configuration.",
          "id": "roles/assuredoss.admin",
          "is_beta": false,
          "permissions": [
            "artifactregistry.attachments.get",
            "artifactregistry.attachments.list",
            "artifactregistry.dockerimages.*",
            "artifactregistry.files.download",
            "artifactregistry.files.get",
            "artifactregistry.files.list",
            "artifactregistry.locations.*",
            "artifactregistry.mavenartifacts.*",
            "artifactregistry.npmpackages.*",
            "artifactregistry.packages.get",
            "artifactregistry.packages.list",
            "artifactregistry.projectsettings.get",
            "artifactregistry.pythonpackages.*",
            "artifactregistry.repositories.create",
            "artifactregistry.repositories.downloadArtifacts",
            "artifactregistry.repositories.get",
            "artifactregistry.repositories.list",
            "artifactregistry.repositories.listEffectiveTags",
            "artifactregistry.repositories.listTagBindings",
            "artifactregistry.repositories.readViaVirtualRepository",
            "artifactregistry.rules.get",
            "artifactregistry.rules.list",
            "artifactregistry.tags.get",
            "artifactregistry.tags.list",
            "artifactregistry.versions.get",
            "artifactregistry.versions.list",
            "assuredoss.*",
            "iam.serviceAccountKeys.create",
            "iam.serviceAccounts.create",
            "iam.serviceAccounts.get",
            "pubsub.schemas.get",
            "pubsub.schemas.list",
            "pubsub.schemas.listRevisions",
            "pubsub.schemas.validate",
            "pubsub.snapshots.get",
            "pubsub.snapshots.list",
            "pubsub.subscriptions.create",
            "pubsub.subscriptions.get",
            "pubsub.subscriptions.list",
            "pubsub.subscriptions.update",
            "pubsub.topics.get",
            "pubsub.topics.list",
            "resourcemanager.organizations.get",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "serviceusage.quotas.get",
            "serviceusage.services.enable",
            "serviceusage.services.get",
            "serviceusage.services.list"
          ],
          "title": "Assured OSS Admin"
        },
        {
          "description": "Access to use Assured OSS and manage configuration.",
          "id": "roles/assuredoss.projectAdmin",
          "is_beta": true,
          "permissions": [
            "artifactregistry.attachments.get",
            "artifactregistry.attachments.list",
            "artifactregistry.dockerimages.*",
            "artifactregistry.files.download",
            "artifactregistry.files.get",
            "artifactregistry.files.list",
            "artifactregistry.locations.*",
            "artifactregistry.mavenartifacts.*",
            "artifactregistry.npmpackages.*",
            "artifactregistry.packages.get",
            "artifactregistry.packages.list",
            "artifactregistry.projectsettings.get",
            "artifactregistry.pythonpackages.*",
            "artifactregistry.repositories.create",
            "artifactregistry.repositories.downloadArtifacts",
            "artifactregistry.repositories.get",
            "artifactregistry.repositories.list",
            "artifactregistry.repositories.listEffectiveTags",
            "artifactregistry.repositories.listTagBindings",
            "artifactregistry.repositories.readViaVirtualRepository",
            "artifactregistry.rules.get",
            "artifactregistry.rules.list",
            "artifactregistry.tags.get",
            "artifactregistry.tags.list",
            "artifactregistry.versions.get",
            "artifactregistry.versions.list",
            "assuredoss.*",
            "iam.serviceAccounts.create",
            "iam.serviceAccounts.get",
            "pubsub.schemas.get",
            "pubsub.schemas.list",
            "pubsub.schemas.listRevisions",
            "pubsub.schemas.validate",
            "pubsub.snapshots.get",
            "pubsub.snapshots.list",
            "pubsub.subscriptions.get",
            "pubsub.subscriptions.list",
            "pubsub.topics.get",
            "pubsub.topics.list",
            "resourcemanager.organizations.get",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "serviceusage.quotas.get",
            "serviceusage.services.enable",
            "serviceusage.services.get",
            "serviceusage.services.list"
          ],
          "title": "Assured OSS Project Admin"
        },
        {
          "description": "Access to use Assured OSS and view Assured OSS configuration.",
          "id": "roles/assuredoss.reader",
          "is_beta": false,
          "permissions": [
            "artifactregistry.attachments.get",
            "artifactregistry.attachments.list",
            "artifactregistry.dockerimages.*",
            "artifactregistry.files.download",
            "artifactregistry.files.get",
            "artifactregistry.files.list",
            "artifactregistry.locations.*",
            "artifactregistry.mavenartifacts.*",
            "artifactregistry.npmpackages.*",
            "artifactregistry.packages.get",
            "artifactregistry.packages.list",
            "artifactregistry.projectsettings.get",
            "artifactregistry.pythonpackages.*",
            "artifactregistry.repositories.downloadArtifacts",
            "artifactregistry.repositories.get",
            "artifactregistry.repositories.list",
            "artifactregistry.repositories.listEffectiveTags",
            "artifactregistry.repositories.listTagBindings",
            "artifactregistry.repositories.readViaVirtualRepository",
            "artifactregistry.rules.get",
            "artifactregistry.rules.list",
            "artifactregistry.tags.get",
            "artifactregistry.tags.list",
            "artifactregistry.versions.get",
            "artifactregistry.versions.list",
            "assuredoss.config.get",
            "assuredoss.locations.*",
            "assuredoss.metadata.*",
            "assuredoss.operations.get",
            "assuredoss.operations.list",
            "pubsub.schemas.get",
            "pubsub.schemas.list",
            "pubsub.schemas.listRevisions",
            "pubsub.schemas.validate",
            "pubsub.snapshots.get",
            "pubsub.snapshots.list",
            "pubsub.subscriptions.get",
            "pubsub.subscriptions.list",
            "pubsub.topics.get",
            "pubsub.topics.list",
            "resourcemanager.organizations.get",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "serviceusage.quotas.get",
            "serviceusage.services.get",
            "serviceusage.services.list"
          ],
          "title": "Assured OSS Reader"
        },
        {
          "description": "Access to use Assured OSS.",
          "id": "roles/assuredoss.user",
          "is_beta": false,
          "permissions": [
            "artifactregistry.attachments.get",
            "artifactregistry.attachments.list",
            "artifactregistry.dockerimages.*",
            "artifactregistry.files.download",
            "artifactregistry.files.get",
            "artifactregistry.files.list",
            "artifactregistry.locations.*",
            "artifactregistry.mavenartifacts.*",
            "artifactregistry.npmpackages.*",
            "artifactregistry.packages.get",
            "artifactregistry.packages.list",
            "artifactregistry.projectsettings.get",
            "artifactregistry.pythonpackages.*",
            "artifactregistry.repositories.downloadArtifacts",
            "artifactregistry.repositories.get",
            "artifactregistry.repositories.list",
            "artifactregistry.repositories.listEffectiveTags",
            "artifactregistry.repositories.listTagBindings",
            "artifactregistry.repositories.readViaVirtualRepository",
            "artifactregistry.rules.get",
            "artifactregistry.rules.list",
            "artifactregistry.tags.get",
            "artifactregistry.tags.list",
            "artifactregistry.versions.get",
            "artifactregistry.versions.list",
            "assuredoss.locations.*",
            "assuredoss.metadata.*",
            "assuredoss.operations.get",
            "assuredoss.operations.list",
            "resourcemanager.organizations.get",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Assured OSS User"
        },
        {
          "description": "Full access to Audit Manager resources.",
          "id": "roles/auditmanager.admin",
          "is_beta": true,
          "permissions": [
            "auditmanager.auditReports.*",
            "auditmanager.auditScopeReports.generate",
            "auditmanager.billingSettings.get",
            "auditmanager.controlReports.*",
            "auditmanager.controls.list",
            "auditmanager.findings.*",
            "auditmanager.locations.*",
            "auditmanager.operations.*",
            "auditmanager.resourceEnrollmentStatuses.*",
            "cloudasset.assets.searchAllResources",
            "resourcemanager.folders.get",
            "resourcemanager.folders.list",
            "resourcemanager.organizations.get",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Audit Manager Admin"
        },
        {
          "description": "Allows creating and viewing an audit report.",
          "id": "roles/auditmanager.auditor",
          "is_beta": true,
          "permissions": [
            "auditmanager.auditReports.*",
            "auditmanager.auditScopeReports.generate",
            "auditmanager.billingSettings.get",
            "auditmanager.controlReports.*",
            "auditmanager.controls.list",
            "auditmanager.findings.*",
            "auditmanager.locations.get",
            "auditmanager.locations.list",
            "auditmanager.operations.*",
            "auditmanager.resourceEnrollmentStatuses.*",
            "cloudasset.assets.searchAllResources",
            "resourcemanager.folders.get",
            "resourcemanager.folders.list",
            "resourcemanager.organizations.get",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Audit Manager Auditor"
        },
        {
          "description": "Full access to Custom Compliance Framework resources.",
          "id": "roles/auditmanager.ccfAdmin",
          "is_beta": true,
          "permissions": [
            "auditmanager.billingSettings.get",
            "auditmanager.customComplianceFrameworks.*",
            "auditmanager.locations.get",
            "auditmanager.locations.list",
            "auditmanager.operations.*",
            "resourcemanager.organizations.get"
          ],
          "title": "Custom Compliance Framework Admin"
        },
        {
          "description": "Allows viewing Custom Compliance Framework resources.",
          "id": "roles/auditmanager.ccfViewer",
          "is_beta": true,
          "permissions": [
            "auditmanager.billingSettings.get",
            "auditmanager.customComplianceFrameworks.get",
            "auditmanager.customComplianceFrameworks.list",
            "auditmanager.locations.get",
            "auditmanager.locations.list",
            "auditmanager.operations.*",
            "resourcemanager.organizations.get"
          ],
          "title": "Custom Compliance Framework Viewer"
        },
        {
          "description": "Access to write metrics for autoscaling site",
          "id": "roles/autoscaling.metricsWriter",
          "is_beta": true,
          "permissions": [
            "autoscaling.sites.writeMetrics"
          ],
          "title": "Autoscaling Metrics Writer"
        },
        {
          "description": "Access to read recommendations from autoscaling site",
          "id": "roles/autoscaling.recommendationsReader",
          "is_beta": true,
          "permissions": [
            "autoscaling.sites.readRecommendations"
          ],
          "title": "Autoscaling Recommendations Reader"
        },
        {
          "description": "Full access to all autoscaling site features",
          "id": "roles/autoscaling.sitesAdmin",
          "is_beta": true,
          "permissions": [
            "autoscaling.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Autoscaling Site Admin"
        },
        {
          "description": "Access to write state for autoscaling site",
          "id": "roles/autoscaling.stateWriter",
          "is_beta": true,
          "permissions": [
            "autoscaling.sites.writeState"
          ],
          "title": "Autoscaling State Writer"
        },
        {
          "description": "Administrator of Batch resources",
          "id": "roles/batch.admin",
          "is_beta": false,
          "permissions": [
            "batch.jobs.*",
            "batch.locations.*",
            "batch.operations.*",
            "batch.resourceAllowances.*",
            "batch.tasks.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Batch Administrator"
        },
        {
          "description": "Reporter of Batch agent states.",
          "id": "roles/batch.agentReporter",
          "is_beta": false,
          "permissions": [
            "batch.states.report"
          ],
          "title": "Batch Agent Reporter"
        },
        {
          "description": "Editor of Batch Jobs",
          "id": "roles/batch.jobsEditor",
          "is_beta": false,
          "permissions": [
            "batch.jobs.*",
            "batch.locations.*",
            "batch.operations.*",
            "batch.tasks.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Batch Job Editor"
        },
        {
          "description": "Viewer of Batch Jobs, Task Groups and Tasks",
          "id": "roles/batch.jobsViewer",
          "is_beta": false,
          "permissions": [
            "batch.jobs.get",
            "batch.jobs.list",
            "batch.locations.*",
            "batch.operations.*",
            "batch.tasks.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Batch Job Viewer"
        },
        {
          "description": "Editor of Batch ResourceAllowances",
          "id": "roles/batch.resourceAllowancesEditor",
          "is_beta": false,
          "permissions": [
            "batch.locations.*",
            "batch.operations.*",
            "batch.resourceAllowances.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Batch ResourceAllowance Editor"
        },
        {
          "description": "Viewer of Batch ResourceAllowances",
          "id": "roles/batch.resourceAllowancesViewer",
          "is_beta": false,
          "permissions": [
            "batch.locations.*",
            "batch.operations.*",
            "batch.resourceAllowances.get",
            "batch.resourceAllowances.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Batch ResourceAllowance Viewer"
        },
        {
          "description": "Provides full access to all BigLake resources.",
          "id": "roles/biglake.admin",
          "is_beta": false,
          "permissions": [
            "biglake.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "BigLake Admin"
        },
        {
          "description": "Provides read-only access to all BigLake resources.",
          "id": "roles/biglake.viewer",
          "is_beta": false,
          "permissions": [
            "biglake.catalogs.get",
            "biglake.catalogs.list",
            "biglake.databases.get",
            "biglake.databases.list",
            "biglake.locks.list",
            "biglake.tables.get",
            "biglake.tables.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "BigLake Viewer"
        },
        {
          "description": "Editor of EDW migration workflows.",
          "id": "roles/bigquerymigration.editor",
          "is_beta": false,
          "permissions": [
            "bigquerymigration.subtasks.*",
            "bigquerymigration.workflows.create",
            "bigquerymigration.workflows.delete",
            "bigquerymigration.workflows.enableAiOutputTypes",
            "bigquerymigration.workflows.enableLineageOutputTypes",
            "bigquerymigration.workflows.enableOutputTypePermissions",
            "bigquerymigration.workflows.get",
            "bigquerymigration.workflows.list",
            "bigquerymigration.workflows.update"
          ],
          "title": "MigrationWorkflow Editor"
        },
        {
          "description": "Orchestrator of EDW migration tasks.",
          "id": "roles/bigquerymigration.orchestrator",
          "is_beta": false,
          "permissions": [
            "bigquerymigration.workflows.orchestrateTask",
            "storage.objects.list"
          ],
          "title": "Task Orchestrator"
        },
        {
          "description": "User of EDW migration interactive SQL translation service.",
          "id": "roles/bigquerymigration.translationUser",
          "is_beta": false,
          "permissions": [
            "bigquerymigration.translation.translate"
          ],
          "title": "Migration Translation User"
        },
        {
          "description": "Viewer of EDW migration MigrationWorkflow.",
          "id": "roles/bigquerymigration.viewer",
          "is_beta": false,
          "permissions": [
            "bigquerymigration.subtasks.*",
            "bigquerymigration.workflows.get",
            "bigquerymigration.workflows.list"
          ],
          "title": "MigrationWorkflow Viewer"
        },
        {
          "description": "Worker that executes EDW migration subtasks.",
          "id": "roles/bigquerymigration.worker",
          "is_beta": false,
          "permissions": [
            "storage.objects.create",
            "storage.objects.get",
            "storage.objects.list"
          ],
          "title": "Task Worker"
        },
        {
          "description": "Full access to Blockchain Node Engine resources.",
          "id": "roles/blockchainnodeengine.admin",
          "is_beta": false,
          "permissions": [
            "blockchainnodeengine.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Blockchain Node Engine Admin"
        },
        {
          "description": "Read-only access to Blockchain Node Engine resources.",
          "id": "roles/blockchainnodeengine.viewer",
          "is_beta": false,
          "permissions": [
            "blockchainnodeengine.blockchainNodes.get",
            "blockchainnodeengine.blockchainNodes.list",
            "blockchainnodeengine.locations.*",
            "blockchainnodeengine.operations.get",
            "blockchainnodeengine.operations.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Blockchain Node Engine Viewer"
        },
        {
          "description": "Full access to Blockchain Validator Manager resources.",
          "id": "roles/blockchainvalidatormanager.admin",
          "is_beta": true,
          "permissions": [
            "blockchainvalidatormanager.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Blockchain Validator Manager Admin"
        },
        {
          "description": "Readonly access to Blockchain Validator Manager resources.",
          "id": "roles/blockchainvalidatormanager.viewer",
          "is_beta": true,
          "permissions": [
            "blockchainvalidatormanager.blockchainValidatorConfigs.get",
            "blockchainvalidatormanager.blockchainValidatorConfigs.list",
            "blockchainvalidatormanager.locations.*",
            "blockchainvalidatormanager.operations.get",
            "blockchainvalidatormanager.operations.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Blockchain Validator Viewer"
        },
        {
          "description": "Read-only access to Capacity Planner usage resources",
          "id": "roles/capacityplanner.viewer",
          "is_beta": true,
          "permissions": [
            "capacityplanner.*",
            "cloudquotas.quotas.get",
            "compute.futureReservations.get",
            "compute.futureReservations.list",
            "compute.reservations.get",
            "compute.reservations.list",
            "monitoring.timeSeries.list",
            "resourcemanager.folders.get",
            "resourcemanager.organizations.get",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "serviceusage.quotas.get",
            "serviceusage.services.get"
          ],
          "title": "Capacity Planner Usage Viewer"
        },
        {
          "description": "This role can view all properties of Patients.",
          "id": "roles/carestudio.viewer",
          "is_beta": false,
          "permissions": [
            "carestudio.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Care Studio Patients Viewer"
        },
        {
          "description": "Admins can view and modify Chronicle service details.",
          "id": "roles/chroniclesm.admin",
          "is_beta": false,
          "permissions": [
            "chroniclesm.*"
          ],
          "title": "Chronicle Service Admin"
        },
        {
          "description": "Viewers can see Chronicle service details but not change them.",
          "id": "roles/chroniclesm.viewer",
          "is_beta": false,
          "permissions": [
            "chroniclesm.gcpAssociations.get",
            "chroniclesm.gcpAssociations.list",
            "chroniclesm.gcpLogFlowFilters.get",
            "chroniclesm.gcpSettings.get"
          ],
          "title": "Chronicle Service Viewer"
        },
        {
          "description": "Read and enumerate locations available for resource creation.",
          "id": "roles/cloud.locationReader",
          "is_beta": true,
          "permissions": [
            "cloud.*"
          ],
          "title": "Location reader"
        },
        {
          "description": "Grants full access to Code Repository Indexes resources.",
          "id": "roles/cloudaicompanion.codeRepositoryIndexesAdmin",
          "is_beta": true,
          "permissions": [
            "cloudaicompanion.codeRepositoryIndexes.*",
            "cloudaicompanion.operations.*",
            "cloudaicompanion.repositoryGroups.create",
            "cloudaicompanion.repositoryGroups.delete",
            "cloudaicompanion.repositoryGroups.get",
            "cloudaicompanion.repositoryGroups.getIamPolicy",
            "cloudaicompanion.repositoryGroups.list",
            "cloudaicompanion.repositoryGroups.setIamPolicy",
            "cloudaicompanion.repositoryGroups.update",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Code Repository Indexes Admin"
        },
        {
          "description": "Grants readonly access to Code Repository Indexes resources.",
          "id": "roles/cloudaicompanion.codeRepositoryIndexesViewer",
          "is_beta": true,
          "permissions": [
            "cloudaicompanion.codeRepositoryIndexes.get",
            "cloudaicompanion.codeRepositoryIndexes.list",
            "cloudaicompanion.operations.get",
            "cloudaicompanion.operations.list",
            "cloudaicompanion.repositoryGroups.get",
            "cloudaicompanion.repositoryGroups.getIamPolicy",
            "cloudaicompanion.repositoryGroups.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Code Repository Indexes Viewer"
        },
        {
          "description": "Grants Read/Use access to the Code Repository Indexes Repository Group.",
          "id": "roles/cloudaicompanion.repositoryGroupsUser",
          "is_beta": true,
          "permissions": [
            "cloudaicompanion.codeRepositoryIndexes.get",
            "cloudaicompanion.repositoryGroups.get",
            "cloudaicompanion.repositoryGroups.getIamPolicy",
            "cloudaicompanion.repositoryGroups.use"
          ],
          "title": "Repository Groups User"
        },
        {
          "description": "Grants read and write access to the Gemini for Cloud setting and their bindings.",
          "id": "roles/cloudaicompanion.settingsAdmin",
          "is_beta": true,
          "permissions": [
            "cloudaicompanion.codeToolsSettings.*",
            "cloudaicompanion.dataSharingWithGoogleSettings.*",
            "cloudaicompanion.geminiGcpEnablementSettings.*",
            "cloudaicompanion.loggingSettings.*",
            "cloudaicompanion.releaseChannelSettings.*",
            "cloudaicompanion.settingBindings.*"
          ],
          "title": "Gemini for Google Cloud Settings Admin"
        },
        {
          "description": "Grants read access to the Gemini for Cloud setting and their bindings.",
          "id": "roles/cloudaicompanion.settingsUser",
          "is_beta": true,
          "permissions": [
            "cloudaicompanion.dataSharingWithGoogleSettings.get",
            "cloudaicompanion.dataSharingWithGoogleSettings.list",
            "cloudaicompanion.geminiGcpEnablementSettings.get",
            "cloudaicompanion.geminiGcpEnablementSettings.list",
            "cloudaicompanion.loggingSettings.get",
            "cloudaicompanion.loggingSettings.list",
            "cloudaicompanion.releaseChannelSettings.get",
            "cloudaicompanion.releaseChannelSettings.list",
            "cloudaicompanion.settingBindings.codeToolsSettingsGet",
            "cloudaicompanion.settingBindings.codeToolsSettingsList",
            "cloudaicompanion.settingBindings.dataSharingWithGoogleSettingsGet",
            "cloudaicompanion.settingBindings.dataSharingWithGoogleSettingsList",
            "cloudaicompanion.settingBindings.geminiGcpEnablementSettingsGet",
            "cloudaicompanion.settingBindings.geminiGcpEnablementSettingsList",
            "cloudaicompanion.settingBindings.loggingSettingsGet",
            "cloudaicompanion.settingBindings.loggingSettingsList",
            "cloudaicompanion.settingBindings.releaseChannelSettingsGet",
            "cloudaicompanion.settingBindings.releaseChannelSettingsList"
          ],
          "title": "Gemini for Google Cloud Settings User"
        },
        {
          "description": "Grants read, write and permission management access to the Topic resource.",
          "id": "roles/cloudaicompanion.topicAdmin",
          "is_beta": true,
          "permissions": [
            "cloudaicompanion.topics.delete",
            "cloudaicompanion.topics.get",
            "cloudaicompanion.topics.getIamPolicy",
            "cloudaicompanion.topics.setIamPolicy",
            "cloudaicompanion.topics.update"
          ],
          "title": "Topic Admin"
        },
        {
          "description": "Grants read-only access to topic resource.",
          "id": "roles/cloudaicompanion.topicReader",
          "is_beta": true,
          "permissions": [
            "cloudaicompanion.topics.get"
          ],
          "title": "Topic Reader"
        },
        {
          "description": "A user who can use Gemini for Google Cloud",
          "id": "roles/cloudaicompanion.user",
          "is_beta": true,
          "permissions": [
            "cloudaicompanion.companions.*",
            "cloudaicompanion.entitlements.get",
            "cloudaicompanion.instances.*",
            "cloudaicompanion.licenses.selfAssign",
            "cloudaicompanion.operations.get",
            "cloudaicompanion.topics.create",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Gemini for Google Cloud User"
        },
        {
          "description": "Full access to Cloud Controls Partner resources.",
          "id": "roles/cloudcontrolspartner.admin",
          "is_beta": false,
          "permissions": [
            "cloudcontrolspartner.accessapprovalrequests.list",
            "cloudcontrolspartner.customers.*",
            "cloudcontrolspartner.ekmconnections.get",
            "cloudcontrolspartner.inspectabilityevents.get",
            "cloudcontrolspartner.partnerpermissions.get",
            "cloudcontrolspartner.partners.get",
            "cloudcontrolspartner.platformcontrols.get",
            "cloudcontrolspartner.violations.list",
            "cloudcontrolspartner.workloads.list"
          ],
          "title": "Cloud Controls Partner Admin"
        },
        {
          "description": "Editor access to Cloud Controls Partner resources.",
          "id": "roles/cloudcontrolspartner.editor",
          "is_beta": false,
          "permissions": [
            "cloudcontrolspartner.*"
          ],
          "title": "Cloud Controls Partner Editor"
        },
        {
          "description": "Readonly access to Cloud Controls Partner inspectability resources.",
          "id": "roles/cloudcontrolspartner.inspectabilityReader",
          "is_beta": false,
          "permissions": [
            "cloudcontrolspartner.customers.get",
            "cloudcontrolspartner.customers.list",
            "cloudcontrolspartner.inspectabilityevents.get",
            "cloudcontrolspartner.platformcontrols.get"
          ],
          "title": "Cloud Controls Partner Inspectability Reader"
        },
        {
          "description": "Read-only access to Cloud Controls Partner monitoring resources.",
          "id": "roles/cloudcontrolspartner.monitoringReader",
          "is_beta": false,
          "permissions": [
            "cloudcontrolspartner.customers.get",
            "cloudcontrolspartner.customers.list",
            "cloudcontrolspartner.violations.*",
            "cloudcontrolspartner.workloads.*"
          ],
          "title": "Cloud Controls Partner Monitoring Reader"
        },
        {
          "description": "Read-only access to Cloud Controls Partner resources.",
          "id": "roles/cloudcontrolspartner.reader",
          "is_beta": false,
          "permissions": [
            "cloudcontrolspartner.accessapprovalrequests.list",
            "cloudcontrolspartner.customers.get",
            "cloudcontrolspartner.customers.list",
            "cloudcontrolspartner.ekmconnections.get",
            "cloudcontrolspartner.inspectabilityevents.get",
            "cloudcontrolspartner.partnerpermissions.get",
            "cloudcontrolspartner.partners.get",
            "cloudcontrolspartner.platformcontrols.get",
            "cloudcontrolspartner.violations.*",
            "cloudcontrolspartner.workloads.*"
          ],
          "title": "Cloud Controls Partner Reader"
        },
        {
          "description": "Administrator of Cloud Optimization AI resources",
          "id": "roles/cloudoptimization.admin",
          "is_beta": false,
          "permissions": [
            "cloudoptimization.*"
          ],
          "title": "Cloud Optimization AI Admin"
        },
        {
          "description": "Editor of Cloud Optimization AI resources",
          "id": "roles/cloudoptimization.editor",
          "is_beta": false,
          "permissions": [
            "cloudoptimization.*"
          ],
          "title": "Cloud Optimization AI Editor"
        },
        {
          "description": "Viewer of Cloud Optimization AI resources",
          "id": "roles/cloudoptimization.viewer",
          "is_beta": false,
          "permissions": [
            "cloudoptimization.operations.get"
          ],
          "title": "Cloud Optimization AI Viewer"
        },
        {
          "description": "Full access to Cloud Quotas resources.",
          "id": "roles/cloudquotas.admin",
          "is_beta": true,
          "permissions": [
            "cloudquotas.*",
            "monitoring.timeSeries.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Cloud Quotas Admin"
        },
        {
          "description": "Readonly access to Cloud Quotas resources.",
          "id": "roles/cloudquotas.viewer",
          "is_beta": true,
          "permissions": [
            "cloudquotas.quotas.get",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Cloud Quotas Viewer"
        },
        {
          "description": "Admin of Commerce Agreement Publishing service",
          "id": "roles/commerceagreementpublishing.admin",
          "is_beta": true,
          "permissions": [
            "commerceagreementpublishing.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Commerce Agreement Publishing Admin"
        },
        {
          "description": "Viewer of Commerce Agreement Publishing service",
          "id": "roles/commerceagreementpublishing.viewer",
          "is_beta": true,
          "permissions": [
            "commerceagreementpublishing.agreements.get",
            "commerceagreementpublishing.agreements.list",
            "commerceagreementpublishing.documents.get",
            "commerceagreementpublishing.documents.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Commerce Agreement Publishing Viewer"
        },
        {
          "description": "Grants the ability to generate an attestation token and run a workload in a VM. Intended for service accounts that run on Confidential Space VMs.",
          "id": "roles/confidentialcomputing.workloadUser",
          "is_beta": false,
          "permissions": [
            "confidentialcomputing.*",
            "logging.logEntries.create"
          ],
          "title": "Confidential Space Workload User"
        },
        {
          "description": "Grants full access to all Config Delivery resources. Lets users create, remove and manage fleet packages and resource bundles.",
          "id": "roles/configdelivery.configDeliveryAdmin",
          "is_beta": true,
          "permissions": [
            "configdelivery.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "ConfigDelivery Admin"
        },
        {
          "description": "Grants read access to all Config Delivery resources. Lets users view existing fleet packages and resource bundles, but they will not be able to make any changes.",
          "id": "roles/configdelivery.configDeliveryViewer",
          "is_beta": true,
          "permissions": [
            "configdelivery.fleetPackages.get",
            "configdelivery.fleetPackages.list",
            "configdelivery.locations.*",
            "configdelivery.operations.get",
            "configdelivery.operations.list",
            "configdelivery.releases.get",
            "configdelivery.releases.list",
            "configdelivery.resourceBundles.get",
            "configdelivery.resourceBundles.list",
            "configdelivery.rollouts.get",
            "configdelivery.rollouts.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "ConfigDelivery Viewer"
        },
        {
          "description": "Grants read and write permissions to Config Delivery ResourceBundles and Releases.",
          "id": "roles/configdelivery.resourceBundlePublisher",
          "is_beta": true,
          "permissions": [
            "configdelivery.locations.*",
            "configdelivery.operations.get",
            "configdelivery.operations.list",
            "configdelivery.releases.create",
            "configdelivery.releases.get",
            "configdelivery.releases.list",
            "configdelivery.releases.update",
            "configdelivery.resourceBundles.create",
            "configdelivery.resourceBundles.get",
            "configdelivery.resourceBundles.list",
            "configdelivery.resourceBundles.update",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Config Delivery Resource Bundle Publisher"
        },
        {
          "description": "Full access to Contact Center AI Platform resources.",
          "id": "roles/contactcenteraiplatform.admin",
          "is_beta": false,
          "permissions": [
            "contactcenteraiplatform.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Contact Center AI Platform Admin"
        },
        {
          "description": "Read-only access to Contact Center AI Platform resources.",
          "id": "roles/contactcenteraiplatform.viewer",
          "is_beta": false,
          "permissions": [
            "contactcenteraiplatform.contactCenters.get",
            "contactcenteraiplatform.contactCenters.list",
            "contactcenteraiplatform.locations.*",
            "contactcenteraiplatform.operations.get",
            "contactcenteraiplatform.operations.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Contact Center AI Platform Viewer"
        },
        {
          "description": "Grants full access to all Contact Center AI Insights resources.",
          "id": "roles/contactcenterinsights.admin",
          "is_beta": true,
          "permissions": [
            "contactcenterinsights.*"
          ],
          "title": "Contact Center AI Insights Admin"
        },
        {
          "description": "Grants read and write access to Authorized resources.",
          "id": "roles/contactcenterinsights.authorizedEditor",
          "is_beta": true,
          "permissions": [
            "contactcenterinsights.authorizedAnalyses.*",
            "contactcenterinsights.authorizedConversations.*",
            "contactcenterinsights.authorizedFeedbackLabels.*",
            "contactcenterinsights.authorizedOperations.*",
            "contactcenterinsights.authorizedViewSets.get",
            "contactcenterinsights.authorizedViews.get"
          ],
          "title": "Contact Center AI Insights authorized editor"
        },
        {
          "description": "Grants read access to Authorized resources.",
          "id": "roles/contactcenterinsights.authorizedViewer",
          "is_beta": true,
          "permissions": [
            "contactcenterinsights.authorizedAnalyses.get",
            "contactcenterinsights.authorizedAnalyses.list",
            "contactcenterinsights.authorizedConversations.get",
            "contactcenterinsights.authorizedConversations.list",
            "contactcenterinsights.authorizedFeedbackLabels.get",
            "contactcenterinsights.authorizedFeedbackLabels.list",
            "contactcenterinsights.authorizedOperations.*",
            "contactcenterinsights.authorizedViewSets.get",
            "contactcenterinsights.authorizedViewSets.list",
            "contactcenterinsights.authorizedViews.get",
            "contactcenterinsights.authorizedViews.list"
          ],
          "title": "Contact Center AI Insights authorized viewer"
        },
        {
          "description": "Grants read and write access to all Contact Center AI Insights resources.",
          "id": "roles/contactcenterinsights.editor",
          "is_beta": false,
          "permissions": [
            "contactcenterinsights.analyses.*",
            "contactcenterinsights.analysisRules.*",
            "contactcenterinsights.authorizedAnalyses.*",
            "contactcenterinsights.authorizedConversations.*",
            "contactcenterinsights.authorizedFeedbackLabels.create",
            "contactcenterinsights.authorizedFeedbackLabels.delete",
            "contactcenterinsights.authorizedFeedbackLabels.get",
            "contactcenterinsights.authorizedFeedbackLabels.list",
            "contactcenterinsights.authorizedFeedbackLabels.update",
            "contactcenterinsights.authorizedOperations.*",
            "contactcenterinsights.authorizedViewSets.*",
            "contactcenterinsights.authorizedViews.create",
            "contactcenterinsights.authorizedViews.delete",
            "contactcenterinsights.authorizedViews.get",
            "contactcenterinsights.authorizedViews.list",
            "contactcenterinsights.authorizedViews.update",
            "contactcenterinsights.conversations.*",
            "contactcenterinsights.faqEntries.*",
            "contactcenterinsights.faqModels.*",
            "contactcenterinsights.feedbackLabels.*",
            "contactcenterinsights.issueModels.*",
            "contactcenterinsights.issues.*",
            "contactcenterinsights.operations.*",
            "contactcenterinsights.phraseMatchers.*",
            "contactcenterinsights.qaQuestionTags.*",
            "contactcenterinsights.qaQuestions.*",
            "contactcenterinsights.qaScorecardRevisions.*",
            "contactcenterinsights.qaScorecards.*",
            "contactcenterinsights.settings.*",
            "contactcenterinsights.views.*",
            "contactcenterinsights.visibilityLabels.list"
          ],
          "title": "Contact Center AI Insights editor"
        },
        {
          "description": "Grants read access to all Contact Center AI Insights resources.",
          "id": "roles/contactcenterinsights.viewer",
          "is_beta": false,
          "permissions": [
            "contactcenterinsights.analyses.get",
            "contactcenterinsights.analyses.list",
            "contactcenterinsights.analysisRules.get",
            "contactcenterinsights.analysisRules.list",
            "contactcenterinsights.assessmentRules.get",
            "contactcenterinsights.assessmentRules.list",
            "contactcenterinsights.authorizedAnalyses.get",
            "contactcenterinsights.authorizedAnalyses.list",
            "contactcenterinsights.authorizedConversations.get",
            "contactcenterinsights.authorizedConversations.list",
            "contactcenterinsights.authorizedFeedbackLabels.get",
            "contactcenterinsights.authorizedFeedbackLabels.list",
            "contactcenterinsights.authorizedOperations.*",
            "contactcenterinsights.authorizedViewSets.get",
            "contactcenterinsights.authorizedViewSets.list",
            "contactcenterinsights.authorizedViews.get",
            "contactcenterinsights.authorizedViews.list",
            "contactcenterinsights.conversations.get",
            "contactcenterinsights.conversations.list",
            "contactcenterinsights.faqEntries.get",
            "contactcenterinsights.faqEntries.list",
            "contactcenterinsights.faqModels.get",
            "contactcenterinsights.faqModels.list",
            "contactcenterinsights.feedbackLabels.download",
            "contactcenterinsights.feedbackLabels.get",
            "contactcenterinsights.feedbackLabels.list",
            "contactcenterinsights.issueModels.get",
            "contactcenterinsights.issueModels.list",
            "contactcenterinsights.issues.get",
            "contactcenterinsights.issues.list",
            "contactcenterinsights.operations.get",
            "contactcenterinsights.operations.list",
            "contactcenterinsights.phraseMatchers.get",
            "contactcenterinsights.phraseMatchers.list",
            "contactcenterinsights.qaQuestions.get",
            "contactcenterinsights.qaQuestions.list",
            "contactcenterinsights.qaScorecardRevisions.get",
            "contactcenterinsights.qaScorecardRevisions.list",
            "contactcenterinsights.qaScorecards.get",
            "contactcenterinsights.qaScorecards.list",
            "contactcenterinsights.settings.get",
            "contactcenterinsights.views.get",
            "contactcenterinsights.views.list",
            "contactcenterinsights.visibilityLabels.list"
          ],
          "title": "Contact Center AI Insights viewer"
        },
        {
          "description": "Read-only access to GKE Security Posture resources.",
          "id": "roles/containersecurity.viewer",
          "is_beta": true,
          "permissions": [
            "container.clusters.list",
            "containersecurity.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "GKE Security Posture Viewer"
        },
        {
          "description": "Grants full access to all the resources in Content Warehouse",
          "id": "roles/contentwarehouse.admin",
          "is_beta": false,
          "permissions": [
            "contentwarehouse.corpora.*",
            "contentwarehouse.dataExportJobs.*",
            "contentwarehouse.documentSchemas.*",
            "contentwarehouse.documents.*",
            "contentwarehouse.locations.*",
            "contentwarehouse.operations.get",
            "contentwarehouse.rawDocuments.*",
            "contentwarehouse.ruleSets.*",
            "contentwarehouse.synonymSets.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Content Warehouse Admin"
        },
        {
          "description": "Grants full access to the document resource in Content Warehouse",
          "id": "roles/contentwarehouse.documentAdmin",
          "is_beta": false,
          "permissions": [
            "contentwarehouse.documentSchemas.get",
            "contentwarehouse.documents.create",
            "contentwarehouse.documents.delete",
            "contentwarehouse.documents.get",
            "contentwarehouse.documents.getIamPolicy",
            "contentwarehouse.documents.setIamPolicy",
            "contentwarehouse.documents.update",
            "contentwarehouse.links.*",
            "contentwarehouse.locations.getStatus",
            "contentwarehouse.rawDocuments.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Content Warehouse Document Admin"
        },
        {
          "description": "Grants access to create document in Content Warehouse",
          "id": "roles/contentwarehouse.documentCreator",
          "is_beta": false,
          "permissions": [
            "contentwarehouse.documentSchemas.get",
            "contentwarehouse.documentSchemas.list",
            "contentwarehouse.documents.create",
            "contentwarehouse.locations.getStatus",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Content Warehouse document creator"
        },
        {
          "description": "Grants access to update document resource in Content Warehouse",
          "id": "roles/contentwarehouse.documentEditor",
          "is_beta": false,
          "permissions": [
            "contentwarehouse.documentSchemas.get",
            "contentwarehouse.documents.get",
            "contentwarehouse.documents.getIamPolicy",
            "contentwarehouse.documents.update",
            "contentwarehouse.links.*",
            "contentwarehouse.locations.getStatus",
            "contentwarehouse.rawDocuments.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Content Warehouse Document Editor"
        },
        {
          "description": "Grants access to view the document schemas in Content Warehouse",
          "id": "roles/contentwarehouse.documentSchemaViewer",
          "is_beta": false,
          "permissions": [
            "contentwarehouse.documentSchemas.get",
            "contentwarehouse.documentSchemas.list",
            "contentwarehouse.locations.getStatus",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Content Warehouse document schema viewer"
        },
        {
          "description": "Grants access to view all the resources in Content Warehouse",
          "id": "roles/contentwarehouse.documentViewer",
          "is_beta": false,
          "permissions": [
            "contentwarehouse.documentSchemas.get",
            "contentwarehouse.documents.get",
            "contentwarehouse.documents.getIamPolicy",
            "contentwarehouse.links.get",
            "contentwarehouse.locations.getStatus",
            "contentwarehouse.rawDocuments.download",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Content Warehouse Viewer"
        },
        {
          "description": "Admin role for Database Center resource data",
          "id": "roles/databasecenter.admin",
          "is_beta": true,
          "permissions": [
            "cloudaicompanion.entitlements.get",
            "databasecenter.*",
            "databasesconsole.locations.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Database Center Admin"
        },
        {
          "description": "Viewer role for Database Center resource data",
          "id": "roles/databasecenter.viewer",
          "is_beta": true,
          "permissions": [
            "cloudaicompanion.entitlements.get",
            "databasecenter.*",
            "databasesconsole.locations.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Database Center Viewer"
        },
        {
          "description": "Viewer role for Database Insights assistant data",
          "id": "roles/databaseinsights.assistantViewer",
          "is_beta": true,
          "permissions": [
            "databaseinsights.performanceIssues.*"
          ],
          "title": "Database Insights assistant viewer"
        },
        {
          "description": "Viewer role for Events Service data",
          "id": "roles/databaseinsights.eventsViewer",
          "is_beta": true,
          "permissions": [
            "databaseinsights.aggregatedEvents.query",
            "databaseinsights.clusterEvents.query",
            "databaseinsights.instanceEvents.query"
          ],
          "title": "Events Service viewer"
        },
        {
          "description": "Viewer role for Database Insights monitoring data",
          "id": "roles/databaseinsights.monitoringViewer",
          "is_beta": true,
          "permissions": [
            "databaseinsights.activeQueries.fetch",
            "databaseinsights.activitySummary.fetch",
            "databaseinsights.aggregatedStats.query",
            "databaseinsights.locations.*",
            "databaseinsights.timeSeries.query",
            "databaseinsights.workloadRecommendations.fetch",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Database Insights monitoring viewer"
        },
        {
          "description": "Admin role for performing Database Insights operations",
          "id": "roles/databaseinsights.operationsAdmin",
          "is_beta": true,
          "permissions": [
            "databaseinsights.activeQuery.terminate"
          ],
          "title": "Database Insights performing operations"
        },
        {
          "description": "Viewer role for Database Insights recommendation data",
          "id": "roles/databaseinsights.recommendationViewer",
          "is_beta": true,
          "permissions": [
            "databaseinsights.locations.*",
            "databaseinsights.recommendations.query",
            "databaseinsights.resourceRecommendations.query",
            "databaseinsights.workloadRecommendations.fetch",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Database Insights recommendation viewer"
        },
        {
          "description": "Viewer role for Database Insights data",
          "id": "roles/databaseinsights.viewer",
          "is_beta": true,
          "permissions": [
            "databaseinsights.activeQueries.fetch",
            "databaseinsights.activitySummary.fetch",
            "databaseinsights.aggregatedStats.query",
            "databaseinsights.locations.*",
            "databaseinsights.performanceIssues.*",
            "databaseinsights.recommendations.query",
            "databaseinsights.resourceRecommendations.query",
            "databaseinsights.timeSeries.query",
            "databaseinsights.workloadRecommendations.fetch",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Database Insights viewer"
        },
        {
          "description": "Full access to Studio Query resources.",
          "id": "roles/databasesconsole.studioQueryAdmin",
          "is_beta": true,
          "permissions": [
            "databasesconsole.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Studio Query Admin"
        },
        {
          "description": "Access to create, update, search and delete studio queries.",
          "id": "roles/databasesconsole.studioQueryUser",
          "is_beta": true,
          "permissions": [
            "databasesconsole.locations.*",
            "databasesconsole.operations.get",
            "databasesconsole.operations.list",
            "databasesconsole.studioQueries.create",
            "databasesconsole.studioQueries.delete",
            "databasesconsole.studioQueries.search",
            "databasesconsole.studioQueries.update",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Studio Query User"
        },
        {
          "description": "Grants full access to all resources in Data Lineage API",
          "id": "roles/datalineage.admin",
          "is_beta": false,
          "permissions": [
            "datalineage.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Data Lineage Administrator"
        },
        {
          "description": "Grants edit access to all resources in Data Lineage API",
          "id": "roles/datalineage.editor",
          "is_beta": false,
          "permissions": [
            "datalineage.events.*",
            "datalineage.locations.searchLinks",
            "datalineage.operations.get",
            "datalineage.processes.create",
            "datalineage.processes.get",
            "datalineage.processes.list",
            "datalineage.processes.update",
            "datalineage.runs.create",
            "datalineage.runs.get",
            "datalineage.runs.list",
            "datalineage.runs.update",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Data Lineage Editor"
        },
        {
          "description": "Grants access to creating all resources in Data Lineage API",
          "id": "roles/datalineage.producer",
          "is_beta": false,
          "permissions": [
            "datalineage.events.create",
            "datalineage.processes.create",
            "datalineage.processes.get",
            "datalineage.processes.update",
            "datalineage.runs.create",
            "datalineage.runs.get",
            "datalineage.runs.update",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Data Lineage Events Producer"
        },
        {
          "description": "Grants read access to all resources in Data Lineage API",
          "id": "roles/datalineage.viewer",
          "is_beta": false,
          "permissions": [
            "datalineage.events.get",
            "datalineage.events.list",
            "datalineage.locations.searchLinks",
            "datalineage.processes.get",
            "datalineage.processes.list",
            "datalineage.runs.get",
            "datalineage.runs.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Data Lineage Viewer"
        },
        {
          "description": "Data processing controls admin who can fully manage data processing controls settings and view all datasource data.",
          "id": "roles/dataprocessing.admin",
          "is_beta": false,
          "permissions": [
            "billing.accounts.get",
            "billing.accounts.list",
            "dataprocessing.*"
          ],
          "title": "Data Processing Controls Resource Admin"
        },
        {
          "description": "Data processing controls data source manager who can get, list, and update the underlying data.",
          "id": "roles/dataprocessing.dataSourceManager",
          "is_beta": false,
          "permissions": [
            "dataprocessing.datasources.list",
            "dataprocessing.datasources.update"
          ],
          "title": "Data Processing Controls Data Source Manager"
        },
        {
          "description": "Grants full access to all Dataproc Resource Manager resources. Intended for users that need to create and delete any Dataproc Resource Manager resources.",
          "id": "roles/dataprocrm.admin",
          "is_beta": true,
          "permissions": [
            "dataprocrm.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Dataproc Resource Manager Admin"
        },
        {
          "description": "Grants read access to all Dataproc Resource Manager resources. Intended for users that need read-only access to Dataproc Resource Manager resources.",
          "id": "roles/dataprocrm.viewer",
          "is_beta": true,
          "permissions": [
            "dataprocrm.locations.*",
            "dataprocrm.nodePools.get",
            "dataprocrm.nodePools.list",
            "dataprocrm.nodes.get",
            "dataprocrm.nodes.list",
            "dataprocrm.nodes.mintOAuthToken",
            "dataprocrm.operations.get",
            "dataprocrm.operations.list",
            "dataprocrm.workloads.get",
            "dataprocrm.workloads.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Dataproc Resource Manager Viewer"
        },
        {
          "description": "Full access to Application Design Center resources.",
          "id": "roles/designcenter.admin",
          "is_beta": true,
          "permissions": [
            "apphub.serviceProjectAttachments.list",
            "designcenter.*",
            "orgpolicy.policy.get",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "storage.folders.*",
            "storage.managedFolders.create",
            "storage.managedFolders.delete",
            "storage.managedFolders.get",
            "storage.managedFolders.list",
            "storage.multipartUploads.*",
            "storage.objects.create",
            "storage.objects.delete",
            "storage.objects.get",
            "storage.objects.list",
            "storage.objects.move",
            "storage.objects.restore",
            "storage.objects.update"
          ],
          "title": "Application Design Center Admin"
        },
        {
          "description": "Admin access to Application.",
          "id": "roles/designcenter.applicationAdmin",
          "is_beta": true,
          "permissions": [
            "apphub.applications.create",
            "apphub.applications.delete",
            "apphub.applications.get",
            "apphub.applications.list",
            "apphub.applications.update",
            "apphub.locations.*",
            "apphub.serviceProjectAttachments.list",
            "config.deployments.get",
            "config.deployments.getIamPolicy",
            "config.deployments.list",
            "config.locations.*",
            "config.operations.get",
            "config.operations.list",
            "config.previews.get",
            "config.previews.list",
            "config.resources.*",
            "config.revisions.get",
            "config.revisions.list",
            "config.terraformversions.*",
            "designcenter.applicationTemplateRevisions.get",
            "designcenter.applicationTemplateRevisions.list",
            "designcenter.applicationTemplates.get",
            "designcenter.applicationTemplates.list",
            "designcenter.applications.*",
            "designcenter.sharedTemplateRevisions.*",
            "designcenter.sharedTemplates.*",
            "designcenter.shares.get",
            "designcenter.shares.list",
            "designcenter.spaces.get",
            "designcenter.spaces.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Application Admin"
        },
        {
          "description": "Read and Write access to Application.",
          "id": "roles/designcenter.applicationEditor",
          "is_beta": true,
          "permissions": [
            "apphub.applications.create",
            "apphub.applications.delete",
            "apphub.applications.get",
            "apphub.applications.list",
            "apphub.applications.update",
            "apphub.locations.*",
            "apphub.serviceProjectAttachments.list",
            "config.deployments.get",
            "config.deployments.getIamPolicy",
            "config.deployments.list",
            "config.locations.*",
            "config.operations.get",
            "config.operations.list",
            "config.previews.get",
            "config.previews.list",
            "config.resources.*",
            "config.revisions.get",
            "config.revisions.list",
            "config.terraformversions.*",
            "designcenter.applicationTemplateRevisions.get",
            "designcenter.applicationTemplateRevisions.list",
            "designcenter.applicationTemplates.get",
            "designcenter.applicationTemplates.list",
            "designcenter.applications.*",
            "designcenter.sharedTemplateRevisions.*",
            "designcenter.sharedTemplates.*",
            "designcenter.shares.get",
            "designcenter.shares.list",
            "designcenter.spaces.get",
            "designcenter.spaces.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Application Editor"
        },
        {
          "description": "Readonly access to Application.",
          "id": "roles/designcenter.applicationViewer",
          "is_beta": true,
          "permissions": [
            "apphub.applications.get",
            "apphub.applications.list",
            "apphub.locations.*",
            "config.deployments.get",
            "config.deployments.getIamPolicy",
            "config.deployments.list",
            "config.locations.*",
            "config.operations.get",
            "config.operations.list",
            "config.previews.get",
            "config.previews.list",
            "config.resources.*",
            "config.revisions.get",
            "config.revisions.list",
            "config.terraformversions.*",
            "designcenter.applicationTemplateRevisions.get",
            "designcenter.applicationTemplateRevisions.list",
            "designcenter.applicationTemplates.get",
            "designcenter.applicationTemplates.list",
            "designcenter.applications.get",
            "designcenter.applications.list",
            "designcenter.sharedTemplateRevisions.*",
            "designcenter.sharedTemplates.*",
            "designcenter.shares.get",
            "designcenter.shares.list",
            "designcenter.spaces.get",
            "designcenter.spaces.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Application Viewer"
        },
        {
          "description": "Readonly access to Application Design Center resources.",
          "id": "roles/designcenter.user",
          "is_beta": true,
          "permissions": [
            "apphub.serviceProjectAttachments.list",
            "designcenter.applicationTemplateRevisions.*",
            "designcenter.applicationTemplates.*",
            "designcenter.applications.get",
            "designcenter.applications.list",
            "designcenter.catalogTemplateRevisions.get",
            "designcenter.catalogTemplateRevisions.list",
            "designcenter.catalogTemplates.get",
            "designcenter.catalogTemplates.list",
            "designcenter.catalogs.get",
            "designcenter.catalogs.list",
            "designcenter.components.*",
            "designcenter.connections.*",
            "designcenter.locations.*",
            "designcenter.operations.get",
            "designcenter.operations.list",
            "designcenter.sharedTemplateRevisions.*",
            "designcenter.sharedTemplates.*",
            "designcenter.shares.get",
            "designcenter.shares.list",
            "designcenter.spaces.get",
            "designcenter.spaces.getIamPolicy",
            "designcenter.spaces.list",
            "orgpolicy.policy.get",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "storage.folders.*",
            "storage.managedFolders.create",
            "storage.managedFolders.delete",
            "storage.managedFolders.get",
            "storage.managedFolders.list",
            "storage.multipartUploads.*",
            "storage.objects.create",
            "storage.objects.delete",
            "storage.objects.get",
            "storage.objects.list",
            "storage.objects.move",
            "storage.objects.restore",
            "storage.objects.update"
          ],
          "title": "Application Design Center User"
        },
        {
          "description": "Readonly access to Application Design Center resources.",
          "id": "roles/designcenter.viewer",
          "is_beta": true,
          "permissions": [
            "designcenter.applicationTemplateRevisions.get",
            "designcenter.applicationTemplateRevisions.list",
            "designcenter.applicationTemplates.get",
            "designcenter.applicationTemplates.list",
            "designcenter.applications.get",
            "designcenter.applications.list",
            "designcenter.catalogTemplateRevisions.get",
            "designcenter.catalogTemplateRevisions.list",
            "designcenter.catalogTemplates.get",
            "designcenter.catalogTemplates.list",
            "designcenter.catalogs.get",
            "designcenter.catalogs.list",
            "designcenter.components.get",
            "designcenter.components.list",
            "designcenter.connections.get",
            "designcenter.connections.list",
            "designcenter.locations.*",
            "designcenter.operations.get",
            "designcenter.operations.list",
            "designcenter.sharedTemplateRevisions.*",
            "designcenter.sharedTemplates.*",
            "designcenter.shares.get",
            "designcenter.shares.list",
            "designcenter.spaces.get",
            "designcenter.spaces.getIamPolicy",
            "designcenter.spaces.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "storage.folders.get",
            "storage.folders.list",
            "storage.managedFolders.get",
            "storage.managedFolders.list",
            "storage.objects.get",
            "storage.objects.list"
          ],
          "title": "Application Design Center Viewer"
        },
        {
          "description": "Full access to Developer Connect resources.",
          "id": "roles/developerconnect.admin",
          "is_beta": true,
          "permissions": [
            "developerconnect.connections.*",
            "developerconnect.gitRepositoryLinks.create",
            "developerconnect.gitRepositoryLinks.delete",
            "developerconnect.gitRepositoryLinks.fetchGitRefs",
            "developerconnect.gitRepositoryLinks.get",
            "developerconnect.gitRepositoryLinks.gitProxyRead",
            "developerconnect.gitRepositoryLinks.gitProxyWrite",
            "developerconnect.gitRepositoryLinks.list",
            "developerconnect.locations.*",
            "developerconnect.operations.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Developer Connect Admin"
        },
        {
          "description": "Grants read-only access to repositories through the Git Proxy.",
          "id": "roles/developerconnect.gitProxyReader",
          "is_beta": true,
          "permissions": [
            "developerconnect.gitRepositoryLinks.gitProxyRead"
          ],
          "title": "Developer Connect Git Proxy Reader"
        },
        {
          "description": "Grants read and write access to repositories through the Git Proxy.",
          "id": "roles/developerconnect.gitProxyUser",
          "is_beta": true,
          "permissions": [
            "developerconnect.gitRepositoryLinks.gitProxyRead",
            "developerconnect.gitRepositoryLinks.gitProxyWrite"
          ],
          "title": "Developer Connect Git Proxy User"
        },
        {
          "description": "Grants read and write access to AccountConnector resources.",
          "id": "roles/developerconnect.oauthAdmin",
          "is_beta": true,
          "permissions": [
            "developerconnect.accountConnectors.*",
            "developerconnect.locations.*",
            "developerconnect.operations.get",
            "developerconnect.operations.list",
            "developerconnect.providers.list",
            "developerconnect.users.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Developer Connect OAuth Admin"
        },
        {
          "description": "Grants read and write access to User resources, and read access to AccountConnectors.",
          "id": "roles/developerconnect.oauthUser",
          "is_beta": true,
          "permissions": [
            "developerconnect.accountConnectors.get",
            "developerconnect.accountConnectors.list",
            "developerconnect.locations.*",
            "developerconnect.operations.get",
            "developerconnect.operations.list",
            "developerconnect.users.deleteSelf",
            "developerconnect.users.fetchAccessToken",
            "developerconnect.users.finishOAuth",
            "developerconnect.users.getSelf",
            "developerconnect.users.startOAuth",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Developer Connect OAuth User"
        },
        {
          "description": "Grants access to Read-Only tokens (both PAT and short-lived). Also grants access to view the git repository link.",
          "id": "roles/developerconnect.readTokenAccessor",
          "is_beta": true,
          "permissions": [
            "developerconnect.connections.get",
            "developerconnect.gitRepositoryLinks.fetchReadToken",
            "developerconnect.gitRepositoryLinks.get"
          ],
          "title": "Developer Connect Read Token Accessor"
        },
        {
          "description": "Grants access to Read/Write and Read-Only tokens (both PAT and short-lived). Also grants access to view the git repository link.",
          "id": "roles/developerconnect.tokenAccessor",
          "is_beta": true,
          "permissions": [
            "developerconnect.connections.get",
            "developerconnect.gitRepositoryLinks.fetchReadToken",
            "developerconnect.gitRepositoryLinks.fetchReadWriteToken",
            "developerconnect.gitRepositoryLinks.get"
          ],
          "title": "Developer Connect Token Accessor"
        },
        {
          "description": "Grants access to view the connection and to the features that interact with the actual repository such as reading content from the repository",
          "id": "roles/developerconnect.user",
          "is_beta": true,
          "permissions": [
            "developerconnect.connections.fetchGitHubInstallations",
            "developerconnect.connections.fetchLinkableGitRepositories",
            "developerconnect.connections.get",
            "developerconnect.connections.list",
            "developerconnect.gitRepositoryLinks.fetchGitRefs",
            "developerconnect.gitRepositoryLinks.get",
            "developerconnect.gitRepositoryLinks.list",
            "developerconnect.locations.*",
            "developerconnect.operations.get",
            "developerconnect.operations.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Developer Connect User"
        },
        {
          "description": "Readonly access to Developer Connect resources.",
          "id": "roles/developerconnect.viewer",
          "is_beta": true,
          "permissions": [
            "developerconnect.connections.get",
            "developerconnect.connections.list",
            "developerconnect.gitRepositoryLinks.get",
            "developerconnect.gitRepositoryLinks.list",
            "developerconnect.locations.*",
            "developerconnect.operations.get",
            "developerconnect.operations.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Developer Connect Viewer"
        },
        {
          "description": "Grants full access to all discoveryengine resources.",
          "id": "roles/discoveryengine.admin",
          "is_beta": false,
          "permissions": [
            "discoveryengine.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Discovery Engine Admin"
        },
        {
          "description": "Grants read and write access to all discovery engine resources.",
          "id": "roles/discoveryengine.editor",
          "is_beta": false,
          "permissions": [
            "discoveryengine.aclConfigs.get",
            "discoveryengine.analytics.*",
            "discoveryengine.answers.get",
            "discoveryengine.branches.*",
            "discoveryengine.cmekConfigs.get",
            "discoveryengine.cmekConfigs.list",
            "discoveryengine.collections.get",
            "discoveryengine.collections.list",
            "discoveryengine.completionConfigs.completeQuery",
            "discoveryengine.completionConfigs.get",
            "discoveryengine.controls.get",
            "discoveryengine.controls.list",
            "discoveryengine.conversations.*",
            "discoveryengine.dataStores.completeQuery",
            "discoveryengine.dataStores.get",
            "discoveryengine.dataStores.list",
            "discoveryengine.dataStores.listCustomModels",
            "discoveryengine.dataStores.trainCustomModel",
            "discoveryengine.documentProcessingConfigs.get",
            "discoveryengine.documents.batchGetDocumentsMetadata",
            "discoveryengine.documents.create",
            "discoveryengine.documents.delete",
            "discoveryengine.documents.get",
            "discoveryengine.documents.import",
            "discoveryengine.documents.list",
            "discoveryengine.documents.update",
            "discoveryengine.engines.get",
            "discoveryengine.engines.list",
            "discoveryengine.engines.pause",
            "discoveryengine.engines.resume",
            "discoveryengine.engines.tune",
            "discoveryengine.evaluations.get",
            "discoveryengine.evaluations.list",
            "discoveryengine.groundingConfigs.check",
            "discoveryengine.models.*",
            "discoveryengine.operations.*",
            "discoveryengine.projects.get",
            "discoveryengine.rankingConfigs.rank",
            "discoveryengine.sampleQueries.*",
            "discoveryengine.sampleQuerySets.*",
            "discoveryengine.schemas.get",
            "discoveryengine.schemas.list",
            "discoveryengine.schemas.preview",
            "discoveryengine.schemas.validate",
            "discoveryengine.servingConfigs.answer",
            "discoveryengine.servingConfigs.get",
            "discoveryengine.servingConfigs.list",
            "discoveryengine.servingConfigs.recommend",
            "discoveryengine.servingConfigs.search",
            "discoveryengine.sessions.*",
            "discoveryengine.siteSearchEngines.get",
            "discoveryengine.targetSites.get",
            "discoveryengine.targetSites.list",
            "discoveryengine.userEvents.create",
            "discoveryengine.userEvents.fetchStats",
            "discoveryengine.userEvents.import",
            "discoveryengine.widgetConfigs.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Discovery Engine Editor"
        },
        {
          "description": "Grants full access to Cloud NotebookLM resources.",
          "id": "roles/discoveryengine.notebookLmOwner",
          "is_beta": true,
          "permissions": [
            "discoveryengine.aclConfigs.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Cloud NotebookLM Admin"
        },
        {
          "description": "Grants user-level access to Cloud NotebookLM resources.",
          "id": "roles/discoveryengine.notebookLmUser",
          "is_beta": true,
          "permissions": [
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Cloud NotebookLM User"
        },
        {
          "description": "Grants user-level access to Discovery Engine resources.",
          "id": "roles/discoveryengine.user",
          "is_beta": true,
          "permissions": [
            "discoveryengine.answers.get",
            "discoveryengine.completionConfigs.completeQuery",
            "discoveryengine.servingConfigs.answer",
            "discoveryengine.servingConfigs.search",
            "discoveryengine.sessions.delete",
            "discoveryengine.sessions.get",
            "discoveryengine.sessions.list",
            "discoveryengine.sessions.update",
            "discoveryengine.userEvents.create",
            "discoveryengine.widgetConfigs.get"
          ],
          "title": "Discovery Engine User"
        },
        {
          "description": "Grants read access to all discovery engine resources.",
          "id": "roles/discoveryengine.viewer",
          "is_beta": false,
          "permissions": [
            "discoveryengine.aclConfigs.get",
            "discoveryengine.analytics.*",
            "discoveryengine.answers.get",
            "discoveryengine.branches.*",
            "discoveryengine.cmekConfigs.get",
            "discoveryengine.cmekConfigs.list",
            "discoveryengine.collections.get",
            "discoveryengine.collections.list",
            "discoveryengine.completionConfigs.completeQuery",
            "discoveryengine.completionConfigs.get",
            "discoveryengine.controls.get",
            "discoveryengine.controls.list",
            "discoveryengine.conversations.converse",
            "discoveryengine.conversations.get",
            "discoveryengine.conversations.list",
            "discoveryengine.dataStores.completeQuery",
            "discoveryengine.dataStores.get",
            "discoveryengine.dataStores.list",
            "discoveryengine.dataStores.listCustomModels",
            "discoveryengine.documentProcessingConfigs.get",
            "discoveryengine.documents.batchGetDocumentsMetadata",
            "discoveryengine.documents.get",
            "discoveryengine.documents.list",
            "discoveryengine.engines.get",
            "discoveryengine.engines.list",
            "discoveryengine.evaluations.get",
            "discoveryengine.evaluations.list",
            "discoveryengine.groundingConfigs.check",
            "discoveryengine.models.get",
            "discoveryengine.models.list",
            "discoveryengine.operations.*",
            "discoveryengine.projects.get",
            "discoveryengine.rankingConfigs.rank",
            "discoveryengine.sampleQueries.get",
            "discoveryengine.sampleQueries.list",
            "discoveryengine.sampleQuerySets.get",
            "discoveryengine.sampleQuerySets.list",
            "discoveryengine.schemas.get",
            "discoveryengine.schemas.list",
            "discoveryengine.schemas.preview",
            "discoveryengine.schemas.validate",
            "discoveryengine.servingConfigs.answer",
            "discoveryengine.servingConfigs.get",
            "discoveryengine.servingConfigs.list",
            "discoveryengine.servingConfigs.recommend",
            "discoveryengine.servingConfigs.search",
            "discoveryengine.sessions.get",
            "discoveryengine.sessions.list",
            "discoveryengine.siteSearchEngines.get",
            "discoveryengine.targetSites.get",
            "discoveryengine.targetSites.list",
            "discoveryengine.userEvents.fetchStats",
            "discoveryengine.widgetConfigs.get",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Discovery Engine Viewer"
        },
        {
          "description": "Full access to Enterprise Purchasing resources.",
          "id": "roles/enterprisepurchasing.admin",
          "is_beta": true,
          "permissions": [
            "enterprisepurchasing.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Enterprise Purchasing Admin"
        },
        {
          "description": "Edit access to Enterprise Purchasing resources.",
          "id": "roles/enterprisepurchasing.editor",
          "is_beta": true,
          "permissions": [
            "enterprisepurchasing.gcveCuds.get",
            "enterprisepurchasing.gcveCuds.list",
            "enterprisepurchasing.gcveNodePricingInfo.list",
            "enterprisepurchasing.locations.*",
            "enterprisepurchasing.operations.get",
            "enterprisepurchasing.operations.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Enterprise Purchasing Editor"
        },
        {
          "description": "Readonly access to Enterprise Purchasing resources.",
          "id": "roles/enterprisepurchasing.viewer",
          "is_beta": true,
          "permissions": [
            "enterprisepurchasing.gcveCuds.get",
            "enterprisepurchasing.gcveCuds.list",
            "enterprisepurchasing.gcveNodePricingInfo.list",
            "enterprisepurchasing.locations.*",
            "enterprisepurchasing.operations.get",
            "enterprisepurchasing.operations.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Enterprise Purchasing Viewer"
        },
        {
          "description": "Full access to all essential contacts",
          "id": "roles/essentialcontacts.admin",
          "is_beta": false,
          "permissions": [
            "essentialcontacts.*"
          ],
          "title": "Essential Contacts Admin"
        },
        {
          "description": "Viewer for all essential contacts",
          "id": "roles/essentialcontacts.viewer",
          "is_beta": false,
          "permissions": [
            "essentialcontacts.contacts.get",
            "essentialcontacts.contacts.list"
          ],
          "title": "Essential Contacts Viewer"
        },
        {
          "description": "Full read/write access to Firebase Cloud Messaging API resources.",
          "id": "roles/firebasecloudmessaging.admin",
          "is_beta": true,
          "permissions": [
            "cloudmessaging.messages.create",
            "fcmdata.deliverydata.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Firebase Cloud Messaging API Admin"
        },
        {
          "description": "Full read/write access to symbol mapping file resources for Firebase Crash Reporting.",
          "id": "roles/firebasecrash.symbolMappingsAdmin",
          "is_beta": false,
          "permissions": [
            "firebase.clients.get",
            "firebase.clients.list",
            "resourcemanager.projects.get"
          ],
          "title": "Firebase Crash Symbol Uploader"
        },
        {
          "description": "Full access to Firebase Data Connect API resources, including data.",
          "id": "roles/firebasedataconnect.admin",
          "is_beta": true,
          "permissions": [
            "firebasedataconnect.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Firebase Data Connect API Admin"
        },
        {
          "description": "Full access to data sources.",
          "id": "roles/firebasedataconnect.dataAdmin",
          "is_beta": true,
          "permissions": [
            "firebasedataconnect.services.executeGraphql",
            "firebasedataconnect.services.executeGraphqlRead"
          ],
          "title": "Firebase Data Connect API Data Admin"
        },
        {
          "description": "Readonly access to data sources.",
          "id": "roles/firebasedataconnect.dataViewer",
          "is_beta": true,
          "permissions": [
            "firebasedataconnect.services.executeGraphqlRead"
          ],
          "title": "Firebase Data Connect API Data Viewer"
        },
        {
          "description": "Readonly access to Firebase Data Connect API resources. Role does not grant access to data.",
          "id": "roles/firebasedataconnect.viewer",
          "is_beta": true,
          "permissions": [
            "firebasedataconnect.connectorRevisions.get",
            "firebasedataconnect.connectorRevisions.list",
            "firebasedataconnect.connectors.get",
            "firebasedataconnect.connectors.list",
            "firebasedataconnect.locations.*",
            "firebasedataconnect.operations.get",
            "firebasedataconnect.operations.list",
            "firebasedataconnect.schemaRevisions.get",
            "firebasedataconnect.schemaRevisions.list",
            "firebasedataconnect.schemas.get",
            "firebasedataconnect.schemas.list",
            "firebasedataconnect.services.get",
            "firebasedataconnect.services.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Firebase Data Connect API Viewer"
        },
        {
          "description": "Full access to GDC Hardware Management resources.",
          "id": "roles/gdchardwaremanagement.admin",
          "is_beta": true,
          "permissions": [
            "gdchardwaremanagement.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "GDC Hardware Management Admin"
        },
        {
          "description": "Create, read, and update access to GDC Hardware Management resources that support those operations. Also grants delete access to HardwareGroup resource.",
          "id": "roles/gdchardwaremanagement.operator",
          "is_beta": true,
          "permissions": [
            "gdchardwaremanagement.changeLogEntries.*",
            "gdchardwaremanagement.comments.*",
            "gdchardwaremanagement.hardware.*",
            "gdchardwaremanagement.hardwareGroups.*",
            "gdchardwaremanagement.locations.*",
            "gdchardwaremanagement.operations.get",
            "gdchardwaremanagement.operations.list",
            "gdchardwaremanagement.orders.create",
            "gdchardwaremanagement.orders.get",
            "gdchardwaremanagement.orders.list",
            "gdchardwaremanagement.orders.update",
            "gdchardwaremanagement.sites.*",
            "gdchardwaremanagement.skus.*",
            "gdchardwaremanagement.zones.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "GDC Hardware Management Operator"
        },
        {
          "description": "Readonly access to GDC Hardware Management resources.",
          "id": "roles/gdchardwaremanagement.reader",
          "is_beta": true,
          "permissions": [
            "gdchardwaremanagement.changeLogEntries.*",
            "gdchardwaremanagement.comments.get",
            "gdchardwaremanagement.comments.list",
            "gdchardwaremanagement.hardware.get",
            "gdchardwaremanagement.hardware.list",
            "gdchardwaremanagement.hardwareGroups.get",
            "gdchardwaremanagement.hardwareGroups.list",
            "gdchardwaremanagement.locations.*",
            "gdchardwaremanagement.operations.get",
            "gdchardwaremanagement.operations.list",
            "gdchardwaremanagement.orders.get",
            "gdchardwaremanagement.orders.list",
            "gdchardwaremanagement.sites.get",
            "gdchardwaremanagement.sites.list",
            "gdchardwaremanagement.skus.*",
            "gdchardwaremanagement.zones.get",
            "gdchardwaremanagement.zones.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "GDC Hardware Management Reader"
        },
        {
          "description": "A user who can use Gemini Cloud Assist",
          "id": "roles/geminicloudassist.user",
          "is_beta": true,
          "permissions": [
            "cloudaicompanion.companions.*",
            "cloudaicompanion.entitlements.get",
            "cloudaicompanion.instances.*",
            "cloudaicompanion.licenses.selfAssign",
            "cloudaicompanion.topics.create",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Gemini Cloud Assist User"
        },
        {
          "description": "Full access to Identity Platform resources.",
          "id": "roles/identityplatform.admin",
          "is_beta": true,
          "permissions": [
            "firebaseauth.*",
            "identitytoolkit.*"
          ],
          "title": "Identity Platform Admin"
        },
        {
          "description": "Read access to Identity Platform resources.",
          "id": "roles/identityplatform.viewer",
          "is_beta": true,
          "permissions": [
            "firebaseauth.configs.get",
            "firebaseauth.users.get",
            "identitytoolkit.tenants.get",
            "identitytoolkit.tenants.getIamPolicy",
            "identitytoolkit.tenants.list"
          ],
          "title": "Identity Platform Viewer"
        },
        {
          "description": "Full access to Identity Toolkit resources.",
          "id": "roles/identitytoolkit.admin",
          "is_beta": false,
          "permissions": [
            "firebaseauth.*",
            "identitytoolkit.*"
          ],
          "title": "Identity Toolkit Admin"
        },
        {
          "description": "Read access to Identity Toolkit resources.",
          "id": "roles/identitytoolkit.viewer",
          "is_beta": false,
          "permissions": [
            "firebaseauth.configs.get",
            "firebaseauth.users.get",
            "identitytoolkit.tenants.get",
            "identitytoolkit.tenants.getIamPolicy",
            "identitytoolkit.tenants.list"
          ],
          "title": "Identity Toolkit Viewer"
        },
        {
          "description": "A user that has full access to all Apigee integrations.",
          "id": "roles/integrations.apigeeIntegrationAdminRole",
          "is_beta": false,
          "permissions": [
            "connectors.actions.*",
            "connectors.connections.executeSqlQuery",
            "connectors.entities.*",
            "connectors.entityTypes.list",
            "integrations.apigeeAuthConfigs.*",
            "integrations.apigeeCertificates.*",
            "integrations.apigeeExecutions.list",
            "integrations.apigeeIntegrationVers.*",
            "integrations.apigeeIntegrations.*",
            "integrations.apigeeSfdcChannels.*",
            "integrations.apigeeSfdcInstances.*",
            "integrations.apigeeSuspensions.*",
            "integrations.authConfigs.*",
            "integrations.certificates.*",
            "integrations.executions.get",
            "integrations.executions.list",
            "integrations.integrationVersions.create",
            "integrations.integrationVersions.delete",
            "integrations.integrationVersions.deploy",
            "integrations.integrationVersions.get",
            "integrations.integrationVersions.list",
            "integrations.integrationVersions.update",
            "integrations.integrations.create",
            "integrations.integrations.delete",
            "integrations.integrations.deploy",
            "integrations.integrations.get",
            "integrations.integrations.invoke",
            "integrations.integrations.list",
            "integrations.integrations.update",
            "integrations.sfdcChannels.*",
            "integrations.sfdcInstances.*",
            "integrations.suspensions.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Apigee Integration Admin"
        },
        {
          "description": "A developer that can deploy/undeploy Apigee integrations to the integration runtime.",
          "id": "roles/integrations.apigeeIntegrationDeployerRole",
          "is_beta": false,
          "permissions": [
            "integrations.apigeeIntegrationVers.deploy",
            "integrations.apigeeIntegrationVers.get",
            "integrations.apigeeIntegrationVers.list",
            "integrations.apigeeIntegrations.list",
            "integrations.integrationVersions.deploy",
            "integrations.integrationVersions.get",
            "integrations.integrationVersions.list",
            "integrations.integrations.deploy",
            "integrations.integrations.get",
            "integrations.integrations.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Apigee Integration Deployer"
        },
        {
          "description": "A developer that can list, create and update Apigee integrations.",
          "id": "roles/integrations.apigeeIntegrationEditorRole",
          "is_beta": false,
          "permissions": [
            "connectors.actions.*",
            "connectors.connections.executeSqlQuery",
            "connectors.entities.*",
            "connectors.entityTypes.list",
            "integrations.apigeeAuthConfigs.create",
            "integrations.apigeeAuthConfigs.get",
            "integrations.apigeeAuthConfigs.list",
            "integrations.apigeeAuthConfigs.update",
            "integrations.apigeeCertificates.create",
            "integrations.apigeeCertificates.get",
            "integrations.apigeeCertificates.list",
            "integrations.apigeeCertificates.update",
            "integrations.apigeeExecutions.list",
            "integrations.apigeeIntegrationVers.*",
            "integrations.apigeeIntegrations.*",
            "integrations.apigeeSfdcChannels.create",
            "integrations.apigeeSfdcChannels.get",
            "integrations.apigeeSfdcChannels.list",
            "integrations.apigeeSfdcChannels.update",
            "integrations.apigeeSfdcInstances.create",
            "integrations.apigeeSfdcInstances.get",
            "integrations.apigeeSfdcInstances.list",
            "integrations.apigeeSfdcInstances.update",
            "integrations.authConfigs.create",
            "integrations.authConfigs.get",
            "integrations.authConfigs.list",
            "integrations.authConfigs.update",
            "integrations.certificates.get",
            "integrations.executions.get",
            "integrations.executions.list",
            "integrations.integrationVersions.create",
            "integrations.integrationVersions.delete",
            "integrations.integrationVersions.deploy",
            "integrations.integrationVersions.get",
            "integrations.integrationVersions.list",
            "integrations.integrationVersions.update",
            "integrations.integrations.create",
            "integrations.integrations.get",
            "integrations.integrations.invoke",
            "integrations.integrations.list",
            "integrations.integrations.update",
            "integrations.sfdcChannels.*",
            "integrations.sfdcInstances.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Apigee Integration Editor"
        },
        {
          "description": "A role that can invoke Apigee integrations.",
          "id": "roles/integrations.apigeeIntegrationInvokerRole",
          "is_beta": false,
          "permissions": [
            "connectors.actions.*",
            "connectors.connections.executeSqlQuery",
            "connectors.entities.*",
            "connectors.entityTypes.list",
            "integrations.apigeeExecutions.list",
            "integrations.apigeeIntegrationVers.get",
            "integrations.apigeeIntegrationVers.list",
            "integrations.apigeeIntegrations.*",
            "integrations.executions.get",
            "integrations.executions.list",
            "integrations.integrationVersions.get",
            "integrations.integrationVersions.invoke",
            "integrations.integrationVersions.list",
            "integrations.integrations.get",
            "integrations.integrations.invoke",
            "integrations.integrations.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Apigee Integration Invoker"
        },
        {
          "description": "A developer that can list and view Apigee integrations.",
          "id": "roles/integrations.apigeeIntegrationsViewer",
          "is_beta": false,
          "permissions": [
            "integrations.apigeeAuthConfigs.list",
            "integrations.apigeeCertificates.list",
            "integrations.apigeeIntegrationVers.get",
            "integrations.apigeeIntegrationVers.list",
            "integrations.apigeeIntegrations.list",
            "integrations.apigeeSfdcChannels.list",
            "integrations.apigeeSfdcInstances.list",
            "integrations.authConfigs.get",
            "integrations.authConfigs.list",
            "integrations.certificates.get",
            "integrations.certificates.list",
            "integrations.executions.get",
            "integrations.executions.list",
            "integrations.integrationVersions.get",
            "integrations.integrationVersions.list",
            "integrations.integrations.get",
            "integrations.integrations.list",
            "integrations.sfdcChannels.list",
            "integrations.sfdcInstances.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Apigee Integration Viewer"
        },
        {
          "description": "A role that can approve / reject Apigee integrations that contain a suspension/wait task.",
          "id": "roles/integrations.apigeeSuspensionResolver",
          "is_beta": false,
          "permissions": [
            "integrations.apigeeSuspensions.*",
            "integrations.suspensions.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Apigee Integration Approver"
        },
        {
          "description": "A developer that can list and view Certificates.",
          "id": "roles/integrations.certificateViewer",
          "is_beta": false,
          "permissions": [
            "integrations.certificates.get",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Certificate Viewer"
        },
        {
          "description": "A user that has full access (CRUD) to all integrations.",
          "id": "roles/integrations.integrationAdmin",
          "is_beta": false,
          "permissions": [
            "integrations.apigeeAuthConfigs.*",
            "integrations.apigeeCertificates.*",
            "integrations.apigeeExecutions.list",
            "integrations.apigeeIntegrationVers.*",
            "integrations.apigeeIntegrations.*",
            "integrations.apigeeSfdcChannels.*",
            "integrations.apigeeSfdcInstances.*",
            "integrations.apigeeSuspensions.*",
            "integrations.authConfigs.*",
            "integrations.certificates.*",
            "integrations.executions.*",
            "integrations.integrationVersions.create",
            "integrations.integrationVersions.delete",
            "integrations.integrationVersions.deploy",
            "integrations.integrationVersions.get",
            "integrations.integrationVersions.list",
            "integrations.integrationVersions.update",
            "integrations.integrations.*",
            "integrations.sfdcChannels.*",
            "integrations.sfdcInstances.*",
            "integrations.suspensions.*",
            "integrations.testCases.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Application Integration Admin"
        },
        {
          "description": "A developer that can deploy/undeploy integrations to the integration runtime.",
          "id": "roles/integrations.integrationDeployer",
          "is_beta": false,
          "permissions": [
            "integrations.apigeeIntegrationVers.deploy",
            "integrations.apigeeIntegrationVers.get",
            "integrations.apigeeIntegrationVers.list",
            "integrations.apigeeIntegrations.list",
            "integrations.integrationVersions.deploy",
            "integrations.integrationVersions.get",
            "integrations.integrationVersions.list",
            "integrations.integrations.deploy",
            "integrations.integrations.get",
            "integrations.integrations.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Application Integration Deployer"
        },
        {
          "description": "A developer that can list, create and update integrations.",
          "id": "roles/integrations.integrationEditor",
          "is_beta": false,
          "permissions": [
            "integrations.apigeeAuthConfigs.create",
            "integrations.apigeeAuthConfigs.get",
            "integrations.apigeeAuthConfigs.list",
            "integrations.apigeeAuthConfigs.update",
            "integrations.apigeeCertificates.create",
            "integrations.apigeeCertificates.get",
            "integrations.apigeeCertificates.list",
            "integrations.apigeeCertificates.update",
            "integrations.apigeeExecutions.list",
            "integrations.apigeeIntegrationVers.*",
            "integrations.apigeeIntegrations.*",
            "integrations.apigeeSfdcChannels.create",
            "integrations.apigeeSfdcChannels.get",
            "integrations.apigeeSfdcChannels.list",
            "integrations.apigeeSfdcChannels.update",
            "integrations.apigeeSfdcInstances.create",
            "integrations.apigeeSfdcInstances.get",
            "integrations.apigeeSfdcInstances.list",
            "integrations.apigeeSfdcInstances.update",
            "integrations.authConfigs.create",
            "integrations.authConfigs.get",
            "integrations.authConfigs.list",
            "integrations.authConfigs.update",
            "integrations.certificates.get",
            "integrations.executions.*",
            "integrations.integrationVersions.create",
            "integrations.integrationVersions.delete",
            "integrations.integrationVersions.deploy",
            "integrations.integrationVersions.get",
            "integrations.integrationVersions.list",
            "integrations.integrationVersions.update",
            "integrations.integrations.create",
            "integrations.integrations.generateOpenApiSpec",
            "integrations.integrations.get",
            "integrations.integrations.invoke",
            "integrations.integrations.list",
            "integrations.integrations.update",
            "integrations.sfdcChannels.*",
            "integrations.sfdcInstances.*",
            "integrations.testCases.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Application Integration Editor"
        },
        {
          "description": "A role that can invoke integrations.",
          "id": "roles/integrations.integrationInvoker",
          "is_beta": false,
          "permissions": [
            "integrations.apigeeExecutions.list",
            "integrations.apigeeIntegrationVers.get",
            "integrations.apigeeIntegrationVers.list",
            "integrations.apigeeIntegrations.*",
            "integrations.executions.*",
            "integrations.integrationVersions.get",
            "integrations.integrationVersions.invoke",
            "integrations.integrationVersions.list",
            "integrations.integrations.get",
            "integrations.integrations.invoke",
            "integrations.integrations.list",
            "integrations.testCases.get",
            "integrations.testCases.invoke",
            "integrations.testCases.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Application Integration Invoker"
        },
        {
          "description": "A developer that can list and view integrations.",
          "id": "roles/integrations.integrationViewer",
          "is_beta": false,
          "permissions": [
            "integrations.apigeeAuthConfigs.list",
            "integrations.apigeeCertificates.list",
            "integrations.apigeeIntegrationVers.get",
            "integrations.apigeeIntegrationVers.list",
            "integrations.apigeeIntegrations.list",
            "integrations.apigeeSfdcChannels.list",
            "integrations.apigeeSfdcInstances.list",
            "integrations.authConfigs.get",
            "integrations.authConfigs.list",
            "integrations.certificates.get",
            "integrations.certificates.list",
            "integrations.executions.get",
            "integrations.executions.list",
            "integrations.integrationVersions.get",
            "integrations.integrationVersions.list",
            "integrations.integrations.generateOpenApiSpec",
            "integrations.integrations.get",
            "integrations.integrations.list",
            "integrations.sfdcChannels.list",
            "integrations.sfdcInstances.list",
            "integrations.testCases.get",
            "integrations.testCases.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Application Integration Viewer"
        },
        {
          "description": "A user that has full access to all Security integrations.",
          "id": "roles/integrations.securityIntegrationAdmin",
          "is_beta": true,
          "permissions": [
            "integrations.securityAuthConfigs.*",
            "integrations.securityExecutions.*",
            "integrations.securityIntegTempVers.*",
            "integrations.securityIntegrationVers.*",
            "integrations.securityIntegrations.*"
          ],
          "title": "Security Integration Admin"
        },
        {
          "description": "A user that has full access (CRUD) to all SFDC instances.",
          "id": "roles/integrations.sfdcInstanceAdmin",
          "is_beta": false,
          "permissions": [
            "integrations.sfdcChannels.*",
            "integrations.sfdcInstances.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Application Integration SFDC Instance Admin"
        },
        {
          "description": "A developer that can list, create and update integrations.",
          "id": "roles/integrations.sfdcInstanceEditor",
          "is_beta": false,
          "permissions": [
            "integrations.sfdcChannels.create",
            "integrations.sfdcChannels.get",
            "integrations.sfdcChannels.list",
            "integrations.sfdcChannels.update",
            "integrations.sfdcInstances.create",
            "integrations.sfdcInstances.get",
            "integrations.sfdcInstances.list",
            "integrations.sfdcInstances.update",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Application Integration SFDC Instance Editor"
        },
        {
          "description": "A developer that can list and view SFDC instances.",
          "id": "roles/integrations.sfdcInstanceViewer",
          "is_beta": false,
          "permissions": [
            "integrations.sfdcChannels.get",
            "integrations.sfdcChannels.list",
            "integrations.sfdcInstances.get",
            "integrations.sfdcInstances.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Application Integration SFDC Instance Viewer"
        },
        {
          "description": "A role that can resolve suspended integrations.",
          "id": "roles/integrations.suspensionResolver",
          "is_beta": false,
          "permissions": [
            "integrations.apigeeSuspensions.*",
            "integrations.suspensions.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Application Integration Approver"
        },
        {
          "description": "This role can perform all account manager related operations",
          "id": "roles/issuerswitch.accountManagerAdmin",
          "is_beta": true,
          "permissions": [
            "issuerswitch.accountManagerTransactions.*",
            "issuerswitch.managedAccounts.*",
            "issuerswitch.operations.get",
            "issuerswitch.operations.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Issuerswitch Account Manager Admin"
        },
        {
          "description": "This role can perform all account manager transactions related operations",
          "id": "roles/issuerswitch.accountManagerTransactionsAdmin",
          "is_beta": true,
          "permissions": [
            "issuerswitch.accountManagerTransactions.*",
            "issuerswitch.operations.get",
            "issuerswitch.operations.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Issuerswitch Account Manager Transactions Admin"
        },
        {
          "description": "This role can view all account manager transactions",
          "id": "roles/issuerswitch.accountManagerTransactionsViewer",
          "is_beta": true,
          "permissions": [
            "issuerswitch.accountManagerTransactions.list",
            "issuerswitch.operations.get",
            "issuerswitch.operations.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Issuerswitch Account Manager Transactions Viewer"
        },
        {
          "description": "Access to all issuer switch roles",
          "id": "roles/issuerswitch.admin",
          "is_beta": true,
          "permissions": [
            "issuerswitch.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Issuerswitch Admin"
        },
        {
          "description": "Full access to issuer switch participants",
          "id": "roles/issuerswitch.issuerParticipantsAdmin",
          "is_beta": true,
          "permissions": [
            "issuerswitch.issuerParticipants.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Issuerswitch Participants Admin"
        },
        {
          "description": "Full access to issuer switch resolutions",
          "id": "roles/issuerswitch.resolutionsAdmin",
          "is_beta": true,
          "permissions": [
            "issuerswitch.complaintTransactions.list",
            "issuerswitch.complaints.*",
            "issuerswitch.disputes.*",
            "issuerswitch.operations.get",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Issuerswitch Resolutions Admin"
        },
        {
          "description": "Full access to issuer switch rules",
          "id": "roles/issuerswitch.rulesAdmin",
          "is_beta": true,
          "permissions": [
            "issuerswitch.ruleMetadata.list",
            "issuerswitch.ruleMetadataValues.*",
            "issuerswitch.rules.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Issuerswitch Rules Admin"
        },
        {
          "description": "This role can view rules and related metadata.",
          "id": "roles/issuerswitch.rulesViewer",
          "is_beta": true,
          "permissions": [
            "issuerswitch.ruleMetadata.list",
            "issuerswitch.ruleMetadataValues.list",
            "issuerswitch.rules.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Issuerswitch Rules Viewer"
        },
        {
          "description": "This role can view all transactions",
          "id": "roles/issuerswitch.transactionsViewer",
          "is_beta": true,
          "permissions": [
            "issuerswitch.complaintTransactions.list",
            "issuerswitch.financialTransactions.list",
            "issuerswitch.mandateTransactions.list",
            "issuerswitch.metadataTransactions.list",
            "issuerswitch.operations.get",
            "issuerswitch.operations.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Issuerswitch Transactions Viewer"
        },
        {
          "description": "Publisher of Kubernetes clusters metadata",
          "id": "roles/kubernetesmetadata.publisher",
          "is_beta": true,
          "permissions": [
            "kubernetesmetadata.*"
          ],
          "title": "Metadata Publisher"
        },
        {
          "description": "Full access to Cloud License Manager resources.",
          "id": "roles/licensemanager.admin",
          "is_beta": false,
          "permissions": [
            "licensemanager.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Cloud License Manager Admin"
        },
        {
          "description": "Readonly access to Cloud License Manager resources.",
          "id": "roles/licensemanager.viewer",
          "is_beta": false,
          "permissions": [
            "licensemanager.configurations.get",
            "licensemanager.configurations.list",
            "licensemanager.instances.*",
            "licensemanager.locations.*",
            "licensemanager.operations.get",
            "licensemanager.operations.list",
            "licensemanager.products.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Cloud License Manager Viewer"
        },
        {
          "description": "Readonly access to Maintenance API resources.",
          "id": "roles/maintenance.viewer",
          "is_beta": true,
          "permissions": [
            "maintenance.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Maintenance API Viewer"
        },
        {
          "description": "Full access to Managed Flink resources.",
          "id": "roles/managedflink.admin",
          "is_beta": true,
          "permissions": [
            "managedflink.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Managed Flink Admin"
        },
        {
          "description": "Full access to Managed Flink Jobs and Sessions and read access to Deployments.",
          "id": "roles/managedflink.developer",
          "is_beta": true,
          "permissions": [
            "managedflink.deployments.get",
            "managedflink.deployments.list",
            "managedflink.jobs.*",
            "managedflink.locations.*",
            "managedflink.operations.get",
            "managedflink.operations.list",
            "managedflink.sessions.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Managed Flink Developer"
        },
        {
          "description": "Readonly access to Managed Flink resources.",
          "id": "roles/managedflink.viewer",
          "is_beta": true,
          "permissions": [
            "managedflink.deployments.get",
            "managedflink.deployments.list",
            "managedflink.jobs.get",
            "managedflink.jobs.list",
            "managedflink.locations.*",
            "managedflink.operations.get",
            "managedflink.operations.list",
            "managedflink.sessions.get",
            "managedflink.sessions.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Managed Flink Viewer"
        },
        {
          "description": "Full access to Managed Kafka resources.",
          "id": "roles/managedkafka.admin",
          "is_beta": false,
          "permissions": [
            "cloudasset.assets.searchAllResources",
            "managedkafka.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "serviceusage.quotas.get",
            "serviceusage.services.get",
            "serviceusage.services.list"
          ],
          "title": "Managed Kafka Admin"
        },
        {
          "description": "Provides access to connect to the Kafka servers in a cluster, i.e. provides Kafka data plane access. Intended for, e.g., producers and consumers.",
          "id": "roles/managedkafka.client",
          "is_beta": false,
          "permissions": [
            "cloudasset.assets.searchAllResources",
            "managedkafka.clusters.attachConnectCluster",
            "managedkafka.clusters.connect",
            "managedkafka.clusters.get",
            "managedkafka.clusters.list",
            "managedkafka.connectClusters.get",
            "managedkafka.connectClusters.list",
            "managedkafka.connectors.get",
            "managedkafka.connectors.list",
            "managedkafka.consumerGroups.*",
            "managedkafka.locations.*",
            "managedkafka.operations.get",
            "managedkafka.operations.list",
            "managedkafka.topics.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "serviceusage.quotas.get",
            "serviceusage.services.get",
            "serviceusage.services.list"
          ],
          "title": "Managed Kafka Client"
        },
        {
          "description": "Provides read and write access to Kafka clusters. Intended for, e.g., IT Departments that provision Kafka clusters, but need not be able to read or modify topics or consumer groups.",
          "id": "roles/managedkafka.clusterEditor",
          "is_beta": false,
          "permissions": [
            "cloudasset.assets.searchAllResources",
            "managedkafka.clusters.create",
            "managedkafka.clusters.delete",
            "managedkafka.clusters.get",
            "managedkafka.clusters.list",
            "managedkafka.clusters.update",
            "managedkafka.connectClusters.get",
            "managedkafka.connectClusters.list",
            "managedkafka.connectors.get",
            "managedkafka.connectors.list",
            "managedkafka.consumerGroups.get",
            "managedkafka.consumerGroups.list",
            "managedkafka.locations.*",
            "managedkafka.operations.get",
            "managedkafka.operations.list",
            "managedkafka.topics.get",
            "managedkafka.topics.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "serviceusage.quotas.get",
            "serviceusage.services.get",
            "serviceusage.services.list"
          ],
          "title": "Managed Kafka Cluster Editor"
        },
        {
          "description": "Provides read and write access to Kafka Connect clusters. Intended for, e.g., IT Departments that provision Kafka Connect clusters, but need not be able to read or modify connectors.",
          "id": "roles/managedkafka.connectClusterEditor",
          "is_beta": true,
          "permissions": [
            "managedkafka.connectClusters.*",
            "managedkafka.connectors.get",
            "managedkafka.connectors.list"
          ],
          "title": "Managed Kafka Connect Cluster Editor"
        },
        {
          "description": "Provides read and write access to connectors. Intended for, e.g., developers who configure and operate connectors.",
          "id": "roles/managedkafka.connectorEditor",
          "is_beta": true,
          "permissions": [
            "cloudasset.assets.searchAllResources",
            "managedkafka.clusters.get",
            "managedkafka.clusters.list",
            "managedkafka.connectClusters.get",
            "managedkafka.connectClusters.list",
            "managedkafka.connectors.*",
            "managedkafka.consumerGroups.get",
            "managedkafka.consumerGroups.list",
            "managedkafka.locations.*",
            "managedkafka.operations.get",
            "managedkafka.operations.list",
            "managedkafka.topics.get",
            "managedkafka.topics.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "serviceusage.quotas.get",
            "serviceusage.services.get",
            "serviceusage.services.list"
          ],
          "title": "Managed Kafka Connector Editor"
        },
        {
          "description": "Provides read and write access to consumer group metadata. Intended for, e.g., developers who configure consumer groups.",
          "id": "roles/managedkafka.consumerGroupEditor",
          "is_beta": false,
          "permissions": [
            "cloudasset.assets.searchAllResources",
            "managedkafka.clusters.get",
            "managedkafka.clusters.list",
            "managedkafka.connectClusters.get",
            "managedkafka.connectClusters.list",
            "managedkafka.connectors.get",
            "managedkafka.connectors.list",
            "managedkafka.consumerGroups.*",
            "managedkafka.locations.*",
            "managedkafka.operations.get",
            "managedkafka.operations.list",
            "managedkafka.topics.get",
            "managedkafka.topics.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "serviceusage.quotas.get",
            "serviceusage.services.get",
            "serviceusage.services.list"
          ],
          "title": "Managed Kafka Consumer Group Editor"
        },
        {
          "description": "Provides read and write access to topic metadata. Intended for, e.g., developers who configure topics.",
          "id": "roles/managedkafka.topicEditor",
          "is_beta": false,
          "permissions": [
            "cloudasset.assets.searchAllResources",
            "managedkafka.clusters.get",
            "managedkafka.clusters.list",
            "managedkafka.connectClusters.get",
            "managedkafka.connectClusters.list",
            "managedkafka.connectors.get",
            "managedkafka.connectors.list",
            "managedkafka.consumerGroups.get",
            "managedkafka.consumerGroups.list",
            "managedkafka.locations.*",
            "managedkafka.operations.get",
            "managedkafka.operations.list",
            "managedkafka.topics.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "serviceusage.quotas.get",
            "serviceusage.services.get",
            "serviceusage.services.list"
          ],
          "title": "Managed Kafka Topic Editor"
        },
        {
          "description": "Readonly access to Managed Kafka resources.",
          "id": "roles/managedkafka.viewer",
          "is_beta": false,
          "permissions": [
            "cloudasset.assets.searchAllResources",
            "managedkafka.clusters.get",
            "managedkafka.clusters.list",
            "managedkafka.connectClusters.get",
            "managedkafka.connectClusters.list",
            "managedkafka.connectors.get",
            "managedkafka.connectors.list",
            "managedkafka.consumerGroups.get",
            "managedkafka.consumerGroups.list",
            "managedkafka.locations.*",
            "managedkafka.operations.get",
            "managedkafka.operations.list",
            "managedkafka.topics.get",
            "managedkafka.topics.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "serviceusage.quotas.get",
            "serviceusage.services.get",
            "serviceusage.services.list"
          ],
          "title": "Managed Kafka Viewer"
        },
        {
          "description": "Access to write Attack Surface Management",
          "id": "roles/mandiant.attackSurfaceManagementEditor",
          "is_beta": true,
          "permissions": [
            "mandiant.genericAttackSurfaceManagements.create",
            "mandiant.genericAttackSurfaceManagements.delete",
            "mandiant.genericAttackSurfaceManagements.update",
            "mandiant.genericPlatforms.create",
            "mandiant.genericPlatforms.delete",
            "mandiant.genericPlatforms.update",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Mandiant Attack Surface Management Editor"
        },
        {
          "description": "Access to read Attack Surface Management",
          "id": "roles/mandiant.attackSurfaceManagementViewer",
          "is_beta": true,
          "permissions": [
            "mandiant.genericAttackSurfaceManagements.get",
            "mandiant.genericPlatforms.get",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Mandiant Attack Surface Management Viewer"
        },
        {
          "description": "Access to write Digital Threat Monitoring",
          "id": "roles/mandiant.digitalThreatMonitoringEditor",
          "is_beta": true,
          "permissions": [
            "mandiant.genericDigitalThreatMonitorings.create",
            "mandiant.genericDigitalThreatMonitorings.update",
            "mandiant.genericPlatforms.create",
            "mandiant.genericPlatforms.update",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Mandiant Digital Threat Monitoring Editor"
        },
        {
          "description": "Access to read Digital Threat Monitoring",
          "id": "roles/mandiant.digitalThreatMonitoringViewer",
          "is_beta": true,
          "permissions": [
            "mandiant.genericDigitalThreatMonitorings.get",
            "mandiant.genericPlatforms.get",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Mandiant Digital Threat Monitoring Viewer"
        },
        {
          "description": "Access to write Expertise On Demand",
          "id": "roles/mandiant.expertiseOnDemandEditor",
          "is_beta": true,
          "permissions": [
            "mandiant.genericExpertiseOnDemands.create",
            "mandiant.genericExpertiseOnDemands.delete",
            "mandiant.genericExpertiseOnDemands.update",
            "mandiant.genericPlatforms.create",
            "mandiant.genericPlatforms.delete",
            "mandiant.genericPlatforms.update",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Mandiant Expertise On Demand Editor"
        },
        {
          "description": "Access to read Expertise On Demand",
          "id": "roles/mandiant.expertiseOnDemandViewer",
          "is_beta": true,
          "permissions": [
            "mandiant.genericExpertiseOnDemands.get",
            "mandiant.genericPlatforms.get",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Mandiant Expertise On Demand Viewer"
        },
        {
          "description": "Access to write Threat Intel",
          "id": "roles/mandiant.threatIntelEditor",
          "is_beta": true,
          "permissions": [
            "mandiant.genericPlatforms.create",
            "mandiant.genericPlatforms.delete",
            "mandiant.genericPlatforms.update",
            "mandiant.genericThreatIntels.create",
            "mandiant.genericThreatIntels.delete",
            "mandiant.genericThreatIntels.update",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Mandiant Threat Intel Editor"
        },
        {
          "description": "Access to read Threat Intel",
          "id": "roles/mandiant.threatIntelViewer",
          "is_beta": true,
          "permissions": [
            "mandiant.genericPlatforms.get",
            "mandiant.genericThreatIntels.get",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Mandiant Threat Intel Viewer"
        },
        {
          "description": "Access to write Validation",
          "id": "roles/mandiant.validationEditor",
          "is_beta": true,
          "permissions": [
            "mandiant.genericPlatforms.create",
            "mandiant.genericPlatforms.delete",
            "mandiant.genericPlatforms.update",
            "mandiant.genericValidations.create",
            "mandiant.genericValidations.delete",
            "mandiant.genericValidations.update",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Mandiant Validation Editor"
        },
        {
          "description": "Access to read Validation",
          "id": "roles/mandiant.validationViewer",
          "is_beta": true,
          "permissions": [
            "mandiant.genericPlatforms.get",
            "mandiant.genericValidations.get",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Mandiant Validation Viewer"
        },
        {
          "description": "Grants read-only access to Mobility Solutions Overages metric data.",
          "id": "roles/mapsanalytics.mobilitySolutionsOverageViewer",
          "is_beta": true,
          "permissions": [
            "mapsanalytics.metricData.queryMobilitySolutionsOverageData",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "serviceusage.services.list"
          ],
          "title": "Mobility Solutions Overages Viewer"
        },
        {
          "description": "Grants read-only access to all of the Maps Analytics resources.",
          "id": "roles/mapsanalytics.viewer",
          "is_beta": true,
          "permissions": [
            "mapsanalytics.metricData.query",
            "mapsanalytics.metricMetadata.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "serviceusage.services.list"
          ],
          "title": "Maps Analytics Viewer"
        },
        {
          "description": "Grants read and write access to all the Maps Platform Datasets API resources",
          "id": "roles/mapsplatformdatasets.admin",
          "is_beta": true,
          "permissions": [
            "mapsadmin.clientStyles.*",
            "mapsplatformdatasets.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Maps Platform Datasets Admin"
        },
        {
          "description": "Grants read-only access to all the Maps Platform Datasets API resources",
          "id": "roles/mapsplatformdatasets.viewer",
          "is_beta": true,
          "permissions": [
            "mapsadmin.clientStyles.get",
            "mapsadmin.clientStyles.list",
            "mapsplatformdatasets.datasets.export",
            "mapsplatformdatasets.datasets.get",
            "mapsplatformdatasets.datasets.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Maps Platform Datasets Viewer"
        },
        {
          "description": "Full access to Marketplace Solutions resources.",
          "id": "roles/marketplacesolutions.admin",
          "is_beta": true,
          "permissions": [
            "marketplacesolutions.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Marketplace Solutions Admin"
        },
        {
          "description": "Edit access to Marketplace Solutions resources.",
          "id": "roles/marketplacesolutions.editor",
          "is_beta": true,
          "permissions": [
            "marketplacesolutions.locations.*",
            "marketplacesolutions.operations.get",
            "marketplacesolutions.operations.list",
            "marketplacesolutions.powerImages.*",
            "marketplacesolutions.powerInstances.get",
            "marketplacesolutions.powerInstances.list",
            "marketplacesolutions.powerInstances.update",
            "marketplacesolutions.powerNetworks.*",
            "marketplacesolutions.powerSshKeys.*",
            "marketplacesolutions.powerVolumes.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Marketplace Solutions Editor"
        },
        {
          "description": "Readonly access to Marketplace Solutions resources.",
          "id": "roles/marketplacesolutions.viewer",
          "is_beta": true,
          "permissions": [
            "marketplacesolutions.locations.*",
            "marketplacesolutions.operations.get",
            "marketplacesolutions.operations.list",
            "marketplacesolutions.powerImages.*",
            "marketplacesolutions.powerInstances.get",
            "marketplacesolutions.powerInstances.list",
            "marketplacesolutions.powerNetworks.*",
            "marketplacesolutions.powerSshKeys.*",
            "marketplacesolutions.powerVolumes.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Marketplace Solutions Viewer"
        },
        {
          "description": "Full access to Memorystore resources.",
          "id": "roles/memorystore.admin",
          "is_beta": false,
          "permissions": [
            "memorystore.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Memorystore Admin"
        },
        {
          "description": "Access to connecting to Memorystore Server db.",
          "id": "roles/memorystore.dbConnectionUser",
          "is_beta": false,
          "permissions": [
            "memorystore.instances.connect"
          ],
          "title": "Memorystore DB Connector User"
        },
        {
          "description": "Readonly access to Memorystore resources.",
          "id": "roles/memorystore.viewer",
          "is_beta": false,
          "permissions": [
            "memorystore.backupCollections.*",
            "memorystore.backups.get",
            "memorystore.backups.list",
            "memorystore.instances.get",
            "memorystore.instances.list",
            "memorystore.locations.*",
            "memorystore.operations.get",
            "memorystore.operations.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Memorystore Viewer"
        },
        {
          "description": "Grants full access to all modelarmor resources. Intended for administrators & owners.",
          "id": "roles/modelarmor.admin",
          "is_beta": false,
          "permissions": [
            "modelarmor.locations.*",
            "modelarmor.templates.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Model Armor Admin"
        },
        {
          "description": "Grants access to use Model Armor Callout service. Intended for users & applications which plan to use Model Armor Callout service.",
          "id": "roles/modelarmor.calloutUser",
          "is_beta": true,
          "permissions": [
            "modelarmor.callouts.invoke",
            "modelarmor.locations.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Model Armor Callout User"
        },
        {
          "description": "Grants full access to all Model Armor Floor Setting resources. Intended for administrators & owners.",
          "id": "roles/modelarmor.floorSettingsAdmin",
          "is_beta": false,
          "permissions": [
            "modelarmor.floorSettings.*",
            "modelarmor.locations.*",
            "resourcemanager.folders.get",
            "resourcemanager.folders.list",
            "resourcemanager.organizations.get",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Model Armor Floor Setting Admin"
        },
        {
          "description": "Grants read access to all Model Armor Floor Setting resources. Intended for viewers.",
          "id": "roles/modelarmor.floorSettingsViewer",
          "is_beta": false,
          "permissions": [
            "modelarmor.floorSettings.get",
            "modelarmor.locations.*",
            "resourcemanager.folders.get",
            "resourcemanager.folders.list",
            "resourcemanager.organizations.get",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Model Armor Floor Setting Viewer"
        },
        {
          "description": "Grants access to sanitize APIs for templates. Intended for users & applications which plan to use a template.",
          "id": "roles/modelarmor.user",
          "is_beta": false,
          "permissions": [
            "modelarmor.locations.*",
            "modelarmor.templates.useToSanitizeModelResponse",
            "modelarmor.templates.useToSanitizeUserPrompt",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Model Armor User"
        },
        {
          "description": "Grants read access to all model armor resources. Intended for viewers.",
          "id": "roles/modelarmor.viewer",
          "is_beta": false,
          "permissions": [
            "modelarmor.locations.*",
            "modelarmor.templates.get",
            "modelarmor.templates.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Model Armor Viewer"
        },
        {
          "description": "Admin access to Google Home Developer Console resources",
          "id": "roles/nestconsole.homeDeveloperAdmin",
          "is_beta": false,
          "permissions": [
            "nestconsole.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Google Home Developer Console Admin"
        },
        {
          "description": "Read-Write access to Google Home Developer Console resources",
          "id": "roles/nestconsole.homeDeveloperEditor",
          "is_beta": false,
          "permissions": [
            "nestconsole.smarthomePreviews.update",
            "nestconsole.smarthomeProjects.get",
            "nestconsole.smarthomeProjects.update",
            "nestconsole.smarthomeVersions.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Google Home Developer Console Editor"
        },
        {
          "description": "Read-only access to Google Home Developer Console resources",
          "id": "roles/nestconsole.homeDeveloperViewer",
          "is_beta": false,
          "permissions": [
            "nestconsole.smarthomeProjects.get",
            "nestconsole.smarthomeVersions.get",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Google Home Developer Console Reader"
        },
        {
          "description": "Full access to Google Cloud NetApp Volumes resources.",
          "id": "roles/netapp.admin",
          "is_beta": true,
          "permissions": [
            "netapp.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Google Cloud NetApp Volumes Admin"
        },
        {
          "description": "Readonly access to Google Cloud NetApp Volumes resources.",
          "id": "roles/netapp.viewer",
          "is_beta": true,
          "permissions": [
            "netapp.activeDirectories.get",
            "netapp.activeDirectories.list",
            "netapp.backupPolicies.get",
            "netapp.backupPolicies.list",
            "netapp.backupVaults.get",
            "netapp.backupVaults.list",
            "netapp.backups.get",
            "netapp.backups.list",
            "netapp.kmsConfigs.get",
            "netapp.kmsConfigs.list",
            "netapp.locations.*",
            "netapp.operations.get",
            "netapp.operations.list",
            "netapp.quotaRules.get",
            "netapp.quotaRules.list",
            "netapp.replications.get",
            "netapp.replications.list",
            "netapp.snapshots.get",
            "netapp.snapshots.list",
            "netapp.storagePools.get",
            "netapp.storagePools.list",
            "netapp.volumes.get",
            "netapp.volumes.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Google Cloud NetApp Volumes Viewer"
        },
        {
          "description": "Read/write access to OAuth config resources",
          "id": "roles/oauthconfig.editor",
          "is_beta": true,
          "permissions": [
            "clientauthconfig.*",
            "firebase.clients.create",
            "firebase.clients.get",
            "firebase.clients.list",
            "firebase.clients.update",
            "firebaseappcheck.resourcePolicies.*",
            "oauthconfig.*"
          ],
          "title": "OAuth Config Editor"
        },
        {
          "description": "Read-only access to OAuth config resources",
          "id": "roles/oauthconfig.viewer",
          "is_beta": true,
          "permissions": [
            "clientauthconfig.brands.get",
            "clientauthconfig.brands.list",
            "clientauthconfig.clients.get",
            "clientauthconfig.clients.list",
            "firebase.clients.get",
            "firebase.clients.list",
            "firebaseappcheck.resourcePolicies.get",
            "oauthconfig.clientpolicy.get",
            "oauthconfig.testusers.get",
            "oauthconfig.verification.get"
          ],
          "title": "OAuth Config Viewer"
        },
        {
          "description": "Grants full access to manage all Oracle Database resources.",
          "id": "roles/oracledatabase.admin",
          "is_beta": false,
          "permissions": [
            "oracledatabase.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Oracle Database@Google Cloud admin"
        },
        {
          "description": "Grants full access to manage all Autonomous Database resources.",
          "id": "roles/oracledatabase.autonomousDatabaseAdmin",
          "is_beta": false,
          "permissions": [
            "oracledatabase.autonomousDatabaseBackups.*",
            "oracledatabase.autonomousDatabaseCharacterSets.list",
            "oracledatabase.autonomousDatabases.*",
            "oracledatabase.autonomousDbVersions.list",
            "oracledatabase.entitlements.list",
            "oracledatabase.locations.*",
            "oracledatabase.operations.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Oracle Database@Google Cloud Autonomous Database Admin"
        },
        {
          "description": "Grants read access to see all Autonomous Database resources.",
          "id": "roles/oracledatabase.autonomousDatabaseViewer",
          "is_beta": false,
          "permissions": [
            "oracledatabase.autonomousDatabaseBackups.get",
            "oracledatabase.autonomousDatabaseBackups.list",
            "oracledatabase.autonomousDatabaseCharacterSets.list",
            "oracledatabase.autonomousDatabases.get",
            "oracledatabase.autonomousDatabases.list",
            "oracledatabase.autonomousDbVersions.list",
            "oracledatabase.entitlements.list",
            "oracledatabase.locations.*",
            "oracledatabase.operations.get",
            "oracledatabase.operations.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Oracle Database@Google Cloud Autonomous Database Viewer"
        },
        {
          "description": "Grants full access to manage all Exadata Infrastructure resources.",
          "id": "roles/oracledatabase.cloudExadataInfrastructureAdmin",
          "is_beta": false,
          "permissions": [
            "oracledatabase.cloudExadataInfrastructures.create",
            "oracledatabase.cloudExadataInfrastructures.delete",
            "oracledatabase.cloudExadataInfrastructures.get",
            "oracledatabase.cloudExadataInfrastructures.list",
            "oracledatabase.cloudExadataInfrastructures.update",
            "oracledatabase.dbServers.list",
            "oracledatabase.dbSystemShapes.list",
            "oracledatabase.entitlements.list",
            "oracledatabase.giVersions.list",
            "oracledatabase.locations.*",
            "oracledatabase.operations.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Oracle Database@Google Cloud Exadata Infrastructure Admin"
        },
        {
          "description": "Grants read access to see all Exadata Infrastructure resources.",
          "id": "roles/oracledatabase.cloudExadataInfrastructureViewer",
          "is_beta": false,
          "permissions": [
            "oracledatabase.cloudExadataInfrastructures.get",
            "oracledatabase.cloudExadataInfrastructures.list",
            "oracledatabase.dbServers.list",
            "oracledatabase.dbSystemShapes.list",
            "oracledatabase.entitlements.list",
            "oracledatabase.giVersions.list",
            "oracledatabase.locations.*",
            "oracledatabase.operations.get",
            "oracledatabase.operations.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Oracle Database@Google Cloud Exadata Infrastructure Viewer"
        },
        {
          "description": "Grants full access to manage all VM Cluster resources.",
          "id": "roles/oracledatabase.cloudVmClusterAdmin",
          "is_beta": false,
          "permissions": [
            "oracledatabase.cloudExadataInfrastructures.list",
            "oracledatabase.cloudExadataInfrastructures.use",
            "oracledatabase.cloudVmClusters.*",
            "oracledatabase.dbNodes.list",
            "oracledatabase.dbServers.list",
            "oracledatabase.entitlements.list",
            "oracledatabase.giVersions.list",
            "oracledatabase.locations.*",
            "oracledatabase.operations.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Oracle Database@Google Cloud VM Cluster Admin"
        },
        {
          "description": "Grants read access to see all VM Cluster resources.",
          "id": "roles/oracledatabase.cloudVmClusterViewer",
          "is_beta": false,
          "permissions": [
            "oracledatabase.cloudVmClusters.get",
            "oracledatabase.cloudVmClusters.list",
            "oracledatabase.dbNodes.list",
            "oracledatabase.entitlements.list",
            "oracledatabase.locations.*",
            "oracledatabase.operations.get",
            "oracledatabase.operations.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Oracle Database@Google Cloud VM Cluster Viewer"
        },
        {
          "description": "Grants view access to all Oracle Database resources.",
          "id": "roles/oracledatabase.viewer",
          "is_beta": false,
          "permissions": [
            "oracledatabase.autonomousDatabaseBackups.get",
            "oracledatabase.autonomousDatabaseBackups.list",
            "oracledatabase.autonomousDatabaseCharacterSets.list",
            "oracledatabase.autonomousDatabases.get",
            "oracledatabase.autonomousDatabases.list",
            "oracledatabase.autonomousDbVersions.list",
            "oracledatabase.cloudExadataInfrastructures.get",
            "oracledatabase.cloudExadataInfrastructures.list",
            "oracledatabase.cloudVmClusters.get",
            "oracledatabase.cloudVmClusters.list",
            "oracledatabase.dbNodes.list",
            "oracledatabase.dbServers.list",
            "oracledatabase.dbSystemShapes.list",
            "oracledatabase.entitlements.list",
            "oracledatabase.giVersions.list",
            "oracledatabase.locations.*",
            "oracledatabase.operations.get",
            "oracledatabase.operations.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Oracle Database@Google Cloud viewer"
        },
        {
          "description": "Full access to Parallelstore resources.",
          "id": "roles/parallelstore.admin",
          "is_beta": false,
          "permissions": [
            "parallelstore.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Parallelstore Admin"
        },
        {
          "description": "Readonly access to Parallelstore resources.",
          "id": "roles/parallelstore.viewer",
          "is_beta": false,
          "permissions": [
            "parallelstore.instances.get",
            "parallelstore.instances.list",
            "parallelstore.locations.*",
            "parallelstore.operations.get",
            "parallelstore.operations.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Parallelstore Viewer"
        },
        {
          "description": "Grants full access to all Parameter Manager resources. Intended for project admins & owners who need to perform all administrative tasks.",
          "id": "roles/parametermanager.admin",
          "is_beta": false,
          "permissions": [
            "parametermanager.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Parameter Manager Admin"
        },
        {
          "description": "Grants read access to ParameterManager ParameterVersion resources. Intended for users & applications that need to perform read operations on ParameterVersion only.",
          "id": "roles/parametermanager.parameterAccessor",
          "is_beta": false,
          "permissions": [
            "parametermanager.locations.*",
            "parametermanager.parameterVersions.render",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Parameter Manager Parameter Accessor"
        },
        {
          "description": "Grants create access to Parameter Manager ParameterVersion resources. Intended for users & applications that need to perform create operations on ParameterVersions only.",
          "id": "roles/parametermanager.parameterVersionAdder",
          "is_beta": false,
          "permissions": [
            "parametermanager.locations.*",
            "parametermanager.parameterVersions.create",
            "parametermanager.parameters.get",
            "parametermanager.parameters.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Parameter Manager Parameter Version Adder"
        },
        {
          "description": "Grants read & write access to all Parameter Manager ParameterVersion resources. Intended for users & applications that need to view Parameters & perform create/read/update/delete/list operations on ParameterVersions only.",
          "id": "roles/parametermanager.parameterVersionManager",
          "is_beta": false,
          "permissions": [
            "parametermanager.locations.*",
            "parametermanager.parameterVersions.create",
            "parametermanager.parameterVersions.delete",
            "parametermanager.parameterVersions.get",
            "parametermanager.parameterVersions.list",
            "parametermanager.parameterVersions.update",
            "parametermanager.parameters.get",
            "parametermanager.parameters.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Parameter Manager Parameter Version Manager"
        },
        {
          "description": "Grants read access to Parameter Manager Parameter & ParameterVersion resources. Intended for users & applications that need to perform read/list operations on Parameters  & ParameterVersions only.",
          "id": "roles/parametermanager.parameterViewer",
          "is_beta": false,
          "permissions": [
            "parametermanager.locations.*",
            "parametermanager.parameterVersions.get",
            "parametermanager.parameterVersions.list",
            "parametermanager.parameters.get",
            "parametermanager.parameters.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Parameter Manager Parameter Viewer"
        },
        {
          "description": "Full access to all Payments Reseller resources, including subscriptions, products and promotions",
          "id": "roles/paymentsresellersubscription.partnerAdmin",
          "is_beta": true,
          "permissions": [
            "paymentsresellersubscription.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Payments Reseller Admin"
        },
        {
          "description": "Read access to all Payments Reseller resources, including subscriptions, products and promotions",
          "id": "roles/paymentsresellersubscription.partnerViewer",
          "is_beta": true,
          "permissions": [
            "paymentsresellersubscription.products.list",
            "paymentsresellersubscription.promotions.list",
            "paymentsresellersubscription.subscriptions.get",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Payments Reseller Viewer"
        },
        {
          "description": "Read access to Payments Reseller Product resource",
          "id": "roles/paymentsresellersubscription.productViewer",
          "is_beta": true,
          "permissions": [
            "paymentsresellersubscription.products.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Payments Reseller Products Viewer"
        },
        {
          "description": "Read access to Payments Reseller Promotion resource",
          "id": "roles/paymentsresellersubscription.promotionViewer",
          "is_beta": true,
          "permissions": [
            "paymentsresellersubscription.promotions.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Payments Reseller Promotions Viewer"
        },
        {
          "description": "Write access to Payments Reseller Subscription resource",
          "id": "roles/paymentsresellersubscription.subscriptionEditor",
          "is_beta": true,
          "permissions": [
            "paymentsresellersubscription.subscriptions.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Payments Reseller Subscriptions Editor"
        },
        {
          "description": "Read access to Payments Reseller Subscription resource",
          "id": "roles/paymentsresellersubscription.subscriptionViewer",
          "is_beta": true,
          "permissions": [
            "paymentsresellersubscription.subscriptions.get",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Payments Reseller Subscriptions Viewer"
        },
        {
          "description": "Editor of UserSessions for a Payments Partner",
          "id": "roles/paymentsresellersubscription.userSessionEditor",
          "is_beta": true,
          "permissions": [
            "paymentsresellersubscription.userSessions.generate"
          ],
          "title": "Payments Partner UserSessions Editor"
        },
        {
          "description": "Viewer user that can read all activity analysis.",
          "id": "roles/policyanalyzer.activityAnalysisViewer",
          "is_beta": true,
          "permissions": [
            "policyanalyzer.*"
          ],
          "title": "Activity Analysis Viewer"
        },
        {
          "description": "Grants the ability to enable and disable the usage of the policy remediator for the organization",
          "id": "roles/policyremediatormanager.policyRemediatorAdmin",
          "is_beta": true,
          "permissions": [
            "policyremediatormanager.*"
          ],
          "title": "Policy Remediator Admin"
        },
        {
          "description": "Grants the ability to read/view the state of the policy remediator for the organization",
          "id": "roles/policyremediatormanager.policyRemediatorReader",
          "is_beta": true,
          "permissions": [
            "policyremediatormanager.locations.*",
            "policyremediatormanager.operations.get",
            "policyremediatormanager.operations.list",
            "policyremediatormanager.remediatorServices.get"
          ],
          "title": "Policy Remediator Reader"
        },
        {
          "description": "Admin user that can run and access replays.",
          "id": "roles/policysimulator.admin",
          "is_beta": true,
          "permissions": [
            "policysimulator.accessPolicySimulationResults.list",
            "policysimulator.accessPolicySimulations.*",
            "policysimulator.replayResults.list",
            "policysimulator.replays.*"
          ],
          "title": "Simulator Admin"
        },
        {
          "description": "OrgPolicy Admin that can run and access simulations.",
          "id": "roles/policysimulator.orgPolicyAdmin",
          "is_beta": true,
          "permissions": [
            "cloudasset.assets.analyzeOrgPolicy",
            "cloudasset.assets.exportResource",
            "cloudasset.assets.listResource",
            "cloudasset.assets.searchAllResources",
            "orgpolicy.customConstraints.get",
            "orgpolicy.customConstraints.list",
            "orgpolicy.policies.list",
            "orgpolicy.policy.get",
            "policysimulator.orgPolicyViolations.list",
            "policysimulator.orgPolicyViolationsPreviews.*",
            "resourcemanager.organizations.get"
          ],
          "title": "OrgPolicy Simulator Admin"
        },
        {
          "description": "This role can create a new externalAccountKey resource.",
          "id": "roles/publicca.externalAccountKeyCreator",
          "is_beta": true,
          "permissions": [
            "publicca.externalAccountKeys.create",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "External Account Key Creator"
        },
        {
          "description": "Full access to publication reader resources",
          "id": "roles/readerrevenuesubscriptionlinking.admin",
          "is_beta": false,
          "permissions": [
            "readerrevenuesubscriptionlinking.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Subscription Linking Admin"
        },
        {
          "description": "This role can view all publication reader entitlements",
          "id": "roles/readerrevenuesubscriptionlinking.entitlementsViewer",
          "is_beta": false,
          "permissions": [
            "readerrevenuesubscriptionlinking.readerEntitlements.get"
          ],
          "title": "Subscription Linking Entitlements Viewer"
        },
        {
          "description": "This role can view all publication reader resources",
          "id": "roles/readerrevenuesubscriptionlinking.viewer",
          "is_beta": false,
          "permissions": [
            "readerrevenuesubscriptionlinking.readerEntitlements.get",
            "readerrevenuesubscriptionlinking.readers.get",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Subscription Linking Viewer"
        },
        {
          "description": "Exporter of Recommendations",
          "id": "roles/recommender.exporter",
          "is_beta": false,
          "permissions": [
            "recommender.resources.export"
          ],
          "title": "Recommendations Exporter"
        },
        {
          "description": "Remote Build Execution Action Cache Writer",
          "id": "roles/remotebuildexecution.actionCacheWriter",
          "is_beta": true,
          "permissions": [
            "remotebuildexecution.actions.set",
            "remotebuildexecution.blobs.create"
          ],
          "title": "Remote Build Execution Action Cache Writer"
        },
        {
          "description": "Remote Build Execution Artifact Admin",
          "id": "roles/remotebuildexecution.artifactAdmin",
          "is_beta": true,
          "permissions": [
            "remotebuildexecution.actions.create",
            "remotebuildexecution.actions.delete",
            "remotebuildexecution.actions.get",
            "remotebuildexecution.blobs.*",
            "remotebuildexecution.logstreams.*"
          ],
          "title": "Remote Build Execution Artifact Admin"
        },
        {
          "description": "Remote Build Execution Artifact Creator",
          "id": "roles/remotebuildexecution.artifactCreator",
          "is_beta": true,
          "permissions": [
            "remotebuildexecution.actions.create",
            "remotebuildexecution.actions.get",
            "remotebuildexecution.blobs.*",
            "remotebuildexecution.logstreams.*"
          ],
          "title": "Remote Build Execution Artifact Creator"
        },
        {
          "description": "Remote Build Execution Artifact Viewer",
          "id": "roles/remotebuildexecution.artifactViewer",
          "is_beta": true,
          "permissions": [
            "remotebuildexecution.actions.get",
            "remotebuildexecution.blobs.get",
            "remotebuildexecution.logstreams.get"
          ],
          "title": "Remote Build Execution Artifact Viewer"
        },
        {
          "description": "Remote Build Execution Configuration Admin",
          "id": "roles/remotebuildexecution.configurationAdmin",
          "is_beta": true,
          "permissions": [
            "remotebuildexecution.instances.*",
            "remotebuildexecution.workerpools.*"
          ],
          "title": "Remote Build Execution Configuration Admin"
        },
        {
          "description": "Remote Build Execution Configuration Viewer",
          "id": "roles/remotebuildexecution.configurationViewer",
          "is_beta": true,
          "permissions": [
            "remotebuildexecution.instances.get",
            "remotebuildexecution.instances.list",
            "remotebuildexecution.workerpools.get",
            "remotebuildexecution.workerpools.list"
          ],
          "title": "Remote Build Execution Configuration Viewer"
        },
        {
          "description": "Remote Build Execution Logstream Writer",
          "id": "roles/remotebuildexecution.logstreamWriter",
          "is_beta": true,
          "permissions": [
            "remotebuildexecution.logstreams.create",
            "remotebuildexecution.logstreams.update"
          ],
          "title": "Remote Build Execution Logstream Writer"
        },
        {
          "description": "Remote Build Execution Reservation Admin",
          "id": "roles/remotebuildexecution.reservationAdmin",
          "is_beta": true,
          "permissions": [
            "remotebuildexecution.actions.create",
            "remotebuildexecution.actions.delete",
            "remotebuildexecution.actions.get"
          ],
          "title": "Remote Build Execution Reservation Admin"
        },
        {
          "description": "Remote Build Execution Worker",
          "id": "roles/remotebuildexecution.worker",
          "is_beta": true,
          "permissions": [
            "remotebuildexecution.actions.update",
            "remotebuildexecution.blobs.*",
            "remotebuildexecution.botsessions.*",
            "remotebuildexecution.logstreams.create",
            "remotebuildexecution.logstreams.update"
          ],
          "title": "Remote Build Execution Worker"
        },
        {
          "description": "Full access to Retail api resources.",
          "id": "roles/retail.admin",
          "is_beta": false,
          "permissions": [
            "automlrecommendations.apiKeys.create",
            "automlrecommendations.apiKeys.delete",
            "automlrecommendations.catalogItems.*",
            "automlrecommendations.catalogs.*",
            "automlrecommendations.eventStores.getStats",
            "automlrecommendations.events.create",
            "automlrecommendations.events.list",
            "automlrecommendations.events.purge",
            "automlrecommendations.events.rejoin",
            "automlrecommendations.placements.*",
            "automlrecommendations.recommendations.*",
            "retail.alertConfigs.*",
            "retail.attributesConfigs.*",
            "retail.branches.*",
            "retail.catalogs.*",
            "retail.controls.*",
            "retail.experiments.*",
            "retail.models.*",
            "retail.operations.*",
            "retail.placements.*",
            "retail.products.*",
            "retail.retailProjects.*",
            "retail.servingConfigs.*",
            "retail.userEvents.*"
          ],
          "title": "Retail Admin"
        },
        {
          "description": "Full access to Retail api resources except purge, rejoin, and setSponsorship.",
          "id": "roles/retail.editor",
          "is_beta": false,
          "permissions": [
            "automlrecommendations.apiKeys.create",
            "automlrecommendations.apiKeys.delete",
            "automlrecommendations.catalogItems.*",
            "automlrecommendations.catalogs.*",
            "automlrecommendations.eventStores.getStats",
            "automlrecommendations.events.create",
            "automlrecommendations.events.list",
            "automlrecommendations.placements.*",
            "automlrecommendations.recommendations.*",
            "retail.alertConfigs.*",
            "retail.attributesConfigs.addCatalogAttribute",
            "retail.attributesConfigs.exportCatalogAttributes",
            "retail.attributesConfigs.get",
            "retail.attributesConfigs.importCatalogAttributes",
            "retail.attributesConfigs.replaceCatalogAttribute",
            "retail.attributesConfigs.update",
            "retail.branches.*",
            "retail.catalogs.*",
            "retail.controls.*",
            "retail.experiments.*",
            "retail.models.*",
            "retail.operations.*",
            "retail.placements.*",
            "retail.products.create",
            "retail.products.delete",
            "retail.products.export",
            "retail.products.get",
            "retail.products.import",
            "retail.products.list",
            "retail.products.update",
            "retail.retailProjects.get",
            "retail.servingConfigs.*",
            "retail.userEvents.create",
            "retail.userEvents.import"
          ],
          "title": "Retail Editor"
        },
        {
          "description": "Grants access and approval rights to MerchantControls in the merchant console.",
          "id": "roles/retail.merchantApprover",
          "is_beta": true,
          "permissions": [
            "retail.attributesConfigs.get",
            "retail.merchantControls.*",
            "retail.servingConfigs.list",
            "retail.servingConfigs.search"
          ],
          "title": "Retail Merchant Approver"
        },
        {
          "description": "Grants access to own MerchantControls in the merchant console.",
          "id": "roles/retail.merchantCreator",
          "is_beta": true,
          "permissions": [
            "retail.attributesConfigs.get",
            "retail.merchantControls.creatorCreate",
            "retail.merchantControls.creatorDelete",
            "retail.merchantControls.creatorGet",
            "retail.merchantControls.creatorList",
            "retail.merchantControls.creatorSubmit",
            "retail.merchantControls.creatorUpdate",
            "retail.servingConfigs.search"
          ],
          "title": "Retail Merchant Creator"
        },
        {
          "description": "Grants access to read all resources in Retail.",
          "id": "roles/retail.viewer",
          "is_beta": false,
          "permissions": [
            "automlrecommendations.catalogItems.get",
            "automlrecommendations.catalogItems.list",
            "automlrecommendations.catalogs.getStats",
            "automlrecommendations.catalogs.list",
            "automlrecommendations.eventStores.getStats",
            "automlrecommendations.events.list",
            "automlrecommendations.placements.getStats",
            "automlrecommendations.placements.list",
            "automlrecommendations.recommendations.list",
            "retail.alertConfigs.get",
            "retail.attributesConfigs.exportCatalogAttributes",
            "retail.attributesConfigs.get",
            "retail.branches.*",
            "retail.catalogs.completeQuery",
            "retail.catalogs.exportAnalyticsMetrics",
            "retail.catalogs.get",
            "retail.catalogs.list",
            "retail.controls.export",
            "retail.controls.get",
            "retail.controls.list",
            "retail.experiments.get",
            "retail.experiments.list",
            "retail.experiments.loadExperimentLookerDashboard",
            "retail.experiments.queryTrafficMetrics",
            "retail.models.get",
            "retail.models.list",
            "retail.operations.*",
            "retail.placements.*",
            "retail.products.export",
            "retail.products.get",
            "retail.products.list",
            "retail.retailProjects.get",
            "retail.servingConfigs.get",
            "retail.servingConfigs.list",
            "retail.servingConfigs.predict",
            "retail.servingConfigs.search"
          ],
          "title": "Retail Viewer"
        },
        {
          "description": "Read/write access to RISC config resources.",
          "id": "roles/riscconfigs.admin",
          "is_beta": true,
          "permissions": [
            "clientauthconfig.clients.list",
            "riscconfigurationservice.*"
          ],
          "title": "RISC Configuration Admin"
        },
        {
          "description": "Read-only access to RISC config resources.",
          "id": "roles/riscconfigs.viewer",
          "is_beta": true,
          "permissions": [
            "clientauthconfig.clients.list",
            "riscconfigurationservice.riscconfigs.get"
          ],
          "title": "RISC Configuration Viewer"
        },
        {
          "description": "This role can create long-running operations via BatchOptimizeTours.",
          "id": "roles/routeoptimization.editor",
          "is_beta": false,
          "permissions": [
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "routeoptimization.*"
          ],
          "title": "Route Optimization Editor"
        },
        {
          "description": "This role can view any long-running Operations.",
          "id": "roles/routeoptimization.viewer",
          "is_beta": false,
          "permissions": [
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "routeoptimization.operations.get"
          ],
          "title": "Route Optimization Viewer"
        },
        {
          "description": "Access to create and change Serverless Integrations and their configuration.",
          "id": "roles/runapps.developer",
          "is_beta": true,
          "permissions": [
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "runapps.applications.*",
            "runapps.deployments.get",
            "runapps.deployments.list",
            "runapps.locations.*",
            "runapps.operations.*"
          ],
          "title": "Serverless Integrations Developer"
        },
        {
          "description": "Access to deploy Serverless Integrations.",
          "id": "roles/runapps.operator",
          "is_beta": true,
          "permissions": [
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "runapps.applications.get",
            "runapps.applications.getStatus",
            "runapps.applications.list",
            "runapps.deployments.*",
            "runapps.locations.*",
            "runapps.operations.*"
          ],
          "title": "Serverless Integrations Operator"
        },
        {
          "description": "Read-only access to Serverless Integrations resources.",
          "id": "roles/runapps.viewer",
          "is_beta": true,
          "permissions": [
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "runapps.applications.get",
            "runapps.applications.getStatus",
            "runapps.applications.list",
            "runapps.deployments.get",
            "runapps.deployments.list",
            "runapps.locations.*",
            "runapps.operations.get",
            "runapps.operations.list"
          ],
          "title": "Serverless Integrations Viewer"
        },
        {
          "description": "Full access to RuntimeConfig resources.",
          "id": "roles/runtimeconfig.admin",
          "is_beta": false,
          "permissions": [
            "runtimeconfig.*"
          ],
          "title": "Cloud RuntimeConfig Admin"
        },
        {
          "description": "Full access to SaaS Service Management resources.",
          "id": "roles/saasservicemgmt.admin",
          "is_beta": true,
          "permissions": [
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "saasservicemgmt.*"
          ],
          "title": "SaaS Service Management Admin"
        },
        {
          "description": "Readonly access to SaaS Service Management resources.",
          "id": "roles/saasservicemgmt.viewer",
          "is_beta": true,
          "permissions": [
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "saasservicemgmt.locations.*",
            "saasservicemgmt.operations.get",
            "saasservicemgmt.operations.list",
            "saasservicemgmt.releases.get",
            "saasservicemgmt.releases.list",
            "saasservicemgmt.rolloutKinds.get",
            "saasservicemgmt.rolloutKinds.list",
            "saasservicemgmt.rollouts.get",
            "saasservicemgmt.rollouts.list",
            "saasservicemgmt.saas.get",
            "saasservicemgmt.saas.list",
            "saasservicemgmt.unitKinds.get",
            "saasservicemgmt.unitKinds.list",
            "saasservicemgmt.unitOperations.get",
            "saasservicemgmt.unitOperations.list",
            "saasservicemgmt.units.get",
            "saasservicemgmt.units.list"
          ],
          "title": "SaaS Service Management Viewer"
        },
        {
          "description": "Access to modify (remediate) resources in SLZ BQDW Blueprint at Organization.",
          "id": "roles/securedlandingzone.bqdwOrgRemediator",
          "is_beta": true,
          "permissions": [
            "accesscontextmanager.servicePerimeters.get",
            "accesscontextmanager.servicePerimeters.list",
            "accesscontextmanager.servicePerimeters.update"
          ],
          "title": "SLZ BQDW Blueprint Organization Level Remediator"
        },
        {
          "description": "Access to modify (remediate) resources in SLZ BQDW Blueprint at Project.",
          "id": "roles/securedlandingzone.bqdwProjectRemediator",
          "is_beta": true,
          "permissions": [
            "bigquery.datasets.get",
            "bigquery.datasets.getIamPolicy",
            "bigquery.datasets.setIamPolicy",
            "bigquery.datasets.update",
            "cloudkms.cryptoKeys.get",
            "cloudkms.cryptoKeys.getIamPolicy",
            "cloudkms.cryptoKeys.list",
            "cloudkms.cryptoKeys.setIamPolicy",
            "cloudkms.cryptoKeys.update",
            "cloudkms.keyRings.getIamPolicy",
            "cloudkms.keyRings.setIamPolicy",
            "pubsub.topics.get",
            "pubsub.topics.getIamPolicy",
            "pubsub.topics.list",
            "pubsub.topics.setIamPolicy",
            "pubsub.topics.update",
            "resourcemanager.projects.update",
            "serviceusage.services.use",
            "storage.buckets.get",
            "storage.buckets.getIamPolicy",
            "storage.buckets.list",
            "storage.buckets.setIamPolicy",
            "storage.buckets.update"
          ],
          "title": "SLZ BQDW Blueprint Project Level Remediator"
        },
        {
          "description": "This role can activate or suspend Overwatches",
          "id": "roles/securedlandingzone.overwatchActivator",
          "is_beta": true,
          "permissions": [
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "securedlandingzone.overwatches.activate",
            "securedlandingzone.overwatches.suspend"
          ],
          "title": "Overwatch Activator"
        },
        {
          "description": "Full access to Overwatches",
          "id": "roles/securedlandingzone.overwatchAdmin",
          "is_beta": true,
          "permissions": [
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "securedlandingzone.*"
          ],
          "title": "Overwatch Admin"
        },
        {
          "description": "This role can view all properties of Overwatches",
          "id": "roles/securedlandingzone.overwatchViewer",
          "is_beta": true,
          "permissions": [
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "securedlandingzone.operations.get",
            "securedlandingzone.overwatches.get",
            "securedlandingzone.overwatches.list"
          ],
          "title": "Overwatch Viewer"
        },
        {
          "description": "Full access to Security Posture service APIs.",
          "id": "roles/securityposture.admin",
          "is_beta": false,
          "permissions": [
            "orgpolicy.*",
            "resourcemanager.organizations.get",
            "securitycenter.securityhealthanalyticssettings.*",
            "securitycentermanagement.effectiveSecurityHealthAnalyticsCustomModules.*",
            "securitycentermanagement.securityHealthAnalyticsCustomModules.create",
            "securitycentermanagement.securityHealthAnalyticsCustomModules.delete",
            "securitycentermanagement.securityHealthAnalyticsCustomModules.get",
            "securitycentermanagement.securityHealthAnalyticsCustomModules.list",
            "securitycentermanagement.securityHealthAnalyticsCustomModules.update",
            "securityposture.*"
          ],
          "title": "Security Posture Admin"
        },
        {
          "description": "Mutate and read permissions to the Posture Deployment resource.",
          "id": "roles/securityposture.postureDeployer",
          "is_beta": false,
          "permissions": [
            "orgpolicy.*",
            "resourcemanager.organizations.get",
            "securitycenter.securityhealthanalyticssettings.*",
            "securitycentermanagement.securityHealthAnalyticsCustomModules.create",
            "securitycentermanagement.securityHealthAnalyticsCustomModules.delete",
            "securitycentermanagement.securityHealthAnalyticsCustomModules.update",
            "securityposture.operations.get",
            "securityposture.postureDeployments.*"
          ],
          "title": "Security Posture Deployer"
        },
        {
          "description": "Read only access to the Posture Deployment resource.",
          "id": "roles/securityposture.postureDeploymentsViewer",
          "is_beta": false,
          "permissions": [
            "resourcemanager.organizations.get",
            "securityposture.operations.get",
            "securityposture.postureDeployments.get",
            "securityposture.postureDeployments.list"
          ],
          "title": "Security Posture Deployments Viewer"
        },
        {
          "description": "Mutate and read permissions to the Posture resource.",
          "id": "roles/securityposture.postureEditor",
          "is_beta": false,
          "permissions": [
            "securityposture.operations.get",
            "securityposture.postures.*"
          ],
          "title": "Security Posture Resource Editor"
        },
        {
          "description": "Read only access to the Posture resource.",
          "id": "roles/securityposture.postureViewer",
          "is_beta": false,
          "permissions": [
            "resourcemanager.organizations.get",
            "securityposture.operations.get",
            "securityposture.postures.get",
            "securityposture.postures.list"
          ],
          "title": "Security Posture Resource Viewer"
        },
        {
          "description": "Create access for Reports, e.g. IaC Validation Report.",
          "id": "roles/securityposture.reportCreator",
          "is_beta": false,
          "permissions": [
            "securityposture.operations.get",
            "securityposture.reports.*"
          ],
          "title": "Security Posture Shift-Left Validator"
        },
        {
          "description": "Read only access to all the SecurityPosture Service resources.",
          "id": "roles/securityposture.viewer",
          "is_beta": false,
          "permissions": [
            "resourcemanager.organizations.get",
            "securityposture.operations.get",
            "securityposture.postureDeployments.get",
            "securityposture.postureDeployments.list",
            "securityposture.postureTemplates.*",
            "securityposture.postures.get",
            "securityposture.postures.list"
          ],
          "title": "Security Posture Viewer"
        },
        {
          "description": "Readonly access to Personalized Service Health resources.",
          "id": "roles/servicehealth.viewer",
          "is_beta": false,
          "permissions": [
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "servicehealth.*"
          ],
          "title": "Personalized Service Health Viewer"
        },
        {
          "description": "Read-only access to Security Insights resources",
          "id": "roles/servicesecurityinsights.securityInsightsViewer",
          "is_beta": true,
          "permissions": [
            "servicesecurityinsights.*"
          ],
          "title": "Security Insights Viewer"
        },
        {
          "description": "Grants full access to all Speaker ID resources, including project settings.",
          "id": "roles/speakerid.admin",
          "is_beta": false,
          "permissions": [
            "speakerid.*"
          ],
          "title": "Speaker ID Admin"
        },
        {
          "description": "Grants access to read and write all Speaker ID resources.",
          "id": "roles/speakerid.editor",
          "is_beta": false,
          "permissions": [
            "speakerid.phrases.*",
            "speakerid.speakers.*"
          ],
          "title": "Speaker ID Editor"
        },
        {
          "description": "Grants read access to all Speaker ID resources, and allows verification.",
          "id": "roles/speakerid.verifier",
          "is_beta": false,
          "permissions": [
            "speakerid.phrases.get",
            "speakerid.phrases.list",
            "speakerid.speakers.get",
            "speakerid.speakers.list",
            "speakerid.speakers.verify"
          ],
          "title": "Speaker ID Verifier"
        },
        {
          "description": "Grants read access to all Speaker ID resources.",
          "id": "roles/speakerid.viewer",
          "is_beta": false,
          "permissions": [
            "speakerid.phrases.get",
            "speakerid.phrases.list",
            "speakerid.speakers.get",
            "speakerid.speakers.list"
          ],
          "title": "Speaker ID Viewer"
        },
        {
          "description": "Grants full access to all resources in Speech-to-text",
          "id": "roles/speech.admin",
          "is_beta": false,
          "permissions": [
            "speech.*"
          ],
          "title": "Cloud Speech Administrator"
        },
        {
          "description": "Grants access to the recognition APIs.",
          "id": "roles/speech.client",
          "is_beta": false,
          "permissions": [
            "speech.adaptations.execute",
            "speech.customClasses.get",
            "speech.customClasses.list",
            "speech.locations.*",
            "speech.operations.get",
            "speech.operations.list",
            "speech.operations.wait",
            "speech.phraseSets.get",
            "speech.phraseSets.list",
            "speech.recognizers.get",
            "speech.recognizers.list",
            "speech.recognizers.recognize"
          ],
          "title": "Cloud Speech Client"
        },
        {
          "description": "Grants access to edit resources in Speech-to-text",
          "id": "roles/speech.editor",
          "is_beta": false,
          "permissions": [
            "speech.adaptations.execute",
            "speech.customClasses.*",
            "speech.locations.*",
            "speech.operations.*",
            "speech.phraseSets.*",
            "speech.recognizers.*"
          ],
          "title": "Cloud Speech Editor"
        },
        {
          "description": "Full access to Storage Insights resources.",
          "id": "roles/storageinsights.admin",
          "is_beta": false,
          "permissions": [
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "storageinsights.*"
          ],
          "title": "Storage Insights Admin"
        },
        {
          "description": "Data access to Storage Insights.",
          "id": "roles/storageinsights.analyst",
          "is_beta": false,
          "permissions": [
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "storageinsights.datasetConfigs.get",
            "storageinsights.datasetConfigs.linkDataset",
            "storageinsights.datasetConfigs.list",
            "storageinsights.datasetConfigs.unlinkDataset",
            "storageinsights.locations.*",
            "storageinsights.operations.get",
            "storageinsights.operations.list",
            "storageinsights.reportConfigs.get",
            "storageinsights.reportConfigs.list",
            "storageinsights.reportDetails.*"
          ],
          "title": "Storage Insights Analyst"
        },
        {
          "description": "Read-only access to Storage Insights resources.",
          "id": "roles/storageinsights.viewer",
          "is_beta": false,
          "permissions": [
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "storageinsights.datasetConfigs.get",
            "storageinsights.datasetConfigs.list",
            "storageinsights.locations.*",
            "storageinsights.operations.get",
            "storageinsights.operations.list",
            "storageinsights.reportConfigs.get",
            "storageinsights.reportConfigs.list",
            "storageinsights.reportDetails.*"
          ],
          "title": "Storage Insights Viewer"
        },
        {
          "description": "Access DevTools for Subscribe with Google",
          "id": "roles/subscribewithgoogledeveloper.developer",
          "is_beta": true,
          "permissions": [
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "subscribewithgoogledeveloper.tools.get"
          ],
          "title": "Subscribe with Google Developer"
        },
        {
          "description": "Full access to Telco Automation resources.",
          "id": "roles/telcoautomation.admin",
          "is_beta": true,
          "permissions": [
            "logging.buckets.get",
            "logging.buckets.list",
            "logging.exclusions.get",
            "logging.exclusions.list",
            "logging.links.get",
            "logging.links.list",
            "logging.locations.*",
            "logging.logEntries.list",
            "logging.logMetrics.get",
            "logging.logMetrics.list",
            "logging.logScopes.get",
            "logging.logScopes.list",
            "logging.logServiceIndexes.list",
            "logging.logServices.list",
            "logging.logs.list",
            "logging.operations.get",
            "logging.operations.list",
            "logging.queries.getShared",
            "logging.queries.listShared",
            "logging.queries.usePrivate",
            "logging.sinks.get",
            "logging.sinks.list",
            "logging.usage.get",
            "logging.views.get",
            "logging.views.list",
            "monitoring.timeSeries.list",
            "observability.scopes.get",
            "resourcemanager.projects.get",
            "serviceusage.quotas.*",
            "serviceusage.services.*",
            "source.repos.get",
            "source.repos.list",
            "telcoautomation.*"
          ],
          "title": "Telco Automation Admin"
        },
        {
          "description": "Ability to manage blueprints",
          "id": "roles/telcoautomation.blueprintDesigner",
          "is_beta": true,
          "permissions": [
            "telcoautomation.blueprints.create",
            "telcoautomation.blueprints.delete",
            "telcoautomation.blueprints.get",
            "telcoautomation.blueprints.list",
            "telcoautomation.blueprints.propose",
            "telcoautomation.blueprints.update",
            "telcoautomation.deployments.computeStatus",
            "telcoautomation.deployments.get",
            "telcoautomation.deployments.list",
            "telcoautomation.hydratedDeployments.get",
            "telcoautomation.hydratedDeployments.list",
            "telcoautomation.orchestrationClusters.get",
            "telcoautomation.orchestrationClusters.list",
            "telcoautomation.publicBlueprints.*"
          ],
          "title": "Telco Automation Blueprint Designer"
        },
        {
          "description": "Ability to manage deployments",
          "id": "roles/telcoautomation.deploymentAdmin",
          "is_beta": true,
          "permissions": [
            "telcoautomation.blueprints.get",
            "telcoautomation.blueprints.list",
            "telcoautomation.deployments.*",
            "telcoautomation.hydratedDeployments.*",
            "telcoautomation.orchestrationClusters.get",
            "telcoautomation.orchestrationClusters.list"
          ],
          "title": "Telco Automation Deployment Admin"
        },
        {
          "description": "Ability to get status of deployments",
          "id": "roles/telcoautomation.opsAdminTier1",
          "is_beta": true,
          "permissions": [
            "logging.buckets.get",
            "logging.buckets.list",
            "logging.exclusions.get",
            "logging.exclusions.list",
            "logging.links.get",
            "logging.links.list",
            "logging.locations.*",
            "logging.logEntries.list",
            "logging.logMetrics.get",
            "logging.logMetrics.list",
            "logging.logScopes.get",
            "logging.logScopes.list",
            "logging.logServiceIndexes.list",
            "logging.logServices.list",
            "logging.logs.list",
            "logging.operations.get",
            "logging.operations.list",
            "logging.queries.getShared",
            "logging.queries.listShared",
            "logging.queries.usePrivate",
            "logging.sinks.get",
            "logging.sinks.list",
            "logging.usage.get",
            "logging.views.get",
            "logging.views.list",
            "observability.scopes.get",
            "resourcemanager.projects.get",
            "telcoautomation.blueprints.get",
            "telcoautomation.blueprints.list",
            "telcoautomation.deployments.computeStatus",
            "telcoautomation.deployments.get",
            "telcoautomation.deployments.list",
            "telcoautomation.hydratedDeployments.get",
            "telcoautomation.hydratedDeployments.list",
            "telcoautomation.orchestrationClusters.get",
            "telcoautomation.orchestrationClusters.list"
          ],
          "title": "Telco Automation Tier 1 Operations Admin"
        },
        {
          "description": "Ability to manage deployments and their status",
          "id": "roles/telcoautomation.opsAdminTier4",
          "is_beta": true,
          "permissions": [
            "logging.buckets.get",
            "logging.buckets.list",
            "logging.exclusions.get",
            "logging.exclusions.list",
            "logging.links.get",
            "logging.links.list",
            "logging.locations.*",
            "logging.logEntries.list",
            "logging.logMetrics.get",
            "logging.logMetrics.list",
            "logging.logScopes.get",
            "logging.logScopes.list",
            "logging.logServiceIndexes.list",
            "logging.logServices.list",
            "logging.logs.list",
            "logging.operations.get",
            "logging.operations.list",
            "logging.queries.getShared",
            "logging.queries.listShared",
            "logging.queries.usePrivate",
            "logging.sinks.get",
            "logging.sinks.list",
            "logging.usage.get",
            "logging.views.get",
            "logging.views.list",
            "observability.scopes.get",
            "resourcemanager.projects.get",
            "telcoautomation.blueprints.get",
            "telcoautomation.blueprints.list",
            "telcoautomation.deployments.*",
            "telcoautomation.hydratedDeployments.*",
            "telcoautomation.orchestrationClusters.get",
            "telcoautomation.orchestrationClusters.list"
          ],
          "title": "Telco Automation Tier 4 Operations Admin"
        },
        {
          "description": "Ability to manage deployments",
          "id": "roles/telcoautomation.serviceOrchestrator",
          "is_beta": true,
          "permissions": [
            "telcoautomation.blueprints.get",
            "telcoautomation.blueprints.list",
            "telcoautomation.deployments.*",
            "telcoautomation.hydratedDeployments.*",
            "telcoautomation.orchestrationClusters.get",
            "telcoautomation.orchestrationClusters.list"
          ],
          "title": "Telco Automation Service Orchestrator"
        },
        {
          "description": "Edit access to DataSets.",
          "id": "roles/timeseriesinsights.datasetsEditor",
          "is_beta": true,
          "permissions": [
            "timeseriesinsights.*"
          ],
          "title": "Timeseries Insights DataSet Editor"
        },
        {
          "description": "Full access to DataSets.",
          "id": "roles/timeseriesinsights.datasetsOwner",
          "is_beta": true,
          "permissions": [
            "timeseriesinsights.*"
          ],
          "title": "Timeseries Insights DataSet Owner"
        },
        {
          "description": "Read-only access (List and Query) to DataSets.",
          "id": "roles/timeseriesinsights.datasetsViewer",
          "is_beta": true,
          "permissions": [
            "timeseriesinsights.datasets.evaluate",
            "timeseriesinsights.datasets.list",
            "timeseriesinsights.datasets.query",
            "timeseriesinsights.locations.*"
          ],
          "title": "Timeseries Insights DataSet Viewer"
        },
        {
          "description": "Fetch service configurations and report metrics.",
          "id": "roles/trafficdirector.client",
          "is_beta": true,
          "permissions": [
            "trafficdirector.*"
          ],
          "title": "Traffic Director Client"
        },
        {
          "description": "Admin of Translation Hub",
          "id": "roles/translationhub.admin",
          "is_beta": true,
          "permissions": [
            "automl.models.get",
            "automl.models.list",
            "automl.models.predict",
            "cloudtranslate.customModels.get",
            "cloudtranslate.customModels.list",
            "cloudtranslate.customModels.predict",
            "cloudtranslate.glossaries.create",
            "cloudtranslate.glossaries.delete",
            "cloudtranslate.glossaries.get",
            "cloudtranslate.glossaries.list",
            "cloudtranslate.glossaries.predict",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "translationhub.*"
          ],
          "title": "Translation Hub Admin"
        },
        {
          "description": "Portal user of Translation Hub",
          "id": "roles/translationhub.portalUser",
          "is_beta": true,
          "permissions": [
            "automl.models.get",
            "automl.models.list",
            "automl.models.predict",
            "cloudtranslate.customModels.get",
            "cloudtranslate.customModels.list",
            "cloudtranslate.customModels.predict",
            "cloudtranslate.glossaries.get",
            "cloudtranslate.glossaries.list",
            "cloudtranslate.glossaries.predict",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "translationhub.portals.get",
            "translationhub.portals.list"
          ],
          "title": "Translation Hub Portal User"
        },
        {
          "description": "Read and write access to all Visual Inspection AI resources except visualinspection.locations.reportUsageMetrics",
          "id": "roles/visualinspection.editor",
          "is_beta": false,
          "permissions": [
            "visualinspection.annotationSets.*",
            "visualinspection.annotationSpecs.*",
            "visualinspection.annotations.*",
            "visualinspection.datasets.*",
            "visualinspection.images.*",
            "visualinspection.locations.get",
            "visualinspection.locations.list",
            "visualinspection.modelEvaluations.*",
            "visualinspection.models.*",
            "visualinspection.modules.*",
            "visualinspection.operations.*",
            "visualinspection.solutionArtifacts.*",
            "visualinspection.solutions.*"
          ],
          "title": "Visual Inspection AI Solution Editor"
        },
        {
          "description": "ReportUsageMetric access to Visual Inspection AI Service",
          "id": "roles/visualinspection.usageMetricsReporter",
          "is_beta": false,
          "permissions": [
            "visualinspection.locations.reportUsageMetrics"
          ],
          "title": "Visual Inspection AI Usage Metrics Reporter"
        },
        {
          "description": "Read access to Visual Inspection AI resources",
          "id": "roles/visualinspection.viewer",
          "is_beta": false,
          "permissions": [
            "visualinspection.annotationSets.get",
            "visualinspection.annotationSets.list",
            "visualinspection.annotationSpecs.get",
            "visualinspection.annotationSpecs.list",
            "visualinspection.annotations.get",
            "visualinspection.annotations.list",
            "visualinspection.datasets.export",
            "visualinspection.datasets.get",
            "visualinspection.datasets.list",
            "visualinspection.images.get",
            "visualinspection.images.list",
            "visualinspection.locations.get",
            "visualinspection.locations.list",
            "visualinspection.modelEvaluations.*",
            "visualinspection.models.get",
            "visualinspection.models.list",
            "visualinspection.modules.get",
            "visualinspection.modules.list",
            "visualinspection.operations.*",
            "visualinspection.solutionArtifacts.get",
            "visualinspection.solutionArtifacts.list",
            "visualinspection.solutionArtifacts.predict",
            "visualinspection.solutions.get",
            "visualinspection.solutions.list"
          ],
          "title": "Visual Inspection AI Viewer"
        },
        {
          "description": "Full access to Privileged Access Manager resources.",
          "id": "roles/privilegedaccessmanager.admin",
          "is_beta": false,
          "permissions": [
            "privilegedaccessmanager.*",
            "resourcemanager.projects.get"
          ],
          "title": "Privileged Access Manager Admin"
        },
        {
          "description": "Readonly access to Privileged Access Manager resources.",
          "id": "roles/privilegedaccessmanager.viewer",
          "is_beta": false,
          "permissions": [
            "privilegedaccessmanager.entitlements.get",
            "privilegedaccessmanager.entitlements.list",
            "privilegedaccessmanager.grants.get",
            "privilegedaccessmanager.grants.list",
            "privilegedaccessmanager.locations.get",
            "privilegedaccessmanager.locations.list",
            "privilegedaccessmanager.operations.get",
            "privilegedaccessmanager.operations.list",
            "resourcemanager.projects.get"
          ],
          "title": "Privileged Access Manager Viewer"
        },
        {
          "description": "Read access to browse the hierarchy for a project, including the folder, organization, and allow policy. This role doesn't include permission to view resources in the project.",
          "id": "roles/browser",
          "is_beta": false,
          "permissions": [
            "resourcemanager.folders.get",
            "resourcemanager.folders.list",
            "resourcemanager.organizations.get",
            "resourcemanager.projects.get",
            "resourcemanager.projects.getIamPolicy",
            "resourcemanager.projects.list"
          ],
          "title": "Browser"
        },
        {
          "description": "Can create and delete attachments; can list and get a project's beacons; can list a project's namespaces.",
          "id": "roles/proximitybeacon.attachmentEditor",
          "is_beta": false,
          "permissions": [
            "proximitybeacon.attachments.*",
            "proximitybeacon.beacons.get",
            "proximitybeacon.beacons.list",
            "proximitybeacon.namespaces.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Beacon Attachment Editor"
        },
        {
          "description": "Grants necessary permissions to use beacons to create attachments in namespaces not owned by this project.",
          "id": "roles/proximitybeacon.attachmentPublisher",
          "is_beta": false,
          "permissions": [
            "proximitybeacon.beacons.attach",
            "proximitybeacon.beacons.get",
            "proximitybeacon.beacons.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Beacon Attachment Publisher"
        },
        {
          "description": "Can view all attachments under a namespace; no beacon or namespace permissions.",
          "id": "roles/proximitybeacon.attachmentViewer",
          "is_beta": false,
          "permissions": [
            "proximitybeacon.attachments.get",
            "proximitybeacon.attachments.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Beacon Attachment Viewer"
        },
        {
          "description": "Necessary access to register, modify, and view beacons; no attachment or namespace permissions.",
          "id": "roles/proximitybeacon.beaconEditor",
          "is_beta": false,
          "permissions": [
            "proximitybeacon.beacons.create",
            "proximitybeacon.beacons.get",
            "proximitybeacon.beacons.list",
            "proximitybeacon.beacons.update",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Beacon Editor"
        },
        {
          "description": "Provides full access to topics and subscriptions.",
          "id": "roles/pubsub.admin",
          "is_beta": false,
          "permissions": [
            "pubsub.*",
            "resourcemanager.projects.get",
            "serviceusage.quotas.get",
            "serviceusage.services.get",
            "serviceusage.services.list"
          ],
          "title": "Pub/Sub Admin"
        },
        {
          "description": "Provides access to modify topics and subscriptions, and access to publish and consume messages.",
          "id": "roles/pubsub.editor",
          "is_beta": false,
          "permissions": [
            "pubsub.schemas.attach",
            "pubsub.schemas.commit",
            "pubsub.schemas.create",
            "pubsub.schemas.delete",
            "pubsub.schemas.get",
            "pubsub.schemas.list",
            "pubsub.schemas.listRevisions",
            "pubsub.schemas.rollback",
            "pubsub.schemas.validate",
            "pubsub.snapshots.create",
            "pubsub.snapshots.delete",
            "pubsub.snapshots.get",
            "pubsub.snapshots.list",
            "pubsub.snapshots.seek",
            "pubsub.snapshots.update",
            "pubsub.subscriptions.consume",
            "pubsub.subscriptions.create",
            "pubsub.subscriptions.delete",
            "pubsub.subscriptions.get",
            "pubsub.subscriptions.list",
            "pubsub.subscriptions.update",
            "pubsub.topics.attachSubscription",
            "pubsub.topics.create",
            "pubsub.topics.delete",
            "pubsub.topics.detachSubscription",
            "pubsub.topics.get",
            "pubsub.topics.list",
            "pubsub.topics.publish",
            "pubsub.topics.update",
            "pubsub.topics.updateTag",
            "resourcemanager.projects.get",
            "serviceusage.quotas.get",
            "serviceusage.services.get",
            "serviceusage.services.list"
          ],
          "title": "Pub/Sub Editor"
        },
        {
          "description": "Provides access to publish messages to a topic.",
          "id": "roles/pubsub.publisher",
          "is_beta": false,
          "permissions": [
            "pubsub.topics.publish"
          ],
          "title": "Pub/Sub Publisher"
        },
        {
          "description": "Provides access to consume messages from a subscription and to attach subscriptions to a topic.",
          "id": "roles/pubsub.subscriber",
          "is_beta": false,
          "permissions": [
            "pubsub.snapshots.seek",
            "pubsub.subscriptions.consume",
            "pubsub.topics.attachSubscription"
          ],
          "title": "Pub/Sub Subscriber"
        },
        {
          "description": "Provides access to view topics and subscriptions.",
          "id": "roles/pubsub.viewer",
          "is_beta": false,
          "permissions": [
            "pubsub.schemas.get",
            "pubsub.schemas.list",
            "pubsub.schemas.listRevisions",
            "pubsub.schemas.validate",
            "pubsub.snapshots.get",
            "pubsub.snapshots.list",
            "pubsub.subscriptions.get",
            "pubsub.subscriptions.list",
            "pubsub.topics.get",
            "pubsub.topics.list",
            "resourcemanager.projects.get",
            "serviceusage.quotas.get",
            "serviceusage.services.get",
            "serviceusage.services.list"
          ],
          "title": "Pub/Sub Viewer"
        },
        {
          "description": "Full access to topics, subscriptions and reservations.",
          "id": "roles/pubsublite.admin",
          "is_beta": false,
          "permissions": [
            "pubsublite.*"
          ],
          "title": "Pub/Sub Lite Admin"
        },
        {
          "description": "Modify topics, subscriptions and reservations, publish and consume messages.",
          "id": "roles/pubsublite.editor",
          "is_beta": false,
          "permissions": [
            "pubsublite.*"
          ],
          "title": "Pub/Sub Lite Editor"
        },
        {
          "description": "Publish messages to a topic.",
          "id": "roles/pubsublite.publisher",
          "is_beta": false,
          "permissions": [
            "pubsublite.locations.openKafkaStream",
            "pubsublite.topics.getPartitions",
            "pubsublite.topics.publish"
          ],
          "title": "Pub/Sub Lite Publisher"
        },
        {
          "description": "Subscribe to and read messages from a topic.",
          "id": "roles/pubsublite.subscriber",
          "is_beta": false,
          "permissions": [
            "pubsublite.locations.openKafkaStream",
            "pubsublite.operations.get",
            "pubsublite.subscriptions.getCursor",
            "pubsublite.subscriptions.seek",
            "pubsublite.subscriptions.setCursor",
            "pubsublite.subscriptions.subscribe",
            "pubsublite.topics.computeHeadCursor",
            "pubsublite.topics.computeMessageStats",
            "pubsublite.topics.computeTimeCursor",
            "pubsublite.topics.getPartitions",
            "pubsublite.topics.subscribe"
          ],
          "title": "Pub/Sub Lite Subscriber"
        },
        {
          "description": "View topics, subscriptions and reservations.",
          "id": "roles/pubsublite.viewer",
          "is_beta": false,
          "permissions": [
            "pubsublite.operations.*",
            "pubsublite.reservations.get",
            "pubsublite.reservations.list",
            "pubsublite.reservations.listTopics",
            "pubsublite.subscriptions.get",
            "pubsublite.subscriptions.getCursor",
            "pubsublite.subscriptions.list",
            "pubsublite.topics.get",
            "pubsublite.topics.getPartitions",
            "pubsublite.topics.list",
            "pubsublite.topics.listSubscriptions"
          ],
          "title": "Pub/Sub Lite Viewer"
        },
        {
          "description": "Full access to Rapid Migration Assessment all resources.",
          "id": "roles/rma.admin",
          "is_beta": false,
          "permissions": [
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "rma.*"
          ],
          "title": "Rapid Migration Assessment Admin"
        },
        {
          "description": "Update and Read access to Rapid Migration Assessment all resources.",
          "id": "roles/rma.runner",
          "is_beta": false,
          "permissions": [
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "rma.annotations.get",
            "rma.collectors.get",
            "rma.collectors.list",
            "rma.collectors.update",
            "rma.locations.*",
            "rma.operations.get",
            "rma.operations.list"
          ],
          "title": "Rapid Migration Assessment Runner"
        },
        {
          "description": "Read-only access to Rapid Migration Assessment all resources.",
          "id": "roles/rma.viewer",
          "is_beta": false,
          "permissions": [
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "rma.annotations.get",
            "rma.collectors.get",
            "rma.collectors.list",
            "rma.locations.*",
            "rma.operations.get",
            "rma.operations.list"
          ],
          "title": "Rapid Migration Assessment Viewer"
        },
        {
          "description": "Access to view and modify reCAPTCHA Enterprise keys",
          "id": "roles/recaptchaenterprise.admin",
          "is_beta": true,
          "permissions": [
            "monitoring.timeSeries.list",
            "recaptchaenterprise.firewallpolicies.*",
            "recaptchaenterprise.keys.*",
            "recaptchaenterprise.metrics.get",
            "recaptchaenterprise.projectmetadata.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "reCAPTCHA Enterprise Admin"
        },
        {
          "description": "Access to create and annotate reCAPTCHA Enterprise assessments",
          "id": "roles/recaptchaenterprise.agent",
          "is_beta": true,
          "permissions": [
            "recaptchaenterprise.assessments.*",
            "recaptchaenterprise.firewallpolicies.list",
            "recaptchaenterprise.relatedaccountgroupmemberships.list",
            "recaptchaenterprise.relatedaccountgroups.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "reCAPTCHA Enterprise Agent"
        },
        {
          "description": "Access to view reCAPTCHA Enterprise keys and metrics",
          "id": "roles/recaptchaenterprise.viewer",
          "is_beta": true,
          "permissions": [
            "monitoring.timeSeries.list",
            "recaptchaenterprise.firewallpolicies.get",
            "recaptchaenterprise.firewallpolicies.list",
            "recaptchaenterprise.keys.get",
            "recaptchaenterprise.keys.list",
            "recaptchaenterprise.metrics.get",
            "recaptchaenterprise.projectmetadata.get",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "reCAPTCHA Enterprise Viewer"
        },
        {
          "description": "Full access to all Recommendations AI resources.",
          "id": "roles/automlrecommendations.admin",
          "is_beta": true,
          "permissions": [
            "automlrecommendations.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "retail.catalogs.list",
            "retail.catalogs.update",
            "retail.operations.*",
            "retail.placements.*",
            "retail.products.create",
            "retail.products.delete",
            "retail.products.export",
            "retail.products.get",
            "retail.products.import",
            "retail.products.list",
            "retail.products.purge",
            "retail.products.update",
            "retail.retailProjects.*",
            "retail.userEvents.*",
            "serviceusage.services.get",
            "serviceusage.services.list"
          ],
          "title": "Recommendations AI Admin"
        },
        {
          "description": "Viewer of all Recommendations AI resources.",
          "id": "roles/automlrecommendations.adminViewer",
          "is_beta": true,
          "permissions": [
            "automlrecommendations.apiKeys.list",
            "automlrecommendations.catalogItems.get",
            "automlrecommendations.catalogItems.list",
            "automlrecommendations.catalogs.getStats",
            "automlrecommendations.catalogs.list",
            "automlrecommendations.eventStores.*",
            "automlrecommendations.events.get",
            "automlrecommendations.events.list",
            "automlrecommendations.placements.getStats",
            "automlrecommendations.placements.list",
            "automlrecommendations.recommendations.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "retail.catalogs.list",
            "retail.operations.*",
            "retail.placements.*",
            "retail.products.export",
            "retail.products.get",
            "retail.products.list",
            "retail.retailProjects.get",
            "serviceusage.services.get",
            "serviceusage.services.list"
          ],
          "title": "Recommendations AI Admin Viewer"
        },
        {
          "description": "Editor of all Recommendations AI resources.",
          "id": "roles/automlrecommendations.editor",
          "is_beta": true,
          "permissions": [
            "automlrecommendations.apiKeys.create",
            "automlrecommendations.apiKeys.list",
            "automlrecommendations.catalogItems.*",
            "automlrecommendations.catalogs.getStats",
            "automlrecommendations.catalogs.list",
            "automlrecommendations.eventStores.*",
            "automlrecommendations.events.create",
            "automlrecommendations.events.get",
            "automlrecommendations.events.list",
            "automlrecommendations.placements.create",
            "automlrecommendations.placements.getStats",
            "automlrecommendations.placements.list",
            "automlrecommendations.recommendations.create",
            "automlrecommendations.recommendations.list",
            "automlrecommendations.recommendations.pause",
            "automlrecommendations.recommendations.resume",
            "automlrecommendations.recommendations.update",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "retail.catalogs.list",
            "retail.catalogs.update",
            "retail.operations.*",
            "retail.placements.*",
            "retail.products.create",
            "retail.products.delete",
            "retail.products.export",
            "retail.products.get",
            "retail.products.import",
            "retail.products.list",
            "retail.products.update",
            "retail.retailProjects.get",
            "retail.userEvents.create",
            "retail.userEvents.import",
            "serviceusage.services.get",
            "serviceusage.services.list"
          ],
          "title": "Recommendations AI Editor"
        },
        {
          "description": "Viewer of all Recommendations resources except apiKeys. To view all resources, including apiKeys, grant the Recommendations AI Admin Viewer role (roles/automlrecommendations.adminViewer).",
          "id": "roles/automlrecommendations.viewer",
          "is_beta": true,
          "permissions": [
            "automlrecommendations.catalogItems.get",
            "automlrecommendations.catalogItems.list",
            "automlrecommendations.catalogs.getStats",
            "automlrecommendations.catalogs.list",
            "automlrecommendations.eventStores.*",
            "automlrecommendations.events.get",
            "automlrecommendations.events.list",
            "automlrecommendations.placements.getStats",
            "automlrecommendations.placements.list",
            "automlrecommendations.recommendations.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "retail.catalogs.list",
            "retail.operations.*",
            "retail.placements.*",
            "retail.products.export",
            "retail.products.get",
            "retail.products.list",
            "retail.retailProjects.get",
            "serviceusage.services.get",
            "serviceusage.services.list"
          ],
          "title": "Recommendations AI Viewer"
        },
        {
          "description": "Admin of AlloyDB insights and recommendations.",
          "id": "roles/recommender.alloydbAdmin",
          "is_beta": true,
          "permissions": [
            "recommender.alloydbClusterPerformanceInsights.*",
            "recommender.alloydbClusterPerformanceRecommendations.*",
            "recommender.alloydbClusterReliabilityInsights.*",
            "recommender.alloydbClusterReliabilityRecommendations.*",
            "recommender.alloydbInstanceSecurityInsights.*",
            "recommender.alloydbInstanceSecurityRecommendations.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "AlloyDB Recommender Admin"
        },
        {
          "description": "Viewer of AlloyDB insights and recommendations.",
          "id": "roles/recommender.alloydbViewer",
          "is_beta": true,
          "permissions": [
            "recommender.alloydbClusterPerformanceInsights.get",
            "recommender.alloydbClusterPerformanceInsights.list",
            "recommender.alloydbClusterPerformanceRecommendations.get",
            "recommender.alloydbClusterPerformanceRecommendations.list",
            "recommender.alloydbClusterReliabilityInsights.get",
            "recommender.alloydbClusterReliabilityInsights.list",
            "recommender.alloydbClusterReliabilityRecommendations.get",
            "recommender.alloydbClusterReliabilityRecommendations.list",
            "recommender.alloydbInstanceSecurityInsights.get",
            "recommender.alloydbInstanceSecurityInsights.list",
            "recommender.alloydbInstanceSecurityRecommendations.get",
            "recommender.alloydbInstanceSecurityRecommendations.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "AlloyDB Recommender Viewer"
        },
        {
          "description": "Admin of BigQuery Capacity Commitments insights and recommendations.",
          "id": "roles/recommender.bigQueryCapacityCommitmentsAdmin",
          "is_beta": true,
          "permissions": [
            "recommender.bigqueryCapacityCommitmentsInsights.*",
            "recommender.bigqueryCapacityCommitmentsRecommendations.*",
            "recommender.locations.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "BigQuery Slot Recommender Admin"
        },
        {
          "description": "Billing Account Admin of BigQuery Capacity Commitments insights and recommendations.",
          "id": "roles/recommender.bigQueryCapacityCommitmentsBillingAccountAdmin",
          "is_beta": true,
          "permissions": [
            "billing.accounts.get",
            "billing.accounts.list",
            "recommender.bigqueryCapacityCommitmentsInsights.*",
            "recommender.bigqueryCapacityCommitmentsRecommendations.*"
          ],
          "title": "BigQuery Recommender Billing Account Admin"
        },
        {
          "description": "Billing Account Viewer of BigQuery Capacity Commitments insights and recommendations.",
          "id": "roles/recommender.bigQueryCapacityCommitmentsBillingAccountViewer",
          "is_beta": true,
          "permissions": [
            "billing.accounts.get",
            "billing.accounts.list",
            "recommender.bigqueryCapacityCommitmentsInsights.get",
            "recommender.bigqueryCapacityCommitmentsInsights.list",
            "recommender.bigqueryCapacityCommitmentsRecommendations.get",
            "recommender.bigqueryCapacityCommitmentsRecommendations.list"
          ],
          "title": "BigQuery Recommender Billing Account Viewer"
        },
        {
          "description": "Project Admin of BigQuery Capacity Commitments insights and recommendations.",
          "id": "roles/recommender.bigQueryCapacityCommitmentsProjectAdmin",
          "is_beta": true,
          "permissions": [
            "recommender.bigqueryCapacityCommitmentsInsights.*",
            "recommender.bigqueryCapacityCommitmentsRecommendations.*",
            "recommender.locations.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "BigQuery Recommender Project Admin"
        },
        {
          "description": "Project Viewer of BigQuery Capacity Commitments insights and recommendations.",
          "id": "roles/recommender.bigQueryCapacityCommitmentsProjectViewer",
          "is_beta": true,
          "permissions": [
            "recommender.bigqueryCapacityCommitmentsInsights.get",
            "recommender.bigqueryCapacityCommitmentsInsights.list",
            "recommender.bigqueryCapacityCommitmentsRecommendations.get",
            "recommender.bigqueryCapacityCommitmentsRecommendations.list",
            "recommender.locations.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "BigQuery Recommender Project Viewer"
        },
        {
          "description": "Viewer of BigQuery Capacity Commitments insights and recommendations.",
          "id": "roles/recommender.bigQueryCapacityCommitmentsViewer",
          "is_beta": true,
          "permissions": [
            "recommender.bigqueryCapacityCommitmentsInsights.get",
            "recommender.bigqueryCapacityCommitmentsInsights.list",
            "recommender.bigqueryCapacityCommitmentsRecommendations.get",
            "recommender.bigqueryCapacityCommitmentsRecommendations.list",
            "recommender.locations.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "BigQuery Slot Recommender Viewer"
        },
        {
          "description": "Admin of BigQuery Materialized View Insights and Recommendations.",
          "id": "roles/recommender.bigqueryMaterializedViewAdmin",
          "is_beta": false,
          "permissions": [
            "recommender.bigqueryMaterializedViewInsights.*",
            "recommender.bigqueryMaterializedViewRecommendations.*",
            "recommender.locations.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "BigQuery Materialized View Recommender Admin"
        },
        {
          "description": "Viewer of BigQuery Materialized View Insights and Recommendations.",
          "id": "roles/recommender.bigqueryMaterializedViewViewer",
          "is_beta": false,
          "permissions": [
            "recommender.bigqueryMaterializedViewInsights.get",
            "recommender.bigqueryMaterializedViewInsights.list",
            "recommender.bigqueryMaterializedViewRecommendations.get",
            "recommender.bigqueryMaterializedViewRecommendations.list",
            "recommender.locations.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "BigQuery Materialized View Recommender Viewer"
        },
        {
          "description": "Admin of BigQuery Partitioning Clustering recommendations.",
          "id": "roles/recommender.bigqueryPartitionClusterAdmin",
          "is_beta": true,
          "permissions": [
            "recommender.bigqueryPartitionClusterRecommendations.*",
            "recommender.bigqueryTableStatsInsights.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "BigQuery Partitioning Clustering Recommender Admin"
        },
        {
          "description": "Viewer of BigQuery Partitioning Clustering recommendations.",
          "id": "roles/recommender.bigqueryPartitionClusterViewer",
          "is_beta": true,
          "permissions": [
            "recommender.bigqueryPartitionClusterRecommendations.get",
            "recommender.bigqueryPartitionClusterRecommendations.list",
            "recommender.bigqueryTableStatsInsights.get",
            "recommender.bigqueryTableStatsInsights.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "BigQuery Partitioning Clustering Recommender Viewer"
        },
        {
          "description": "Admin of Bigtable Cluster Performance Insights and Recommendations.",
          "id": "roles/recommender.bigtableClusterPerformanceAdmin",
          "is_beta": true,
          "permissions": [
            "recommender.bigtableClusterPerformanceInsights.*",
            "recommender.bigtableClusterPerformanceRecommendations.*",
            "recommender.locations.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Bigtable Cluster Performance Recommender Admin"
        },
        {
          "description": "Viewer of Bigtable Cluster Performance Insights and Recommendations.",
          "id": "roles/recommender.bigtableClusterPerformanceViewer",
          "is_beta": true,
          "permissions": [
            "recommender.bigtableClusterPerformanceInsights.get",
            "recommender.bigtableClusterPerformanceInsights.list",
            "recommender.bigtableClusterPerformanceRecommendations.get",
            "recommender.bigtableClusterPerformanceRecommendations.list",
            "recommender.locations.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Bigtable Cluster Performance Recommender Viewer"
        },
        {
          "description": "Admin of Billing Account Usage Commitment Recommender.",
          "id": "roles/recommender.billingAccountCudAdmin",
          "is_beta": true,
          "permissions": [
            "billing.accounts.get",
            "billing.accounts.list",
            "recommender.commitmentUtilizationInsights.*",
            "recommender.usageCommitmentRecommendations.*"
          ],
          "title": "Billing Account Usage Commitment Recommender Admin"
        },
        {
          "description": "Viewer of Billing Account Usage Commitment Recommender.",
          "id": "roles/recommender.billingAccountCudViewer",
          "is_beta": true,
          "permissions": [
            "billing.accounts.get",
            "billing.accounts.list",
            "recommender.commitmentUtilizationInsights.get",
            "recommender.commitmentUtilizationInsights.list",
            "recommender.usageCommitmentRecommendations.get",
            "recommender.usageCommitmentRecommendations.list"
          ],
          "title": "Billing Account Usage Commitment Recommender Viewer"
        },
        {
          "description": "Admin of all Cloud Asset insights.",
          "id": "roles/recommender.cloudAssetInsightsAdmin",
          "is_beta": false,
          "permissions": [
            "recommender.cloudAssetInsights.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Cloud Asset Insights Admin"
        },
        {
          "description": "Viewer of all Cloud Asset insights.",
          "id": "roles/recommender.cloudAssetInsightsViewer",
          "is_beta": false,
          "permissions": [
            "recommender.cloudAssetInsights.get",
            "recommender.cloudAssetInsights.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Cloud Asset Insights Viewer"
        },
        {
          "description": "Admin of Cloud Cost General Recommendations Insights and Recommendations.",
          "id": "roles/recommender.cloudCostRecommendationAdmin",
          "is_beta": true,
          "permissions": [
            "recommender.cloudCostGeneralInsights.*",
            "recommender.cloudCostGeneralRecommendations.*",
            "recommender.locations.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Cloud Cost General Recommendations Recommender Admin"
        },
        {
          "description": "Viewer of Cloud Cost General Recommendations Insights and Recommendations.",
          "id": "roles/recommender.cloudCostRecommendationViewer",
          "is_beta": true,
          "permissions": [
            "recommender.cloudCostGeneralInsights.get",
            "recommender.cloudCostGeneralInsights.list",
            "recommender.cloudCostGeneralRecommendations.get",
            "recommender.cloudCostGeneralRecommendations.list",
            "recommender.locations.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Cloud Cost General Recommendations Recommender Viewer"
        },
        {
          "description": "Admin of Cloud Deprecation General Recommender Insights and Recommendations.",
          "id": "roles/recommender.cloudDeprecationRecommendationAdmin",
          "is_beta": true,
          "permissions": [
            "recommender.cloudDeprecationGeneralInsights.*",
            "recommender.cloudDeprecationGeneralRecommendations.*",
            "recommender.locations.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Cloud Deprecation General Recommender Admin"
        },
        {
          "description": "Viewer of Cloud Deprecation General Recommender Insights and Recommendations.",
          "id": "roles/recommender.cloudDeprecationRecommendationViewer",
          "is_beta": true,
          "permissions": [
            "recommender.cloudDeprecationGeneralInsights.get",
            "recommender.cloudDeprecationGeneralInsights.list",
            "recommender.cloudDeprecationGeneralRecommendations.get",
            "recommender.cloudDeprecationGeneralRecommendations.list",
            "recommender.locations.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Cloud Deprecation General Recommender Viewer"
        },
        {
          "description": "Admin of Cloud Manageability General Recommendations Insights and Recommendations.",
          "id": "roles/recommender.cloudManageabilityRecommendationAdmin",
          "is_beta": true,
          "permissions": [
            "recommender.cloudManageabilityGeneralInsights.*",
            "recommender.cloudManageabilityGeneralRecommendations.*",
            "recommender.locations.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Cloud Manageability General Recommendations Recommender Admin"
        },
        {
          "description": "Viewer of Cloud Manageability General Recommendations Insights and Recommendations.",
          "id": "roles/recommender.cloudManageabilityRecommendationViewer",
          "is_beta": true,
          "permissions": [
            "recommender.cloudManageabilityGeneralInsights.get",
            "recommender.cloudManageabilityGeneralInsights.list",
            "recommender.cloudManageabilityGeneralRecommendations.get",
            "recommender.cloudManageabilityGeneralRecommendations.list",
            "recommender.locations.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Cloud Manageability General Recommendations Recommender Viewer"
        },
        {
          "description": "Admin of Cloud Performance General Recommendations Insights and Recommendations.",
          "id": "roles/recommender.cloudPerformanceRecommendationAdmin",
          "is_beta": true,
          "permissions": [
            "recommender.cloudPerformanceGeneralInsights.*",
            "recommender.cloudPerformanceGeneralRecommendations.*",
            "recommender.locations.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Cloud Performance General Recommendations Recommender Admin"
        },
        {
          "description": "Viewer of Cloud Performance General Recommendations Insights and Recommendations.",
          "id": "roles/recommender.cloudPerformanceRecommendationViewer",
          "is_beta": true,
          "permissions": [
            "recommender.cloudPerformanceGeneralInsights.get",
            "recommender.cloudPerformanceGeneralInsights.list",
            "recommender.cloudPerformanceGeneralRecommendations.get",
            "recommender.cloudPerformanceGeneralRecommendations.list",
            "recommender.locations.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Cloud Performance General Recommendations Recommender Viewer"
        },
        {
          "description": "Admin of Cloud Reliability General Recommendations Insights and Recommendations.",
          "id": "roles/recommender.cloudReliabilityRecommendationAdmin",
          "is_beta": true,
          "permissions": [
            "recommender.cloudReliabilityGeneralInsights.*",
            "recommender.cloudReliabilityGeneralRecommendations.*",
            "recommender.locations.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Cloud Reliability General Recommendations Recommender Admin"
        },
        {
          "description": "Viewer of Cloud Reliability General Recommendations Insights and Recommendations.",
          "id": "roles/recommender.cloudReliabilityRecommendationViewer",
          "is_beta": true,
          "permissions": [
            "recommender.cloudReliabilityGeneralInsights.get",
            "recommender.cloudReliabilityGeneralInsights.list",
            "recommender.cloudReliabilityGeneralRecommendations.get",
            "recommender.cloudReliabilityGeneralRecommendations.list",
            "recommender.locations.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Cloud Reliability General Recommendations Recommender Viewer"
        },
        {
          "description": "Admin of Cloud Security General Recommendations Insights and Recommendations.",
          "id": "roles/recommender.cloudSecurityRecommendationAdmin",
          "is_beta": true,
          "permissions": [
            "recommender.cloudSecurityGeneralInsights.*",
            "recommender.cloudSecurityGeneralRecommendations.*",
            "recommender.locations.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Cloud Security General Recommendations Recommender Admin"
        },
        {
          "description": "Viewer of Cloud Security General Recommendations Insights and Recommendations.",
          "id": "roles/recommender.cloudSecurityRecommendationViewer",
          "is_beta": true,
          "permissions": [
            "recommender.cloudSecurityGeneralInsights.get",
            "recommender.cloudSecurityGeneralInsights.list",
            "recommender.cloudSecurityGeneralRecommendations.get",
            "recommender.cloudSecurityGeneralRecommendations.list",
            "recommender.locations.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Cloud Security General Recommendations Recommender Viewer"
        },
        {
          "description": "Admin of Cloud SQL insights and recommendations.",
          "id": "roles/recommender.cloudsqlAdmin",
          "is_beta": true,
          "permissions": [
            "recommender.cloudsqlIdleInstanceRecommendations.*",
            "recommender.cloudsqlInstanceActivityInsights.*",
            "recommender.cloudsqlInstanceCpuUsageInsights.*",
            "recommender.cloudsqlInstanceDiskUsageTrendInsights.*",
            "recommender.cloudsqlInstanceMemoryUsageInsights.*",
            "recommender.cloudsqlInstanceOomProbabilityInsights.*",
            "recommender.cloudsqlInstanceOutOfDiskRecommendations.*",
            "recommender.cloudsqlInstancePerformanceInsights.*",
            "recommender.cloudsqlInstancePerformanceRecommendations.*",
            "recommender.cloudsqlInstanceReliabilityInsights.*",
            "recommender.cloudsqlInstanceReliabilityRecommendations.*",
            "recommender.cloudsqlInstanceSecurityInsights.*",
            "recommender.cloudsqlInstanceSecurityRecommendations.*",
            "recommender.cloudsqlInstanceUnderprovisionedCpuUsageInsights.*",
            "recommender.cloudsqlInstanceUnderprovisionedMemoryUsageInsights.*",
            "recommender.cloudsqlOverprovisionedInstanceRecommendations.*",
            "recommender.cloudsqlUnderProvisionedInstanceRecommendations.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Cloud SQL Recommender Admin"
        },
        {
          "description": "Viewer of Cloud SQL insights and recommendations.",
          "id": "roles/recommender.cloudsqlViewer",
          "is_beta": true,
          "permissions": [
            "recommender.cloudsqlIdleInstanceRecommendations.get",
            "recommender.cloudsqlIdleInstanceRecommendations.list",
            "recommender.cloudsqlInstanceActivityInsights.get",
            "recommender.cloudsqlInstanceActivityInsights.list",
            "recommender.cloudsqlInstanceCpuUsageInsights.get",
            "recommender.cloudsqlInstanceCpuUsageInsights.list",
            "recommender.cloudsqlInstanceDiskUsageTrendInsights.get",
            "recommender.cloudsqlInstanceDiskUsageTrendInsights.list",
            "recommender.cloudsqlInstanceMemoryUsageInsights.get",
            "recommender.cloudsqlInstanceMemoryUsageInsights.list",
            "recommender.cloudsqlInstanceOomProbabilityInsights.get",
            "recommender.cloudsqlInstanceOomProbabilityInsights.list",
            "recommender.cloudsqlInstanceOutOfDiskRecommendations.get",
            "recommender.cloudsqlInstanceOutOfDiskRecommendations.list",
            "recommender.cloudsqlInstancePerformanceInsights.get",
            "recommender.cloudsqlInstancePerformanceInsights.list",
            "recommender.cloudsqlInstancePerformanceRecommendations.get",
            "recommender.cloudsqlInstancePerformanceRecommendations.list",
            "recommender.cloudsqlInstanceReliabilityInsights.get",
            "recommender.cloudsqlInstanceReliabilityInsights.list",
            "recommender.cloudsqlInstanceReliabilityRecommendations.get",
            "recommender.cloudsqlInstanceReliabilityRecommendations.list",
            "recommender.cloudsqlInstanceSecurityInsights.get",
            "recommender.cloudsqlInstanceSecurityInsights.list",
            "recommender.cloudsqlInstanceSecurityRecommendations.get",
            "recommender.cloudsqlInstanceSecurityRecommendations.list",
            "recommender.cloudsqlInstanceUnderprovisionedCpuUsageInsights.get",
            "recommender.cloudsqlInstanceUnderprovisionedCpuUsageInsights.list",
            "recommender.cloudsqlInstanceUnderprovisionedMemoryUsageInsights.get",
            "recommender.cloudsqlInstanceUnderprovisionedMemoryUsageInsights.list",
            "recommender.cloudsqlOverprovisionedInstanceRecommendations.get",
            "recommender.cloudsqlOverprovisionedInstanceRecommendations.list",
            "recommender.cloudsqlUnderProvisionedInstanceRecommendations.get",
            "recommender.cloudsqlUnderProvisionedInstanceRecommendations.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Cloud SQL Recommender Viewer"
        },
        {
          "description": "Admin of compute recommendations.",
          "id": "roles/recommender.computeAdmin",
          "is_beta": false,
          "permissions": [
            "recommender.computeAddressIdleResourceInsights.*",
            "recommender.computeAddressIdleResourceRecommendations.*",
            "recommender.computeDiskIdleResourceInsights.*",
            "recommender.computeDiskIdleResourceRecommendations.*",
            "recommender.computeImageIdleResourceInsights.*",
            "recommender.computeImageIdleResourceRecommendations.*",
            "recommender.computeInstanceCpuUsageInsights.*",
            "recommender.computeInstanceCpuUsagePredictionInsights.*",
            "recommender.computeInstanceCpuUsageTrendInsights.*",
            "recommender.computeInstanceGroupManagerCpuUsageInsights.*",
            "recommender.computeInstanceGroupManagerCpuUsagePredictionInsights.*",
            "recommender.computeInstanceGroupManagerCpuUsageTrendInsights.*",
            "recommender.computeInstanceGroupManagerMachineTypeRecommendations.*",
            "recommender.computeInstanceGroupManagerMemoryUsageInsights.*",
            "recommender.computeInstanceGroupManagerMemoryUsagePredictionInsights.*",
            "recommender.computeInstanceIdleResourceRecommendations.*",
            "recommender.computeInstanceIdleResourceRecommenderConfig.*",
            "recommender.computeInstanceMachineTypeRecommendations.*",
            "recommender.computeInstanceMemoryUsageInsights.*",
            "recommender.computeInstanceMemoryUsagePredictionInsights.*",
            "recommender.computeInstanceNetworkThroughputInsights.*",
            "recommender.locations.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Compute Recommender Admin"
        },
        {
          "description": "Viewer of compute recommendations.",
          "id": "roles/recommender.computeViewer",
          "is_beta": false,
          "permissions": [
            "recommender.computeAddressIdleResourceInsights.get",
            "recommender.computeAddressIdleResourceInsights.list",
            "recommender.computeAddressIdleResourceRecommendations.get",
            "recommender.computeAddressIdleResourceRecommendations.list",
            "recommender.computeDiskIdleResourceInsights.get",
            "recommender.computeDiskIdleResourceInsights.list",
            "recommender.computeDiskIdleResourceRecommendations.get",
            "recommender.computeDiskIdleResourceRecommendations.list",
            "recommender.computeImageIdleResourceInsights.get",
            "recommender.computeImageIdleResourceInsights.list",
            "recommender.computeImageIdleResourceRecommendations.get",
            "recommender.computeImageIdleResourceRecommendations.list",
            "recommender.computeInstanceCpuUsageInsights.get",
            "recommender.computeInstanceCpuUsageInsights.list",
            "recommender.computeInstanceCpuUsagePredictionInsights.get",
            "recommender.computeInstanceCpuUsagePredictionInsights.list",
            "recommender.computeInstanceCpuUsageTrendInsights.get",
            "recommender.computeInstanceCpuUsageTrendInsights.list",
            "recommender.computeInstanceGroupManagerCpuUsageInsights.get",
            "recommender.computeInstanceGroupManagerCpuUsageInsights.list",
            "recommender.computeInstanceGroupManagerCpuUsagePredictionInsights.get",
            "recommender.computeInstanceGroupManagerCpuUsagePredictionInsights.list",
            "recommender.computeInstanceGroupManagerCpuUsageTrendInsights.get",
            "recommender.computeInstanceGroupManagerCpuUsageTrendInsights.list",
            "recommender.computeInstanceGroupManagerMachineTypeRecommendations.get",
            "recommender.computeInstanceGroupManagerMachineTypeRecommendations.list",
            "recommender.computeInstanceGroupManagerMemoryUsageInsights.get",
            "recommender.computeInstanceGroupManagerMemoryUsageInsights.list",
            "recommender.computeInstanceGroupManagerMemoryUsagePredictionInsights.get",
            "recommender.computeInstanceGroupManagerMemoryUsagePredictionInsights.list",
            "recommender.computeInstanceIdleResourceRecommendations.get",
            "recommender.computeInstanceIdleResourceRecommendations.list",
            "recommender.computeInstanceMachineTypeRecommendations.get",
            "recommender.computeInstanceMachineTypeRecommendations.list",
            "recommender.computeInstanceMemoryUsageInsights.get",
            "recommender.computeInstanceMemoryUsageInsights.list",
            "recommender.computeInstanceMemoryUsagePredictionInsights.get",
            "recommender.computeInstanceMemoryUsagePredictionInsights.list",
            "recommender.computeInstanceNetworkThroughputInsights.get",
            "recommender.computeInstanceNetworkThroughputInsights.list",
            "recommender.locations.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Compute Recommender Viewer"
        },
        {
          "description": "Admin of GKE Diagnosis Insights and Recommendations.",
          "id": "roles/recommender.containerDiagnosisAdmin",
          "is_beta": false,
          "permissions": [
            "recommender.containerDiagnosisInsights.*",
            "recommender.containerDiagnosisRecommendations.*",
            "recommender.locations.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "GKE Diagnosis Recommender Admin"
        },
        {
          "description": "Viewer of GKE Diagnosis Insights and Recommendations.",
          "id": "roles/recommender.containerDiagnosisViewer",
          "is_beta": false,
          "permissions": [
            "recommender.containerDiagnosisInsights.get",
            "recommender.containerDiagnosisInsights.list",
            "recommender.containerDiagnosisRecommendations.get",
            "recommender.containerDiagnosisRecommendations.list",
            "recommender.locations.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "GKE Diagnosis Recommender Viewer"
        },
        {
          "description": "Admin of Diagnostics recommendations.",
          "id": "roles/recommender.dataflowDiagnosticsAdmin",
          "is_beta": false,
          "permissions": [
            "recommender.dataflowDiagnosticsInsights.*",
            "recommender.locations.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Dataflow Diagnostics Admin"
        },
        {
          "description": "Viewer of Diagnostics recommendations.",
          "id": "roles/recommender.dataflowDiagnosticsViewer",
          "is_beta": false,
          "permissions": [
            "recommender.dataflowDiagnosticsInsights.get",
            "recommender.dataflowDiagnosticsInsights.list",
            "recommender.locations.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Dataflow Diagnostics Viewer"
        },
        {
          "description": "Admin of Error Reporting Insights and Recommendations.",
          "id": "roles/recommender.errorReportingAdmin",
          "is_beta": false,
          "permissions": [
            "recommender.errorReportingInsights.*",
            "recommender.errorReportingRecommendations.*",
            "recommender.locations.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Error Reporting Recommender Admin"
        },
        {
          "description": "Viewer of Error Reporting Insights and Recommendations.",
          "id": "roles/recommender.errorReportingViewer",
          "is_beta": false,
          "permissions": [
            "recommender.errorReportingInsights.get",
            "recommender.errorReportingInsights.list",
            "recommender.errorReportingRecommendations.get",
            "recommender.errorReportingRecommendations.list",
            "recommender.locations.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Error Reporting Recommender Viewer"
        },
        {
          "description": "Admin of Firestore Database Reliability Insights and Recommendations.",
          "id": "roles/recommender.firestoredatabasereliabilityAdmin",
          "is_beta": false,
          "permissions": [
            "recommender.firestoreDatabaseReliabilityInsights.*",
            "recommender.firestoreDatabaseReliabilityRecommendations.*",
            "recommender.locations.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Firestore Database Reliability Recommender Admin"
        },
        {
          "description": "Viewer of Firestore Database Reliability Insights and Recommendations.",
          "id": "roles/recommender.firestoredatabasereliabilityViewer",
          "is_beta": false,
          "permissions": [
            "recommender.firestoreDatabaseReliabilityInsights.get",
            "recommender.firestoreDatabaseReliabilityInsights.list",
            "recommender.firestoreDatabaseReliabilityRecommendations.get",
            "recommender.firestoreDatabaseReliabilityRecommendations.list",
            "recommender.locations.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Firestore Database Reliability Recommender Viewer"
        },
        {
          "description": "Admin of Firewall insights and recommendations.",
          "id": "roles/recommender.firewallAdmin",
          "is_beta": false,
          "permissions": [
            "monitoring.timeSeries.list",
            "recommender.computeFirewallInsightTypeConfigs.*",
            "recommender.computeFirewallInsights.*",
            "recommender.locations.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Firewall Recommender Admin"
        },
        {
          "description": "Viewer of Firewall insights and recommendations.",
          "id": "roles/recommender.firewallViewer",
          "is_beta": false,
          "permissions": [
            "monitoring.timeSeries.list",
            "recommender.computeFirewallInsightTypeConfigs.get",
            "recommender.computeFirewallInsights.get",
            "recommender.computeFirewallInsights.list",
            "recommender.locations.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Firewall Recommender Viewer"
        },
        {
          "description": "Admin of all Google Maps Platform insights and recommendations.",
          "id": "roles/recommender.gmpAdmin",
          "is_beta": false,
          "permissions": [
            "recommender.gmpGuidedExperienceInsights.*",
            "recommender.gmpGuidedExperienceRecommendations.*",
            "recommender.gmpProjectManagementInsights.*",
            "recommender.gmpProjectManagementRecommendations.*",
            "recommender.gmpProjectProductSuggestionsInsights.*",
            "recommender.gmpProjectProductSuggestionsRecommendations.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Google Maps Platform Insights/Recommendations Admin"
        },
        {
          "description": "Viewer of all Google Maps Platform insights and recommendations.",
          "id": "roles/recommender.gmpViewer",
          "is_beta": false,
          "permissions": [
            "recommender.gmpGuidedExperienceInsights.get",
            "recommender.gmpGuidedExperienceInsights.list",
            "recommender.gmpGuidedExperienceRecommendations.get",
            "recommender.gmpGuidedExperienceRecommendations.list",
            "recommender.gmpProjectManagementInsights.get",
            "recommender.gmpProjectManagementInsights.list",
            "recommender.gmpProjectManagementRecommendations.get",
            "recommender.gmpProjectManagementRecommendations.list",
            "recommender.gmpProjectProductSuggestionsInsights.get",
            "recommender.gmpProjectProductSuggestionsInsights.list",
            "recommender.gmpProjectProductSuggestionsRecommendations.get",
            "recommender.gmpProjectProductSuggestionsRecommendations.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Google Maps Platform Insights/Recommendations Viewer"
        },
        {
          "description": "Admin of IAM recommendations.",
          "id": "roles/recommender.iamAdmin",
          "is_beta": false,
          "permissions": [
            "recommender.iamPolicyInsights.*",
            "recommender.iamPolicyLateralMovementInsights.*",
            "recommender.iamPolicyRecommendations.*",
            "recommender.iamPolicyRecommenderConfig.*",
            "recommender.iamServiceAccountInsights.*",
            "recommender.locations.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "IAM Recommender Admin"
        },
        {
          "description": "Viewer of IAM recommendations.",
          "id": "roles/recommender.iamViewer",
          "is_beta": false,
          "permissions": [
            "recommender.iamPolicyInsights.get",
            "recommender.iamPolicyInsights.list",
            "recommender.iamPolicyLateralMovementInsights.get",
            "recommender.iamPolicyLateralMovementInsights.list",
            "recommender.iamPolicyRecommendations.get",
            "recommender.iamPolicyRecommendations.list",
            "recommender.iamPolicyRecommenderConfig.get",
            "recommender.iamServiceAccountInsights.get",
            "recommender.iamServiceAccountInsights.list",
            "recommender.locations.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "IAM Recommender Viewer"
        },
        {
          "description": "Admin of IAM Policy Change Risk Insights and Recommendations.",
          "id": "roles/recommender.iampolicychangeriskAdmin",
          "is_beta": true,
          "permissions": [
            "recommender.iamPolicyChangeRiskInsights.*",
            "recommender.iamPolicyChangeRiskRecommendations.*",
            "recommender.locations.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "IAM Policy Change Risk Recommender Admin"
        },
        {
          "description": "Viewer of IAM Policy Change Risk Insights and Recommendations.",
          "id": "roles/recommender.iampolicychangeriskViewer",
          "is_beta": true,
          "permissions": [
            "recommender.iamPolicyChangeRiskInsights.get",
            "recommender.iamPolicyChangeRiskInsights.list",
            "recommender.iamPolicyChangeRiskRecommendations.get",
            "recommender.iamPolicyChangeRiskRecommendations.list",
            "recommender.locations.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "IAM Policy Change Risk Recommender Viewer"
        },
        {
          "description": "Admin of Memorystore Manageability Insights and Recommendations.",
          "id": "roles/recommender.memorystoremanageabilityAdmin",
          "is_beta": true,
          "permissions": [
            "recommender.locations.*",
            "recommender.memorystoreManageabilityInsights.*",
            "recommender.memorystoreManageabilityRecommendations.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Memorystore Manageability Recommender Admin"
        },
        {
          "description": "Viewer of Memorystore Manageability Insights and Recommendations.",
          "id": "roles/recommender.memorystoremanageabilityViewer",
          "is_beta": true,
          "permissions": [
            "recommender.locations.*",
            "recommender.memorystoreManageabilityInsights.get",
            "recommender.memorystoreManageabilityInsights.list",
            "recommender.memorystoreManageabilityRecommendations.get",
            "recommender.memorystoreManageabilityRecommendations.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Memorystore Manageability Recommender Viewer"
        },
        {
          "description": "Admin of Memorystore Performance Insights and Recommendations.",
          "id": "roles/recommender.memorystoreperformanceAdmin",
          "is_beta": true,
          "permissions": [
            "recommender.locations.*",
            "recommender.memorystorePerformanceInsights.*",
            "recommender.memorystorePerformanceRecommendations.*",
            "recommender.memorystoreUtilizationInsights.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Memorystore Performance Recommender Admin"
        },
        {
          "description": "Viewer of Memorystore Performance Insights and Recommendations.",
          "id": "roles/recommender.memorystoreperformanceViewer",
          "is_beta": true,
          "permissions": [
            "recommender.locations.*",
            "recommender.memorystorePerformanceInsights.get",
            "recommender.memorystorePerformanceInsights.list",
            "recommender.memorystorePerformanceRecommendations.get",
            "recommender.memorystorePerformanceRecommendations.list",
            "recommender.memorystoreUtilizationInsights.get",
            "recommender.memorystoreUtilizationInsights.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Memorystore Performance Recommender Viewer"
        },
        {
          "description": "Admin of Memorystore Reliability Insights and Recommendations.",
          "id": "roles/recommender.memorystorereliabilityAdmin",
          "is_beta": true,
          "permissions": [
            "recommender.locations.*",
            "recommender.memorystoreReliabilityInsights.*",
            "recommender.memorystoreReliabilityRecommendations.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Memorystore Reliability Recommender Admin"
        },
        {
          "description": "Viewer of Memorystore Reliability Insights and Recommendations.",
          "id": "roles/recommender.memorystorereliabilityViewer",
          "is_beta": true,
          "permissions": [
            "recommender.locations.*",
            "recommender.memorystoreReliabilityInsights.get",
            "recommender.memorystoreReliabilityInsights.list",
            "recommender.memorystoreReliabilityRecommendations.get",
            "recommender.memorystoreReliabilityRecommendations.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Memorystore Reliability Recommender Viewer"
        },
        {
          "description": "Admin of Network Analyzer Insights and Recommendations.",
          "id": "roles/recommender.networkAnalyzerAdmin",
          "is_beta": false,
          "permissions": [
            "recommender.locations.*",
            "recommender.networkAnalyzerCloudSqlInsights.*",
            "recommender.networkAnalyzerDynamicRouteInsights.*",
            "recommender.networkAnalyzerGkeConnectivityInsights.*",
            "recommender.networkAnalyzerGkeIpAddressInsights.*",
            "recommender.networkAnalyzerGkeServiceAccountInsights.*",
            "recommender.networkAnalyzerIpAddressInsights.*",
            "recommender.networkAnalyzerLoadBalancerInsights.*",
            "recommender.networkAnalyzerVpcConnectivityInsights.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Network Analyzer Recommender Admin"
        },
        {
          "description": "Admin of Network Analyzer Cloud SQL Insights and Recommendations.",
          "id": "roles/recommender.networkAnalyzerCloudSqlAdmin",
          "is_beta": false,
          "permissions": [
            "recommender.locations.*",
            "recommender.networkAnalyzerCloudSqlInsights.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Network Analyzer Cloud SQL Recommender Admin"
        },
        {
          "description": "Viewer of Network Analyzer Cloud SQL Insights and Recommendations.",
          "id": "roles/recommender.networkAnalyzerCloudSqlViewer",
          "is_beta": false,
          "permissions": [
            "recommender.locations.*",
            "recommender.networkAnalyzerCloudSqlInsights.get",
            "recommender.networkAnalyzerCloudSqlInsights.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Network Analyzer Cloud SQL Recommender Viewer"
        },
        {
          "description": "Admin of Network Analyzer Dynamic Route Insights and Recommendations.",
          "id": "roles/recommender.networkAnalyzerDynamicRouteAdmin",
          "is_beta": false,
          "permissions": [
            "recommender.locations.*",
            "recommender.networkAnalyzerDynamicRouteInsights.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Network Analyzer Dynamic Route Recommender Admin"
        },
        {
          "description": "Viewer of Network Analyzer Dynamic Route Insights and Recommendations.",
          "id": "roles/recommender.networkAnalyzerDynamicRouteViewer",
          "is_beta": false,
          "permissions": [
            "recommender.locations.*",
            "recommender.networkAnalyzerDynamicRouteInsights.get",
            "recommender.networkAnalyzerDynamicRouteInsights.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Network Analyzer Dynamic Route Recommender Viewer"
        },
        {
          "description": "Admin of Network Analyzer GKE Connectivity Insights and Recommendations.",
          "id": "roles/recommender.networkAnalyzerGkeConnectivityAdmin",
          "is_beta": false,
          "permissions": [
            "recommender.locations.*",
            "recommender.networkAnalyzerGkeConnectivityInsights.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Network Analyzer GKE Connectivity Recommender Admin"
        },
        {
          "description": "Viewer of Network Analyzer GKE Connectivity Insights and Recommendations.",
          "id": "roles/recommender.networkAnalyzerGkeConnectivityViewer",
          "is_beta": false,
          "permissions": [
            "recommender.locations.*",
            "recommender.networkAnalyzerGkeConnectivityInsights.get",
            "recommender.networkAnalyzerGkeConnectivityInsights.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Network Analyzer GKE Connectivity Recommender Viewer"
        },
        {
          "description": "Admin of Network Analyzer GKE IP Address Insights and Recommendations.",
          "id": "roles/recommender.networkAnalyzerGkeIpAddressAdmin",
          "is_beta": false,
          "permissions": [
            "recommender.locations.*",
            "recommender.networkAnalyzerGkeIpAddressInsights.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Network Analyzer GKE IP Address Recommender Admin"
        },
        {
          "description": "Viewer of Network Analyzer GKE IP Address Insights and Recommendations.",
          "id": "roles/recommender.networkAnalyzerGkeIpAddressViewer",
          "is_beta": false,
          "permissions": [
            "recommender.locations.*",
            "recommender.networkAnalyzerGkeIpAddressInsights.get",
            "recommender.networkAnalyzerGkeIpAddressInsights.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Network Analyzer GKE IP Address Recommender Viewer"
        },
        {
          "description": "Admin of Network Analyzer GKE Service Account Insights Insights and Recommendations.",
          "id": "roles/recommender.networkAnalyzerGkeServiceAccountAdmin",
          "is_beta": false,
          "permissions": [
            "recommender.locations.*",
            "recommender.networkAnalyzerGkeServiceAccountInsights.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Network Analyzer GKE Service Account Insights Recommender Admin"
        },
        {
          "description": "Viewer of Network Analyzer GKE Service Account Insights Insights and Recommendations.",
          "id": "roles/recommender.networkAnalyzerGkeServiceAccountViewer",
          "is_beta": false,
          "permissions": [
            "recommender.locations.*",
            "recommender.networkAnalyzerGkeServiceAccountInsights.get",
            "recommender.networkAnalyzerGkeServiceAccountInsights.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Network Analyzer GKE Service Account Insights Recommender Viewer"
        },
        {
          "description": "Admin of Network Analyzer IP Address Insights and Recommendations.",
          "id": "roles/recommender.networkAnalyzerIpAddressAdmin",
          "is_beta": false,
          "permissions": [
            "recommender.locations.*",
            "recommender.networkAnalyzerIpAddressInsights.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Network Analyzer IP Address Recommender Admin"
        },
        {
          "description": "Viewer of Network Analyzer IP Address Insights and Recommendations.",
          "id": "roles/recommender.networkAnalyzerIpAddressViewer",
          "is_beta": false,
          "permissions": [
            "recommender.locations.*",
            "recommender.networkAnalyzerIpAddressInsights.get",
            "recommender.networkAnalyzerIpAddressInsights.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Network Analyzer IP Address Recommender Viewer"
        },
        {
          "description": "Admin of Network Analyzer Load Balancer Insights and Recommendations.",
          "id": "roles/recommender.networkAnalyzerLoadBalancerAdmin",
          "is_beta": false,
          "permissions": [
            "recommender.locations.*",
            "recommender.networkAnalyzerLoadBalancerInsights.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Network Analyzer Load Balancer Recommender Admin"
        },
        {
          "description": "Viewer of Network Analyzer Load Balancer Insights and Recommendations.",
          "id": "roles/recommender.networkAnalyzerLoadBalancerViewer",
          "is_beta": false,
          "permissions": [
            "recommender.locations.*",
            "recommender.networkAnalyzerLoadBalancerInsights.get",
            "recommender.networkAnalyzerLoadBalancerInsights.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Network Analyzer Load Balancer Recommender Viewer"
        },
        {
          "description": "Viewer of Network Analyzer Insights and Recommendations.",
          "id": "roles/recommender.networkAnalyzerViewer",
          "is_beta": false,
          "permissions": [
            "recommender.locations.*",
            "recommender.networkAnalyzerCloudSqlInsights.get",
            "recommender.networkAnalyzerCloudSqlInsights.list",
            "recommender.networkAnalyzerDynamicRouteInsights.get",
            "recommender.networkAnalyzerDynamicRouteInsights.list",
            "recommender.networkAnalyzerGkeConnectivityInsights.get",
            "recommender.networkAnalyzerGkeConnectivityInsights.list",
            "recommender.networkAnalyzerGkeIpAddressInsights.get",
            "recommender.networkAnalyzerGkeIpAddressInsights.list",
            "recommender.networkAnalyzerGkeServiceAccountInsights.get",
            "recommender.networkAnalyzerGkeServiceAccountInsights.list",
            "recommender.networkAnalyzerIpAddressInsights.get",
            "recommender.networkAnalyzerIpAddressInsights.list",
            "recommender.networkAnalyzerLoadBalancerInsights.get",
            "recommender.networkAnalyzerLoadBalancerInsights.list",
            "recommender.networkAnalyzerVpcConnectivityInsights.get",
            "recommender.networkAnalyzerVpcConnectivityInsights.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Network Analyzer Recommender Viewer"
        },
        {
          "description": "Admin of Network Analyzer VPC Connectivity Insights and Recommendations.",
          "id": "roles/recommender.networkAnalyzerVpcConnectivityAdmin",
          "is_beta": false,
          "permissions": [
            "recommender.locations.*",
            "recommender.networkAnalyzerVpcConnectivityInsights.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Network Analyzer VPC Connectivity Recommender Admin"
        },
        {
          "description": "Viewer of Network Analyzer VPC Connectivity Insights and Recommendations.",
          "id": "roles/recommender.networkAnalyzerVpcConnectivityViewer",
          "is_beta": false,
          "permissions": [
            "recommender.locations.*",
            "recommender.networkAnalyzerVpcConnectivityInsights.get",
            "recommender.networkAnalyzerVpcConnectivityInsights.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Network Analyzer VPC Connectivity Recommender Viewer"
        },
        {
          "description": "Admin of Org Policy Insights and Recommendations.",
          "id": "roles/recommender.orgPolicyAdmin",
          "is_beta": true,
          "permissions": [
            "recommender.locations.*",
            "recommender.orgPolicyInsights.*",
            "recommender.orgPolicyRecommendations.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Org Policy Recommender Admin"
        },
        {
          "description": "Viewer of Org Policy Insights and Recommendations.",
          "id": "roles/recommender.orgPolicyViewer",
          "is_beta": true,
          "permissions": [
            "recommender.locations.*",
            "recommender.orgPolicyInsights.get",
            "recommender.orgPolicyInsights.list",
            "recommender.orgPolicyRecommendations.get",
            "recommender.orgPolicyRecommendations.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Org Policy Recommender Viewer"
        },
        {
          "description": "Admin of all Product Suggestion insights and recommendations.",
          "id": "roles/recommender.productSuggestionAdmin",
          "is_beta": true,
          "permissions": [
            "recommender.locations.*",
            "recommender.loggingProductSuggestionContainerInsights.*",
            "recommender.loggingProductSuggestionContainerRecommendations.*",
            "recommender.monitoringProductSuggestionComputeInsights.*",
            "recommender.monitoringProductSuggestionComputeRecommendations.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Product Suggestion Recommenders Admin"
        },
        {
          "description": "Viewer of all Product Suggestion insights and recommendations.",
          "id": "roles/recommender.productSuggestionViewer",
          "is_beta": true,
          "permissions": [
            "recommender.locations.*",
            "recommender.loggingProductSuggestionContainerInsights.get",
            "recommender.loggingProductSuggestionContainerInsights.list",
            "recommender.loggingProductSuggestionContainerRecommendations.get",
            "recommender.loggingProductSuggestionContainerRecommendations.list",
            "recommender.monitoringProductSuggestionComputeInsights.get",
            "recommender.monitoringProductSuggestionComputeInsights.list",
            "recommender.monitoringProductSuggestionComputeRecommendations.get",
            "recommender.monitoringProductSuggestionComputeRecommendations.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Product Suggestion Recommenders Viewer"
        },
        {
          "description": "Admin of Project Usage Commitment Recommender.",
          "id": "roles/recommender.projectCudAdmin",
          "is_beta": true,
          "permissions": [
            "recommender.commitmentUtilizationInsights.*",
            "recommender.locations.*",
            "recommender.spendBasedCommitmentRecommenderConfig.get",
            "recommender.usageCommitmentRecommendations.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Project Usage Commitment Recommender Admin"
        },
        {
          "description": "Viewer of Project Usage Commitment Recommender.",
          "id": "roles/recommender.projectCudViewer",
          "is_beta": true,
          "permissions": [
            "recommender.commitmentUtilizationInsights.get",
            "recommender.commitmentUtilizationInsights.list",
            "recommender.locations.*",
            "recommender.spendBasedCommitmentRecommenderConfig.get",
            "recommender.usageCommitmentRecommendations.get",
            "recommender.usageCommitmentRecommendations.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Project Usage Commitment Recommender Viewer"
        },
        {
          "description": "Admin of Project Utilization insights and recommendations.",
          "id": "roles/recommender.projectUtilAdmin",
          "is_beta": false,
          "permissions": [
            "recommender.resourcemanagerProjectUtilizationInsightTypeConfigs.*",
            "recommender.resourcemanagerProjectUtilizationInsights.*",
            "recommender.resourcemanagerProjectUtilizationRecommendations.*",
            "recommender.resourcemanagerProjectUtilizationRecommenderConfigs.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Project Utilization Recommender Admin"
        },
        {
          "description": "Viewer of Project Utilization insights and recommendations.",
          "id": "roles/recommender.projectUtilViewer",
          "is_beta": false,
          "permissions": [
            "recommender.resourcemanagerProjectUtilizationInsightTypeConfigs.get",
            "recommender.resourcemanagerProjectUtilizationInsights.get",
            "recommender.resourcemanagerProjectUtilizationInsights.list",
            "recommender.resourcemanagerProjectUtilizationRecommendations.get",
            "recommender.resourcemanagerProjectUtilizationRecommendations.list",
            "recommender.resourcemanagerProjectUtilizationRecommenderConfigs.get",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Project Utilization Recommender Viewer"
        },
        {
          "description": "Admin of RecentChange RecommenderConfigs.",
          "id": "roles/recommender.recentChangeConfigAdmin",
          "is_beta": false,
          "permissions": [
            "recommender.cloudRecentChangeRecommenderConfig.*",
            "recommender.locations.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "RecentChange RecommenderConfig Admin"
        },
        {
          "description": "Admin of Recent Change Risk Insights and Recommendations.",
          "id": "roles/recommender.recentchangeriskAdmin",
          "is_beta": false,
          "permissions": [
            "recommender.cloudRecentChangeInsights.*",
            "recommender.cloudRecentChangeRecommendations.*",
            "recommender.cloudRecentChangeRecommenderConfig.*",
            "recommender.locations.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Recent Change Risk Recommender Admin"
        },
        {
          "description": "Viewer of Recent Change Risk Insights and Recommendations.",
          "id": "roles/recommender.recentchangeriskViewer",
          "is_beta": false,
          "permissions": [
            "recommender.cloudRecentChangeInsights.get",
            "recommender.cloudRecentChangeInsights.list",
            "recommender.cloudRecentChangeRecommendations.get",
            "recommender.cloudRecentChangeRecommendations.list",
            "recommender.locations.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Recent Change Risk Recommender Viewer"
        },
        {
          "description": "Admin of Service Limit insights and recommendations.",
          "id": "roles/recommender.serviceLimitAdmin",
          "is_beta": true,
          "permissions": [
            "recommender.resourcemanagerServiceLimitInsights.*",
            "recommender.resourcemanagerServiceLimitRecommendations.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Service Limit Recommender Admin"
        },
        {
          "description": "Viewer of Service Limit insights and recommendations.",
          "id": "roles/recommender.serviceLimitViewer",
          "is_beta": true,
          "permissions": [
            "recommender.resourcemanagerServiceLimitInsights.get",
            "recommender.resourcemanagerServiceLimitInsights.list",
            "recommender.resourcemanagerServiceLimitRecommendations.get",
            "recommender.resourcemanagerServiceLimitRecommendations.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Service Limit Recommender Viewer"
        },
        {
          "description": "Admin of Service Account Change Risk Insights and Recommendations.",
          "id": "roles/recommender.serviceaccntchangeriskAdmin",
          "is_beta": true,
          "permissions": [
            "recommender.iamServiceAccountChangeRiskInsights.*",
            "recommender.iamServiceAccountChangeRiskRecommendations.*",
            "recommender.locations.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Service Account Change Risk Recommender Admin"
        },
        {
          "description": "Viewer of Service Account Change Risk Insights and Recommendations.",
          "id": "roles/recommender.serviceaccntchangeriskViewer",
          "is_beta": true,
          "permissions": [
            "recommender.iamServiceAccountChangeRiskInsights.get",
            "recommender.iamServiceAccountChangeRiskInsights.list",
            "recommender.iamServiceAccountChangeRiskRecommendations.get",
            "recommender.iamServiceAccountChangeRiskRecommendations.list",
            "recommender.locations.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Service Account Change Risk Recommender Viewer"
        },
        {
          "description": "Admin of Spanner Project Reliability Insights and Recommendations.",
          "id": "roles/recommender.spannerAdmin",
          "is_beta": true,
          "permissions": [
            "recommender.locations.*",
            "recommender.spannerProjectReliabilityInsights.*",
            "recommender.spannerProjectReliabilityRecommendations.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Spanner Project Reliability Recommender Admin"
        },
        {
          "description": "Viewer of Spanner Project Reliability Insights and Recommendations.",
          "id": "roles/recommender.spannerViewer",
          "is_beta": true,
          "permissions": [
            "recommender.locations.*",
            "recommender.spannerProjectReliabilityInsights.get",
            "recommender.spannerProjectReliabilityInsights.list",
            "recommender.spannerProjectReliabilityRecommendations.get",
            "recommender.spannerProjectReliabilityRecommendations.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Spanner Project Reliability Recommender Viewer"
        },
        {
          "description": "Admin of Spend Based Commitment Recommender.",
          "id": "roles/recommender.ucsAdmin",
          "is_beta": true,
          "permissions": [
            "billing.accounts.get",
            "billing.accounts.list",
            "recommender.locations.*",
            "recommender.spendBasedCommitmentInsights.*",
            "recommender.spendBasedCommitmentRecommendations.*",
            "recommender.spendBasedCommitmentRecommenderConfig.*"
          ],
          "title": "Spend Based Commitment Recommender Admin"
        },
        {
          "description": "Viewer of Spend Based Commitment Recommender.",
          "id": "roles/recommender.ucsViewer",
          "is_beta": true,
          "permissions": [
            "billing.accounts.get",
            "billing.accounts.list",
            "recommender.locations.*",
            "recommender.spendBasedCommitmentInsights.get",
            "recommender.spendBasedCommitmentInsights.list",
            "recommender.spendBasedCommitmentRecommendations.get",
            "recommender.spendBasedCommitmentRecommendations.list",
            "recommender.spendBasedCommitmentRecommenderConfig.get"
          ],
          "title": "Spend Based Commitment Recommender Viewer"
        },
        {
          "description": "Enables Get and List operations.",
          "id": "roles/recommender.viewer",
          "is_beta": false,
          "permissions": [
            "recommender.alloydbClusterPerformanceInsights.get",
            "recommender.alloydbClusterPerformanceInsights.list",
            "recommender.alloydbClusterPerformanceRecommendations.get",
            "recommender.alloydbClusterPerformanceRecommendations.list",
            "recommender.alloydbClusterReliabilityInsights.get",
            "recommender.alloydbClusterReliabilityInsights.list",
            "recommender.alloydbClusterReliabilityRecommendations.get",
            "recommender.alloydbClusterReliabilityRecommendations.list",
            "recommender.alloydbInstanceSecurityInsights.get",
            "recommender.alloydbInstanceSecurityInsights.list",
            "recommender.alloydbInstanceSecurityRecommendations.get",
            "recommender.alloydbInstanceSecurityRecommendations.list",
            "recommender.bigqueryCapacityCommitmentsInsights.get",
            "recommender.bigqueryCapacityCommitmentsInsights.list",
            "recommender.bigqueryCapacityCommitmentsRecommendations.get",
            "recommender.bigqueryCapacityCommitmentsRecommendations.list",
            "recommender.bigqueryMaterializedViewInsights.get",
            "recommender.bigqueryMaterializedViewInsights.list",
            "recommender.bigqueryMaterializedViewRecommendations.get",
            "recommender.bigqueryMaterializedViewRecommendations.list",
            "recommender.bigqueryPartitionClusterRecommendations.get",
            "recommender.bigqueryPartitionClusterRecommendations.list",
            "recommender.bigqueryTableStatsInsights.get",
            "recommender.bigqueryTableStatsInsights.list",
            "recommender.bigtableClusterPerformanceInsights.get",
            "recommender.bigtableClusterPerformanceInsights.list",
            "recommender.bigtableClusterPerformanceRecommendations.get",
            "recommender.bigtableClusterPerformanceRecommendations.list",
            "recommender.cloudAssetInsights.get",
            "recommender.cloudAssetInsights.list",
            "recommender.cloudCostGeneralInsights.get",
            "recommender.cloudCostGeneralInsights.list",
            "recommender.cloudCostGeneralRecommendations.get",
            "recommender.cloudCostGeneralRecommendations.list",
            "recommender.cloudDeprecationGeneralInsights.get",
            "recommender.cloudDeprecationGeneralInsights.list",
            "recommender.cloudDeprecationGeneralRecommendations.get",
            "recommender.cloudDeprecationGeneralRecommendations.list",
            "recommender.cloudFunctionsPerformanceInsights.get",
            "recommender.cloudFunctionsPerformanceInsights.list",
            "recommender.cloudFunctionsPerformanceRecommendations.get",
            "recommender.cloudFunctionsPerformanceRecommendations.list",
            "recommender.cloudManageabilityGeneralInsights.get",
            "recommender.cloudManageabilityGeneralInsights.list",
            "recommender.cloudManageabilityGeneralRecommendations.get",
            "recommender.cloudManageabilityGeneralRecommendations.list",
            "recommender.cloudPerformanceGeneralInsights.get",
            "recommender.cloudPerformanceGeneralInsights.list",
            "recommender.cloudPerformanceGeneralRecommendations.get",
            "recommender.cloudPerformanceGeneralRecommendations.list",
            "recommender.cloudRecentChangeInsights.get",
            "recommender.cloudRecentChangeInsights.list",
            "recommender.cloudRecentChangeRecommendations.get",
            "recommender.cloudRecentChangeRecommendations.list",
            "recommender.cloudRecentChangeRecommenderConfig.get",
            "recommender.cloudReliabilityGeneralInsights.get",
            "recommender.cloudReliabilityGeneralInsights.list",
            "recommender.cloudReliabilityGeneralRecommendations.get",
            "recommender.cloudReliabilityGeneralRecommendations.list",
            "recommender.cloudSecurityGeneralInsights.get",
            "recommender.cloudSecurityGeneralInsights.list",
            "recommender.cloudSecurityGeneralRecommendations.get",
            "recommender.cloudSecurityGeneralRecommendations.list",
            "recommender.cloudsqlIdleInstanceRecommendations.get",
            "recommender.cloudsqlIdleInstanceRecommendations.list",
            "recommender.cloudsqlInstanceActivityInsights.get",
            "recommender.cloudsqlInstanceActivityInsights.list",
            "recommender.cloudsqlInstanceCpuUsageInsights.get",
            "recommender.cloudsqlInstanceCpuUsageInsights.list",
            "recommender.cloudsqlInstanceDiskUsageTrendInsights.get",
            "recommender.cloudsqlInstanceDiskUsageTrendInsights.list",
            "recommender.cloudsqlInstanceMemoryUsageInsights.get",
            "recommender.cloudsqlInstanceMemoryUsageInsights.list",
            "recommender.cloudsqlInstanceOomProbabilityInsights.get",
            "recommender.cloudsqlInstanceOomProbabilityInsights.list",
            "recommender.cloudsqlInstanceOutOfDiskRecommendations.get",
            "recommender.cloudsqlInstanceOutOfDiskRecommendations.list",
            "recommender.cloudsqlInstancePerformanceInsights.get",
            "recommender.cloudsqlInstancePerformanceInsights.list",
            "recommender.cloudsqlInstancePerformanceRecommendations.get",
            "recommender.cloudsqlInstancePerformanceRecommendations.list",
            "recommender.cloudsqlInstanceReliabilityInsights.get",
            "recommender.cloudsqlInstanceReliabilityInsights.list",
            "recommender.cloudsqlInstanceReliabilityRecommendations.get",
            "recommender.cloudsqlInstanceReliabilityRecommendations.list",
            "recommender.cloudsqlInstanceSecurityInsights.get",
            "recommender.cloudsqlInstanceSecurityInsights.list",
            "recommender.cloudsqlInstanceSecurityRecommendations.get",
            "recommender.cloudsqlInstanceSecurityRecommendations.list",
            "recommender.cloudsqlInstanceUnderprovisionedCpuUsageInsights.get",
            "recommender.cloudsqlInstanceUnderprovisionedCpuUsageInsights.list",
            "recommender.cloudsqlInstanceUnderprovisionedMemoryUsageInsights.get",
            "recommender.cloudsqlInstanceUnderprovisionedMemoryUsageInsights.list",
            "recommender.cloudsqlOverprovisionedInstanceRecommendations.get",
            "recommender.cloudsqlOverprovisionedInstanceRecommendations.list",
            "recommender.cloudsqlUnderProvisionedInstanceRecommendations.get",
            "recommender.cloudsqlUnderProvisionedInstanceRecommendations.list",
            "recommender.commitmentUtilizationInsights.get",
            "recommender.commitmentUtilizationInsights.list",
            "recommender.computeAddressIdleResourceInsights.get",
            "recommender.computeAddressIdleResourceInsights.list",
            "recommender.computeAddressIdleResourceRecommendations.get",
            "recommender.computeAddressIdleResourceRecommendations.list",
            "recommender.computeDiskIdleResourceInsights.get",
            "recommender.computeDiskIdleResourceInsights.list",
            "recommender.computeDiskIdleResourceRecommendations.get",
            "recommender.computeDiskIdleResourceRecommendations.list",
            "recommender.computeFirewallInsightTypeConfigs.get",
            "recommender.computeFirewallInsights.get",
            "recommender.computeFirewallInsights.list",
            "recommender.computeImageIdleResourceInsights.get",
            "recommender.computeImageIdleResourceInsights.list",
            "recommender.computeImageIdleResourceRecommendations.get",
            "recommender.computeImageIdleResourceRecommendations.list",
            "recommender.computeInstanceCpuUsageInsights.get",
            "recommender.computeInstanceCpuUsageInsights.list",
            "recommender.computeInstanceCpuUsagePredictionInsights.get",
            "recommender.computeInstanceCpuUsagePredictionInsights.list",
            "recommender.computeInstanceCpuUsageTrendInsights.get",
            "recommender.computeInstanceCpuUsageTrendInsights.list",
            "recommender.computeInstanceGroupManagerCpuUsageInsights.get",
            "recommender.computeInstanceGroupManagerCpuUsageInsights.list",
            "recommender.computeInstanceGroupManagerCpuUsagePredictionInsights.get",
            "recommender.computeInstanceGroupManagerCpuUsagePredictionInsights.list",
            "recommender.computeInstanceGroupManagerCpuUsageTrendInsights.get",
            "recommender.computeInstanceGroupManagerCpuUsageTrendInsights.list",
            "recommender.computeInstanceGroupManagerMachineTypeRecommendations.get",
            "recommender.computeInstanceGroupManagerMachineTypeRecommendations.list",
            "recommender.computeInstanceGroupManagerMemoryUsageInsights.get",
            "recommender.computeInstanceGroupManagerMemoryUsageInsights.list",
            "recommender.computeInstanceGroupManagerMemoryUsagePredictionInsights.get",
            "recommender.computeInstanceGroupManagerMemoryUsagePredictionInsights.list",
            "recommender.computeInstanceIdleResourceRecommendations.get",
            "recommender.computeInstanceIdleResourceRecommendations.list",
            "recommender.computeInstanceIdleResourceRecommenderConfig.get",
            "recommender.computeInstanceMachineTypeRecommendations.get",
            "recommender.computeInstanceMachineTypeRecommendations.list",
            "recommender.computeInstanceMemoryUsageInsights.get",
            "recommender.computeInstanceMemoryUsageInsights.list",
            "recommender.computeInstanceMemoryUsagePredictionInsights.get",
            "recommender.computeInstanceMemoryUsagePredictionInsights.list",
            "recommender.computeInstanceNetworkThroughputInsights.get",
            "recommender.computeInstanceNetworkThroughputInsights.list",
            "recommender.containerDiagnosisInsights.get",
            "recommender.containerDiagnosisInsights.list",
            "recommender.containerDiagnosisRecommendations.get",
            "recommender.containerDiagnosisRecommendations.list",
            "recommender.costInsights.get",
            "recommender.costInsights.list",
            "recommender.dataflowDiagnosticsInsights.get",
            "recommender.dataflowDiagnosticsInsights.list",
            "recommender.errorReportingInsights.get",
            "recommender.errorReportingInsights.list",
            "recommender.errorReportingRecommendations.get",
            "recommender.errorReportingRecommendations.list",
            "recommender.firestoreDatabaseReliabilityInsights.get",
            "recommender.firestoreDatabaseReliabilityInsights.list",
            "recommender.firestoreDatabaseReliabilityRecommendations.get",
            "recommender.firestoreDatabaseReliabilityRecommendations.list",
            "recommender.gmpGuidedExperienceInsights.get",
            "recommender.gmpGuidedExperienceInsights.list",
            "recommender.gmpGuidedExperienceRecommendations.get",
            "recommender.gmpGuidedExperienceRecommendations.list",
            "recommender.gmpProjectManagementInsights.get",
            "recommender.gmpProjectManagementInsights.list",
            "recommender.gmpProjectManagementRecommendations.get",
            "recommender.gmpProjectManagementRecommendations.list",
            "recommender.gmpProjectProductSuggestionsInsights.get",
            "recommender.gmpProjectProductSuggestionsInsights.list",
            "recommender.gmpProjectProductSuggestionsRecommendations.get",
            "recommender.gmpProjectProductSuggestionsRecommendations.list",
            "recommender.iamPolicyChangeRiskInsights.get",
            "recommender.iamPolicyChangeRiskInsights.list",
            "recommender.iamPolicyChangeRiskRecommendations.get",
            "recommender.iamPolicyChangeRiskRecommendations.list",
            "recommender.iamPolicyInsights.get",
            "recommender.iamPolicyInsights.list",
            "recommender.iamPolicyLateralMovementInsights.get",
            "recommender.iamPolicyLateralMovementInsights.list",
            "recommender.iamPolicyRecommendations.get",
            "recommender.iamPolicyRecommendations.list",
            "recommender.iamPolicyRecommenderConfig.get",
            "recommender.iamServiceAccountChangeRiskInsights.get",
            "recommender.iamServiceAccountChangeRiskInsights.list",
            "recommender.iamServiceAccountChangeRiskRecommendations.get",
            "recommender.iamServiceAccountChangeRiskRecommendations.list",
            "recommender.iamServiceAccountInsights.get",
            "recommender.iamServiceAccountInsights.list",
            "recommender.locations.*",
            "recommender.loggingProductSuggestionContainerInsights.get",
            "recommender.loggingProductSuggestionContainerInsights.list",
            "recommender.loggingProductSuggestionContainerRecommendations.get",
            "recommender.loggingProductSuggestionContainerRecommendations.list",
            "recommender.memorystoreManageabilityInsights.get",
            "recommender.memorystoreManageabilityInsights.list",
            "recommender.memorystoreManageabilityRecommendations.get",
            "recommender.memorystoreManageabilityRecommendations.list",
            "recommender.memorystorePerformanceInsights.get",
            "recommender.memorystorePerformanceInsights.list",
            "recommender.memorystorePerformanceRecommendations.get",
            "recommender.memorystorePerformanceRecommendations.list",
            "recommender.memorystoreReliabilityInsights.get",
            "recommender.memorystoreReliabilityInsights.list",
            "recommender.memorystoreReliabilityRecommendations.get",
            "recommender.memorystoreReliabilityRecommendations.list",
            "recommender.memorystoreUtilizationInsights.get",
            "recommender.memorystoreUtilizationInsights.list",
            "recommender.monitoringProductSuggestionComputeInsights.get",
            "recommender.monitoringProductSuggestionComputeInsights.list",
            "recommender.monitoringProductSuggestionComputeRecommendations.get",
            "recommender.monitoringProductSuggestionComputeRecommendations.list",
            "recommender.networkAnalyzerCloudSqlInsights.get",
            "recommender.networkAnalyzerCloudSqlInsights.list",
            "recommender.networkAnalyzerDynamicRouteInsights.get",
            "recommender.networkAnalyzerDynamicRouteInsights.list",
            "recommender.networkAnalyzerGkeConnectivityInsights.get",
            "recommender.networkAnalyzerGkeConnectivityInsights.list",
            "recommender.networkAnalyzerGkeIpAddressInsights.get",
            "recommender.networkAnalyzerGkeIpAddressInsights.list",
            "recommender.networkAnalyzerGkeServiceAccountInsights.get",
            "recommender.networkAnalyzerGkeServiceAccountInsights.list",
            "recommender.networkAnalyzerIpAddressInsights.get",
            "recommender.networkAnalyzerIpAddressInsights.list",
            "recommender.networkAnalyzerLoadBalancerInsights.get",
            "recommender.networkAnalyzerLoadBalancerInsights.list",
            "recommender.networkAnalyzerVpcConnectivityInsights.get",
            "recommender.networkAnalyzerVpcConnectivityInsights.list",
            "recommender.orgPolicyInsights.get",
            "recommender.orgPolicyInsights.list",
            "recommender.orgPolicyRecommendations.get",
            "recommender.orgPolicyRecommendations.list",
            "recommender.resourcemanagerProjectChangeRiskInsights.get",
            "recommender.resourcemanagerProjectChangeRiskInsights.list",
            "recommender.resourcemanagerProjectChangeRiskRecommendations.get",
            "recommender.resourcemanagerProjectChangeRiskRecommendations.list",
            "recommender.resourcemanagerProjectUtilizationInsightTypeConfigs.get",
            "recommender.resourcemanagerProjectUtilizationInsights.get",
            "recommender.resourcemanagerProjectUtilizationInsights.list",
            "recommender.resourcemanagerProjectUtilizationRecommendations.get",
            "recommender.resourcemanagerProjectUtilizationRecommendations.list",
            "recommender.resourcemanagerProjectUtilizationRecommenderConfigs.get",
            "recommender.resourcemanagerServiceLimitInsights.get",
            "recommender.resourcemanagerServiceLimitInsights.list",
            "recommender.resourcemanagerServiceLimitRecommendations.get",
            "recommender.resourcemanagerServiceLimitRecommendations.list",
            "recommender.runServiceCostInsights.get",
            "recommender.runServiceCostInsights.list",
            "recommender.runServiceCostRecommendations.get",
            "recommender.runServiceCostRecommendations.list",
            "recommender.runServiceIdentityInsights.get",
            "recommender.runServiceIdentityInsights.list",
            "recommender.runServiceIdentityRecommendations.get",
            "recommender.runServiceIdentityRecommendations.list",
            "recommender.runServicePerformanceInsights.get",
            "recommender.runServicePerformanceInsights.list",
            "recommender.runServicePerformanceRecommendations.get",
            "recommender.runServicePerformanceRecommendations.list",
            "recommender.runServiceSecurityInsights.get",
            "recommender.runServiceSecurityInsights.list",
            "recommender.runServiceSecurityRecommendations.get",
            "recommender.runServiceSecurityRecommendations.list",
            "recommender.spannerProjectReliabilityInsights.get",
            "recommender.spannerProjectReliabilityInsights.list",
            "recommender.spannerProjectReliabilityRecommendations.get",
            "recommender.spannerProjectReliabilityRecommendations.list",
            "recommender.spendBasedCommitmentInsights.get",
            "recommender.spendBasedCommitmentInsights.list",
            "recommender.spendBasedCommitmentRecommendations.get",
            "recommender.spendBasedCommitmentRecommendations.list",
            "recommender.spendBasedCommitmentRecommenderConfig.get",
            "recommender.storageBucketSoftDeleteInsights.get",
            "recommender.storageBucketSoftDeleteInsights.list",
            "recommender.storageBucketSoftDeleteRecommendations.get",
            "recommender.storageBucketSoftDeleteRecommendations.list",
            "recommender.usageCommitmentRecommendations.get",
            "recommender.usageCommitmentRecommendations.list",
            "resourcemanager.projects.get"
          ],
          "title": "Recommender Viewer"
        },
        {
          "description": "Provides all available permissions for working with folders.",
          "id": "roles/resourcemanager.folderAdmin",
          "is_beta": false,
          "permissions": [
            "essentialcontacts.*",
            "iam.policybindings.*",
            "orgpolicy.constraints.list",
            "orgpolicy.policies.list",
            "orgpolicy.policy.get",
            "resourcemanager.capabilities.*",
            "resourcemanager.folders.*",
            "resourcemanager.hierarchyNodes.*",
            "resourcemanager.projects.createPolicyBinding",
            "resourcemanager.projects.deletePolicyBinding",
            "resourcemanager.projects.get",
            "resourcemanager.projects.getIamPolicy",
            "resourcemanager.projects.list",
            "resourcemanager.projects.move",
            "resourcemanager.projects.searchPolicyBindings",
            "resourcemanager.projects.setIamPolicy",
            "resourcemanager.projects.updatePolicyBinding"
          ],
          "title": "Folder Admin"
        },
        {
          "description": "Provides permissions needed to browse the hierarchy and create folders.",
          "id": "roles/resourcemanager.folderCreator",
          "is_beta": false,
          "permissions": [
            "essentialcontacts.contacts.get",
            "essentialcontacts.contacts.list",
            "orgpolicy.constraints.list",
            "orgpolicy.policies.list",
            "orgpolicy.policy.get",
            "resourcemanager.capabilities.get",
            "resourcemanager.folders.create",
            "resourcemanager.folders.get",
            "resourcemanager.folders.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Folder Creator"
        },
        {
          "description": "Provides permission to modify folders as well as to view a folder's allow policy.",
          "id": "roles/resourcemanager.folderEditor",
          "is_beta": false,
          "permissions": [
            "essentialcontacts.contacts.get",
            "essentialcontacts.contacts.list",
            "orgpolicy.constraints.list",
            "orgpolicy.policies.list",
            "orgpolicy.policy.get",
            "resourcemanager.capabilities.*",
            "resourcemanager.folders.delete",
            "resourcemanager.folders.get",
            "resourcemanager.folders.getIamPolicy",
            "resourcemanager.folders.list",
            "resourcemanager.folders.searchPolicyBindings",
            "resourcemanager.folders.undelete",
            "resourcemanager.folders.update",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Folder Editor"
        },
        {
          "description": "Provides permissions to administer allow policies on folders.",
          "id": "roles/resourcemanager.folderIamAdmin",
          "is_beta": false,
          "permissions": [
            "iam.policybindings.*",
            "resourcemanager.folders.createPolicyBinding",
            "resourcemanager.folders.deletePolicyBinding",
            "resourcemanager.folders.get",
            "resourcemanager.folders.getIamPolicy",
            "resourcemanager.folders.searchPolicyBindings",
            "resourcemanager.folders.setIamPolicy",
            "resourcemanager.folders.updatePolicyBinding"
          ],
          "title": "Folder IAM Admin"
        },
        {
          "description": "Provides permission to move projects and folders into and out of a parent organization or folder.",
          "id": "roles/resourcemanager.folderMover",
          "is_beta": false,
          "permissions": [
            "resourcemanager.folders.move",
            "resourcemanager.projects.move"
          ],
          "title": "Folder Mover"
        },
        {
          "description": "Provides permission to get a folder and list the folders and projects below a resource.",
          "id": "roles/resourcemanager.folderViewer",
          "is_beta": false,
          "permissions": [
            "essentialcontacts.contacts.get",
            "essentialcontacts.contacts.list",
            "orgpolicy.constraints.list",
            "orgpolicy.policies.list",
            "orgpolicy.policy.get",
            "resourcemanager.capabilities.get",
            "resourcemanager.folders.get",
            "resourcemanager.folders.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Folder Viewer"
        },
        {
          "description": "Provides access to modify Liens on projects.",
          "id": "roles/resourcemanager.lienModifier",
          "is_beta": false,
          "permissions": [
            "resourcemanager.projects.updateLiens"
          ],
          "title": "Project Lien Modifier"
        },
        {
          "description": "Access to manage IAM policies and view organization policies for organizations, folders, and projects.",
          "id": "roles/resourcemanager.organizationAdmin",
          "is_beta": false,
          "permissions": [
            "essentialcontacts.*",
            "iam.policybindings.*",
            "orgpolicy.constraints.list",
            "orgpolicy.policies.list",
            "orgpolicy.policy.get",
            "resourcemanager.capabilities.*",
            "resourcemanager.folders.createPolicyBinding",
            "resourcemanager.folders.deletePolicyBinding",
            "resourcemanager.folders.get",
            "resourcemanager.folders.getIamPolicy",
            "resourcemanager.folders.list",
            "resourcemanager.folders.searchPolicyBindings",
            "resourcemanager.folders.setIamPolicy",
            "resourcemanager.folders.updatePolicyBinding",
            "resourcemanager.organizations.*",
            "resourcemanager.projects.createPolicyBinding",
            "resourcemanager.projects.deletePolicyBinding",
            "resourcemanager.projects.get",
            "resourcemanager.projects.getIamPolicy",
            "resourcemanager.projects.list",
            "resourcemanager.projects.searchPolicyBindings",
            "resourcemanager.projects.setIamPolicy",
            "resourcemanager.projects.updatePolicyBinding"
          ],
          "title": "Organization Administrator"
        },
        {
          "description": "Provides access to view an organization.",
          "id": "roles/resourcemanager.organizationViewer",
          "is_beta": false,
          "permissions": [
            "resourcemanager.organizations.get"
          ],
          "title": "Organization Viewer"
        },
        {
          "description": "Provides access to create new projects. Once a user creates a project, they're automatically granted the owner role for that project.",
          "id": "roles/resourcemanager.projectCreator",
          "is_beta": false,
          "permissions": [
            "resourcemanager.organizations.get",
            "resourcemanager.projects.create"
          ],
          "title": "Project Creator"
        },
        {
          "description": "Provides access to delete Google Cloud projects.",
          "id": "roles/resourcemanager.projectDeleter",
          "is_beta": false,
          "permissions": [
            "resourcemanager.projects.delete"
          ],
          "title": "Project Deleter"
        },
        {
          "description": "Provides permissions to administer allow policies on projects.",
          "id": "roles/resourcemanager.projectIamAdmin",
          "is_beta": false,
          "permissions": [
            "iam.policybindings.*",
            "resourcemanager.projects.createPolicyBinding",
            "resourcemanager.projects.deletePolicyBinding",
            "resourcemanager.projects.get",
            "resourcemanager.projects.getIamPolicy",
            "resourcemanager.projects.searchPolicyBindings",
            "resourcemanager.projects.setIamPolicy",
            "resourcemanager.projects.updatePolicyBinding"
          ],
          "title": "Project IAM Admin"
        },
        {
          "description": "Provides access to update and move projects.",
          "id": "roles/resourcemanager.projectMover",
          "is_beta": false,
          "permissions": [
            "resourcemanager.projects.get",
            "resourcemanager.projects.move",
            "resourcemanager.projects.update"
          ],
          "title": "Project Mover"
        },
        {
          "description": "Access to create, delete, update, and manage access to Tags",
          "id": "roles/resourcemanager.tagAdmin",
          "is_beta": false,
          "permissions": [
            "resourcemanager.tagHolds.*",
            "resourcemanager.tagKeys.*",
            "resourcemanager.tagValues.*"
          ],
          "title": "Tag Administrator"
        },
        {
          "description": "Access to create, delete and list TagHolds under a TagValue",
          "id": "roles/resourcemanager.tagHoldAdmin",
          "is_beta": false,
          "permissions": [
            "resourcemanager.tagHolds.*"
          ],
          "title": "Tag Hold Administrator"
        },
        {
          "description": "Access to list Tags and manage their associations with resources",
          "id": "roles/resourcemanager.tagUser",
          "is_beta": false,
          "permissions": [
            "alloydb.backups.createTagBinding",
            "alloydb.backups.deleteTagBinding",
            "alloydb.backups.listEffectiveTags",
            "alloydb.backups.listTagBindings",
            "alloydb.clusters.createTagBinding",
            "alloydb.clusters.deleteTagBinding",
            "alloydb.clusters.listEffectiveTags",
            "alloydb.clusters.listTagBindings",
            "apigateway.apis.createTagBinding",
            "apigateway.apis.deleteTagBinding",
            "apigateway.apis.listEffectiveTags",
            "apigateway.apis.listTagBindings",
            "apigateway.gateways.createTagBinding",
            "apigateway.gateways.deleteTagBinding",
            "apigateway.gateways.listEffectiveTags",
            "apigateway.gateways.listTagBindings",
            "apihub.apis.createTagBinding",
            "apihub.apis.deleteTagBinding",
            "apihub.apis.listEffectiveTags",
            "apihub.apis.listTagBindings",
            "apihub.deployments.createTagBinding",
            "apihub.deployments.deleteTagBinding",
            "apihub.deployments.listEffectiveTags",
            "apihub.deployments.listTagBindings",
            "artifactregistry.repositories.createTagBinding",
            "artifactregistry.repositories.deleteTagBinding",
            "artifactregistry.repositories.listEffectiveTags",
            "artifactregistry.repositories.listTagBindings",
            "bigquery.datasets.createTagBinding",
            "bigquery.datasets.deleteTagBinding",
            "bigquery.datasets.listEffectiveTags",
            "bigquery.datasets.listTagBindings",
            "bigquery.tables.createTagBinding",
            "bigquery.tables.deleteTagBinding",
            "bigquery.tables.listEffectiveTags",
            "bigquery.tables.listTagBindings",
            "bigtable.authorizedViews.createTagBinding",
            "bigtable.authorizedViews.deleteTagBinding",
            "bigtable.authorizedViews.listEffectiveTags",
            "bigtable.authorizedViews.listTagBindings",
            "bigtable.instances.createTagBinding",
            "bigtable.instances.deleteTagBinding",
            "bigtable.instances.listEffectiveTags",
            "bigtable.instances.listTagBindings",
            "certificatemanager.certissuanceconfigs.createTagBinding",
            "certificatemanager.certissuanceconfigs.deleteTagBinding",
            "certificatemanager.certissuanceconfigs.listEffectiveTags",
            "certificatemanager.certissuanceconfigs.listTagBindings",
            "certificatemanager.certmapentries.createTagBinding",
            "certificatemanager.certmapentries.deleteTagBinding",
            "certificatemanager.certmapentries.listEffectiveTags",
            "certificatemanager.certmapentries.listTagBindings",
            "certificatemanager.certmaps.createTagBinding",
            "certificatemanager.certmaps.deleteTagBinding",
            "certificatemanager.certmaps.listEffectiveTags",
            "certificatemanager.certmaps.listTagBindings",
            "certificatemanager.certs.createTagBinding",
            "certificatemanager.certs.deleteTagBinding",
            "certificatemanager.certs.listEffectiveTags",
            "certificatemanager.certs.listTagBindings",
            "certificatemanager.dnsauthorizations.createTagBinding",
            "certificatemanager.dnsauthorizations.deleteTagBinding",
            "certificatemanager.dnsauthorizations.listEffectiveTags",
            "certificatemanager.dnsauthorizations.listTagBindings",
            "certificatemanager.trustconfigs.createTagBinding",
            "certificatemanager.trustconfigs.deleteTagBinding",
            "certificatemanager.trustconfigs.listEffectiveTags",
            "certificatemanager.trustconfigs.listTagBindings",
            "clouddeploy.deliveryPipelines.createTagBinding",
            "clouddeploy.deliveryPipelines.deleteTagBinding",
            "clouddeploy.deliveryPipelines.listEffectiveTags",
            "clouddeploy.deliveryPipelines.listTagBindings",
            "clouddeploy.targets.createTagBinding",
            "clouddeploy.targets.deleteTagBinding",
            "clouddeploy.targets.listEffectiveTags",
            "clouddeploy.targets.listTagBindings",
            "cloudkms.keyRings.createTagBinding",
            "cloudkms.keyRings.deleteTagBinding",
            "cloudkms.keyRings.listEffectiveTags",
            "cloudkms.keyRings.listTagBindings",
            "cloudsql.instances.createTagBinding",
            "cloudsql.instances.deleteTagBinding",
            "cloudsql.instances.listEffectiveTags",
            "cloudsql.instances.listTagBindings",
            "compute.addresses.createTagBinding",
            "compute.addresses.deleteTagBinding",
            "compute.addresses.listEffectiveTags",
            "compute.addresses.listTagBindings",
            "compute.backendBuckets.createTagBinding",
            "compute.backendBuckets.deleteTagBinding",
            "compute.backendBuckets.listEffectiveTags",
            "compute.backendBuckets.listTagBindings",
            "compute.backendServices.createTagBinding",
            "compute.backendServices.deleteTagBinding",
            "compute.backendServices.listEffectiveTags",
            "compute.backendServices.listTagBindings",
            "compute.disks.createTagBinding",
            "compute.disks.deleteTagBinding",
            "compute.disks.listEffectiveTags",
            "compute.disks.listTagBindings",
            "compute.externalVpnGateways.createTagBinding",
            "compute.externalVpnGateways.deleteTagBinding",
            "compute.externalVpnGateways.listEffectiveTags",
            "compute.externalVpnGateways.listTagBindings",
            "compute.firewallPolicies.createTagBinding",
            "compute.firewallPolicies.deleteTagBinding",
            "compute.firewallPolicies.listEffectiveTags",
            "compute.firewallPolicies.listTagBindings",
            "compute.firewalls.createTagBinding",
            "compute.firewalls.deleteTagBinding",
            "compute.firewalls.listEffectiveTags",
            "compute.firewalls.listTagBindings",
            "compute.forwardingRules.createTagBinding",
            "compute.forwardingRules.deleteTagBinding",
            "compute.forwardingRules.listEffectiveTags",
            "compute.forwardingRules.listTagBindings",
            "compute.globalAddresses.createTagBinding",
            "compute.globalAddresses.deleteTagBinding",
            "compute.globalAddresses.listEffectiveTags",
            "compute.globalAddresses.listTagBindings",
            "compute.globalForwardingRules.createTagBinding",
            "compute.globalForwardingRules.deleteTagBinding",
            "compute.globalForwardingRules.listEffectiveTags",
            "compute.globalForwardingRules.listTagBindings",
            "compute.globalNetworkEndpointGroups.createTagBinding",
            "compute.globalNetworkEndpointGroups.deleteTagBinding",
            "compute.globalNetworkEndpointGroups.listEffectiveTags",
            "compute.globalNetworkEndpointGroups.listTagBindings",
            "compute.healthChecks.createTagBinding",
            "compute.healthChecks.deleteTagBinding",
            "compute.healthChecks.listEffectiveTags",
            "compute.healthChecks.listTagBindings",
            "compute.httpHealthChecks.createTagBinding",
            "compute.httpHealthChecks.deleteTagBinding",
            "compute.httpHealthChecks.listEffectiveTags",
            "compute.httpHealthChecks.listTagBindings",
            "compute.httpsHealthChecks.createTagBinding",
            "compute.httpsHealthChecks.deleteTagBinding",
            "compute.httpsHealthChecks.listEffectiveTags",
            "compute.httpsHealthChecks.listTagBindings",
            "compute.images.createTagBinding",
            "compute.images.deleteTagBinding",
            "compute.images.listEffectiveTags",
            "compute.images.listTagBindings",
            "compute.instanceGroupManagers.createTagBinding",
            "compute.instanceGroupManagers.deleteTagBinding",
            "compute.instanceGroupManagers.listEffectiveTags",
            "compute.instanceGroupManagers.listTagBindings",
            "compute.instanceGroups.createTagBinding",
            "compute.instanceGroups.deleteTagBinding",
            "compute.instanceGroups.listEffectiveTags",
            "compute.instanceGroups.listTagBindings",
            "compute.instances.createTagBinding",
            "compute.instances.deleteTagBinding",
            "compute.instances.listEffectiveTags",
            "compute.instances.listTagBindings",
            "compute.interconnectAttachments.createTagBinding",
            "compute.interconnectAttachments.deleteTagBinding",
            "compute.interconnectAttachments.listEffectiveTags",
            "compute.interconnectAttachments.listTagBindings",
            "compute.interconnects.createTagBinding",
            "compute.interconnects.deleteTagBinding",
            "compute.interconnects.listEffectiveTags",
            "compute.interconnects.listTagBindings",
            "compute.networkAttachments.createTagBinding",
            "compute.networkAttachments.deleteTagBinding",
            "compute.networkAttachments.listEffectiveTags",
            "compute.networkAttachments.listTagBindings",
            "compute.networkEdgeSecurityServices.createTagBinding",
            "compute.networkEdgeSecurityServices.deleteTagBinding",
            "compute.networkEdgeSecurityServices.listEffectiveTags",
            "compute.networkEdgeSecurityServices.listTagBindings",
            "compute.networkEndpointGroups.createTagBinding",
            "compute.networkEndpointGroups.deleteTagBinding",
            "compute.networkEndpointGroups.listEffectiveTags",
            "compute.networkEndpointGroups.listTagBindings",
            "compute.networks.createTagBinding",
            "compute.networks.deleteTagBinding",
            "compute.networks.listEffectiveTags",
            "compute.networks.listTagBindings",
            "compute.packetMirrorings.createTagBinding",
            "compute.packetMirrorings.deleteTagBinding",
            "compute.packetMirrorings.listEffectiveTags",
            "compute.packetMirrorings.listTagBindings",
            "compute.publicDelegatedPrefixes.createTagBinding",
            "compute.publicDelegatedPrefixes.deleteTagBinding",
            "compute.publicDelegatedPrefixes.listEffectiveTags",
            "compute.publicDelegatedPrefixes.listTagBindings",
            "compute.regionBackendServices.createTagBinding",
            "compute.regionBackendServices.deleteTagBinding",
            "compute.regionBackendServices.listEffectiveTags",
            "compute.regionBackendServices.listTagBindings",
            "compute.regionFirewallPolicies.createTagBinding",
            "compute.regionFirewallPolicies.deleteTagBinding",
            "compute.regionFirewallPolicies.listEffectiveTags",
            "compute.regionFirewallPolicies.listTagBindings",
            "compute.regionHealthChecks.createTagBinding",
            "compute.regionHealthChecks.deleteTagBinding",
            "compute.regionHealthChecks.listEffectiveTags",
            "compute.regionHealthChecks.listTagBindings",
            "compute.regionNetworkEndpointGroups.createTagBinding",
            "compute.regionNetworkEndpointGroups.deleteTagBinding",
            "compute.regionNetworkEndpointGroups.listEffectiveTags",
            "compute.regionNetworkEndpointGroups.listTagBindings",
            "compute.regionSecurityPolicies.createTagBinding",
            "compute.regionSecurityPolicies.deleteTagBinding",
            "compute.regionSecurityPolicies.listEffectiveTags",
            "compute.regionSecurityPolicies.listTagBindings",
            "compute.regionSslCertificates.createTagBinding",
            "compute.regionSslCertificates.deleteTagBinding",
            "compute.regionSslCertificates.listEffectiveTags",
            "compute.regionSslCertificates.listTagBindings",
            "compute.regionSslPolicies.createTagBinding",
            "compute.regionSslPolicies.deleteTagBinding",
            "compute.regionSslPolicies.listEffectiveTags",
            "compute.regionSslPolicies.listTagBindings",
            "compute.regionTargetHttpProxies.createTagBinding",
            "compute.regionTargetHttpProxies.deleteTagBinding",
            "compute.regionTargetHttpProxies.listEffectiveTags",
            "compute.regionTargetHttpProxies.listTagBindings",
            "compute.regionTargetHttpsProxies.createTagBinding",
            "compute.regionTargetHttpsProxies.deleteTagBinding",
            "compute.regionTargetHttpsProxies.listEffectiveTags",
            "compute.regionTargetHttpsProxies.listTagBindings",
            "compute.regionTargetTcpProxies.createTagBinding",
            "compute.regionTargetTcpProxies.deleteTagBinding",
            "compute.regionTargetTcpProxies.listEffectiveTags",
            "compute.regionTargetTcpProxies.listTagBindings",
            "compute.regionUrlMaps.createTagBinding",
            "compute.regionUrlMaps.deleteTagBinding",
            "compute.regionUrlMaps.listEffectiveTags",
            "compute.regionUrlMaps.listTagBindings",
            "compute.routers.createTagBinding",
            "compute.routers.deleteTagBinding",
            "compute.routers.listEffectiveTags",
            "compute.routers.listTagBindings",
            "compute.routes.createTagBinding",
            "compute.routes.deleteTagBinding",
            "compute.routes.listEffectiveTags",
            "compute.routes.listTagBindings",
            "compute.securityPolicies.createTagBinding",
            "compute.securityPolicies.deleteTagBinding",
            "compute.securityPolicies.listEffectiveTags",
            "compute.securityPolicies.listTagBindings",
            "compute.serviceAttachments.createTagBinding",
            "compute.serviceAttachments.deleteTagBinding",
            "compute.serviceAttachments.listEffectiveTags",
            "compute.serviceAttachments.listTagBindings",
            "compute.snapshots.createTagBinding",
            "compute.snapshots.deleteTagBinding",
            "compute.snapshots.listEffectiveTags",
            "compute.snapshots.listTagBindings",
            "compute.sslCertificates.createTagBinding",
            "compute.sslCertificates.deleteTagBinding",
            "compute.sslCertificates.listEffectiveTags",
            "compute.sslCertificates.listTagBindings",
            "compute.sslPolicies.createTagBinding",
            "compute.sslPolicies.deleteTagBinding",
            "compute.sslPolicies.listEffectiveTags",
            "compute.sslPolicies.listTagBindings",
            "compute.subnetworks.createTagBinding",
            "compute.subnetworks.deleteTagBinding",
            "compute.subnetworks.listEffectiveTags",
            "compute.subnetworks.listTagBindings",
            "compute.targetGrpcProxies.createTagBinding",
            "compute.targetGrpcProxies.deleteTagBinding",
            "compute.targetGrpcProxies.listEffectiveTags",
            "compute.targetGrpcProxies.listTagBindings",
            "compute.targetHttpProxies.createTagBinding",
            "compute.targetHttpProxies.deleteTagBinding",
            "compute.targetHttpProxies.listEffectiveTags",
            "compute.targetHttpProxies.listTagBindings",
            "compute.targetHttpsProxies.createTagBinding",
            "compute.targetHttpsProxies.deleteTagBinding",
            "compute.targetHttpsProxies.listEffectiveTags",
            "compute.targetHttpsProxies.listTagBindings",
            "compute.targetInstances.createTagBinding",
            "compute.targetInstances.deleteTagBinding",
            "compute.targetInstances.listEffectiveTags",
            "compute.targetInstances.listTagBindings",
            "compute.targetPools.createTagBinding",
            "compute.targetPools.deleteTagBinding",
            "compute.targetPools.listEffectiveTags",
            "compute.targetPools.listTagBindings",
            "compute.targetSslProxies.createTagBinding",
            "compute.targetSslProxies.deleteTagBinding",
            "compute.targetSslProxies.listEffectiveTags",
            "compute.targetSslProxies.listTagBindings",
            "compute.targetTcpProxies.createTagBinding",
            "compute.targetTcpProxies.deleteTagBinding",
            "compute.targetTcpProxies.listEffectiveTags",
            "compute.targetTcpProxies.listTagBindings",
            "compute.targetVpnGateways.createTagBinding",
            "compute.targetVpnGateways.deleteTagBinding",
            "compute.targetVpnGateways.listEffectiveTags",
            "compute.targetVpnGateways.listTagBindings",
            "compute.urlMaps.createTagBinding",
            "compute.urlMaps.deleteTagBinding",
            "compute.urlMaps.listEffectiveTags",
            "compute.urlMaps.listTagBindings",
            "compute.vpnGateways.createTagBinding",
            "compute.vpnGateways.deleteTagBinding",
            "compute.vpnGateways.listEffectiveTags",
            "compute.vpnGateways.listTagBindings",
            "compute.vpnTunnels.createTagBinding",
            "compute.vpnTunnels.deleteTagBinding",
            "compute.vpnTunnels.listEffectiveTags",
            "compute.vpnTunnels.listTagBindings",
            "container.clusters.createTagBinding",
            "container.clusters.deleteTagBinding",
            "container.clusters.listEffectiveTags",
            "container.clusters.listTagBindings",
            "datafusion.instances.createTagBinding",
            "datafusion.instances.deleteTagBinding",
            "datafusion.instances.listEffectiveTags",
            "datafusion.instances.listTagBindings",
            "datastore.databases.createTagBinding",
            "datastore.databases.deleteTagBinding",
            "datastore.databases.listEffectiveTags",
            "datastore.databases.listTagBindings",
            "datastream.connectionProfiles.createTagBinding",
            "datastream.connectionProfiles.deleteTagBinding",
            "datastream.connectionProfiles.listEffectiveTags",
            "datastream.connectionProfiles.listTagBindings",
            "datastream.privateConnections.createTagBinding",
            "datastream.privateConnections.deleteTagBinding",
            "datastream.privateConnections.listEffectiveTags",
            "datastream.privateConnections.listTagBindings",
            "datastream.streams.createTagBinding",
            "datastream.streams.deleteTagBinding",
            "datastream.streams.listEffectiveTags",
            "datastream.streams.listTagBindings",
            "domains.registrations.createTagBinding",
            "domains.registrations.deleteTagBinding",
            "domains.registrations.listEffectiveTags",
            "domains.registrations.listTagBindings",
            "file.backups.createTagBinding",
            "file.backups.deleteTagBinding",
            "file.backups.listEffectiveTags",
            "file.backups.listTagBindings",
            "file.instances.createTagBinding",
            "file.instances.deleteTagBinding",
            "file.instances.listEffectiveTags",
            "file.instances.listTagBindings",
            "file.snapshots.createTagBinding",
            "file.snapshots.deleteTagBinding",
            "file.snapshots.listEffectiveTags",
            "file.snapshots.listTagBindings",
            "iam.serviceAccounts.createTagBinding",
            "iam.serviceAccounts.deleteTagBinding",
            "iam.serviceAccounts.listEffectiveTags",
            "iam.serviceAccounts.listTagBindings",
            "logging.buckets.createTagBinding",
            "logging.buckets.deleteTagBinding",
            "logging.buckets.listEffectiveTags",
            "logging.buckets.listTagBindings",
            "managedidentities.domains.createTagBinding",
            "managedidentities.domains.deleteTagBinding",
            "managedidentities.domains.listEffectiveTags",
            "managedidentities.domains.listTagBindings",
            "monitoring.alertPolicies.createTagBinding",
            "monitoring.alertPolicies.deleteTagBinding",
            "monitoring.alertPolicies.listEffectiveTags",
            "monitoring.alertPolicies.listTagBindings",
            "privateca.caPools.createTagBinding",
            "privateca.caPools.deleteTagBinding",
            "privateca.caPools.listEffectiveTags",
            "privateca.caPools.listTagBindings",
            "privateca.certificateTemplates.createTagBinding",
            "privateca.certificateTemplates.deleteTagBinding",
            "privateca.certificateTemplates.listEffectiveTags",
            "privateca.certificateTemplates.listTagBindings",
            "redis.instances.createTagBinding",
            "redis.instances.deleteTagBinding",
            "redis.instances.listEffectiveTags",
            "redis.instances.listTagBindings",
            "resourcemanager.hierarchyNodes.*",
            "resourcemanager.projects.get",
            "resourcemanager.tagKeys.get",
            "resourcemanager.tagKeys.list",
            "resourcemanager.tagValueBindings.*",
            "resourcemanager.tagValues.get",
            "resourcemanager.tagValues.list",
            "run.jobs.createTagBinding",
            "run.jobs.deleteTagBinding",
            "run.jobs.listEffectiveTags",
            "run.jobs.listTagBindings",
            "run.services.createTagBinding",
            "run.services.deleteTagBinding",
            "run.services.listEffectiveTags",
            "run.services.listTagBindings",
            "secretmanager.secrets.createTagBinding",
            "secretmanager.secrets.deleteTagBinding",
            "secretmanager.secrets.listEffectiveTags",
            "secretmanager.secrets.listTagBindings",
            "spanner.instances.createTagBinding",
            "spanner.instances.deleteTagBinding",
            "spanner.instances.listEffectiveTags",
            "spanner.instances.listTagBindings",
            "storage.buckets.createTagBinding",
            "storage.buckets.deleteTagBinding",
            "storage.buckets.listEffectiveTags",
            "storage.buckets.listTagBindings",
            "transcoder.jobTemplates.createTagBinding",
            "transcoder.jobTemplates.deleteTagBinding",
            "transcoder.jobTemplates.listEffectiveTags",
            "transcoder.jobTemplates.listTagBindings",
            "transcoder.jobs.createTagBinding",
            "transcoder.jobs.deleteTagBinding",
            "transcoder.jobs.listEffectiveTags",
            "transcoder.jobs.listTagBindings",
            "workflows.workflows.createTagBinding",
            "workflows.workflows.deleteTagBinding",
            "workflows.workflows.listEffectiveTags",
            "workflows.workflows.listTagBindings",
            "workstations.workstationClusters.createTagBinding",
            "workstations.workstationClusters.deleteTagBinding",
            "workstations.workstationClusters.listEffectiveTags",
            "workstations.workstationClusters.listTagBindings"
          ],
          "title": "Tag User"
        },
        {
          "description": "Access to list Tags and their associations with resources",
          "id": "roles/resourcemanager.tagViewer",
          "is_beta": false,
          "permissions": [
            "alloydb.backups.listEffectiveTags",
            "alloydb.backups.listTagBindings",
            "alloydb.clusters.listEffectiveTags",
            "alloydb.clusters.listTagBindings",
            "apigateway.apis.listEffectiveTags",
            "apigateway.apis.listTagBindings",
            "apigateway.gateways.listEffectiveTags",
            "apigateway.gateways.listTagBindings",
            "apihub.apis.listEffectiveTags",
            "apihub.apis.listTagBindings",
            "apihub.deployments.listEffectiveTags",
            "apihub.deployments.listTagBindings",
            "artifactregistry.repositories.listEffectiveTags",
            "artifactregistry.repositories.listTagBindings",
            "bigquery.datasets.listEffectiveTags",
            "bigquery.datasets.listTagBindings",
            "bigquery.tables.listEffectiveTags",
            "bigquery.tables.listTagBindings",
            "bigtable.authorizedViews.listEffectiveTags",
            "bigtable.authorizedViews.listTagBindings",
            "bigtable.instances.listEffectiveTags",
            "bigtable.instances.listTagBindings",
            "certificatemanager.certissuanceconfigs.listEffectiveTags",
            "certificatemanager.certissuanceconfigs.listTagBindings",
            "certificatemanager.certmapentries.listEffectiveTags",
            "certificatemanager.certmapentries.listTagBindings",
            "certificatemanager.certmaps.listEffectiveTags",
            "certificatemanager.certmaps.listTagBindings",
            "certificatemanager.certs.listEffectiveTags",
            "certificatemanager.certs.listTagBindings",
            "certificatemanager.dnsauthorizations.listEffectiveTags",
            "certificatemanager.dnsauthorizations.listTagBindings",
            "certificatemanager.trustconfigs.listEffectiveTags",
            "certificatemanager.trustconfigs.listTagBindings",
            "clouddeploy.deliveryPipelines.listEffectiveTags",
            "clouddeploy.deliveryPipelines.listTagBindings",
            "clouddeploy.targets.listEffectiveTags",
            "clouddeploy.targets.listTagBindings",
            "cloudkms.keyRings.listEffectiveTags",
            "cloudkms.keyRings.listTagBindings",
            "cloudsql.instances.listEffectiveTags",
            "cloudsql.instances.listTagBindings",
            "compute.addresses.listEffectiveTags",
            "compute.addresses.listTagBindings",
            "compute.backendBuckets.listEffectiveTags",
            "compute.backendBuckets.listTagBindings",
            "compute.backendServices.listEffectiveTags",
            "compute.backendServices.listTagBindings",
            "compute.disks.listEffectiveTags",
            "compute.disks.listTagBindings",
            "compute.externalVpnGateways.listEffectiveTags",
            "compute.externalVpnGateways.listTagBindings",
            "compute.firewallPolicies.listEffectiveTags",
            "compute.firewallPolicies.listTagBindings",
            "compute.firewalls.listEffectiveTags",
            "compute.firewalls.listTagBindings",
            "compute.forwardingRules.listEffectiveTags",
            "compute.forwardingRules.listTagBindings",
            "compute.globalAddresses.listEffectiveTags",
            "compute.globalAddresses.listTagBindings",
            "compute.globalForwardingRules.listEffectiveTags",
            "compute.globalForwardingRules.listTagBindings",
            "compute.globalNetworkEndpointGroups.listEffectiveTags",
            "compute.globalNetworkEndpointGroups.listTagBindings",
            "compute.healthChecks.listEffectiveTags",
            "compute.healthChecks.listTagBindings",
            "compute.httpHealthChecks.listEffectiveTags",
            "compute.httpHealthChecks.listTagBindings",
            "compute.httpsHealthChecks.listEffectiveTags",
            "compute.httpsHealthChecks.listTagBindings",
            "compute.images.listEffectiveTags",
            "compute.images.listTagBindings",
            "compute.instanceGroupManagers.listEffectiveTags",
            "compute.instanceGroupManagers.listTagBindings",
            "compute.instanceGroups.listEffectiveTags",
            "compute.instanceGroups.listTagBindings",
            "compute.instances.listEffectiveTags",
            "compute.instances.listTagBindings",
            "compute.interconnectAttachments.listEffectiveTags",
            "compute.interconnectAttachments.listTagBindings",
            "compute.interconnects.listEffectiveTags",
            "compute.interconnects.listTagBindings",
            "compute.networkAttachments.listEffectiveTags",
            "compute.networkAttachments.listTagBindings",
            "compute.networkEdgeSecurityServices.listEffectiveTags",
            "compute.networkEdgeSecurityServices.listTagBindings",
            "compute.networkEndpointGroups.listEffectiveTags",
            "compute.networkEndpointGroups.listTagBindings",
            "compute.networks.listEffectiveTags",
            "compute.networks.listTagBindings",
            "compute.packetMirrorings.listEffectiveTags",
            "compute.packetMirrorings.listTagBindings",
            "compute.publicDelegatedPrefixes.listEffectiveTags",
            "compute.publicDelegatedPrefixes.listTagBindings",
            "compute.regionBackendServices.listEffectiveTags",
            "compute.regionBackendServices.listTagBindings",
            "compute.regionFirewallPolicies.listEffectiveTags",
            "compute.regionFirewallPolicies.listTagBindings",
            "compute.regionHealthChecks.listEffectiveTags",
            "compute.regionHealthChecks.listTagBindings",
            "compute.regionNetworkEndpointGroups.listEffectiveTags",
            "compute.regionNetworkEndpointGroups.listTagBindings",
            "compute.regionSecurityPolicies.listEffectiveTags",
            "compute.regionSecurityPolicies.listTagBindings",
            "compute.regionSslCertificates.listEffectiveTags",
            "compute.regionSslCertificates.listTagBindings",
            "compute.regionSslPolicies.listEffectiveTags",
            "compute.regionSslPolicies.listTagBindings",
            "compute.regionTargetHttpProxies.listEffectiveTags",
            "compute.regionTargetHttpProxies.listTagBindings",
            "compute.regionTargetHttpsProxies.listEffectiveTags",
            "compute.regionTargetHttpsProxies.listTagBindings",
            "compute.regionTargetTcpProxies.listEffectiveTags",
            "compute.regionTargetTcpProxies.listTagBindings",
            "compute.regionUrlMaps.listEffectiveTags",
            "compute.regionUrlMaps.listTagBindings",
            "compute.routers.listEffectiveTags",
            "compute.routers.listTagBindings",
            "compute.routes.listEffectiveTags",
            "compute.routes.listTagBindings",
            "compute.securityPolicies.listEffectiveTags",
            "compute.securityPolicies.listTagBindings",
            "compute.serviceAttachments.listEffectiveTags",
            "compute.serviceAttachments.listTagBindings",
            "compute.snapshots.listEffectiveTags",
            "compute.snapshots.listTagBindings",
            "compute.sslCertificates.listEffectiveTags",
            "compute.sslCertificates.listTagBindings",
            "compute.sslPolicies.listEffectiveTags",
            "compute.sslPolicies.listTagBindings",
            "compute.subnetworks.listEffectiveTags",
            "compute.subnetworks.listTagBindings",
            "compute.targetGrpcProxies.listEffectiveTags",
            "compute.targetGrpcProxies.listTagBindings",
            "compute.targetHttpProxies.listEffectiveTags",
            "compute.targetHttpProxies.listTagBindings",
            "compute.targetHttpsProxies.listEffectiveTags",
            "compute.targetHttpsProxies.listTagBindings",
            "compute.targetInstances.listEffectiveTags",
            "compute.targetInstances.listTagBindings",
            "compute.targetPools.listEffectiveTags",
            "compute.targetPools.listTagBindings",
            "compute.targetSslProxies.listEffectiveTags",
            "compute.targetSslProxies.listTagBindings",
            "compute.targetTcpProxies.listEffectiveTags",
            "compute.targetTcpProxies.listTagBindings",
            "compute.targetVpnGateways.listEffectiveTags",
            "compute.targetVpnGateways.listTagBindings",
            "compute.urlMaps.listEffectiveTags",
            "compute.urlMaps.listTagBindings",
            "compute.vpnGateways.listEffectiveTags",
            "compute.vpnGateways.listTagBindings",
            "compute.vpnTunnels.listEffectiveTags",
            "compute.vpnTunnels.listTagBindings",
            "container.clusters.listEffectiveTags",
            "container.clusters.listTagBindings",
            "datafusion.instances.listEffectiveTags",
            "datafusion.instances.listTagBindings",
            "datastore.databases.listEffectiveTags",
            "datastore.databases.listTagBindings",
            "datastream.connectionProfiles.listEffectiveTags",
            "datastream.connectionProfiles.listTagBindings",
            "datastream.privateConnections.listEffectiveTags",
            "datastream.privateConnections.listTagBindings",
            "datastream.streams.listEffectiveTags",
            "datastream.streams.listTagBindings",
            "domains.registrations.listEffectiveTags",
            "domains.registrations.listTagBindings",
            "file.backups.listEffectiveTags",
            "file.backups.listTagBindings",
            "file.instances.listEffectiveTags",
            "file.instances.listTagBindings",
            "file.snapshots.listEffectiveTags",
            "file.snapshots.listTagBindings",
            "iam.serviceAccounts.listEffectiveTags",
            "iam.serviceAccounts.listTagBindings",
            "logging.buckets.listEffectiveTags",
            "logging.buckets.listTagBindings",
            "managedidentities.domains.listEffectiveTags",
            "managedidentities.domains.listTagBindings",
            "monitoring.alertPolicies.listEffectiveTags",
            "monitoring.alertPolicies.listTagBindings",
            "privateca.caPools.listEffectiveTags",
            "privateca.caPools.listTagBindings",
            "privateca.certificateTemplates.listEffectiveTags",
            "privateca.certificateTemplates.listTagBindings",
            "redis.instances.listEffectiveTags",
            "redis.instances.listTagBindings",
            "resourcemanager.hierarchyNodes.listEffectiveTags",
            "resourcemanager.hierarchyNodes.listTagBindings",
            "resourcemanager.tagHolds.list",
            "resourcemanager.tagKeys.get",
            "resourcemanager.tagKeys.list",
            "resourcemanager.tagValues.get",
            "resourcemanager.tagValues.list",
            "run.jobs.listEffectiveTags",
            "run.jobs.listTagBindings",
            "run.services.listEffectiveTags",
            "run.services.listTagBindings",
            "secretmanager.secrets.listEffectiveTags",
            "secretmanager.secrets.listTagBindings",
            "spanner.instances.listEffectiveTags",
            "spanner.instances.listTagBindings",
            "storage.buckets.listEffectiveTags",
            "storage.buckets.listTagBindings",
            "transcoder.jobTemplates.listEffectiveTags",
            "transcoder.jobTemplates.listTagBindings",
            "transcoder.jobs.listEffectiveTags",
            "transcoder.jobs.listTagBindings",
            "workflows.workflows.listEffectiveTags",
            "workflows.workflows.listTagBindings",
            "workstations.workstationClusters.listEffectiveTags",
            "workstations.workstationClusters.listTagBindings"
          ],
          "title": "Tag Viewer"
        },
        {
          "description": "Provides admin capabilities to set Resource Setting Values on resources.",
          "id": "roles/resourcesettings.admin",
          "is_beta": false,
          "permissions": [
            "resourcesettings.*"
          ],
          "title": "Resource Settings Administrator"
        },
        {
          "description": "Provides capabilities to view Resource Settings and Resource Setting Values on resources.",
          "id": "roles/resourcesettings.viewer",
          "is_beta": false,
          "permissions": [
            "resourcesettings.settings.get",
            "resourcesettings.settings.list"
          ],
          "title": "Resource Settings Viewer"
        },
        {
          "description": "Grants all Risk Manager permissions",
          "id": "roles/riskmanager.admin",
          "is_beta": true,
          "permissions": [
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "riskmanager.*"
          ],
          "title": "Risk Manager Admin"
        },
        {
          "description": "Access to edit Risk Manager resources",
          "id": "roles/riskmanager.editor",
          "is_beta": true,
          "permissions": [
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "riskmanager.controlScoreBreakdowns.*",
            "riskmanager.operations.*",
            "riskmanager.policies.*",
            "riskmanager.reports.create",
            "riskmanager.reports.delete",
            "riskmanager.reports.get",
            "riskmanager.reports.list",
            "riskmanager.serviceAccount.create",
            "riskmanager.settings.*"
          ],
          "title": "Risk Manager Editor"
        },
        {
          "description": "Access to review Risk Manager reports",
          "id": "roles/riskmanager.reviewer",
          "is_beta": true,
          "permissions": [
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "riskmanager.controlScoreBreakdowns.*",
            "riskmanager.operations.get",
            "riskmanager.operations.list",
            "riskmanager.reports.get",
            "riskmanager.reports.list",
            "riskmanager.reports.review"
          ],
          "title": "Risk Manager Report Reviewer"
        },
        {
          "description": "Access to view Risk Manager resources",
          "id": "roles/riskmanager.viewer",
          "is_beta": true,
          "permissions": [
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "riskmanager.controlScoreBreakdowns.*",
            "riskmanager.operations.get",
            "riskmanager.operations.list",
            "riskmanager.policies.*",
            "riskmanager.reports.get",
            "riskmanager.reports.list",
            "riskmanager.settings.get"
          ],
          "title": "Risk Manager Viewer"
        },
        {
          "description": "Provides access to administer all custom roles in the organization and the projects below it.",
          "id": "roles/iam.organizationRoleAdmin",
          "is_beta": false,
          "permissions": [
            "iam.roles.*",
            "resourcemanager.organizations.get",
            "resourcemanager.organizations.getIamPolicy",
            "resourcemanager.projects.get",
            "resourcemanager.projects.getIamPolicy",
            "resourcemanager.projects.list"
          ],
          "title": "Organization Role Administrator"
        },
        {
          "description": "Provides read access to all custom roles in the organization and the projects below it.",
          "id": "roles/iam.organizationRoleViewer",
          "is_beta": false,
          "permissions": [
            "iam.roles.get",
            "iam.roles.list",
            "resourcemanager.organizations.get",
            "resourcemanager.organizations.getIamPolicy",
            "resourcemanager.projects.get",
            "resourcemanager.projects.getIamPolicy",
            "resourcemanager.projects.list"
          ],
          "title": "Organization Role Viewer"
        },
        {
          "description": "Provides access to all custom roles in the project.",
          "id": "roles/iam.roleAdmin",
          "is_beta": false,
          "permissions": [
            "iam.roles.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.getIamPolicy"
          ],
          "title": "Role Administrator"
        },
        {
          "description": "Provides read access to all custom roles in the project.",
          "id": "roles/iam.roleViewer",
          "is_beta": false,
          "permissions": [
            "iam.roles.get",
            "iam.roles.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.getIamPolicy"
          ],
          "title": "Role Viewer"
        },
        {
          "description": "Full access to administer Secret Manager resources.",
          "id": "roles/secretmanager.admin",
          "is_beta": false,
          "permissions": [
            "cloudkms.keyHandles.*",
            "cloudkms.operations.get",
            "cloudkms.projects.showEffectiveAutokeyConfig",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "secretmanager.*"
          ],
          "title": "Secret Manager Admin"
        },
        {
          "description": "Allows accessing the payload of secrets.",
          "id": "roles/secretmanager.secretAccessor",
          "is_beta": false,
          "permissions": [
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "secretmanager.versions.access"
          ],
          "title": "Secret Manager Secret Accessor"
        },
        {
          "description": "Allows adding versions to existing secrets.",
          "id": "roles/secretmanager.secretVersionAdder",
          "is_beta": false,
          "permissions": [
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "secretmanager.versions.add"
          ],
          "title": "Secret Manager Secret Version Adder"
        },
        {
          "description": "Allows creating and managing versions of existing secrets.",
          "id": "roles/secretmanager.secretVersionManager",
          "is_beta": false,
          "permissions": [
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "secretmanager.versions.add",
            "secretmanager.versions.destroy",
            "secretmanager.versions.disable",
            "secretmanager.versions.enable",
            "secretmanager.versions.get",
            "secretmanager.versions.list"
          ],
          "title": "Secret Manager Secret Version Manager"
        },
        {
          "description": "Allows viewing metadata of all Secret Manager resources",
          "id": "roles/secretmanager.viewer",
          "is_beta": false,
          "permissions": [
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "secretmanager.locations.*",
            "secretmanager.secrets.get",
            "secretmanager.secrets.getIamPolicy",
            "secretmanager.secrets.list",
            "secretmanager.secrets.listEffectiveTags",
            "secretmanager.secrets.listTagBindings",
            "secretmanager.versions.get",
            "secretmanager.versions.list"
          ],
          "title": "Secret Manager Viewer"
        },
        {
          "description": "Full access to all Secure Source Manager resources.",
          "id": "roles/securesourcemanager.admin",
          "is_beta": true,
          "permissions": [
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "securesourcemanager.*"
          ],
          "title": "Secure Source Manager Admin"
        },
        {
          "description": "An instance accessor can access an instance, but not necessarily create resources in the instance.",
          "id": "roles/securesourcemanager.instanceAccessor",
          "is_beta": true,
          "permissions": [
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "securesourcemanager.instances.access",
            "securesourcemanager.sshkeys.create",
            "securesourcemanager.sshkeys.delete",
            "securesourcemanager.sshkeys.get",
            "securesourcemanager.sshkeys.list"
          ],
          "title": "Secure Source Manager Instance Accessor"
        },
        {
          "description": "Read-write access to all Secure Source Manager resources (full control except for the ability to modify permissions).",
          "id": "roles/securesourcemanager.instanceManager",
          "is_beta": true,
          "permissions": [
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "securesourcemanager.instances.access",
            "securesourcemanager.instances.createRepository",
            "securesourcemanager.instances.delete",
            "securesourcemanager.instances.get",
            "securesourcemanager.instances.list",
            "securesourcemanager.locations.*",
            "securesourcemanager.operations.*",
            "securesourcemanager.sshkeys.*"
          ],
          "title": "Secure Source Manager Instance Manager"
        },
        {
          "description": "Full control over Secure Source Manager instances, including listing, creating, and deleting them. Also enables instance user management.",
          "id": "roles/securesourcemanager.instanceOwner",
          "is_beta": true,
          "permissions": [
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "securesourcemanager.instances.*",
            "securesourcemanager.locations.*",
            "securesourcemanager.operations.*",
            "securesourcemanager.sshkeys.*"
          ],
          "title": "Secure Source Manager Instance Owner"
        },
        {
          "description": "An instance repository creator can connect to a Cloud Git instance via IAP (HTTPS) and create repositories in the instance.",
          "id": "roles/securesourcemanager.instanceRepositoryCreator",
          "is_beta": true,
          "permissions": [
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "securesourcemanager.instances.access",
            "securesourcemanager.instances.createRepository",
            "securesourcemanager.sshkeys.create",
            "securesourcemanager.sshkeys.delete",
            "securesourcemanager.sshkeys.get",
            "securesourcemanager.sshkeys.list"
          ],
          "title": "Secure Source Manager Instance Repository Creator"
        },
        {
          "description": "A repoAdmin has the ability to CRUD a repository and its children as well as assign users to a repository. They can also set, get, or check IAM policies on the repository.",
          "id": "roles/securesourcemanager.repoAdmin",
          "is_beta": true,
          "permissions": [
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "securesourcemanager.branchRules.*",
            "securesourcemanager.repositories.*"
          ],
          "title": "Secure Source Manager Repository Admin"
        },
        {
          "description": "A repoCreator has access to create repostiory in a project, the creator will then become the repoAdmin on this repository.",
          "id": "roles/securesourcemanager.repoCreator",
          "is_beta": true,
          "permissions": [
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "securesourcemanager.repositories.create"
          ],
          "title": "Secure Source Manager Repository Creator"
        },
        {
          "description": "A pull request approver can approve pull requests in a repository.",
          "id": "roles/securesourcemanager.repoPullRequestApprover",
          "is_beta": true,
          "permissions": [
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "securesourcemanager.repositories.approvePullRequests"
          ],
          "title": "Secure Source Manager Repository Pull Request Approver"
        },
        {
          "description": "A repoReader has read access to a particular repository, including its child components. They cannot create repositories, and do not manage IAM policies on the repository.",
          "id": "roles/securesourcemanager.repoReader",
          "is_beta": true,
          "permissions": [
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "securesourcemanager.branchRules.get",
            "securesourcemanager.branchRules.list",
            "securesourcemanager.repositories.fetch",
            "securesourcemanager.repositories.get",
            "securesourcemanager.repositories.list",
            "securesourcemanager.repositories.readIssues",
            "securesourcemanager.repositories.readPullRequests"
          ],
          "title": "Secure Source Manager Repository Reader"
        },
        {
          "description": "A repoWriter has read/write access to a particular repository, including its child components. They cannot create repositories, and do not manage IAM policies on the repository.",
          "id": "roles/securesourcemanager.repoWriter",
          "is_beta": true,
          "permissions": [
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "securesourcemanager.branchRules.get",
            "securesourcemanager.branchRules.list",
            "securesourcemanager.repositories.fetch",
            "securesourcemanager.repositories.get",
            "securesourcemanager.repositories.list",
            "securesourcemanager.repositories.push",
            "securesourcemanager.repositories.readIssues",
            "securesourcemanager.repositories.readPullRequests",
            "securesourcemanager.repositories.writeIssues",
            "securesourcemanager.repositories.writePullRequests"
          ],
          "title": "Secure Source Manager Repository Writer"
        },
        {
          "description": "An sshKeyUser can create SSH keys for themselves and list/delete SSH keys they own.",
          "id": "roles/securesourcemanager.sshKeyUser",
          "is_beta": true,
          "permissions": [
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "securesourcemanager.sshkeys.create",
            "securesourcemanager.sshkeys.delete",
            "securesourcemanager.sshkeys.get",
            "securesourcemanager.sshkeys.list"
          ],
          "title": "Secure Source Manager SSH Key User"
        },
        {
          "description": "Admin(super user) access to security center",
          "id": "roles/securitycenter.admin",
          "is_beta": false,
          "permissions": [
            "appengine.applications.get",
            "artifactregistry.attachments.get",
            "artifactregistry.attachments.list",
            "artifactregistry.dockerimages.*",
            "artifactregistry.files.download",
            "artifactregistry.files.get",
            "artifactregistry.files.list",
            "artifactregistry.locations.*",
            "artifactregistry.mavenartifacts.*",
            "artifactregistry.npmpackages.*",
            "artifactregistry.packages.get",
            "artifactregistry.packages.list",
            "artifactregistry.projectsettings.get",
            "artifactregistry.pythonpackages.*",
            "artifactregistry.repositories.create",
            "artifactregistry.repositories.downloadArtifacts",
            "artifactregistry.repositories.get",
            "artifactregistry.repositories.list",
            "artifactregistry.repositories.listEffectiveTags",
            "artifactregistry.repositories.listTagBindings",
            "artifactregistry.repositories.readViaVirtualRepository",
            "artifactregistry.rules.get",
            "artifactregistry.rules.list",
            "artifactregistry.tags.get",
            "artifactregistry.tags.list",
            "artifactregistry.versions.get",
            "artifactregistry.versions.list",
            "assuredoss.*",
            "cloudasset.assets.exportIamPolicy",
            "cloudasset.assets.exportOSInventories",
            "cloudasset.assets.exportResource",
            "cloudasset.assets.queryAccessPolicy",
            "cloudasset.assets.queryIamPolicy",
            "cloudasset.assets.queryOSInventories",
            "cloudasset.assets.queryResource",
            "cloudasset.assets.searchAllIamPolicies",
            "cloudasset.assets.searchAllResources",
            "cloudasset.assets.searchEnrichmentResourceOwners",
            "cloudasset.othercloudconnections.get",
            "cloudasset.othercloudconnections.list",
            "cloudasset.othercloudconnections.verify",
            "cloudsecurityscanner.*",
            "compute.addresses.list",
            "iam.serviceAccountKeys.create",
            "iam.serviceAccounts.create",
            "iam.serviceAccounts.get",
            "pubsub.schemas.get",
            "pubsub.schemas.list",
            "pubsub.schemas.listRevisions",
            "pubsub.schemas.validate",
            "pubsub.snapshots.get",
            "pubsub.snapshots.list",
            "pubsub.subscriptions.create",
            "pubsub.subscriptions.get",
            "pubsub.subscriptions.list",
            "pubsub.subscriptions.update",
            "pubsub.topics.get",
            "pubsub.topics.list",
            "resourcemanager.folders.get",
            "resourcemanager.folders.list",
            "resourcemanager.organizations.get",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "resourcemanager.tagValues.get",
            "securitycenter.*",
            "securitycentermanagement.*",
            "serviceusage.quotas.get",
            "serviceusage.services.enable",
            "serviceusage.services.get",
            "serviceusage.services.list"
          ],
          "title": "Security Center Admin"
        },
        {
          "description": "Admin Read-write access to security center",
          "id": "roles/securitycenter.adminEditor",
          "is_beta": false,
          "permissions": [
            "appengine.applications.get",
            "artifactregistry.attachments.get",
            "artifactregistry.attachments.list",
            "artifactregistry.dockerimages.*",
            "artifactregistry.files.download",
            "artifactregistry.files.get",
            "artifactregistry.files.list",
            "artifactregistry.locations.*",
            "artifactregistry.mavenartifacts.*",
            "artifactregistry.npmpackages.*",
            "artifactregistry.packages.get",
            "artifactregistry.packages.list",
            "artifactregistry.projectsettings.get",
            "artifactregistry.pythonpackages.*",
            "artifactregistry.repositories.downloadArtifacts",
            "artifactregistry.repositories.get",
            "artifactregistry.repositories.list",
            "artifactregistry.repositories.listEffectiveTags",
            "artifactregistry.repositories.listTagBindings",
            "artifactregistry.repositories.readViaVirtualRepository",
            "artifactregistry.rules.get",
            "artifactregistry.rules.list",
            "artifactregistry.tags.get",
            "artifactregistry.tags.list",
            "artifactregistry.versions.get",
            "artifactregistry.versions.list",
            "assuredoss.config.get",
            "assuredoss.locations.*",
            "assuredoss.metadata.*",
            "assuredoss.operations.get",
            "assuredoss.operations.list",
            "cloudasset.assets.exportIamPolicy",
            "cloudasset.assets.exportOSInventories",
            "cloudasset.assets.exportResource",
            "cloudasset.assets.queryAccessPolicy",
            "cloudasset.assets.queryIamPolicy",
            "cloudasset.assets.queryOSInventories",
            "cloudasset.assets.queryResource",
            "cloudasset.assets.searchAllIamPolicies",
            "cloudasset.assets.searchAllResources",
            "cloudasset.assets.searchEnrichmentResourceOwners",
            "cloudasset.othercloudconnections.get",
            "cloudasset.othercloudconnections.list",
            "cloudasset.othercloudconnections.verify",
            "cloudsecurityscanner.*",
            "compute.addresses.list",
            "pubsub.schemas.get",
            "pubsub.schemas.list",
            "pubsub.schemas.listRevisions",
            "pubsub.schemas.validate",
            "pubsub.snapshots.get",
            "pubsub.snapshots.list",
            "pubsub.subscriptions.get",
            "pubsub.subscriptions.list",
            "pubsub.topics.get",
            "pubsub.topics.list",
            "resourcemanager.folders.get",
            "resourcemanager.folders.list",
            "resourcemanager.organizations.get",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "resourcemanager.tagValues.get",
            "securitycenter.assets.*",
            "securitycenter.assetsecuritymarks.update",
            "securitycenter.attackpaths.list",
            "securitycenter.bigQueryExports.*",
            "securitycenter.complianceReports.aggregate",
            "securitycenter.compliancesnapshots.list",
            "securitycenter.containerthreatdetectionsettings.calculate",
            "securitycenter.containerthreatdetectionsettings.get",
            "securitycenter.effectivesecurityhealthanalyticscustommodules.*",
            "securitycenter.eventthreatdetectionsettings.calculate",
            "securitycenter.eventthreatdetectionsettings.get",
            "securitycenter.exposurepathexplan.get",
            "securitycenter.findingexplanations.get",
            "securitycenter.findingexternalsystems.update",
            "securitycenter.findings.*",
            "securitycenter.findingsecuritymarks.update",
            "securitycenter.integratedvulnerabilityscannersettings.calculate",
            "securitycenter.integratedvulnerabilityscannersettings.get",
            "securitycenter.issues.*",
            "securitycenter.muteconfigs.*",
            "securitycenter.notificationconfig.*",
            "securitycenter.organizationsettings.get",
            "securitycenter.rapidvulnerabilitydetectionsettings.calculate",
            "securitycenter.rapidvulnerabilitydetectionsettings.get",
            "securitycenter.resourcevalueconfigs.*",
            "securitycenter.securitycentersettings.get",
            "securitycenter.securityhealthanalyticscustommodules.get",
            "securitycenter.securityhealthanalyticscustommodules.list",
            "securitycenter.securityhealthanalyticscustommodules.simulate",
            "securitycenter.securityhealthanalyticscustommodules.test",
            "securitycenter.securityhealthanalyticssettings.calculate",
            "securitycenter.securityhealthanalyticssettings.get",
            "securitycenter.simulations.get",
            "securitycenter.sources.get",
            "securitycenter.sources.list",
            "securitycenter.sources.update",
            "securitycenter.subscription.get",
            "securitycenter.userinterfacemetadata.get",
            "securitycenter.valuedresources.list",
            "securitycenter.virtualmachinethreatdetectionsettings.calculate",
            "securitycenter.virtualmachinethreatdetectionsettings.get",
            "securitycenter.vulnerabilitysnapshots.list",
            "securitycenter.websecurityscannersettings.calculate",
            "securitycenter.websecurityscannersettings.get",
            "securitycentermanagement.billingMetadata.get",
            "securitycentermanagement.effectiveEventThreatDetectionCustomModules.*",
            "securitycentermanagement.effectiveSecurityHealthAnalyticsCustomModules.*",
            "securitycentermanagement.eventThreatDetectionCustomModules.get",
            "securitycentermanagement.eventThreatDetectionCustomModules.list",
            "securitycentermanagement.eventThreatDetectionCustomModules.validate",
            "securitycentermanagement.locations.*",
            "securitycentermanagement.securityCenterServices.get",
            "securitycentermanagement.securityCenterServices.list",
            "securitycentermanagement.securityCommandCenter.checkActivationOperation",
            "securitycentermanagement.securityCommandCenter.checkOnboardingStatus",
            "securitycentermanagement.securityCommandCenter.generateServiceAccounts",
            "securitycentermanagement.securityCommandCenter.get",
            "securitycentermanagement.securityCommandCenter.update",
            "securitycentermanagement.securityHealthAnalyticsCustomModules.get",
            "securitycentermanagement.securityHealthAnalyticsCustomModules.list",
            "securitycentermanagement.securityHealthAnalyticsCustomModules.simulate",
            "securitycentermanagement.securityHealthAnalyticsCustomModules.test",
            "serviceusage.quotas.get",
            "serviceusage.services.get",
            "serviceusage.services.list"
          ],
          "title": "Security Center Admin Editor"
        },
        {
          "description": "Admin Read access to security center",
          "id": "roles/securitycenter.adminViewer",
          "is_beta": false,
          "permissions": [
            "artifactregistry.attachments.get",
            "artifactregistry.attachments.list",
            "artifactregistry.dockerimages.*",
            "artifactregistry.files.download",
            "artifactregistry.files.get",
            "artifactregistry.files.list",
            "artifactregistry.locations.*",
            "artifactregistry.mavenartifacts.*",
            "artifactregistry.npmpackages.*",
            "artifactregistry.packages.get",
            "artifactregistry.packages.list",
            "artifactregistry.projectsettings.get",
            "artifactregistry.pythonpackages.*",
            "artifactregistry.repositories.downloadArtifacts",
            "artifactregistry.repositories.get",
            "artifactregistry.repositories.list",
            "artifactregistry.repositories.listEffectiveTags",
            "artifactregistry.repositories.listTagBindings",
            "artifactregistry.repositories.readViaVirtualRepository",
            "artifactregistry.rules.get",
            "artifactregistry.rules.list",
            "artifactregistry.tags.get",
            "artifactregistry.tags.list",
            "artifactregistry.versions.get",
            "artifactregistry.versions.list",
            "assuredoss.config.get",
            "assuredoss.locations.*",
            "assuredoss.metadata.*",
            "assuredoss.operations.get",
            "assuredoss.operations.list",
            "cloudasset.assets.exportIamPolicy",
            "cloudasset.assets.exportOSInventories",
            "cloudasset.assets.exportResource",
            "cloudasset.assets.queryAccessPolicy",
            "cloudasset.assets.queryIamPolicy",
            "cloudasset.assets.queryOSInventories",
            "cloudasset.assets.queryResource",
            "cloudasset.assets.searchAllIamPolicies",
            "cloudasset.assets.searchAllResources",
            "cloudasset.assets.searchEnrichmentResourceOwners",
            "cloudasset.othercloudconnections.get",
            "cloudasset.othercloudconnections.list",
            "cloudasset.othercloudconnections.verify",
            "cloudsecurityscanner.crawledurls.list",
            "cloudsecurityscanner.results.*",
            "cloudsecurityscanner.scanruns.get",
            "cloudsecurityscanner.scanruns.getSummary",
            "cloudsecurityscanner.scanruns.list",
            "cloudsecurityscanner.scans.get",
            "cloudsecurityscanner.scans.list",
            "pubsub.schemas.get",
            "pubsub.schemas.list",
            "pubsub.schemas.listRevisions",
            "pubsub.schemas.validate",
            "pubsub.snapshots.get",
            "pubsub.snapshots.list",
            "pubsub.subscriptions.get",
            "pubsub.subscriptions.list",
            "pubsub.topics.get",
            "pubsub.topics.list",
            "resourcemanager.folders.get",
            "resourcemanager.folders.list",
            "resourcemanager.organizations.get",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "resourcemanager.tagValues.get",
            "securitycenter.assets.group",
            "securitycenter.assets.list",
            "securitycenter.assets.listAssetPropertyNames",
            "securitycenter.attackpaths.list",
            "securitycenter.bigQueryExports.get",
            "securitycenter.bigQueryExports.list",
            "securitycenter.complianceReports.aggregate",
            "securitycenter.compliancesnapshots.list",
            "securitycenter.containerthreatdetectionsettings.calculate",
            "securitycenter.containerthreatdetectionsettings.get",
            "securitycenter.effectivesecurityhealthanalyticscustommodules.*",
            "securitycenter.eventthreatdetectionsettings.calculate",
            "securitycenter.eventthreatdetectionsettings.get",
            "securitycenter.exposurepathexplan.get",
            "securitycenter.findingexplanations.get",
            "securitycenter.findings.group",
            "securitycenter.findings.list",
            "securitycenter.findings.listFindingPropertyNames",
            "securitycenter.integratedvulnerabilityscannersettings.calculate",
            "securitycenter.integratedvulnerabilityscannersettings.get",
            "securitycenter.issues.get",
            "securitycenter.issues.group",
            "securitycenter.issues.list",
            "securitycenter.issues.listFilterValues",
            "securitycenter.muteconfigs.get",
            "securitycenter.muteconfigs.list",
            "securitycenter.notificationconfig.get",
            "securitycenter.notificationconfig.list",
            "securitycenter.organizationsettings.get",
            "securitycenter.rapidvulnerabilitydetectionsettings.calculate",
            "securitycenter.rapidvulnerabilitydetectionsettings.get",
            "securitycenter.resourcevalueconfigs.get",
            "securitycenter.resourcevalueconfigs.list",
            "securitycenter.securitycentersettings.get",
            "securitycenter.securityhealthanalyticscustommodules.get",
            "securitycenter.securityhealthanalyticscustommodules.list",
            "securitycenter.securityhealthanalyticscustommodules.simulate",
            "securitycenter.securityhealthanalyticscustommodules.test",
            "securitycenter.securityhealthanalyticssettings.calculate",
            "securitycenter.securityhealthanalyticssettings.get",
            "securitycenter.simulations.get",
            "securitycenter.sources.get",
            "securitycenter.sources.list",
            "securitycenter.subscription.get",
            "securitycenter.userinterfacemetadata.get",
            "securitycenter.valuedresources.list",
            "securitycenter.virtualmachinethreatdetectionsettings.calculate",
            "securitycenter.virtualmachinethreatdetectionsettings.get",
            "securitycenter.vulnerabilitysnapshots.list",
            "securitycenter.websecurityscannersettings.calculate",
            "securitycenter.websecurityscannersettings.get",
            "securitycentermanagement.billingMetadata.get",
            "securitycentermanagement.effectiveEventThreatDetectionCustomModules.*",
            "securitycentermanagement.effectiveSecurityHealthAnalyticsCustomModules.*",
            "securitycentermanagement.eventThreatDetectionCustomModules.get",
            "securitycentermanagement.eventThreatDetectionCustomModules.list",
            "securitycentermanagement.eventThreatDetectionCustomModules.validate",
            "securitycentermanagement.locations.*",
            "securitycentermanagement.securityCenterServices.get",
            "securitycentermanagement.securityCenterServices.list",
            "securitycentermanagement.securityCommandCenter.checkActivationOperation",
            "securitycentermanagement.securityCommandCenter.checkOnboardingStatus",
            "securitycentermanagement.securityCommandCenter.get",
            "securitycentermanagement.securityHealthAnalyticsCustomModules.get",
            "securitycentermanagement.securityHealthAnalyticsCustomModules.list",
            "securitycentermanagement.securityHealthAnalyticsCustomModules.simulate",
            "securitycentermanagement.securityHealthAnalyticsCustomModules.test",
            "serviceusage.quotas.get",
            "serviceusage.services.get",
            "serviceusage.services.list"
          ],
          "title": "Security Center Admin Viewer"
        },
        {
          "description": "Write access to asset security marks",
          "id": "roles/securitycenter.assetSecurityMarksWriter",
          "is_beta": false,
          "permissions": [
            "securitycenter.assetsecuritymarks.update",
            "securitycenter.userinterfacemetadata.get"
          ],
          "title": "Security Center Asset Security Marks Writer"
        },
        {
          "description": "Run asset discovery access to assets",
          "id": "roles/securitycenter.assetsDiscoveryRunner",
          "is_beta": false,
          "permissions": [
            "securitycenter.assets.runDiscovery",
            "securitycenter.userinterfacemetadata.get"
          ],
          "title": "Security Center Assets Discovery Runner"
        },
        {
          "description": "Read access to assets",
          "id": "roles/securitycenter.assetsViewer",
          "is_beta": false,
          "permissions": [
            "cloudasset.assets.exportIamPolicy",
            "cloudasset.assets.exportOSInventories",
            "cloudasset.assets.exportResource",
            "cloudasset.assets.queryAccessPolicy",
            "cloudasset.assets.queryIamPolicy",
            "cloudasset.assets.queryOSInventories",
            "cloudasset.assets.queryResource",
            "cloudasset.assets.searchAllIamPolicies",
            "cloudasset.assets.searchAllResources",
            "cloudasset.assets.searchEnrichmentResourceOwners",
            "cloudasset.othercloudconnections.get",
            "cloudasset.othercloudconnections.list",
            "cloudasset.othercloudconnections.verify",
            "resourcemanager.folders.get",
            "resourcemanager.organizations.get",
            "resourcemanager.projects.get",
            "securitycenter.assets.group",
            "securitycenter.assets.list",
            "securitycenter.assets.listAssetPropertyNames",
            "securitycenter.userinterfacemetadata.get"
          ],
          "title": "Security Center Assets Viewer"
        },
        {
          "description": "Read access to security center attack paths",
          "id": "roles/securitycenter.attackPathsViewer",
          "is_beta": false,
          "permissions": [
            "securitycenter.attackpaths.list",
            "securitycenter.exposurepathexplan.get"
          ],
          "title": "Security Center Attack Paths Reader"
        },
        {
          "description": "Read-Write access to security center BigQuery Exports",
          "id": "roles/securitycenter.bigQueryExportsEditor",
          "is_beta": false,
          "permissions": [
            "resourcemanager.folders.get",
            "resourcemanager.folders.list",
            "resourcemanager.organizations.get",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "securitycenter.bigQueryExports.*"
          ],
          "title": "Security Center BigQuery Exports Editor"
        },
        {
          "description": "Read access to security center BigQuery Exports",
          "id": "roles/securitycenter.bigQueryExportsViewer",
          "is_beta": false,
          "permissions": [
            "resourcemanager.folders.get",
            "resourcemanager.folders.list",
            "resourcemanager.organizations.get",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "securitycenter.bigQueryExports.get",
            "securitycenter.bigQueryExports.list"
          ],
          "title": "Security Center BigQuery Exports Viewer"
        },
        {
          "description": "Read access to security center compliance reports",
          "id": "roles/securitycenter.complianceReportsViewer",
          "is_beta": true,
          "permissions": [
            "securitycenter.complianceReports.aggregate"
          ],
          "title": "Security Center Compliance Reports Viewer"
        },
        {
          "description": "Read access to security center compliance snapshots",
          "id": "roles/securitycenter.complianceSnapshotsViewer",
          "is_beta": true,
          "permissions": [
            "securitycenter.complianceReports.aggregate",
            "securitycenter.compliancesnapshots.list"
          ],
          "title": "Security Center Compliance Snapshots Viewer"
        },
        {
          "description": "Write access to security center external systems",
          "id": "roles/securitycenter.externalSystemsEditor",
          "is_beta": false,
          "permissions": [
            "securitycenter.findingexternalsystems.update"
          ],
          "title": "Security Center External Systems Editor"
        },
        {
          "description": "Write access to finding security marks",
          "id": "roles/securitycenter.findingSecurityMarksWriter",
          "is_beta": false,
          "permissions": [
            "securitycenter.findingsecuritymarks.update",
            "securitycenter.userinterfacemetadata.get"
          ],
          "title": "Security Center Finding Security Marks Writer"
        },
        {
          "description": "Ability to mute findings in bulk",
          "id": "roles/securitycenter.findingsBulkMuteEditor",
          "is_beta": false,
          "permissions": [
            "securitycenter.findings.bulkMuteUpdate"
          ],
          "title": "Security Center Findings Bulk Mute Editor"
        },
        {
          "description": "Read-write access to findings",
          "id": "roles/securitycenter.findingsEditor",
          "is_beta": false,
          "permissions": [
            "resourcemanager.folders.get",
            "resourcemanager.organizations.get",
            "resourcemanager.projects.get",
            "securitycenter.complianceReports.aggregate",
            "securitycenter.compliancesnapshots.list",
            "securitycenter.findingexplanations.get",
            "securitycenter.findings.bulkMuteUpdate",
            "securitycenter.findings.group",
            "securitycenter.findings.list",
            "securitycenter.findings.listFindingPropertyNames",
            "securitycenter.findings.setMute",
            "securitycenter.findings.setState",
            "securitycenter.findings.update",
            "securitycenter.issues.*",
            "securitycenter.sources.get",
            "securitycenter.sources.list",
            "securitycenter.userinterfacemetadata.get",
            "securitycenter.vulnerabilitysnapshots.list"
          ],
          "title": "Security Center Findings Editor"
        },
        {
          "description": "Set mute access to findings",
          "id": "roles/securitycenter.findingsMuteSetter",
          "is_beta": false,
          "permissions": [
            "securitycenter.findings.setMute"
          ],
          "title": "Security Center Findings Mute Setter"
        },
        {
          "description": "Set state access to findings",
          "id": "roles/securitycenter.findingsStateSetter",
          "is_beta": false,
          "permissions": [
            "securitycenter.findings.setState",
            "securitycenter.userinterfacemetadata.get"
          ],
          "title": "Security Center Findings State Setter"
        },
        {
          "description": "Read access to findings",
          "id": "roles/securitycenter.findingsViewer",
          "is_beta": false,
          "permissions": [
            "resourcemanager.folders.get",
            "resourcemanager.organizations.get",
            "resourcemanager.projects.get",
            "securitycenter.complianceReports.aggregate",
            "securitycenter.compliancesnapshots.list",
            "securitycenter.findingexplanations.get",
            "securitycenter.findings.group",
            "securitycenter.findings.list",
            "securitycenter.findings.listFindingPropertyNames",
            "securitycenter.issues.get",
            "securitycenter.issues.group",
            "securitycenter.issues.list",
            "securitycenter.issues.listFilterValues",
            "securitycenter.sources.get",
            "securitycenter.sources.list",
            "securitycenter.userinterfacemetadata.get",
            "securitycenter.vulnerabilitysnapshots.list"
          ],
          "title": "Security Center Findings Viewer"
        },
        {
          "description": "Set workflow state access to findings",
          "id": "roles/securitycenter.findingsWorkflowStateSetter",
          "is_beta": true,
          "permissions": [
            "securitycenter.findings.setWorkflowState",
            "securitycenter.userinterfacemetadata.get"
          ],
          "title": "Security Center Findings Workflow State Setter"
        },
        {
          "description": "Write access to security center issues",
          "id": "roles/securitycenter.issuesEditor",
          "is_beta": true,
          "permissions": [
            "securitycenter.issues.*"
          ],
          "title": "Security Center Issues Editor"
        },
        {
          "description": "Read access to security center issues",
          "id": "roles/securitycenter.issuesViewer",
          "is_beta": true,
          "permissions": [
            "securitycenter.issues.get",
            "securitycenter.issues.group",
            "securitycenter.issues.list",
            "securitycenter.issues.listFilterValues"
          ],
          "title": "Security Center Issues Viewer"
        },
        {
          "description": "Read-Write access to security center mute configurations",
          "id": "roles/securitycenter.muteConfigsEditor",
          "is_beta": false,
          "permissions": [
            "securitycenter.muteconfigs.*"
          ],
          "title": "Security Center Mute Configurations Editor"
        },
        {
          "description": "Read access to security center mute configurations",
          "id": "roles/securitycenter.muteConfigsViewer",
          "is_beta": false,
          "permissions": [
            "securitycenter.muteconfigs.get",
            "securitycenter.muteconfigs.list"
          ],
          "title": "Security Center Mute Configurations Viewer"
        },
        {
          "description": "Write access to notification configurations",
          "id": "roles/securitycenter.notificationConfigEditor",
          "is_beta": false,
          "permissions": [
            "securitycenter.notificationconfig.*",
            "securitycenter.userinterfacemetadata.get"
          ],
          "title": "Security Center Notification Configurations Editor"
        },
        {
          "description": "Read access to notification configurations",
          "id": "roles/securitycenter.notificationConfigViewer",
          "is_beta": false,
          "permissions": [
            "securitycenter.notificationconfig.get",
            "securitycenter.notificationconfig.list",
            "securitycenter.userinterfacemetadata.get"
          ],
          "title": "Security Center Notification Configurations Viewer"
        },
        {
          "description": "Read-Write access to security center resource value configurations",
          "id": "roles/securitycenter.resourceValueConfigsEditor",
          "is_beta": false,
          "permissions": [
            "resourcemanager.tagValues.get",
            "securitycenter.resourcevalueconfigs.*"
          ],
          "title": "Security Center Resource Value Configurations Editor"
        },
        {
          "description": "Read access to security center resource value configurations",
          "id": "roles/securitycenter.resourceValueConfigsViewer",
          "is_beta": false,
          "permissions": [
            "resourcemanager.tagValues.get",
            "securitycenter.resourcevalueconfigs.get",
            "securitycenter.resourcevalueconfigs.list"
          ],
          "title": "Security Center Resource Value Configurations Viewer"
        },
        {
          "description": "Test access to Security Health Analytics Custom Modules",
          "id": "roles/securitycenter.securityHealthAnalyticsCustomModulesTester",
          "is_beta": false,
          "permissions": [
            "securitycenter.securityhealthanalyticscustommodules.simulate",
            "securitycenter.securityhealthanalyticscustommodules.test",
            "securitycentermanagement.securityHealthAnalyticsCustomModules.simulate",
            "securitycentermanagement.securityHealthAnalyticsCustomModules.test"
          ],
          "title": "Security Health Analytics Custom Modules Tester"
        },
        {
          "description": "Admin(super user) access to security center settings",
          "id": "roles/securitycenter.settingsAdmin",
          "is_beta": false,
          "permissions": [
            "resourcemanager.folders.get",
            "resourcemanager.folders.list",
            "resourcemanager.organizations.get",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "securitycenter.bigQueryExports.*",
            "securitycenter.billingtier.update",
            "securitycenter.containerthreatdetectionsettings.*",
            "securitycenter.effectivesecurityhealthanalyticscustommodules.*",
            "securitycenter.eventthreatdetectionsettings.*",
            "securitycenter.integratedvulnerabilityscannersettings.*",
            "securitycenter.muteconfigs.*",
            "securitycenter.notificationconfig.*",
            "securitycenter.organizationsettings.*",
            "securitycenter.rapidvulnerabilitydetectionsettings.*",
            "securitycenter.securitycentersettings.*",
            "securitycenter.securityhealthanalyticscustommodules.create",
            "securitycenter.securityhealthanalyticscustommodules.delete",
            "securitycenter.securityhealthanalyticscustommodules.get",
            "securitycenter.securityhealthanalyticscustommodules.list",
            "securitycenter.securityhealthanalyticscustommodules.update",
            "securitycenter.securityhealthanalyticssettings.*",
            "securitycenter.subscription.get",
            "securitycenter.userinterfacemetadata.get",
            "securitycenter.virtualmachinethreatdetectionsettings.*",
            "securitycenter.websecurityscannersettings.*",
            "securitycentermanagement.*"
          ],
          "title": "Security Center Settings Admin"
        },
        {
          "description": "Read-Write access to security center settings",
          "id": "roles/securitycenter.settingsEditor",
          "is_beta": false,
          "permissions": [
            "resourcemanager.folders.get",
            "resourcemanager.folders.list",
            "resourcemanager.organizations.get",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "securitycenter.bigQueryExports.*",
            "securitycenter.billingtier.update",
            "securitycenter.containerthreatdetectionsettings.*",
            "securitycenter.effectivesecurityhealthanalyticscustommodules.*",
            "securitycenter.eventthreatdetectionsettings.*",
            "securitycenter.integratedvulnerabilityscannersettings.*",
            "securitycenter.muteconfigs.*",
            "securitycenter.notificationconfig.*",
            "securitycenter.organizationsettings.*",
            "securitycenter.rapidvulnerabilitydetectionsettings.*",
            "securitycenter.securitycentersettings.*",
            "securitycenter.securityhealthanalyticscustommodules.create",
            "securitycenter.securityhealthanalyticscustommodules.delete",
            "securitycenter.securityhealthanalyticscustommodules.get",
            "securitycenter.securityhealthanalyticscustommodules.list",
            "securitycenter.securityhealthanalyticscustommodules.update",
            "securitycenter.securityhealthanalyticssettings.*",
            "securitycenter.subscription.get",
            "securitycenter.userinterfacemetadata.get",
            "securitycenter.virtualmachinethreatdetectionsettings.*",
            "securitycenter.websecurityscannersettings.*",
            "securitycentermanagement.*"
          ],
          "title": "Security Center Settings Editor"
        },
        {
          "description": "Read access to security center settings",
          "id": "roles/securitycenter.settingsViewer",
          "is_beta": false,
          "permissions": [
            "resourcemanager.folders.get",
            "resourcemanager.folders.list",
            "resourcemanager.organizations.get",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "securitycenter.bigQueryExports.get",
            "securitycenter.bigQueryExports.list",
            "securitycenter.containerthreatdetectionsettings.calculate",
            "securitycenter.containerthreatdetectionsettings.get",
            "securitycenter.effectivesecurityhealthanalyticscustommodules.*",
            "securitycenter.eventthreatdetectionsettings.calculate",
            "securitycenter.eventthreatdetectionsettings.get",
            "securitycenter.integratedvulnerabilityscannersettings.calculate",
            "securitycenter.integratedvulnerabilityscannersettings.get",
            "securitycenter.muteconfigs.get",
            "securitycenter.muteconfigs.list",
            "securitycenter.notificationconfig.get",
            "securitycenter.notificationconfig.list",
            "securitycenter.organizationsettings.get",
            "securitycenter.rapidvulnerabilitydetectionsettings.calculate",
            "securitycenter.rapidvulnerabilitydetectionsettings.get",
            "securitycenter.securitycentersettings.get",
            "securitycenter.securityhealthanalyticscustommodules.get",
            "securitycenter.securityhealthanalyticscustommodules.list",
            "securitycenter.securityhealthanalyticssettings.calculate",
            "securitycenter.securityhealthanalyticssettings.get",
            "securitycenter.subscription.get",
            "securitycenter.userinterfacemetadata.get",
            "securitycenter.virtualmachinethreatdetectionsettings.calculate",
            "securitycenter.virtualmachinethreatdetectionsettings.get",
            "securitycenter.websecurityscannersettings.calculate",
            "securitycenter.websecurityscannersettings.get",
            "securitycentermanagement.billingMetadata.get",
            "securitycentermanagement.effectiveEventThreatDetectionCustomModules.*",
            "securitycentermanagement.effectiveSecurityHealthAnalyticsCustomModules.*",
            "securitycentermanagement.eventThreatDetectionCustomModules.get",
            "securitycentermanagement.eventThreatDetectionCustomModules.list",
            "securitycentermanagement.eventThreatDetectionCustomModules.validate",
            "securitycentermanagement.locations.*",
            "securitycentermanagement.securityCenterServices.get",
            "securitycentermanagement.securityCenterServices.list",
            "securitycentermanagement.securityCommandCenter.checkActivationOperation",
            "securitycentermanagement.securityCommandCenter.checkOnboardingStatus",
            "securitycentermanagement.securityCommandCenter.get",
            "securitycentermanagement.securityHealthAnalyticsCustomModules.get",
            "securitycentermanagement.securityHealthAnalyticsCustomModules.list",
            "securitycentermanagement.securityHealthAnalyticsCustomModules.simulate",
            "securitycentermanagement.securityHealthAnalyticsCustomModules.test"
          ],
          "title": "Security Center Settings Viewer"
        },
        {
          "description": "Read access to security center simulations",
          "id": "roles/securitycenter.simulationsViewer",
          "is_beta": false,
          "permissions": [
            "securitycenter.simulations.get"
          ],
          "title": "Security Center Simulations Reader"
        },
        {
          "description": "Admin access to sources",
          "id": "roles/securitycenter.sourcesAdmin",
          "is_beta": false,
          "permissions": [
            "resourcemanager.organizations.get",
            "securitycenter.sources.*",
            "securitycenter.userinterfacemetadata.get"
          ],
          "title": "Security Center Sources Admin"
        },
        {
          "description": "Read-write access to sources",
          "id": "roles/securitycenter.sourcesEditor",
          "is_beta": false,
          "permissions": [
            "resourcemanager.organizations.get",
            "securitycenter.sources.get",
            "securitycenter.sources.list",
            "securitycenter.sources.update",
            "securitycenter.userinterfacemetadata.get"
          ],
          "title": "Security Center Sources Editor"
        },
        {
          "description": "Read access to sources",
          "id": "roles/securitycenter.sourcesViewer",
          "is_beta": false,
          "permissions": [
            "resourcemanager.organizations.get",
            "securitycenter.sources.get",
            "securitycenter.sources.list",
            "securitycenter.userinterfacemetadata.get"
          ],
          "title": "Security Center Sources Viewer"
        },
        {
          "description": "Read access to security center valued resources",
          "id": "roles/securitycenter.valuedResourcesViewer",
          "is_beta": false,
          "permissions": [
            "securitycenter.valuedresources.list"
          ],
          "title": "Security Center Valued Resources Reader"
        },
        {
          "description": "Full access to manage Cloud Security Command Center services and custom modules configuration.",
          "id": "roles/securitycentermanagement.admin",
          "is_beta": false,
          "permissions": [
            "resourcemanager.organizations.get",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "securitycenter.organizationsettings.*",
            "securitycenter.securitycentersettings.*",
            "securitycentermanagement.*"
          ],
          "title": "Security Center Management Admin"
        },
        {
          "description": "Full access to manage Cloud Security Command Center custom modules.",
          "id": "roles/securitycentermanagement.customModulesEditor",
          "is_beta": false,
          "permissions": [
            "resourcemanager.organizations.get",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "securitycentermanagement.effectiveEventThreatDetectionCustomModules.*",
            "securitycentermanagement.effectiveSecurityHealthAnalyticsCustomModules.*",
            "securitycentermanagement.eventThreatDetectionCustomModules.*",
            "securitycentermanagement.locations.*",
            "securitycentermanagement.securityHealthAnalyticsCustomModules.*"
          ],
          "title": "Security Center Management Custom Modules Editor"
        },
        {
          "description": "Readonly access to Cloud Security Command Center custom modules.",
          "id": "roles/securitycentermanagement.customModulesViewer",
          "is_beta": false,
          "permissions": [
            "resourcemanager.organizations.get",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "securitycentermanagement.effectiveEventThreatDetectionCustomModules.*",
            "securitycentermanagement.effectiveSecurityHealthAnalyticsCustomModules.*",
            "securitycentermanagement.eventThreatDetectionCustomModules.get",
            "securitycentermanagement.eventThreatDetectionCustomModules.list",
            "securitycentermanagement.eventThreatDetectionCustomModules.validate",
            "securitycentermanagement.locations.*",
            "securitycentermanagement.securityHealthAnalyticsCustomModules.get",
            "securitycentermanagement.securityHealthAnalyticsCustomModules.list",
            "securitycentermanagement.securityHealthAnalyticsCustomModules.simulate",
            "securitycentermanagement.securityHealthAnalyticsCustomModules.test"
          ],
          "title": "Security Center Management Custom Modules Viewer"
        },
        {
          "description": "Full access to manage Cloud Security Command Center ETD custom modules.",
          "id": "roles/securitycentermanagement.etdCustomModulesEditor",
          "is_beta": false,
          "permissions": [
            "resourcemanager.organizations.get",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "securitycentermanagement.effectiveEventThreatDetectionCustomModules.*",
            "securitycentermanagement.eventThreatDetectionCustomModules.*",
            "securitycentermanagement.locations.*"
          ],
          "title": "Security Center Management Custom ETD Modules Editor"
        },
        {
          "description": "Readonly access to Cloud Security Command Center ETD custom modules.",
          "id": "roles/securitycentermanagement.etdCustomModulesViewer",
          "is_beta": false,
          "permissions": [
            "resourcemanager.organizations.get",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "securitycentermanagement.effectiveEventThreatDetectionCustomModules.*",
            "securitycentermanagement.eventThreatDetectionCustomModules.get",
            "securitycentermanagement.eventThreatDetectionCustomModules.list",
            "securitycentermanagement.eventThreatDetectionCustomModules.validate",
            "securitycentermanagement.locations.*"
          ],
          "title": "Security Center Management ETD Custom Modules Viewer"
        },
        {
          "description": "Full access to manage Cloud Security Command Center services configuration.",
          "id": "roles/securitycentermanagement.securityCenterServicesEditor",
          "is_beta": false,
          "permissions": [
            "securitycentermanagement.securityCenterServices.*"
          ],
          "title": "Security Center Management Services Editor"
        },
        {
          "description": "Readonly access to Cloud Security Command Center services configuration.",
          "id": "roles/securitycentermanagement.securityCenterServicesViewer",
          "is_beta": false,
          "permissions": [
            "securitycentermanagement.securityCenterServices.get",
            "securitycentermanagement.securityCenterServices.list"
          ],
          "title": "Security Center Management Services Viewer"
        },
        {
          "description": "Full access to manage Cloud Security Command Center settings",
          "id": "roles/securitycentermanagement.settingsEditor",
          "is_beta": false,
          "permissions": [
            "resourcemanager.organizations.get",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "securitycenter.organizationsettings.*",
            "securitycenter.securitycentersettings.*",
            "securitycentermanagement.*"
          ],
          "title": "Security Center Management Settings Editor"
        },
        {
          "description": "Readonly access to Cloud Security Command Center settings",
          "id": "roles/securitycentermanagement.settingsViewer",
          "is_beta": false,
          "permissions": [
            "resourcemanager.organizations.get",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "securitycenter.organizationsettings.get",
            "securitycenter.securitycentersettings.get",
            "securitycentermanagement.billingMetadata.get",
            "securitycentermanagement.effectiveEventThreatDetectionCustomModules.*",
            "securitycentermanagement.effectiveSecurityHealthAnalyticsCustomModules.*",
            "securitycentermanagement.eventThreatDetectionCustomModules.get",
            "securitycentermanagement.eventThreatDetectionCustomModules.list",
            "securitycentermanagement.eventThreatDetectionCustomModules.validate",
            "securitycentermanagement.locations.*",
            "securitycentermanagement.securityCenterServices.get",
            "securitycentermanagement.securityCenterServices.list",
            "securitycentermanagement.securityCommandCenter.checkActivationOperation",
            "securitycentermanagement.securityCommandCenter.checkOnboardingStatus",
            "securitycentermanagement.securityCommandCenter.get",
            "securitycentermanagement.securityHealthAnalyticsCustomModules.get",
            "securitycentermanagement.securityHealthAnalyticsCustomModules.list",
            "securitycentermanagement.securityHealthAnalyticsCustomModules.simulate",
            "securitycentermanagement.securityHealthAnalyticsCustomModules.test"
          ],
          "title": "Security Center Management Settings Viewer"
        },
        {
          "description": "Full access to manage Cloud Security Command Center SHA custom modules.",
          "id": "roles/securitycentermanagement.shaCustomModulesEditor",
          "is_beta": false,
          "permissions": [
            "resourcemanager.organizations.get",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "securitycentermanagement.effectiveSecurityHealthAnalyticsCustomModules.*",
            "securitycentermanagement.locations.*",
            "securitycentermanagement.securityHealthAnalyticsCustomModules.*"
          ],
          "title": "Security Center Management SHA Custom Modules Editor"
        },
        {
          "description": "Readonly access to Cloud Security Command Center SHA custom modules.",
          "id": "roles/securitycentermanagement.shaCustomModulesViewer",
          "is_beta": false,
          "permissions": [
            "resourcemanager.organizations.get",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "securitycentermanagement.effectiveSecurityHealthAnalyticsCustomModules.*",
            "securitycentermanagement.locations.*",
            "securitycentermanagement.securityHealthAnalyticsCustomModules.get",
            "securitycentermanagement.securityHealthAnalyticsCustomModules.list",
            "securitycentermanagement.securityHealthAnalyticsCustomModules.simulate",
            "securitycentermanagement.securityHealthAnalyticsCustomModules.test"
          ],
          "title": "Security Center Management SHA Custom Modules Viewer"
        },
        {
          "description": "Readonly access to Cloud Security Command Center services and custom modules configuration.",
          "id": "roles/securitycentermanagement.viewer",
          "is_beta": false,
          "permissions": [
            "resourcemanager.organizations.get",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "securitycenter.organizationsettings.get",
            "securitycenter.securitycentersettings.get",
            "securitycentermanagement.billingMetadata.get",
            "securitycentermanagement.effectiveEventThreatDetectionCustomModules.*",
            "securitycentermanagement.effectiveSecurityHealthAnalyticsCustomModules.*",
            "securitycentermanagement.eventThreatDetectionCustomModules.get",
            "securitycentermanagement.eventThreatDetectionCustomModules.list",
            "securitycentermanagement.eventThreatDetectionCustomModules.validate",
            "securitycentermanagement.locations.*",
            "securitycentermanagement.securityCenterServices.get",
            "securitycentermanagement.securityCenterServices.list",
            "securitycentermanagement.securityCommandCenter.checkActivationOperation",
            "securitycentermanagement.securityCommandCenter.checkOnboardingStatus",
            "securitycentermanagement.securityCommandCenter.get",
            "securitycentermanagement.securityHealthAnalyticsCustomModules.get",
            "securitycentermanagement.securityHealthAnalyticsCustomModules.list",
            "securitycentermanagement.securityHealthAnalyticsCustomModules.simulate",
            "securitycentermanagement.securityHealthAnalyticsCustomModules.test"
          ],
          "title": "Security Center Management Viewer"
        },
        {
          "description": "Full access to all Serverless VPC Access resources",
          "id": "roles/vpcaccess.admin",
          "is_beta": false,
          "permissions": [
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "vpcaccess.*"
          ],
          "title": "Serverless VPC Access Admin"
        },
        {
          "description": "User of Serverless VPC Access connectors",
          "id": "roles/vpcaccess.user",
          "is_beta": false,
          "permissions": [
            "compute.networks.access",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "vpcaccess.connectors.get",
            "vpcaccess.connectors.list",
            "vpcaccess.connectors.use",
            "vpcaccess.locations.list",
            "vpcaccess.operations.*"
          ],
          "title": "Serverless VPC Access User"
        },
        {
          "description": "Viewer of all Serverless VPC Access resources",
          "id": "roles/vpcaccess.viewer",
          "is_beta": false,
          "permissions": [
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "vpcaccess.connectors.get",
            "vpcaccess.connectors.list",
            "vpcaccess.locations.list",
            "vpcaccess.operations.*"
          ],
          "title": "Serverless VPC Access Viewer"
        },
        {
          "description": "Create and manage service accounts.",
          "id": "roles/iam.serviceAccountAdmin",
          "is_beta": false,
          "permissions": [
            "iam.serviceAccounts.create",
            "iam.serviceAccounts.createTagBinding",
            "iam.serviceAccounts.delete",
            "iam.serviceAccounts.deleteTagBinding",
            "iam.serviceAccounts.disable",
            "iam.serviceAccounts.enable",
            "iam.serviceAccounts.get",
            "iam.serviceAccounts.getIamPolicy",
            "iam.serviceAccounts.list",
            "iam.serviceAccounts.listEffectiveTags",
            "iam.serviceAccounts.listTagBindings",
            "iam.serviceAccounts.setIamPolicy",
            "iam.serviceAccounts.undelete",
            "iam.serviceAccounts.update",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Service Account Admin"
        },
        {
          "description": "Access to create service accounts.",
          "id": "roles/iam.serviceAccountCreator",
          "is_beta": false,
          "permissions": [
            "iam.serviceAccounts.create",
            "iam.serviceAccounts.get",
            "iam.serviceAccounts.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Create Service Accounts"
        },
        {
          "description": "Access to delete service accounts.",
          "id": "roles/iam.serviceAccountDeleter",
          "is_beta": false,
          "permissions": [
            "iam.serviceAccounts.delete",
            "iam.serviceAccounts.get",
            "iam.serviceAccounts.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Delete Service Accounts"
        },
        {
          "description": "Create and manage (and rotate) service account keys.",
          "id": "roles/iam.serviceAccountKeyAdmin",
          "is_beta": false,
          "permissions": [
            "iam.serviceAccountKeys.*",
            "iam.serviceAccounts.get",
            "iam.serviceAccounts.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Service Account Key Admin"
        },
        {
          "description": "Create OpenID Connect (OIDC) identity tokens",
          "id": "roles/iam.serviceAccountOpenIdTokenCreator",
          "is_beta": false,
          "permissions": [
            "iam.serviceAccounts.getOpenIdToken"
          ],
          "title": "Service Account OpenID Connect Identity Token Creator"
        },
        {
          "description": "Impersonate service accounts (create OAuth2 access tokens, sign blobs or JWTs, etc).",
          "id": "roles/iam.serviceAccountTokenCreator",
          "is_beta": false,
          "permissions": [
            "iam.serviceAccounts.get",
            "iam.serviceAccounts.getAccessToken",
            "iam.serviceAccounts.getOpenIdToken",
            "iam.serviceAccounts.implicitDelegation",
            "iam.serviceAccounts.list",
            "iam.serviceAccounts.signBlob",
            "iam.serviceAccounts.signJwt",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Service Account Token Creator"
        },
        {
          "description": "Run operations as the service account.",
          "id": "roles/iam.serviceAccountUser",
          "is_beta": false,
          "permissions": [
            "iam.serviceAccounts.actAs",
            "iam.serviceAccounts.get",
            "iam.serviceAccounts.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Service Account User"
        },
        {
          "description": "Read access to service accounts, metadata, and keys.",
          "id": "roles/iam.serviceAccountViewer",
          "is_beta": false,
          "permissions": [
            "iam.serviceAccountKeys.get",
            "iam.serviceAccountKeys.list",
            "iam.serviceAccounts.get",
            "iam.serviceAccounts.getIamPolicy",
            "iam.serviceAccounts.list",
            "iam.serviceAccounts.listEffectiveTags",
            "iam.serviceAccounts.listTagBindings",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "View Service Accounts"
        },
        {
          "description": "Impersonate service accounts from federated workloads.",
          "id": "roles/iam.workloadIdentityUser",
          "is_beta": false,
          "permissions": [
            "iam.serviceAccounts.get",
            "iam.serviceAccounts.getAccessToken",
            "iam.serviceAccounts.getOpenIdToken",
            "iam.serviceAccounts.list"
          ],
          "title": "Workload Identity User"
        },
        {
          "description": "Vertex AI Batch Prediction Service Agent for serving batch prediction requests.",
          "id": "roles/aiplatform.batchPredictionServiceAgent",
          "is_beta": false,
          "permissions": [
            "bigquery.datasets.create",
            "bigquery.datasets.get",
            "bigquery.jobs.create",
            "bigquery.jobs.get",
            "bigquery.models.create",
            "bigquery.models.export",
            "bigquery.models.getData",
            "bigquery.readsessions.create",
            "bigquery.readsessions.getData",
            "bigquery.tables.create",
            "bigquery.tables.createSnapshot",
            "bigquery.tables.deleteSnapshot",
            "bigquery.tables.export",
            "bigquery.tables.get",
            "bigquery.tables.getData",
            "bigquery.tables.restoreSnapshot",
            "bigquery.tables.update",
            "bigquery.tables.updateData",
            "storage.buckets.create",
            "storage.buckets.delete",
            "storage.buckets.get",
            "storage.buckets.list",
            "storage.buckets.update",
            "storage.objects.create",
            "storage.objects.delete",
            "storage.objects.get",
            "storage.objects.list",
            "storage.objects.update"
          ],
          "title": "Vertex AI Batch Prediction Service Agent"
        },
        {
          "description": "Gives Vertex AI Colab the proper permissions to function.",
          "id": "roles/aiplatform.colabServiceAgent",
          "is_beta": false,
          "permissions": [
            "compute.addresses.get",
            "compute.addresses.list",
            "compute.addresses.use",
            "compute.addresses.useInternal",
            "compute.disks.create",
            "compute.disks.createSnapshot",
            "compute.disks.createTagBinding",
            "compute.disks.delete",
            "compute.disks.get",
            "compute.disks.setLabels",
            "compute.disks.use",
            "compute.disks.useReadOnly",
            "compute.globalOperations.get",
            "compute.instances.attachDisk",
            "compute.instances.create",
            "compute.instances.createTagBinding",
            "compute.instances.delete",
            "compute.instances.detachDisk",
            "compute.instances.get",
            "compute.instances.getGuestAttributes",
            "compute.instances.setLabels",
            "compute.instances.setMetadata",
            "compute.instances.setServiceAccount",
            "compute.instances.setTags",
            "compute.instances.start",
            "compute.instances.stop",
            "compute.instances.useReadOnly",
            "compute.networks.get",
            "compute.networks.use",
            "compute.networks.useExternalIp",
            "compute.snapshots.create",
            "compute.snapshots.delete",
            "compute.snapshots.useReadOnly",
            "compute.subnetworks.get",
            "compute.subnetworks.list",
            "compute.subnetworks.use",
            "compute.subnetworks.useExternalIp",
            "compute.zoneOperations.get",
            "iam.serviceAccounts.actAs",
            "notebooks.instances.create",
            "notebooks.instances.delete",
            "notebooks.instances.get"
          ],
          "title": "Vertex AI Colab Service Agent"
        },
        {
          "description": "Gives Vertex AI Custom Code the proper permissions.",
          "id": "roles/aiplatform.customCodeServiceAgent",
          "is_beta": false,
          "permissions": [
            "aiplatform.agentExamples.*",
            "aiplatform.agents.*",
            "aiplatform.annotationSpecs.*",
            "aiplatform.annotations.*",
            "aiplatform.apps.*",
            "aiplatform.artifacts.*",
            "aiplatform.batchPredictionJobs.*",
            "aiplatform.cacheConfigs.get",
            "aiplatform.cachedContents.*",
            "aiplatform.consents.get",
            "aiplatform.contexts.*",
            "aiplatform.customJobs.*",
            "aiplatform.dataItems.*",
            "aiplatform.dataLabelingJobs.*",
            "aiplatform.datasetVersions.*",
            "aiplatform.datasets.*",
            "aiplatform.deploymentResourcePools.*",
            "aiplatform.edgeDeploymentJobs.*",
            "aiplatform.edgeDeviceDebugInfo.get",
            "aiplatform.edgeDevices.*",
            "aiplatform.endpoints.create",
            "aiplatform.endpoints.delete",
            "aiplatform.endpoints.deploy",
            "aiplatform.endpoints.explain",
            "aiplatform.endpoints.get",
            "aiplatform.endpoints.list",
            "aiplatform.endpoints.predict",
            "aiplatform.endpoints.undeploy",
            "aiplatform.endpoints.update",
            "aiplatform.entityTypes.create",
            "aiplatform.entityTypes.delete",
            "aiplatform.entityTypes.deleteFeatureValues",
            "aiplatform.entityTypes.exportFeatureValues",
            "aiplatform.entityTypes.get",
            "aiplatform.entityTypes.importFeatureValues",
            "aiplatform.entityTypes.list",
            "aiplatform.entityTypes.readFeatureValues",
            "aiplatform.entityTypes.streamingReadFeatureValues",
            "aiplatform.entityTypes.update",
            "aiplatform.entityTypes.writeFeatureValues",
            "aiplatform.executions.*",
            "aiplatform.extensions.*",
            "aiplatform.featureGroups.create",
            "aiplatform.featureGroups.delete",
            "aiplatform.featureGroups.get",
            "aiplatform.featureGroups.list",
            "aiplatform.featureGroups.update",
            "aiplatform.featureOnlineStores.create",
            "aiplatform.featureOnlineStores.delete",
            "aiplatform.featureOnlineStores.get",
            "aiplatform.featureOnlineStores.list",
            "aiplatform.featureOnlineStores.update",
            "aiplatform.featureViewSyncs.*",
            "aiplatform.featureViews.create",
            "aiplatform.featureViews.delete",
            "aiplatform.featureViews.fetchFeatureValues",
            "aiplatform.featureViews.get",
            "aiplatform.featureViews.list",
            "aiplatform.featureViews.searchNearestEntities",
            "aiplatform.featureViews.sync",
            "aiplatform.featureViews.update",
            "aiplatform.features.*",
            "aiplatform.featurestores.batchReadFeatureValues",
            "aiplatform.featurestores.create",
            "aiplatform.featurestores.delete",
            "aiplatform.featurestores.exportFeatures",
            "aiplatform.featurestores.get",
            "aiplatform.featurestores.importFeatures",
            "aiplatform.featurestores.list",
            "aiplatform.featurestores.readFeatures",
            "aiplatform.featurestores.update",
            "aiplatform.featurestores.writeFeatures",
            "aiplatform.humanInTheLoops.*",
            "aiplatform.hyperparameterTuningJobs.*",
            "aiplatform.indexEndpoints.*",
            "aiplatform.indexes.*",
            "aiplatform.locations.*",
            "aiplatform.metadataSchemas.*",
            "aiplatform.metadataStores.*",
            "aiplatform.modelDeploymentMonitoringJobs.*",
            "aiplatform.modelEvaluationSlices.*",
            "aiplatform.modelEvaluations.*",
            "aiplatform.modelMonitoringJobs.*",
            "aiplatform.modelMonitors.*",
            "aiplatform.models.*",
            "aiplatform.nasJobs.*",
            "aiplatform.nasTrialDetails.*",
            "aiplatform.notebookExecutionJobs.*",
            "aiplatform.notebookRuntimeTemplates.apply",
            "aiplatform.notebookRuntimeTemplates.create",
            "aiplatform.notebookRuntimeTemplates.delete",
            "aiplatform.notebookRuntimeTemplates.get",
            "aiplatform.notebookRuntimeTemplates.list",
            "aiplatform.notebookRuntimeTemplates.update",
            "aiplatform.notebookRuntimes.*",
            "aiplatform.operations.list",
            "aiplatform.persistentResources.get",
            "aiplatform.persistentResources.list",
            "aiplatform.pipelineJobs.*",
            "aiplatform.provisionedThroughputRevisions.*",
            "aiplatform.provisionedThroughputs.get",
            "aiplatform.provisionedThroughputs.list",
            "aiplatform.ragCorpora.*",
            "aiplatform.ragFiles.*",
            "aiplatform.reasoningEngines.*",
            "aiplatform.schedules.*",
            "aiplatform.sessions.*",
            "aiplatform.specialistPools.*",
            "aiplatform.studies.*",
            "aiplatform.tensorboardExperiments.*",
            "aiplatform.tensorboardRuns.*",
            "aiplatform.tensorboardTimeSeries.*",
            "aiplatform.tensorboards.create",
            "aiplatform.tensorboards.delete",
            "aiplatform.tensorboards.get",
            "aiplatform.tensorboards.list",
            "aiplatform.tensorboards.update",
            "aiplatform.trainingPipelines.*",
            "aiplatform.trials.*",
            "aiplatform.tuningJobs.*",
            "artifactregistry.repositories.downloadArtifacts",
            "artifactregistry.repositories.get",
            "artifactregistry.repositories.list",
            "artifactregistry.tags.get",
            "artifactregistry.versions.get",
            "bigquery.datasets.create",
            "bigquery.datasets.get",
            "bigquery.jobs.create",
            "bigquery.jobs.get",
            "bigquery.readsessions.create",
            "bigquery.readsessions.getData",
            "bigquery.tables.create",
            "bigquery.tables.export",
            "bigquery.tables.get",
            "bigquery.tables.getData",
            "bigquery.tables.update",
            "bigquery.tables.updateData",
            "iam.serviceAccounts.get",
            "iam.serviceAccounts.getAccessToken",
            "iam.serviceAccounts.getOpenIdToken",
            "iam.serviceAccounts.implicitDelegation",
            "iam.serviceAccounts.list",
            "iam.serviceAccounts.signBlob",
            "iam.serviceAccounts.signJwt",
            "logging.logEntries.create",
            "logging.logEntries.route",
            "monitoring.metricDescriptors.create",
            "monitoring.metricDescriptors.get",
            "monitoring.metricDescriptors.list",
            "monitoring.monitoredResourceDescriptors.*",
            "monitoring.timeSeries.create",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "serviceusage.services.use",
            "storage.buckets.create",
            "storage.buckets.delete",
            "storage.buckets.get",
            "storage.buckets.list",
            "storage.objects.create",
            "storage.objects.delete",
            "storage.objects.get",
            "storage.objects.list",
            "storage.objects.update"
          ],
          "title": "Vertex AI Custom Code Service Agent"
        },
        {
          "description": "Gives Vertex AI Extension that executes custom code the permissions it needs to function.",
          "id": "roles/aiplatform.extensionCustomCodeServiceAgent",
          "is_beta": false,
          "permissions": [
            "logging.logEntries.create",
            "logging.logEntries.route",
            "orgpolicy.policy.get",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "storage.folders.*",
            "storage.managedFolders.create",
            "storage.managedFolders.delete",
            "storage.managedFolders.get",
            "storage.managedFolders.list",
            "storage.multipartUploads.*",
            "storage.objects.*"
          ],
          "title": "Vertex AI Extension Custom Code Service Agent"
        },
        {
          "description": "Gives Vertex AI Extension the permissions it needs to function.",
          "id": "roles/aiplatform.extensionServiceAgent",
          "is_beta": false,
          "permissions": [
            "aiplatform.endpoints.predict",
            "aiplatform.locations.get",
            "aiplatform.ragCorpora.query",
            "discoveryengine.servingConfigs.search",
            "iam.serviceAccounts.getAccessToken",
            "iam.serviceAccounts.getOpenIdToken",
            "logging.logEntries.create",
            "logging.logEntries.route",
            "serviceusage.services.use",
            "storage.objects.get"
          ],
          "title": "Vertex AI Extension Service Agent"
        },
        {
          "description": "Gives Vertex AI Model Monitoring the permissions it needs to function.",
          "id": "roles/aiplatform.modelMonitoringServiceAgent",
          "is_beta": false,
          "permissions": [
            "aiplatform.batchPredictionJobs.create",
            "aiplatform.batchPredictionJobs.get",
            "aiplatform.batchPredictionJobs.list",
            "aiplatform.locations.evaluateInstances",
            "bigquery.datasets.create",
            "bigquery.datasets.get",
            "bigquery.jobs.create",
            "bigquery.jobs.get",
            "bigquery.tables.create",
            "bigquery.tables.export",
            "bigquery.tables.get",
            "bigquery.tables.getData",
            "bigquery.tables.update",
            "bigquery.tables.updateData",
            "monitoring.notificationChannels.get",
            "serviceusage.services.use",
            "storage.buckets.create",
            "storage.buckets.delete",
            "storage.buckets.get",
            "storage.buckets.list",
            "storage.buckets.update",
            "storage.objects.create",
            "storage.objects.delete",
            "storage.objects.get",
            "storage.objects.list",
            "storage.objects.update"
          ],
          "title": "Vertex AI Model Monitoring Service Agent"
        },
        {
          "description": "Vertex AI Service Agent used to run Notebook managed resources in user project with restricted permissions.",
          "id": "roles/aiplatform.notebookServiceAgent",
          "is_beta": false,
          "permissions": [
            "logging.logEntries.create",
            "logging.logEntries.route",
            "monitoring.metricDescriptors.create",
            "monitoring.metricDescriptors.get",
            "monitoring.metricDescriptors.list",
            "monitoring.monitoredResourceDescriptors.*",
            "monitoring.timeSeries.create"
          ],
          "title": "Vertex AI Notebook Service Agent"
        },
        {
          "description": "Gives Vertex AI Online Prediction the permissions it needs to function.",
          "id": "roles/aiplatform.onlinePredictionServiceAgent",
          "is_beta": false,
          "permissions": [
            "gkehub.features.get",
            "gkehub.features.getIamPolicy",
            "gkehub.features.list",
            "gkehub.fleet.get",
            "gkehub.gateway.delete",
            "gkehub.gateway.generateCredentials",
            "gkehub.gateway.get",
            "gkehub.gateway.patch",
            "gkehub.gateway.post",
            "gkehub.gateway.put",
            "gkehub.locations.*",
            "gkehub.memberships.get",
            "gkehub.memberships.getIamPolicy",
            "gkehub.memberships.list",
            "serviceusage.services.get"
          ],
          "title": "Vertex AI Online Prediction Service Agent"
        },
        {
          "description": "Vertex AI Service Agent used by Vertex RAG to access user imported data, Vertex AI, Document AI processors in the project",
          "id": "roles/aiplatform.ragServiceAgent",
          "is_beta": false,
          "permissions": [
            "aiplatform.endpoints.get",
            "aiplatform.endpoints.predict",
            "aiplatform.featureViews.get",
            "aiplatform.featureViews.list",
            "aiplatform.featureViews.sync",
            "aiplatform.featureViews.update",
            "aiplatform.indexEndpoints.*",
            "aiplatform.indexes.*",
            "aiplatform.models.get",
            "bigquery.datasets.create",
            "bigquery.datasets.get",
            "bigquery.jobs.create",
            "bigquery.jobs.get",
            "bigquery.readsessions.create",
            "bigquery.readsessions.getData",
            "bigquery.tables.create",
            "bigquery.tables.createSnapshot",
            "bigquery.tables.deleteSnapshot",
            "bigquery.tables.export",
            "bigquery.tables.get",
            "bigquery.tables.getData",
            "bigquery.tables.restoreSnapshot",
            "bigquery.tables.update",
            "bigquery.tables.updateData",
            "documentai.processorVersions.processOnline",
            "documentai.processors.get",
            "documentai.processors.processOnline",
            "logging.logEntries.create",
            "logging.logEntries.route",
            "storage.buckets.get",
            "storage.buckets.list",
            "storage.objects.get",
            "storage.objects.list"
          ],
          "title": "Vertex AI RAG Data Service Agent"
        },
        {
          "description": "Vertex AI Service Agent used by GenAI Rapid Evaluation Service to access publisher model endpoints in the user project",
          "id": "roles/aiplatform.rapidevalServiceAgent",
          "is_beta": false,
          "permissions": [
            "aiplatform.endpoints.predict"
          ],
          "title": "Vertex AI Rapid Eval Service Agent"
        },
        {
          "description": "Gives Vertex AI Reasoning Engine the proper permissions to function.",
          "id": "roles/aiplatform.reasoningEngineServiceAgent",
          "is_beta": false,
          "permissions": [
            "aiplatform.endpoints.create",
            "aiplatform.endpoints.delete",
            "aiplatform.endpoints.deploy",
            "aiplatform.endpoints.explain",
            "aiplatform.endpoints.get",
            "aiplatform.endpoints.list",
            "aiplatform.endpoints.predict",
            "aiplatform.endpoints.undeploy",
            "aiplatform.endpoints.update",
            "aiplatform.sessions.get",
            "cloudtrace.traces.patch",
            "logging.logEntries.create",
            "logging.logEntries.route",
            "monitoring.metricDescriptors.create",
            "monitoring.metricDescriptors.get",
            "monitoring.metricDescriptors.list",
            "monitoring.monitoredResourceDescriptors.*",
            "monitoring.timeSeries.create",
            "serviceusage.services.use",
            "storage.buckets.get",
            "storage.buckets.list",
            "storage.objects.get",
            "storage.objects.list"
          ],
          "title": "Vertex AI Reasoning Engine Service Agent"
        },
        {
          "description": "Gives Vertex AI the permissions it needs to function.",
          "id": "roles/aiplatform.serviceAgent",
          "is_beta": false,
          "permissions": [
            "aiplatform.agentExamples.*",
            "aiplatform.agents.*",
            "aiplatform.annotationSpecs.*",
            "aiplatform.annotations.*",
            "aiplatform.apps.*",
            "aiplatform.artifacts.*",
            "aiplatform.batchPredictionJobs.*",
            "aiplatform.cacheConfigs.get",
            "aiplatform.cachedContents.*",
            "aiplatform.consents.get",
            "aiplatform.contexts.*",
            "aiplatform.customJobs.*",
            "aiplatform.dataItems.*",
            "aiplatform.dataLabelingJobs.*",
            "aiplatform.datasetVersions.*",
            "aiplatform.datasets.*",
            "aiplatform.deploymentResourcePools.*",
            "aiplatform.edgeDeploymentJobs.*",
            "aiplatform.edgeDeviceDebugInfo.get",
            "aiplatform.edgeDevices.*",
            "aiplatform.endpoints.create",
            "aiplatform.endpoints.delete",
            "aiplatform.endpoints.deploy",
            "aiplatform.endpoints.explain",
            "aiplatform.endpoints.get",
            "aiplatform.endpoints.list",
            "aiplatform.endpoints.predict",
            "aiplatform.endpoints.undeploy",
            "aiplatform.endpoints.update",
            "aiplatform.entityTypes.create",
            "aiplatform.entityTypes.delete",
            "aiplatform.entityTypes.deleteFeatureValues",
            "aiplatform.entityTypes.exportFeatureValues",
            "aiplatform.entityTypes.get",
            "aiplatform.entityTypes.importFeatureValues",
            "aiplatform.entityTypes.list",
            "aiplatform.entityTypes.readFeatureValues",
            "aiplatform.entityTypes.streamingReadFeatureValues",
            "aiplatform.entityTypes.update",
            "aiplatform.entityTypes.writeFeatureValues",
            "aiplatform.executions.*",
            "aiplatform.extensions.*",
            "aiplatform.featureGroups.create",
            "aiplatform.featureGroups.delete",
            "aiplatform.featureGroups.get",
            "aiplatform.featureGroups.list",
            "aiplatform.featureGroups.update",
            "aiplatform.featureOnlineStores.create",
            "aiplatform.featureOnlineStores.delete",
            "aiplatform.featureOnlineStores.get",
            "aiplatform.featureOnlineStores.list",
            "aiplatform.featureOnlineStores.update",
            "aiplatform.featureViewSyncs.*",
            "aiplatform.featureViews.create",
            "aiplatform.featureViews.delete",
            "aiplatform.featureViews.fetchFeatureValues",
            "aiplatform.featureViews.get",
            "aiplatform.featureViews.list",
            "aiplatform.featureViews.searchNearestEntities",
            "aiplatform.featureViews.sync",
            "aiplatform.featureViews.update",
            "aiplatform.features.*",
            "aiplatform.featurestores.batchReadFeatureValues",
            "aiplatform.featurestores.create",
            "aiplatform.featurestores.delete",
            "aiplatform.featurestores.exportFeatures",
            "aiplatform.featurestores.get",
            "aiplatform.featurestores.importFeatures",
            "aiplatform.featurestores.list",
            "aiplatform.featurestores.readFeatures",
            "aiplatform.featurestores.update",
            "aiplatform.featurestores.writeFeatures",
            "aiplatform.humanInTheLoops.*",
            "aiplatform.hyperparameterTuningJobs.*",
            "aiplatform.indexEndpoints.*",
            "aiplatform.indexes.*",
            "aiplatform.locations.*",
            "aiplatform.metadataSchemas.*",
            "aiplatform.metadataStores.*",
            "aiplatform.modelDeploymentMonitoringJobs.*",
            "aiplatform.modelEvaluationSlices.*",
            "aiplatform.modelEvaluations.*",
            "aiplatform.modelMonitoringJobs.*",
            "aiplatform.modelMonitors.*",
            "aiplatform.models.*",
            "aiplatform.nasJobs.*",
            "aiplatform.nasTrialDetails.*",
            "aiplatform.notebookExecutionJobs.*",
            "aiplatform.notebookRuntimeTemplates.apply",
            "aiplatform.notebookRuntimeTemplates.create",
            "aiplatform.notebookRuntimeTemplates.delete",
            "aiplatform.notebookRuntimeTemplates.get",
            "aiplatform.notebookRuntimeTemplates.list",
            "aiplatform.notebookRuntimeTemplates.update",
            "aiplatform.notebookRuntimes.*",
            "aiplatform.operations.list",
            "aiplatform.persistentResources.get",
            "aiplatform.persistentResources.list",
            "aiplatform.pipelineJobs.*",
            "aiplatform.provisionedThroughputRevisions.*",
            "aiplatform.provisionedThroughputs.get",
            "aiplatform.provisionedThroughputs.list",
            "aiplatform.ragCorpora.*",
            "aiplatform.ragFiles.*",
            "aiplatform.reasoningEngines.*",
            "aiplatform.schedules.*",
            "aiplatform.sessions.*",
            "aiplatform.specialistPools.*",
            "aiplatform.studies.*",
            "aiplatform.tensorboardExperiments.*",
            "aiplatform.tensorboardRuns.*",
            "aiplatform.tensorboardTimeSeries.*",
            "aiplatform.tensorboards.create",
            "aiplatform.tensorboards.delete",
            "aiplatform.tensorboards.get",
            "aiplatform.tensorboards.list",
            "aiplatform.tensorboards.update",
            "aiplatform.trainingPipelines.*",
            "aiplatform.trials.*",
            "aiplatform.tuningJobs.*",
            "artifactregistry.repositories.create",
            "artifactregistry.repositories.downloadArtifacts",
            "artifactregistry.repositories.get",
            "artifactregistry.repositories.list",
            "artifactregistry.repositories.uploadArtifacts",
            "artifactregistry.tags.get",
            "artifactregistry.versions.get",
            "automl.datasets.export",
            "automl.datasets.get",
            "automl.datasets.list",
            "automl.modelEvaluations.list",
            "automl.models.get",
            "automl.models.list",
            "automl.operations.get",
            "automl.tableSpecs.get",
            "bigquery.datasets.create",
            "bigquery.datasets.get",
            "bigquery.jobs.create",
            "bigquery.jobs.get",
            "bigquery.models.create",
            "bigquery.models.export",
            "bigquery.models.getData",
            "bigquery.objectRefs.read",
            "bigquery.readsessions.create",
            "bigquery.readsessions.getData",
            "bigquery.tables.create",
            "bigquery.tables.export",
            "bigquery.tables.get",
            "bigquery.tables.getData",
            "bigquery.tables.update",
            "bigquery.tables.updateData",
            "bigtable.tables.get",
            "bigtable.tables.list",
            "bigtable.tables.readRows",
            "compute.addresses.get",
            "compute.addresses.list",
            "compute.addresses.use",
            "compute.addresses.useInternal",
            "compute.disks.create",
            "compute.disks.createSnapshot",
            "compute.disks.createTagBinding",
            "compute.disks.delete",
            "compute.disks.get",
            "compute.disks.setLabels",
            "compute.disks.use",
            "compute.disks.useReadOnly",
            "compute.globalOperations.get",
            "compute.instances.attachDisk",
            "compute.instances.create",
            "compute.instances.createTagBinding",
            "compute.instances.delete",
            "compute.instances.detachDisk",
            "compute.instances.get",
            "compute.instances.getGuestAttributes",
            "compute.instances.setLabels",
            "compute.instances.setMetadata",
            "compute.instances.setServiceAccount",
            "compute.instances.setTags",
            "compute.instances.start",
            "compute.instances.stop",
            "compute.instances.useReadOnly",
            "compute.machineTypes.get",
            "compute.networks.get",
            "compute.networks.use",
            "compute.networks.useExternalIp",
            "compute.snapshots.create",
            "compute.snapshots.delete",
            "compute.snapshots.useReadOnly",
            "compute.subnetworks.get",
            "compute.subnetworks.list",
            "compute.subnetworks.use",
            "compute.subnetworks.useExternalIp",
            "compute.zoneOperations.get",
            "dataflow.jobs.*",
            "dataflow.messages.list",
            "dataflow.metrics.get",
            "dataflow.snapshots.*",
            "datalabeling.annotateddatasets.get",
            "datalabeling.datasets.export",
            "datalabeling.datasets.get",
            "datalabeling.datasets.list",
            "datalabeling.operations.get",
            "iam.serviceAccounts.actAs",
            "iam.serviceAccounts.getAccessToken",
            "iam.serviceAccounts.getOpenIdToken",
            "logging.logEntries.create",
            "logging.logEntries.route",
            "ml.models.list",
            "ml.operations.get",
            "ml.versions.get",
            "ml.versions.list",
            "monitoring.notificationChannels.get",
            "notebooks.instances.create",
            "notebooks.instances.delete",
            "notebooks.instances.get",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "run.executions.delete",
            "run.executions.get",
            "run.jobs.create",
            "run.jobs.delete",
            "run.jobs.get",
            "run.jobs.run",
            "run.jobs.update",
            "run.operations.delete",
            "run.operations.get",
            "run.routes.invoke",
            "run.services.create",
            "run.services.delete",
            "run.services.get",
            "serviceusage.services.list",
            "serviceusage.services.use",
            "storage.buckets.create",
            "storage.buckets.delete",
            "storage.buckets.get",
            "storage.buckets.list",
            "storage.objects.create",
            "storage.objects.delete",
            "storage.objects.get",
            "storage.objects.list",
            "storage.objects.update"
          ],
          "title": "Vertex AI Service Agent"
        },
        {
          "description": "Vertex AI Service Agent used for tuning in user project.",
          "id": "roles/aiplatform.tuningServiceAgent",
          "is_beta": false,
          "permissions": [
            "aiplatform.artifacts.*",
            "aiplatform.batchPredictionJobs.cancel",
            "aiplatform.batchPredictionJobs.create",
            "aiplatform.batchPredictionJobs.get",
            "aiplatform.contexts.*",
            "aiplatform.endpoints.create",
            "aiplatform.endpoints.deploy",
            "aiplatform.endpoints.get",
            "aiplatform.locations.get",
            "aiplatform.metadataSchemas.*",
            "aiplatform.metadataStores.*",
            "aiplatform.models.get",
            "aiplatform.models.update",
            "aiplatform.models.upload",
            "aiplatform.operations.list",
            "aiplatform.pipelineJobs.get",
            "aiplatform.pipelineJobs.list",
            "aiplatform.tensorboardExperiments.*",
            "aiplatform.tensorboardRuns.*",
            "aiplatform.tensorboardTimeSeries.*",
            "aiplatform.tensorboards.create",
            "aiplatform.tensorboards.delete",
            "aiplatform.tensorboards.get",
            "aiplatform.tensorboards.list",
            "aiplatform.tensorboards.update",
            "aiplatform.tuningJobs.*",
            "resourcemanager.projects.get",
            "storage.buckets.create",
            "storage.buckets.get",
            "storage.buckets.getIamPolicy",
            "storage.buckets.list",
            "storage.buckets.update",
            "storage.objects.create",
            "storage.objects.delete",
            "storage.objects.get",
            "storage.objects.getIamPolicy",
            "storage.objects.list",
            "storage.objects.update"
          ],
          "title": "Vertex AI Tuning Service Agent"
        },
        {
          "description": "Gives the AlloyDB service account permission to manage customer resources",
          "id": "roles/alloydb.serviceAgent",
          "is_beta": false,
          "permissions": [
            "alloydb.clusters.list"
          ],
          "title": "AlloyDB Service Agent"
        },
        {
          "description": "Gives the Anthos service agent access to Google Cloud resources.",
          "id": "roles/anthos.serviceAgent",
          "is_beta": false,
          "permissions": [
            "gkehub.features.get",
            "gkehub.locations.*",
            "gkehub.memberships.get",
            "gkehub.memberships.list",
            "serviceusage.services.get",
            "serviceusage.services.list"
          ],
          "title": "Anthos Service Agent"
        },
        {
          "description": "Gives the Anthos Audit service agent access to Cloud Platform resources.",
          "id": "roles/anthosaudit.serviceAgent",
          "is_beta": false,
          "permissions": [
            "gkehub.features.get",
            "gkehub.locations.*",
            "gkehub.memberships.get",
            "gkehub.memberships.list"
          ],
          "title": "Anthos Audit Service Agent"
        },
        {
          "description": "Gives the Anthos Config Management service agent access to Google Cloud resources.",
          "id": "roles/anthosconfigmanagement.serviceAgent",
          "is_beta": false,
          "permissions": [
            "container.clusters.get",
            "gkehub.features.get",
            "gkehub.gateway.delete",
            "gkehub.gateway.generateCredentials",
            "gkehub.gateway.get",
            "gkehub.gateway.patch",
            "gkehub.gateway.post",
            "gkehub.gateway.put",
            "gkehub.locations.*",
            "gkehub.memberships.get",
            "gkehub.memberships.list"
          ],
          "title": "Anthos Config Management Service Agent"
        },
        {
          "description": "Gives the Anthos Identity service agent access to Google Cloud resources.",
          "id": "roles/anthosidentityservice.serviceAgent",
          "is_beta": false,
          "permissions": [
            "gkehub.features.get",
            "gkehub.gateway.delete",
            "gkehub.gateway.generateCredentials",
            "gkehub.gateway.get",
            "gkehub.gateway.patch",
            "gkehub.gateway.post",
            "gkehub.gateway.put",
            "gkehub.locations.*",
            "gkehub.memberships.get",
            "gkehub.memberships.list"
          ],
          "title": "Anthos Identity Service Agent"
        },
        {
          "description": "Gives the Anthos Policy Controller service agent access toCloud Platform resources.",
          "id": "roles/anthospolicycontroller.serviceAgent",
          "is_beta": false,
          "permissions": [
            "gkehub.features.get",
            "gkehub.gateway.delete",
            "gkehub.gateway.generateCredentials",
            "gkehub.gateway.get",
            "gkehub.gateway.patch",
            "gkehub.gateway.post",
            "gkehub.gateway.put",
            "gkehub.locations.*",
            "gkehub.memberships.get",
            "gkehub.memberships.list"
          ],
          "title": "Anthos Policy Controller Service Agent"
        },
        {
          "description": "Gives the Anthos Service Mesh service agent access to Cloud Platform resources.",
          "id": "roles/anthosservicemesh.serviceAgent",
          "is_beta": false,
          "permissions": [
            "compute.backendServices.create",
            "compute.backendServices.delete",
            "compute.backendServices.get",
            "compute.backendServices.list",
            "compute.backendServices.update",
            "compute.backendServices.use",
            "compute.firewalls.create",
            "compute.firewalls.delete",
            "compute.firewalls.get",
            "compute.firewalls.update",
            "compute.globalNetworkEndpointGroups.attachNetworkEndpoints",
            "compute.globalNetworkEndpointGroups.create",
            "compute.globalNetworkEndpointGroups.delete",
            "compute.globalNetworkEndpointGroups.detachNetworkEndpoints",
            "compute.globalNetworkEndpointGroups.get",
            "compute.globalNetworkEndpointGroups.list",
            "compute.globalNetworkEndpointGroups.use",
            "compute.globalOperations.get",
            "compute.healthChecks.create",
            "compute.healthChecks.delete",
            "compute.healthChecks.get",
            "compute.healthChecks.list",
            "compute.healthChecks.update",
            "compute.healthChecks.use",
            "compute.healthChecks.useReadOnly",
            "compute.instances.use",
            "compute.networkEndpointGroups.attachNetworkEndpoints",
            "compute.networkEndpointGroups.create",
            "compute.networkEndpointGroups.delete",
            "compute.networkEndpointGroups.detachNetworkEndpoints",
            "compute.networkEndpointGroups.get",
            "compute.networkEndpointGroups.list",
            "compute.networkEndpointGroups.use",
            "compute.networks.updatePolicy",
            "compute.regionNetworkEndpointGroups.attachNetworkEndpoints",
            "compute.regionNetworkEndpointGroups.create",
            "compute.regionNetworkEndpointGroups.delete",
            "compute.regionNetworkEndpointGroups.detachNetworkEndpoints",
            "compute.regionNetworkEndpointGroups.get",
            "compute.regionNetworkEndpointGroups.list",
            "compute.regionNetworkEndpointGroups.use",
            "compute.regions.list",
            "compute.zones.list",
            "container.backendConfigs.*",
            "container.clusterRoleBindings.*",
            "container.clusterRoles.*",
            "container.clusters.get",
            "container.clusters.update",
            "container.configMaps.*",
            "container.customResourceDefinitions.create",
            "container.customResourceDefinitions.get",
            "container.customResourceDefinitions.list",
            "container.customResourceDefinitions.update",
            "container.daemonSets.create",
            "container.daemonSets.delete",
            "container.daemonSets.get",
            "container.daemonSets.getStatus",
            "container.daemonSets.list",
            "container.daemonSets.update",
            "container.deployments.get",
            "container.deployments.list",
            "container.events.get",
            "container.events.list",
            "container.jobs.create",
            "container.jobs.delete",
            "container.jobs.get",
            "container.jobs.list",
            "container.jobs.update",
            "container.mutatingWebhookConfigurations.create",
            "container.mutatingWebhookConfigurations.get",
            "container.mutatingWebhookConfigurations.list",
            "container.mutatingWebhookConfigurations.update",
            "container.namespaces.create",
            "container.namespaces.get",
            "container.namespaces.list",
            "container.operations.get",
            "container.pods.get",
            "container.pods.list",
            "container.secrets.*",
            "container.serviceAccounts.create",
            "container.serviceAccounts.delete",
            "container.serviceAccounts.get",
            "container.serviceAccounts.list",
            "container.serviceAccounts.update",
            "container.services.get",
            "container.services.list",
            "container.thirdPartyObjects.create",
            "container.thirdPartyObjects.get",
            "container.thirdPartyObjects.list",
            "container.thirdPartyObjects.update",
            "container.validatingWebhookConfigurations.*",
            "gkehub.features.get",
            "gkehub.gateway.delete",
            "gkehub.gateway.generateCredentials",
            "gkehub.gateway.get",
            "gkehub.gateway.patch",
            "gkehub.gateway.post",
            "gkehub.gateway.put",
            "gkehub.locations.*",
            "gkehub.memberships.get",
            "gkehub.memberships.list",
            "logging.logEntries.create",
            "meshconfig.projects.init",
            "monitoring.metricDescriptors.create",
            "monitoring.metricDescriptors.get",
            "monitoring.metricDescriptors.list",
            "monitoring.monitoredResourceDescriptors.*",
            "monitoring.timeSeries.create",
            "networksecurity.authorizationPolicies.create",
            "networksecurity.authorizationPolicies.delete",
            "networksecurity.authorizationPolicies.get",
            "networksecurity.authorizationPolicies.list",
            "networksecurity.authorizationPolicies.update",
            "networksecurity.authorizationPolicies.use",
            "networksecurity.clientTlsPolicies.create",
            "networksecurity.clientTlsPolicies.delete",
            "networksecurity.clientTlsPolicies.get",
            "networksecurity.clientTlsPolicies.list",
            "networksecurity.clientTlsPolicies.update",
            "networksecurity.clientTlsPolicies.use",
            "networksecurity.operations.*",
            "networksecurity.serverTlsPolicies.create",
            "networksecurity.serverTlsPolicies.delete",
            "networksecurity.serverTlsPolicies.get",
            "networksecurity.serverTlsPolicies.list",
            "networksecurity.serverTlsPolicies.update",
            "networksecurity.serverTlsPolicies.use",
            "networkservices.endpointPolicies.*",
            "networkservices.gateways.*",
            "networkservices.grpcRoutes.*",
            "networkservices.httpFilters.*",
            "networkservices.httpRoutes.*",
            "networkservices.meshes.*",
            "networkservices.operations.*",
            "networkservices.serviceLbPolicies.*",
            "networkservices.tcpRoutes.*",
            "networkservices.tlsRoutes.*",
            "resourcemanager.projects.get",
            "serviceusage.services.get",
            "serviceusage.services.use",
            "trafficdirector.*",
            "workloadcertificate.locations.*",
            "workloadcertificate.operations.get",
            "workloadcertificate.workloadCertificateFeature.get",
            "workloadcertificate.workloadRegistrations.create",
            "workloadcertificate.workloadRegistrations.get",
            "workloadcertificate.workloadRegistrations.list"
          ],
          "title": "Anthos Service Mesh Service Agent"
        },
        {
          "description": "Gives the Anthos Support Service Agent access to Cloud Platform resource.",
          "id": "roles/anthossupport.serviceAgent",
          "is_beta": false,
          "permissions": [
            "gkehub.features.get",
            "gkehub.features.getIamPolicy",
            "gkehub.features.list",
            "gkehub.fleet.get",
            "gkehub.fleet.getFreeTrial",
            "gkehub.gateway.generateCredentials",
            "gkehub.gateway.get",
            "gkehub.locations.*",
            "gkehub.membershipbindings.get",
            "gkehub.membershipbindings.list",
            "gkehub.membershipfeatures.get",
            "gkehub.membershipfeatures.list",
            "gkehub.memberships.generateConnectManifest",
            "gkehub.memberships.get",
            "gkehub.memberships.getIamPolicy",
            "gkehub.memberships.list",
            "gkehub.namespaces.get",
            "gkehub.namespaces.list",
            "gkehub.operations.get",
            "gkehub.operations.list",
            "gkehub.rbacrolebindings.get",
            "gkehub.rbacrolebindings.list",
            "gkehub.scopes.get",
            "gkehub.scopes.list",
            "gkehub.scopes.listBoundMemberships",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "serviceusage.services.get"
          ],
          "title": "Anthos Support Service Agent"
        },
        {
          "description": "Gives Cloud API Gateway service account access to Service Management check and reports as well as impersonation on user-specified service accounts.",
          "id": "roles/apigateway.serviceAgent",
          "is_beta": false,
          "permissions": [
            "iam.serviceAccounts.getAccessToken",
            "iam.serviceAccounts.getOpenIdToken",
            "servicemanagement.services.check",
            "servicemanagement.services.quota",
            "servicemanagement.services.report"
          ],
          "title": "Cloud API Gateway Service Agent"
        },
        {
          "description": "Gives Cloud API Gateway service account access to retrieve a Service configuration.",
          "id": "roles/apigateway_management.serviceAgent",
          "is_beta": false,
          "permissions": [
            "iam.serviceAccounts.get",
            "servicemanagement.services.create",
            "servicemanagement.services.delete",
            "servicemanagement.services.get",
            "servicemanagement.services.list",
            "servicemanagement.services.update",
            "serviceusage.services.get"
          ],
          "title": "Cloud API Gateway Management Service Agent"
        },
        {
          "description": "Service agent that grants access to Apigee resources - API Products, Developers, Developer Apps, and App Keys.",
          "id": "roles/apigee.serviceAgent",
          "is_beta": false,
          "permissions": [
            "apigee.apiproducts.get",
            "apigee.apiproducts.list",
            "apigee.appkeys.create",
            "apigee.appkeys.delete",
            "apigee.appkeys.manage",
            "apigee.apps.get",
            "apigee.canaryevaluations.*",
            "apigee.developerapps.*",
            "apigee.developers.create",
            "apigee.developers.delete",
            "apigee.developers.get",
            "apigee.environments.get",
            "apigee.environments.getDataLocation",
            "apigee.environments.manageRuntime",
            "apigee.ingressconfigs.get",
            "apigee.instances.reportStatus",
            "apigee.operations.*",
            "apigee.organizations.get",
            "apigee.proxyrevisions.get",
            "apigee.runtimeconfigs.get",
            "cloudtrace.traces.patch",
            "iam.serviceAccounts.getAccessToken",
            "iam.serviceAccounts.getOpenIdToken",
            "logging.buckets.create",
            "logging.buckets.get",
            "logging.buckets.list",
            "logging.views.create",
            "logging.views.get",
            "logging.views.list",
            "monitoring.metricDescriptors.create",
            "monitoring.metricDescriptors.get",
            "monitoring.metricDescriptors.list",
            "monitoring.monitoredResourceDescriptors.*",
            "monitoring.timeSeries.create",
            "telemetry.traces.write"
          ],
          "title": "Apigee Service Agent"
        },
        {
          "description": "Gives API-Hub Service Account access to runtime project resources.",
          "id": "roles/apihub.runtimeProjectServiceAgent",
          "is_beta": false,
          "permissions": [
            "apigee.deployments.list",
            "apigee.envgroupattachments.list",
            "apigee.envgroups.list",
            "apigee.environments.get",
            "apigee.organizations.get",
            "apigee.proxies.get",
            "apigee.proxyrevisions.get",
            "apihub.apiOperations.delete",
            "apihub.apiOperations.list",
            "apihub.apis.create",
            "apihub.apis.delete",
            "apihub.apis.list",
            "apihub.apis.update",
            "apihub.attributes.create",
            "apihub.attributes.list",
            "apihub.attributes.update",
            "apihub.curations.list",
            "apihub.definitions.list",
            "apihub.dependencies.delete",
            "apihub.dependencies.list",
            "apihub.deployments.create",
            "apihub.deployments.delete",
            "apihub.deployments.list",
            "apihub.deployments.update",
            "apihub.externalApis.list",
            "apihub.hostProjectRegistrations.list",
            "apihub.operations.list",
            "apihub.plugininstances.create",
            "apihub.plugininstances.list",
            "apihub.plugins.create",
            "apihub.plugins.list",
            "apihub.runTimeProjectAttachments.list",
            "apihub.specs.create",
            "apihub.specs.delete",
            "apihub.specs.list",
            "apihub.specs.update",
            "apihub.versions.create",
            "apihub.versions.delete",
            "apihub.versions.list",
            "apihub.versions.update"
          ],
          "title": "API-Hub Runtime Project Service Agent"
        },
        {
          "description": "Gives APIM the ability to manage resources in consumer project",
          "id": "roles/apim.apiDiscoveryServiceAgent",
          "is_beta": false,
          "permissions": [
            "compute.backendServices.create",
            "compute.backendServices.delete",
            "compute.backendServices.get",
            "compute.backendServices.list",
            "compute.backendServices.update",
            "compute.backendServices.use",
            "compute.globalOperations.get",
            "compute.networks.use",
            "compute.regionBackendServices.create",
            "compute.regionBackendServices.delete",
            "compute.regionBackendServices.get",
            "compute.regionBackendServices.list",
            "compute.regionBackendServices.update",
            "compute.regionBackendServices.use",
            "compute.regionNetworkEndpointGroups.attachNetworkEndpoints",
            "compute.regionNetworkEndpointGroups.create",
            "compute.regionNetworkEndpointGroups.delete",
            "compute.regionNetworkEndpointGroups.detachNetworkEndpoints",
            "compute.regionNetworkEndpointGroups.get",
            "compute.regionNetworkEndpointGroups.list",
            "compute.regionNetworkEndpointGroups.use",
            "compute.regionOperations.get",
            "compute.subnetworks.use",
            "networkservices.operations.*"
          ],
          "title": "APIM API Discovery Service Agent"
        },
        {
          "description": "Give the App Development Experience service agent access to Cloud Platform resources.",
          "id": "roles/appdevelopmentexperience.serviceAgent",
          "is_beta": false,
          "permissions": [
            "container.clusters.get",
            "container.clusters.update",
            "gkehub.features.get",
            "gkehub.gateway.delete",
            "gkehub.gateway.generateCredentials",
            "gkehub.gateway.get",
            "gkehub.gateway.patch",
            "gkehub.gateway.post",
            "gkehub.gateway.put",
            "gkehub.locations.*",
            "gkehub.memberships.get",
            "gkehub.memberships.list"
          ],
          "title": "App Development Experience Service Agent"
        },
        {
          "description": "Give App Engine Standard Envirnoment service account access to managed resources. Includes access to service accounts.",
          "id": "roles/appengine.serviceAgent",
          "is_beta": false,
          "permissions": [
            "appengine.versions.delete",
            "appengine.versions.get",
            "appengine.versions.list",
            "appengine.versions.update",
            "artifactregistry.aptartifacts.create",
            "artifactregistry.dockerimages.*",
            "artifactregistry.files.download",
            "artifactregistry.files.get",
            "artifactregistry.files.list",
            "artifactregistry.kfpartifacts.create",
            "artifactregistry.locations.*",
            "artifactregistry.mavenartifacts.*",
            "artifactregistry.npmpackages.*",
            "artifactregistry.packages.get",
            "artifactregistry.packages.list",
            "artifactregistry.projectsettings.get",
            "artifactregistry.pythonpackages.*",
            "artifactregistry.repositories.create",
            "artifactregistry.repositories.downloadArtifacts",
            "artifactregistry.repositories.get",
            "artifactregistry.repositories.list",
            "artifactregistry.repositories.listEffectiveTags",
            "artifactregistry.repositories.listTagBindings",
            "artifactregistry.repositories.readViaVirtualRepository",
            "artifactregistry.repositories.uploadArtifacts",
            "artifactregistry.tags.create",
            "artifactregistry.tags.get",
            "artifactregistry.tags.list",
            "artifactregistry.tags.update",
            "artifactregistry.versions.get",
            "artifactregistry.versions.list",
            "artifactregistry.yumartifacts.create",
            "datastore.databases.get",
            "datastore.entities.create",
            "datastore.entities.delete",
            "datastore.entities.get",
            "datastore.entities.list",
            "datastore.entities.update",
            "datastore.indexes.list",
            "datastore.namespaces.*",
            "datastore.statistics.*",
            "iam.serviceAccounts.getAccessToken",
            "iam.serviceAccounts.getOpenIdToken",
            "iam.serviceAccounts.signBlob",
            "serviceusage.services.enable",
            "serviceusage.services.get",
            "storage.buckets.create",
            "storage.buckets.get"
          ],
          "title": "App Engine Standard Environment Service Agent"
        },
        {
          "description": "Can edit and manage App Engine Flexible Environment apps. Includes access to service accounts.",
          "id": "roles/appengineflex.serviceAgent",
          "is_beta": false,
          "permissions": [
            "artifactregistry.projectsettings.get",
            "artifactregistry.repositories.create",
            "artifactregistry.repositories.get",
            "artifactregistry.repositories.uploadArtifacts",
            "billing.accounts.get",
            "cloudbuild.builds.create",
            "cloudbuild.builds.get",
            "compute.addresses.create",
            "compute.addresses.delete",
            "compute.addresses.get",
            "compute.addresses.list",
            "compute.addresses.use",
            "compute.autoscalers.create",
            "compute.autoscalers.delete",
            "compute.autoscalers.get",
            "compute.autoscalers.update",
            "compute.backendServices.create",
            "compute.backendServices.delete",
            "compute.backendServices.get",
            "compute.backendServices.list",
            "compute.backendServices.update",
            "compute.backendServices.use",
            "compute.disks.create",
            "compute.disks.list",
            "compute.firewalls.create",
            "compute.firewalls.delete",
            "compute.firewalls.get",
            "compute.firewalls.list",
            "compute.firewalls.update",
            "compute.forwardingRules.create",
            "compute.forwardingRules.delete",
            "compute.forwardingRules.get",
            "compute.globalAddresses.create",
            "compute.globalAddresses.delete",
            "compute.globalAddresses.get",
            "compute.globalAddresses.use",
            "compute.globalForwardingRules.create",
            "compute.globalForwardingRules.delete",
            "compute.globalForwardingRules.get",
            "compute.globalOperations.get",
            "compute.healthChecks.create",
            "compute.healthChecks.delete",
            "compute.healthChecks.get",
            "compute.healthChecks.update",
            "compute.healthChecks.useReadOnly",
            "compute.httpHealthChecks.create",
            "compute.httpHealthChecks.delete",
            "compute.httpHealthChecks.get",
            "compute.httpHealthChecks.use",
            "compute.httpHealthChecks.useReadOnly",
            "compute.httpsHealthChecks.create",
            "compute.httpsHealthChecks.delete",
            "compute.httpsHealthChecks.get",
            "compute.httpsHealthChecks.update",
            "compute.httpsHealthChecks.use",
            "compute.httpsHealthChecks.useReadOnly",
            "compute.images.get",
            "compute.images.useReadOnly",
            "compute.instanceGroupManagers.create",
            "compute.instanceGroupManagers.delete",
            "compute.instanceGroupManagers.get",
            "compute.instanceGroupManagers.update",
            "compute.instanceGroupManagers.use",
            "compute.instanceGroups.create",
            "compute.instanceGroups.delete",
            "compute.instanceGroups.get",
            "compute.instanceGroups.update",
            "compute.instanceGroups.use",
            "compute.instanceTemplates.create",
            "compute.instanceTemplates.delete",
            "compute.instanceTemplates.get",
            "compute.instanceTemplates.useReadOnly",
            "compute.instances.attachDisk",
            "compute.instances.create",
            "compute.instances.delete",
            "compute.instances.detachDisk",
            "compute.instances.get",
            "compute.instances.getGuestAttributes",
            "compute.instances.getSerialPortOutput",
            "compute.instances.list",
            "compute.instances.reset",
            "compute.instances.setLabels",
            "compute.instances.setMetadata",
            "compute.instances.setTags",
            "compute.instances.start",
            "compute.instances.stop",
            "compute.instances.use",
            "compute.machineTypes.get",
            "compute.networks.create",
            "compute.networks.delete",
            "compute.networks.get",
            "compute.networks.updatePolicy",
            "compute.networks.use",
            "compute.networks.useExternalIp",
            "compute.projects.get",
            "compute.projects.setCommonInstanceMetadata",
            "compute.regionBackendServices.create",
            "compute.regionBackendServices.delete",
            "compute.regionBackendServices.get",
            "compute.regionBackendServices.list",
            "compute.regionBackendServices.update",
            "compute.regionBackendServices.use",
            "compute.regionOperations.get",
            "compute.regions.get",
            "compute.routes.create",
            "compute.routes.delete",
            "compute.routes.get",
            "compute.routes.list",
            "compute.subnetworks.delete",
            "compute.subnetworks.get",
            "compute.subnetworks.use",
            "compute.subnetworks.useExternalIp",
            "compute.targetHttpProxies.create",
            "compute.targetHttpProxies.delete",
            "compute.targetHttpProxies.get",
            "compute.targetHttpProxies.use",
            "compute.targetHttpsProxies.create",
            "compute.targetHttpsProxies.delete",
            "compute.targetHttpsProxies.get",
            "compute.targetHttpsProxies.setSslCertificates",
            "compute.targetHttpsProxies.use",
            "compute.urlMaps.create",
            "compute.urlMaps.delete",
            "compute.urlMaps.get",
            "compute.urlMaps.update",
            "compute.urlMaps.use",
            "compute.zoneOperations.get",
            "compute.zoneOperations.list",
            "compute.zones.*",
            "deploymentmanager.compositeTypes.get",
            "deploymentmanager.deployments.create",
            "deploymentmanager.deployments.delete",
            "deploymentmanager.deployments.get",
            "deploymentmanager.deployments.list",
            "deploymentmanager.deployments.update",
            "deploymentmanager.manifests.*",
            "deploymentmanager.operations.*",
            "deploymentmanager.typeProviders.create",
            "deploymentmanager.typeProviders.get",
            "iam.serviceAccounts.actAs",
            "iam.serviceAccounts.get",
            "iam.serviceAccounts.getAccessToken",
            "iam.serviceAccounts.signBlob",
            "iam.serviceAccounts.signJwt",
            "logging.logEntries.create",
            "logging.logMetrics.create",
            "logging.logMetrics.delete",
            "logging.logMetrics.get",
            "logging.logMetrics.update",
            "resourcemanager.organizations.get",
            "resourcemanager.projects.get",
            "resourcemanager.projects.getIamPolicy",
            "resourcemanager.projects.setIamPolicy",
            "serviceusage.services.enable",
            "storage.buckets.create",
            "storage.buckets.delete",
            "storage.buckets.get",
            "storage.buckets.getIamPolicy",
            "storage.buckets.setIamPolicy",
            "storage.buckets.update",
            "storage.objects.create",
            "storage.objects.delete",
            "storage.objects.get",
            "storage.objects.getIamPolicy",
            "storage.objects.list"
          ],
          "title": "App Engine flexible environment Service Agent"
        },
        {
          "description": "Gives the Artifact Registry service account access to managed resources.",
          "id": "roles/artifactregistry.serviceAgent",
          "is_beta": false,
          "permissions": [
            "artifactregistry.repositories.downloadArtifacts",
            "artifactregistry.repositories.get",
            "artifactregistry.repositories.readViaVirtualRepository",
            "artifactregistry.versions.delete",
            "pubsub.topics.publish"
          ],
          "title": "Artifact Registry Service Agent"
        },
        {
          "description": "Gives the Assured Workloads service account access to create CAIS feed and monitor Assured Workloads.",
          "id": "roles/assuredworkloads.monitoringServiceAgent",
          "is_beta": false,
          "permissions": [
            "cloudasset.assets.exportResource",
            "cloudasset.assets.listResource",
            "cloudasset.feeds.create",
            "cloudasset.feeds.delete",
            "cloudasset.feeds.get"
          ],
          "title": "Assured Workloads Monitoring Service Agent"
        },
        {
          "description": "Gives the Assured Workloads service account access to create KMS keyrings and keys, monitor Assured Workloads and read Organization Policies.",
          "id": "roles/assuredworkloads.serviceAgent",
          "is_beta": false,
          "permissions": [
            "cloudkms.cryptoKeys.create",
            "cloudkms.keyRings.create",
            "orgpolicy.policies.list",
            "orgpolicy.policy.get",
            "serviceusage.services.enable",
            "serviceusage.services.get",
            "serviceusage.services.use"
          ],
          "title": "Assured Workloads Service Agent"
        },
        {
          "description": "Grants Audit Manager Service Agent access to various list/get rpcs of products to perform an audit.",
          "id": "roles/auditmanager.serviceAgent",
          "is_beta": false,
          "permissions": [
            "accessapproval.settings.get",
            "artifactregistry.repositories.get",
            "artifactregistry.repositories.list",
            "bigquery.datasets.get",
            "certificatemanager.certs.list",
            "certificatemanager.trustconfigs.list",
            "cloudasset.assets.analyzeIamPolicy",
            "cloudasset.assets.analyzeMove",
            "cloudasset.assets.analyzeOrgPolicy",
            "cloudasset.assets.exportAccessLevel",
            "cloudasset.assets.exportAccessPolicy",
            "cloudasset.assets.exportAiplatformBatchPredictionJobs",
            "cloudasset.assets.exportAiplatformCustomJobs",
            "cloudasset.assets.exportAiplatformDataLabelingJobs",
            "cloudasset.assets.exportAiplatformDatasets",
            "cloudasset.assets.exportAiplatformEndpoints",
            "cloudasset.assets.exportAiplatformHyperparameterTuningJobs",
            "cloudasset.assets.exportAiplatformMetadataStores",
            "cloudasset.assets.exportAiplatformModelDeploymentMonitoringJobs",
            "cloudasset.assets.exportAiplatformModels",
            "cloudasset.assets.exportAiplatformPipelineJobs",
            "cloudasset.assets.exportAiplatformSpecialistPools",
            "cloudasset.assets.exportAiplatformTrainingPipelines",
            "cloudasset.assets.exportAllAccessPolicy",
            "cloudasset.assets.exportAnthosConnectedCluster",
            "cloudasset.assets.exportAnthosedgeCluster",
            "cloudasset.assets.exportApigatewayApi",
            "cloudasset.assets.exportApigatewayApiConfig",
            "cloudasset.assets.exportApigatewayGateway",
            "cloudasset.assets.exportApikeysKeys",
            "cloudasset.assets.exportAppengineApplications",
            "cloudasset.assets.exportAppengineServices",
            "cloudasset.assets.exportAppengineVersions",
            "cloudasset.assets.exportArtifactregistryDockerImages",
            "cloudasset.assets.exportArtifactregistryRepositories",
            "cloudasset.assets.exportAssuredWorkloadsWorkloads",
            "cloudasset.assets.exportBeyondCorpApiGateways",
            "cloudasset.assets.exportBeyondCorpAppConnections",
            "cloudasset.assets.exportBeyondCorpAppConnectors",
            "cloudasset.assets.exportBeyondCorpAppGateways",
            "cloudasset.assets.exportBeyondCorpClientConnectorServices",
            "cloudasset.assets.exportBeyondCorpClientGateways",
            "cloudasset.assets.exportBigqueryDatasets",
            "cloudasset.assets.exportBigqueryModels",
            "cloudasset.assets.exportBigqueryTables",
            "cloudasset.assets.exportBigtableAppProfile",
            "cloudasset.assets.exportBigtableBackup",
            "cloudasset.assets.exportBigtableCluster",
            "cloudasset.assets.exportBigtableInstance",
            "cloudasset.assets.exportBigtableTable",
            "cloudasset.assets.exportCloudAssetFeeds",
            "cloudasset.assets.exportCloudDeployDeliveryPipelines",
            "cloudasset.assets.exportCloudDeployReleases",
            "cloudasset.assets.exportCloudDeployRollouts",
            "cloudasset.assets.exportCloudDeployTargets",
            "cloudasset.assets.exportCloudDocumentAIEvaluation",
            "cloudasset.assets.exportCloudDocumentAIHumanReviewConfig",
            "cloudasset.assets.exportCloudDocumentAILabelerPool",
            "cloudasset.assets.exportCloudDocumentAIProcessor",
            "cloudasset.assets.exportCloudDocumentAIProcessorVersion",
            "cloudasset.assets.exportCloudbillingBillingAccounts",
            "cloudasset.assets.exportCloudbillingProjectBillingInfos",
            "cloudasset.assets.exportCloudfunctionsFunctions",
            "cloudasset.assets.exportCloudfunctionsGen2Functions",
            "cloudasset.assets.exportCloudkmsCryptoKeyVersions",
            "cloudasset.assets.exportCloudkmsCryptoKeys",
            "cloudasset.assets.exportCloudkmsEkmConnections",
            "cloudasset.assets.exportCloudkmsImportJobs",
            "cloudasset.assets.exportCloudkmsKeyRings",
            "cloudasset.assets.exportCloudmemcacheInstances",
            "cloudasset.assets.exportCloudresourcemanagerFolders",
            "cloudasset.assets.exportCloudresourcemanagerOrganizations",
            "cloudasset.assets.exportCloudresourcemanagerProjects",
            "cloudasset.assets.exportCloudresourcemanagerTagBindings",
            "cloudasset.assets.exportCloudresourcemanagerTagKeys",
            "cloudasset.assets.exportCloudresourcemanagerTagValues",
            "cloudasset.assets.exportComposerEnvironments",
            "cloudasset.assets.exportComputeAddress",
            "cloudasset.assets.exportComputeAutoscalers",
            "cloudasset.assets.exportComputeBackendBuckets",
            "cloudasset.assets.exportComputeBackendServices",
            "cloudasset.assets.exportComputeCommitments",
            "cloudasset.assets.exportComputeDisks",
            "cloudasset.assets.exportComputeExternalVpnGateways",
            "cloudasset.assets.exportComputeFirewallPolicies",
            "cloudasset.assets.exportComputeFirewalls",
            "cloudasset.assets.exportComputeForwardingRules",
            "cloudasset.assets.exportComputeGlobalAddress",
            "cloudasset.assets.exportComputeGlobalForwardingRules",
            "cloudasset.assets.exportComputeHealthChecks",
            "cloudasset.assets.exportComputeHttpHealthChecks",
            "cloudasset.assets.exportComputeHttpsHealthChecks",
            "cloudasset.assets.exportComputeImages",
            "cloudasset.assets.exportComputeInstanceGroupManagers",
            "cloudasset.assets.exportComputeInstanceGroups",
            "cloudasset.assets.exportComputeInstanceTemplates",
            "cloudasset.assets.exportComputeInstances",
            "cloudasset.assets.exportComputeInterconnect",
            "cloudasset.assets.exportComputeInterconnectAttachment",
            "cloudasset.assets.exportComputeLicenses",
            "cloudasset.assets.exportComputeNetworkEndpointGroups",
            "cloudasset.assets.exportComputeNetworks",
            "cloudasset.assets.exportComputeNodeGroups",
            "cloudasset.assets.exportComputeNodeTemplates",
            "cloudasset.assets.exportComputePacketMirrorings",
            "cloudasset.assets.exportComputeProjects",
            "cloudasset.assets.exportComputeRegionAutoscaler",
            "cloudasset.assets.exportComputeRegionBackendServices",
            "cloudasset.assets.exportComputeRegionDisk",
            "cloudasset.assets.exportComputeRegionInstanceGroup",
            "cloudasset.assets.exportComputeRegionInstanceGroupManager",
            "cloudasset.assets.exportComputeReservations",
            "cloudasset.assets.exportComputeResourcePolicies",
            "cloudasset.assets.exportComputeRouters",
            "cloudasset.assets.exportComputeRoutes",
            "cloudasset.assets.exportComputeSecurityPolicy",
            "cloudasset.assets.exportComputeServiceAttachments",
            "cloudasset.assets.exportComputeSnapshots",
            "cloudasset.assets.exportComputeSslCertificates",
            "cloudasset.assets.exportComputeSslPolicies",
            "cloudasset.assets.exportComputeSubnetworks",
            "cloudasset.assets.exportComputeTargetHttpProxies",
            "cloudasset.assets.exportComputeTargetHttpsProxies",
            "cloudasset.assets.exportComputeTargetInstances",
            "cloudasset.assets.exportComputeTargetPools",
            "cloudasset.assets.exportComputeTargetSslProxies",
            "cloudasset.assets.exportComputeTargetTcpProxies",
            "cloudasset.assets.exportComputeTargetVpnGateways",
            "cloudasset.assets.exportComputeUrlMaps",
            "cloudasset.assets.exportComputeVpnGateways",
            "cloudasset.assets.exportComputeVpnTunnels",
            "cloudasset.assets.exportConnectorsConnections",
            "cloudasset.assets.exportConnectorsConnectorVersions",
            "cloudasset.assets.exportConnectorsConnectors",
            "cloudasset.assets.exportConnectorsProviders",
            "cloudasset.assets.exportConnectorsRuntimeConfigs",
            "cloudasset.assets.exportContainerAppsDeployment",
            "cloudasset.assets.exportContainerAppsReplicaSets",
            "cloudasset.assets.exportContainerBatchJobs",
            "cloudasset.assets.exportContainerClusterrole",
            "cloudasset.assets.exportContainerClusterrolebinding",
            "cloudasset.assets.exportContainerClusters",
            "cloudasset.assets.exportContainerExtensionsIngresses",
            "cloudasset.assets.exportContainerJobs",
            "cloudasset.assets.exportContainerNamespace",
            "cloudasset.assets.exportContainerNetworkingIngresses",
            "cloudasset.assets.exportContainerNetworkingNetworkPolicies",
            "cloudasset.assets.exportContainerNode",
            "cloudasset.assets.exportContainerNodepool",
            "cloudasset.assets.exportContainerPod",
            "cloudasset.assets.exportContainerReplicaSets",
            "cloudasset.assets.exportContainerRole",
            "cloudasset.assets.exportContainerRolebinding",
            "cloudasset.assets.exportContainerServices",
            "cloudasset.assets.exportContainerregistryImage",
            "cloudasset.assets.exportDataMigrationConnectionProfiles",
            "cloudasset.assets.exportDataMigrationMigrationJobs",
            "cloudasset.assets.exportDataflowJobs",
            "cloudasset.assets.exportDatafusionInstance",
            "cloudasset.assets.exportDataplexAssets",
            "cloudasset.assets.exportDataplexLakes",
            "cloudasset.assets.exportDataplexTasks",
            "cloudasset.assets.exportDataplexZones",
            "cloudasset.assets.exportDataprocAutoscalingPolicies",
            "cloudasset.assets.exportDataprocBatches",
            "cloudasset.assets.exportDataprocClusters",
            "cloudasset.assets.exportDataprocJobs",
            "cloudasset.assets.exportDataprocSessions",
            "cloudasset.assets.exportDataprocWorkflowTemplates",
            "cloudasset.assets.exportDatastreamConnectionProfile",
            "cloudasset.assets.exportDatastreamPrivateConnection",
            "cloudasset.assets.exportDatastreamStream",
            "cloudasset.assets.exportDialogflowAgents",
            "cloudasset.assets.exportDialogflowConversationProfiles",
            "cloudasset.assets.exportDialogflowKnowledgeBases",
            "cloudasset.assets.exportDialogflowLocationSettings",
            "cloudasset.assets.exportDlpDeidentifyTemplates",
            "cloudasset.assets.exportDlpDlpJobs",
            "cloudasset.assets.exportDlpInspectTemplates",
            "cloudasset.assets.exportDlpJobTriggers",
            "cloudasset.assets.exportDlpStoredInfoTypes",
            "cloudasset.assets.exportDnsManagedZones",
            "cloudasset.assets.exportDnsPolicies",
            "cloudasset.assets.exportDomainsRegistrations",
            "cloudasset.assets.exportEventarcTriggers",
            "cloudasset.assets.exportFileBackups",
            "cloudasset.assets.exportFileInstances",
            "cloudasset.assets.exportFirebaseAppInfos",
            "cloudasset.assets.exportFirebaseProjects",
            "cloudasset.assets.exportFirestoreDatabases",
            "cloudasset.assets.exportGKEHubFeatures",
            "cloudasset.assets.exportGKEHubMemberships",
            "cloudasset.assets.exportGameservicesGameServerClusters",
            "cloudasset.assets.exportGameservicesGameServerConfigs",
            "cloudasset.assets.exportGameservicesGameServerDeployments",
            "cloudasset.assets.exportGameservicesRealms",
            "cloudasset.assets.exportGkeBackupBackupPlans",
            "cloudasset.assets.exportGkeBackupBackups",
            "cloudasset.assets.exportGkeBackupRestorePlans",
            "cloudasset.assets.exportGkeBackupRestores",
            "cloudasset.assets.exportGkeBackupVolumeBackups",
            "cloudasset.assets.exportGkeBackupVolumeRestores",
            "cloudasset.assets.exportHealthcareConsentStores",
            "cloudasset.assets.exportHealthcareDatasets",
            "cloudasset.assets.exportHealthcareDicomStores",
            "cloudasset.assets.exportHealthcareFhirStores",
            "cloudasset.assets.exportHealthcareHl7V2Stores",
            "cloudasset.assets.exportIamPolicy",
            "cloudasset.assets.exportIamRoles",
            "cloudasset.assets.exportIamServiceAccountKeys",
            "cloudasset.assets.exportIamServiceAccounts",
            "cloudasset.assets.exportIapTunnel",
            "cloudasset.assets.exportIapTunnelInstances",
            "cloudasset.assets.exportIapTunnelZones",
            "cloudasset.assets.exportIapWeb",
            "cloudasset.assets.exportIapWebServiceVersion",
            "cloudasset.assets.exportIapWebServices",
            "cloudasset.assets.exportIapWebType",
            "cloudasset.assets.exportIdsEndpoints",
            "cloudasset.assets.exportIntegrationsAuthConfigs",
            "cloudasset.assets.exportIntegrationsCertificates",
            "cloudasset.assets.exportIntegrationsExecutions",
            "cloudasset.assets.exportIntegrationsIntegrationVersions",
            "cloudasset.assets.exportIntegrationsIntegrations",
            "cloudasset.assets.exportIntegrationsSfdcChannels",
            "cloudasset.assets.exportIntegrationsSfdcInstances",
            "cloudasset.assets.exportIntegrationsSuspensions",
            "cloudasset.assets.exportLoggingLogMetrics",
            "cloudasset.assets.exportLoggingLogSinks",
            "cloudasset.assets.exportManagedidentitiesDomain",
            "cloudasset.assets.exportMetastoreBackups",
            "cloudasset.assets.exportMetastoreMetadataImports",
            "cloudasset.assets.exportMetastoreServices",
            "cloudasset.assets.exportMonitoringAlertPolicies",
            "cloudasset.assets.exportNetworkConnectivityHubs",
            "cloudasset.assets.exportNetworkConnectivitySpokes",
            "cloudasset.assets.exportNetworkManagementConnectivityTests",
            "cloudasset.assets.exportNetworkServicesEndpointPolicies",
            "cloudasset.assets.exportNetworkServicesGateways",
            "cloudasset.assets.exportNetworkServicesGrpcRoutes",
            "cloudasset.assets.exportNetworkServicesHttpRoutes",
            "cloudasset.assets.exportNetworkServicesMeshes",
            "cloudasset.assets.exportNetworkServicesServiceBindings",
            "cloudasset.assets.exportNetworkServicesTcpRoutes",
            "cloudasset.assets.exportNetworkServicesTlsRoutes",
            "cloudasset.assets.exportOSConfigOSPolicyAssignmentReports",
            "cloudasset.assets.exportOSConfigOSPolicyAssignments",
            "cloudasset.assets.exportOSConfigVulnerabilityReports",
            "cloudasset.assets.exportOSInventories",
            "cloudasset.assets.exportOrgPolicy",
            "cloudasset.assets.exportPatchDeployments",
            "cloudasset.assets.exportPubsubSnapshots",
            "cloudasset.assets.exportPubsubSubscriptions",
            "cloudasset.assets.exportPubsubTopics",
            "cloudasset.assets.exportRedisInstances",
            "cloudasset.assets.exportResource",
            "cloudasset.assets.exportSecretManagerSecretVersions",
            "cloudasset.assets.exportSecretManagerSecrets",
            "cloudasset.assets.exportServiceDirectoryNamespaces",
            "cloudasset.assets.exportServicePerimeter",
            "cloudasset.assets.exportServiceconsumermanagementConsumerProperty",
            "cloudasset.assets.exportServiceconsumermanagementConsumerQuotaLimits",
            "cloudasset.assets.exportServiceconsumermanagementConsumers",
            "cloudasset.assets.exportServiceconsumermanagementProducerOverrides",
            "cloudasset.assets.exportServiceconsumermanagementTenancyUnits",
            "cloudasset.assets.exportServiceconsumermanagementVisibility",
            "cloudasset.assets.exportServicemanagementServices",
            "cloudasset.assets.exportServiceusageAdminOverrides",
            "cloudasset.assets.exportServiceusageConsumerOverrides",
            "cloudasset.assets.exportServiceusageServices",
            "cloudasset.assets.exportSpannerBackups",
            "cloudasset.assets.exportSpannerDatabases",
            "cloudasset.assets.exportSpannerInstances",
            "cloudasset.assets.exportSpeakerIdPhrases",
            "cloudasset.assets.exportSpeakerIdSettings",
            "cloudasset.assets.exportSpeakerIdSpeakers",
            "cloudasset.assets.exportSpeechCustomClasses",
            "cloudasset.assets.exportSpeechPhraseSets",
            "cloudasset.assets.exportSqladminBackupRuns",
            "cloudasset.assets.exportSqladminInstances",
            "cloudasset.assets.exportStorageBuckets",
            "cloudasset.assets.exportTpuNodes",
            "cloudasset.assets.exportVpcaccessConnector",
            "cloudasset.assets.listAccessLevel",
            "cloudasset.assets.listAccessPolicy",
            "cloudasset.assets.listAiplatformBatchPredictionJobs",
            "cloudasset.assets.listAiplatformCustomJobs",
            "cloudasset.assets.listAiplatformDataLabelingJobs",
            "cloudasset.assets.listAiplatformDatasets",
            "cloudasset.assets.listAiplatformEndpoints",
            "cloudasset.assets.listAiplatformHyperparameterTuningJobs",
            "cloudasset.assets.listAiplatformMetadataStores",
            "cloudasset.assets.listAiplatformModelDeploymentMonitoringJobs",
            "cloudasset.assets.listAiplatformModels",
            "cloudasset.assets.listAiplatformPipelineJobs",
            "cloudasset.assets.listAiplatformSpecialistPools",
            "cloudasset.assets.listAiplatformTrainingPipelines",
            "cloudasset.assets.listAllAccessPolicy",
            "cloudasset.assets.listAnthosConnectedCluster",
            "cloudasset.assets.listAnthosedgeCluster",
            "cloudasset.assets.listApigatewayApi",
            "cloudasset.assets.listApigatewayApiConfig",
            "cloudasset.assets.listApigatewayGateway",
            "cloudasset.assets.listApikeysKeys",
            "cloudasset.assets.listAppengineApplications",
            "cloudasset.assets.listAppengineServices",
            "cloudasset.assets.listAppengineVersions",
            "cloudasset.assets.listArtifactregistryDockerImages",
            "cloudasset.assets.listArtifactregistryRepositories",
            "cloudasset.assets.listAssuredWorkloadsWorkloads",
            "cloudasset.assets.listBeyondCorpApiGateways",
            "cloudasset.assets.listBeyondCorpAppConnections",
            "cloudasset.assets.listBeyondCorpAppConnectors",
            "cloudasset.assets.listBeyondCorpAppGateways",
            "cloudasset.assets.listBeyondCorpClientConnectorServices",
            "cloudasset.assets.listBeyondCorpClientGateways",
            "cloudasset.assets.listBigqueryDatasets",
            "cloudasset.assets.listBigqueryModels",
            "cloudasset.assets.listBigqueryTables",
            "cloudasset.assets.listBigtableAppProfile",
            "cloudasset.assets.listBigtableBackup",
            "cloudasset.assets.listBigtableCluster",
            "cloudasset.assets.listBigtableInstance",
            "cloudasset.assets.listBigtableTable",
            "cloudasset.assets.listCloudAssetFeeds",
            "cloudasset.assets.listCloudDeployDeliveryPipelines",
            "cloudasset.assets.listCloudDeployReleases",
            "cloudasset.assets.listCloudDeployRollouts",
            "cloudasset.assets.listCloudDeployTargets",
            "cloudasset.assets.listCloudDocumentAIEvaluation",
            "cloudasset.assets.listCloudDocumentAIHumanReviewConfig",
            "cloudasset.assets.listCloudDocumentAILabelerPool",
            "cloudasset.assets.listCloudDocumentAIProcessor",
            "cloudasset.assets.listCloudDocumentAIProcessorVersion",
            "cloudasset.assets.listCloudbillingBillingAccounts",
            "cloudasset.assets.listCloudbillingProjectBillingInfos",
            "cloudasset.assets.listCloudfunctionsFunctions",
            "cloudasset.assets.listCloudfunctionsGen2Functions",
            "cloudasset.assets.listCloudkmsCryptoKeyVersions",
            "cloudasset.assets.listCloudkmsCryptoKeys",
            "cloudasset.assets.listCloudkmsEkmConnections",
            "cloudasset.assets.listCloudkmsImportJobs",
            "cloudasset.assets.listCloudkmsKeyRings",
            "cloudasset.assets.listCloudmemcacheInstances",
            "cloudasset.assets.listCloudresourcemanagerFolders",
            "cloudasset.assets.listCloudresourcemanagerOrganizations",
            "cloudasset.assets.listCloudresourcemanagerProjects",
            "cloudasset.assets.listCloudresourcemanagerTagBindings",
            "cloudasset.assets.listCloudresourcemanagerTagKeys",
            "cloudasset.assets.listCloudresourcemanagerTagValues",
            "cloudasset.assets.listComposerEnvironments",
            "cloudasset.assets.listComputeAddress",
            "cloudasset.assets.listComputeAutoscalers",
            "cloudasset.assets.listComputeBackendBuckets",
            "cloudasset.assets.listComputeBackendServices",
            "cloudasset.assets.listComputeCommitments",
            "cloudasset.assets.listComputeDisks",
            "cloudasset.assets.listComputeExternalVpnGateways",
            "cloudasset.assets.listComputeFirewallPolicies",
            "cloudasset.assets.listComputeFirewalls",
            "cloudasset.assets.listComputeForwardingRules",
            "cloudasset.assets.listComputeGlobalAddress",
            "cloudasset.assets.listComputeGlobalForwardingRules",
            "cloudasset.assets.listComputeHealthChecks",
            "cloudasset.assets.listComputeHttpHealthChecks",
            "cloudasset.assets.listComputeHttpsHealthChecks",
            "cloudasset.assets.listComputeImages",
            "cloudasset.assets.listComputeInstanceGroupManagers",
            "cloudasset.assets.listComputeInstanceGroups",
            "cloudasset.assets.listComputeInstanceTemplates",
            "cloudasset.assets.listComputeInstances",
            "cloudasset.assets.listComputeInterconnect",
            "cloudasset.assets.listComputeInterconnectAttachment",
            "cloudasset.assets.listComputeLicenses",
            "cloudasset.assets.listComputeNetworkEndpointGroups",
            "cloudasset.assets.listComputeNetworks",
            "cloudasset.assets.listComputeNodeGroups",
            "cloudasset.assets.listComputeNodeTemplates",
            "cloudasset.assets.listComputePacketMirrorings",
            "cloudasset.assets.listComputeProjects",
            "cloudasset.assets.listComputeRegionAutoscaler",
            "cloudasset.assets.listComputeRegionBackendServices",
            "cloudasset.assets.listComputeRegionDisk",
            "cloudasset.assets.listComputeRegionInstanceGroup",
            "cloudasset.assets.listComputeRegionInstanceGroupManager",
            "cloudasset.assets.listComputeReservations",
            "cloudasset.assets.listComputeResourcePolicies",
            "cloudasset.assets.listComputeRouters",
            "cloudasset.assets.listComputeRoutes",
            "cloudasset.assets.listComputeSecurityPolicy",
            "cloudasset.assets.listComputeServiceAttachments",
            "cloudasset.assets.listComputeSnapshots",
            "cloudasset.assets.listComputeSslCertificates",
            "cloudasset.assets.listComputeSslPolicies",
            "cloudasset.assets.listComputeSubnetworks",
            "cloudasset.assets.listComputeTargetHttpProxies",
            "cloudasset.assets.listComputeTargetHttpsProxies",
            "cloudasset.assets.listComputeTargetInstances",
            "cloudasset.assets.listComputeTargetPools",
            "cloudasset.assets.listComputeTargetSslProxies",
            "cloudasset.assets.listComputeTargetTcpProxies",
            "cloudasset.assets.listComputeTargetVpnGateways",
            "cloudasset.assets.listComputeUrlMaps",
            "cloudasset.assets.listComputeVpnGateways",
            "cloudasset.assets.listComputeVpnTunnels",
            "cloudasset.assets.listConnectorsConnections",
            "cloudasset.assets.listConnectorsConnectorVersions",
            "cloudasset.assets.listConnectorsConnectors",
            "cloudasset.assets.listConnectorsProviders",
            "cloudasset.assets.listConnectorsRuntimeConfigs",
            "cloudasset.assets.listContainerAppsDeployment",
            "cloudasset.assets.listContainerAppsReplicaSets",
            "cloudasset.assets.listContainerBatchJobs",
            "cloudasset.assets.listContainerClusterrole",
            "cloudasset.assets.listContainerClusterrolebinding",
            "cloudasset.assets.listContainerClusters",
            "cloudasset.assets.listContainerExtensionsIngresses",
            "cloudasset.assets.listContainerJobs",
            "cloudasset.assets.listContainerNamespace",
            "cloudasset.assets.listContainerNetworkingIngresses",
            "cloudasset.assets.listContainerNetworkingNetworkPolicies",
            "cloudasset.assets.listContainerNode",
            "cloudasset.assets.listContainerNodepool",
            "cloudasset.assets.listContainerPod",
            "cloudasset.assets.listContainerReplicaSets",
            "cloudasset.assets.listContainerRole",
            "cloudasset.assets.listContainerRolebinding",
            "cloudasset.assets.listContainerServices",
            "cloudasset.assets.listContainerregistryImage",
            "cloudasset.assets.listDataMigrationConnectionProfiles",
            "cloudasset.assets.listDataMigrationMigrationJobs",
            "cloudasset.assets.listDataflowJobs",
            "cloudasset.assets.listDatafusionInstance",
            "cloudasset.assets.listDataplexAssets",
            "cloudasset.assets.listDataplexLakes",
            "cloudasset.assets.listDataplexTasks",
            "cloudasset.assets.listDataplexZones",
            "cloudasset.assets.listDataprocAutoscalingPolicies",
            "cloudasset.assets.listDataprocBatches",
            "cloudasset.assets.listDataprocClusters",
            "cloudasset.assets.listDataprocJobs",
            "cloudasset.assets.listDataprocSessions",
            "cloudasset.assets.listDataprocWorkflowTemplates",
            "cloudasset.assets.listDatastreamConnectionProfile",
            "cloudasset.assets.listDatastreamPrivateConnection",
            "cloudasset.assets.listDatastreamStream",
            "cloudasset.assets.listDialogflowAgents",
            "cloudasset.assets.listDialogflowConversationProfiles",
            "cloudasset.assets.listDialogflowKnowledgeBases",
            "cloudasset.assets.listDialogflowLocationSettings",
            "cloudasset.assets.listDlpDeidentifyTemplates",
            "cloudasset.assets.listDlpDlpJobs",
            "cloudasset.assets.listDlpInspectTemplates",
            "cloudasset.assets.listDlpJobTriggers",
            "cloudasset.assets.listDlpStoredInfoTypes",
            "cloudasset.assets.listDnsManagedZones",
            "cloudasset.assets.listDnsPolicies",
            "cloudasset.assets.listDomainsRegistrations",
            "cloudasset.assets.listEventarcTriggers",
            "cloudasset.assets.listFileBackups",
            "cloudasset.assets.listFileInstances",
            "cloudasset.assets.listFirebaseAppInfos",
            "cloudasset.assets.listFirebaseProjects",
            "cloudasset.assets.listFirestoreDatabases",
            "cloudasset.assets.listGKEHubFeatures",
            "cloudasset.assets.listGKEHubMemberships",
            "cloudasset.assets.listGameservicesGameServerClusters",
            "cloudasset.assets.listGameservicesGameServerConfigs",
            "cloudasset.assets.listGameservicesGameServerDeployments",
            "cloudasset.assets.listGameservicesRealms",
            "cloudasset.assets.listGkeBackupBackupPlans",
            "cloudasset.assets.listGkeBackupBackups",
            "cloudasset.assets.listGkeBackupRestorePlans",
            "cloudasset.assets.listGkeBackupRestores",
            "cloudasset.assets.listGkeBackupVolumeBackups",
            "cloudasset.assets.listGkeBackupVolumeRestores",
            "cloudasset.assets.listHealthcareConsentStores",
            "cloudasset.assets.listHealthcareDatasets",
            "cloudasset.assets.listHealthcareDicomStores",
            "cloudasset.assets.listHealthcareFhirStores",
            "cloudasset.assets.listHealthcareHl7V2Stores",
            "cloudasset.assets.listIamPolicy",
            "cloudasset.assets.listIamRoles",
            "cloudasset.assets.listIamServiceAccountKeys",
            "cloudasset.assets.listIamServiceAccounts",
            "cloudasset.assets.listIapTunnel",
            "cloudasset.assets.listIapTunnelInstances",
            "cloudasset.assets.listIapTunnelZones",
            "cloudasset.assets.listIapWeb",
            "cloudasset.assets.listIapWebServiceVersion",
            "cloudasset.assets.listIapWebServices",
            "cloudasset.assets.listIapWebType",
            "cloudasset.assets.listIdsEndpoints",
            "cloudasset.assets.listIntegrationsAuthConfigs",
            "cloudasset.assets.listIntegrationsCertificates",
            "cloudasset.assets.listIntegrationsExecutions",
            "cloudasset.assets.listIntegrationsIntegrationVersions",
            "cloudasset.assets.listIntegrationsIntegrations",
            "cloudasset.assets.listIntegrationsSfdcChannels",
            "cloudasset.assets.listIntegrationsSfdcInstances",
            "cloudasset.assets.listIntegrationsSuspensions",
            "cloudasset.assets.listLoggingLogMetrics",
            "cloudasset.assets.listLoggingLogSinks",
            "cloudasset.assets.listManagedidentitiesDomain",
            "cloudasset.assets.listMetastoreBackups",
            "cloudasset.assets.listMetastoreMetadataImports",
            "cloudasset.assets.listMetastoreServices",
            "cloudasset.assets.listMonitoringAlertPolicies",
            "cloudasset.assets.listNetworkConnectivityHubs",
            "cloudasset.assets.listNetworkConnectivitySpokes",
            "cloudasset.assets.listNetworkManagementConnectivityTests",
            "cloudasset.assets.listNetworkServicesEndpointPolicies",
            "cloudasset.assets.listNetworkServicesGateways",
            "cloudasset.assets.listNetworkServicesGrpcRoutes",
            "cloudasset.assets.listNetworkServicesHttpRoutes",
            "cloudasset.assets.listNetworkServicesMeshes",
            "cloudasset.assets.listNetworkServicesServiceBindings",
            "cloudasset.assets.listNetworkServicesTcpRoutes",
            "cloudasset.assets.listNetworkServicesTlsRoutes",
            "cloudasset.assets.listOSConfigOSPolicyAssignmentReports",
            "cloudasset.assets.listOSConfigOSPolicyAssignments",
            "cloudasset.assets.listOSConfigVulnerabilityReports",
            "cloudasset.assets.listOSInventories",
            "cloudasset.assets.listOrgPolicy",
            "cloudasset.assets.listPatchDeployments",
            "cloudasset.assets.listPubsubSnapshots",
            "cloudasset.assets.listPubsubSubscriptions",
            "cloudasset.assets.listPubsubTopics",
            "cloudasset.assets.listRedisInstances",
            "cloudasset.assets.listResource",
            "cloudasset.assets.listRunDomainMapping",
            "cloudasset.assets.listRunRevision",
            "cloudasset.assets.listRunService",
            "cloudasset.assets.listSecretManagerSecretVersions",
            "cloudasset.assets.listSecretManagerSecrets",
            "cloudasset.assets.listServiceDirectoryNamespaces",
            "cloudasset.assets.listServicePerimeter",
            "cloudasset.assets.listServiceconsumermanagementConsumerProperty",
            "cloudasset.assets.listServiceconsumermanagementConsumerQuotaLimits",
            "cloudasset.assets.listServiceconsumermanagementConsumers",
            "cloudasset.assets.listServiceconsumermanagementProducerOverrides",
            "cloudasset.assets.listServiceconsumermanagementTenancyUnits",
            "cloudasset.assets.listServiceconsumermanagementVisibility",
            "cloudasset.assets.listServicemanagementServices",
            "cloudasset.assets.listServiceusageAdminOverrides",
            "cloudasset.assets.listServiceusageConsumerOverrides",
            "cloudasset.assets.listServiceusageServices",
            "cloudasset.assets.listSpannerBackups",
            "cloudasset.assets.listSpannerDatabases",
            "cloudasset.assets.listSpannerInstances",
            "cloudasset.assets.listSpeakerIdPhrases",
            "cloudasset.assets.listSpeakerIdSettings",
            "cloudasset.assets.listSpeakerIdSpeakers",
            "cloudasset.assets.listSpeechCustomClasses",
            "cloudasset.assets.listSpeechPhraseSets",
            "cloudasset.assets.listSqladminBackupRuns",
            "cloudasset.assets.listSqladminInstances",
            "cloudasset.assets.listStorageBuckets",
            "cloudasset.assets.listTpuNodes",
            "cloudasset.assets.listVpcaccessConnector",
            "cloudasset.assets.queryAccessPolicy",
            "cloudasset.assets.queryIamPolicy",
            "cloudasset.assets.queryOSInventories",
            "cloudasset.assets.queryResource",
            "cloudasset.assets.searchAllIamPolicies",
            "cloudasset.assets.searchAllResources",
            "cloudasset.othercloudconnections.get",
            "cloudasset.othercloudconnections.list",
            "cloudasset.othercloudconnections.verify",
            "cloudkms.cryptoKeys.get",
            "cloudkms.cryptoKeys.list",
            "cloudkms.keyRings.list",
            "cloudsecurityscanner.scans.get",
            "cloudsecurityscanner.scans.list",
            "cloudsql.instances.get",
            "cloudsql.instances.list",
            "compute.autoscalers.list",
            "compute.backendServices.list",
            "compute.disks.list",
            "compute.firewallPolicies.list",
            "compute.firewalls.list",
            "compute.forwardingRules.list",
            "compute.globalForwardingRules.list",
            "compute.instanceGroupManagers.list",
            "compute.instanceGroups.list",
            "compute.instances.get",
            "compute.instances.list",
            "compute.regionSslPolicies.list",
            "compute.regionTargetHttpProxies.list",
            "compute.regionUrlMaps.list",
            "compute.routers.list",
            "compute.securityPolicies.list",
            "compute.sslCertificates.list",
            "compute.sslPolicies.list",
            "compute.subnetworks.list",
            "compute.targetHttpProxies.list",
            "compute.targetSslProxies.list",
            "compute.urlMaps.list",
            "compute.vpnGateways.list",
            "compute.zones.list",
            "container.clusters.get",
            "container.clusters.list",
            "dlp.inspectTemplates.list",
            "dlp.jobTriggers.list",
            "dns.managedZones.list",
            "iam.serviceAccounts.get",
            "iam.serviceAccounts.getIamPolicy",
            "logging.buckets.list",
            "monitoring.alertPolicies.list",
            "monitoring.timeSeries.list",
            "orgpolicy.constraints.list",
            "orgpolicy.policy.get",
            "privateca.certificates.list",
            "recommender.cloudAssetInsights.get",
            "recommender.cloudAssetInsights.list",
            "recommender.locations.*",
            "resourcemanager.folders.get",
            "resourcemanager.folders.getIamPolicy",
            "resourcemanager.folders.list",
            "resourcemanager.hierarchyNodes.listEffectiveTags",
            "resourcemanager.hierarchyNodes.listTagBindings",
            "resourcemanager.organizations.get",
            "resourcemanager.organizations.getIamPolicy",
            "resourcemanager.projects.get",
            "resourcemanager.projects.getIamPolicy",
            "resourcemanager.projects.list",
            "resourcemanager.tagHolds.list",
            "resourcemanager.tagKeys.get",
            "resourcemanager.tagKeys.list",
            "resourcemanager.tagValues.get",
            "resourcemanager.tagValues.list",
            "secretmanager.secrets.list",
            "serviceusage.quotas.get",
            "serviceusage.services.get",
            "serviceusage.services.list",
            "storage.buckets.get",
            "storage.buckets.getIamPolicy",
            "storage.buckets.list"
          ],
          "title": "Audit Manager Auditing Service Agent"
        },
        {
          "description": "AutoML service agent can act as Cloud Storage admin and export BigQuery tables, which can be backed by Cloud Storage and Cloud Bigtable.",
          "id": "roles/automl.serviceAgent",
          "is_beta": false,
          "permissions": [
            "bigquery.datasets.create",
            "bigquery.datasets.get",
            "bigquery.jobs.create",
            "bigquery.tables.create",
            "bigquery.tables.export",
            "bigquery.tables.get",
            "bigquery.tables.getData",
            "bigquery.tables.update",
            "bigquery.tables.updateData",
            "bigtable.tables.get",
            "bigtable.tables.list",
            "bigtable.tables.readRows",
            "serviceusage.services.use",
            "storage.buckets.get",
            "storage.objects.create",
            "storage.objects.delete",
            "storage.objects.get",
            "storage.objects.list",
            "storage.objects.update"
          ],
          "title": "AutoML Service Agent"
        },
        {
          "description": "Recommendations AI service uploads catalog feeds from Cloud Storage, reports results to the customer Cloud Storage bucket, writes logs to customer projects, and writes and reads Stackdriver metrics for customer projects.",
          "id": "roles/automlrecommendations.serviceAgent",
          "is_beta": false,
          "permissions": [
            "bigquery.datasets.create",
            "bigquery.datasets.get",
            "bigquery.jobs.create",
            "bigquery.jobs.get",
            "bigquery.jobs.list",
            "bigquery.jobs.update",
            "bigquery.tables.create",
            "bigquery.tables.export",
            "bigquery.tables.get",
            "bigquery.tables.getData",
            "bigquery.tables.list",
            "bigquery.tables.update",
            "bigquery.tables.updateData",
            "cloudnotifications.activities.list",
            "dataflow.jobs.*",
            "dataflow.messages.list",
            "dataflow.metrics.get",
            "logging.logEntries.create",
            "logging.logEntries.route",
            "monitoring.alertPolicies.get",
            "monitoring.alertPolicies.list",
            "monitoring.alertPolicies.listEffectiveTags",
            "monitoring.alertPolicies.listTagBindings",
            "monitoring.dashboards.get",
            "monitoring.dashboards.list",
            "monitoring.groups.get",
            "monitoring.groups.list",
            "monitoring.metricDescriptors.create",
            "monitoring.metricDescriptors.get",
            "monitoring.metricDescriptors.list",
            "monitoring.monitoredResourceDescriptors.*",
            "monitoring.notificationChannelDescriptors.*",
            "monitoring.notificationChannels.get",
            "monitoring.notificationChannels.list",
            "monitoring.services.get",
            "monitoring.services.list",
            "monitoring.slos.get",
            "monitoring.slos.list",
            "monitoring.snoozes.get",
            "monitoring.snoozes.list",
            "monitoring.timeSeries.*",
            "monitoring.uptimeCheckConfigs.get",
            "monitoring.uptimeCheckConfigs.list",
            "opsconfigmonitoring.resourceMetadata.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "stackdriver.projects.get",
            "stackdriver.resourceMetadata.list",
            "storage.buckets.create",
            "storage.buckets.get",
            "storage.objects.create",
            "storage.objects.delete",
            "storage.objects.get",
            "storage.objects.list",
            "storage.objects.update"
          ],
          "title": "Recommendations AI Service Agent"
        },
        {
          "description": "Grants the Backup and DR Service access to protect Compute Engine instances.",
          "id": "roles/backupdr.serviceAgent",
          "is_beta": false,
          "permissions": [
            "cloudsql.instances.get",
            "compute.addresses.list",
            "compute.addresses.use",
            "compute.addresses.useInternal",
            "compute.diskTypes.*",
            "compute.disks.create",
            "compute.disks.createSnapshot",
            "compute.disks.delete",
            "compute.disks.get",
            "compute.disks.list",
            "compute.disks.setLabels",
            "compute.disks.use",
            "compute.disks.useReadOnly",
            "compute.firewalls.list",
            "compute.globalOperations.get",
            "compute.images.create",
            "compute.images.delete",
            "compute.images.get",
            "compute.images.useReadOnly",
            "compute.instances.attachDisk",
            "compute.instances.create",
            "compute.instances.delete",
            "compute.instances.detachDisk",
            "compute.instances.get",
            "compute.instances.list",
            "compute.instances.setLabels",
            "compute.instances.setMetadata",
            "compute.instances.setServiceAccount",
            "compute.instances.setTags",
            "compute.instances.start",
            "compute.instances.stop",
            "compute.instances.useReadOnly",
            "compute.machineTypes.*",
            "compute.networks.list",
            "compute.nodeGroups.get",
            "compute.nodeGroups.list",
            "compute.nodeTemplates.get",
            "compute.projects.get",
            "compute.regionOperations.get",
            "compute.regions.*",
            "compute.snapshots.create",
            "compute.snapshots.delete",
            "compute.snapshots.get",
            "compute.snapshots.setLabels",
            "compute.snapshots.useReadOnly",
            "compute.subnetworks.list",
            "compute.subnetworks.use",
            "compute.subnetworks.useExternalIp",
            "compute.zoneOperations.get",
            "compute.zones.list",
            "iam.serviceAccounts.actAs",
            "iam.serviceAccounts.get",
            "iam.serviceAccounts.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Backup and DR Service Agent"
        },
        {
          "description": "Gives permission to manage network resources such as interconnect pairing keys, required for Bare Metal Solution.",
          "id": "roles/baremetalsolution.serviceAgent",
          "is_beta": false,
          "permissions": [
            "compute.interconnectAttachments.get",
            "compute.interconnectAttachments.list",
            "compute.interconnects.get",
            "compute.interconnects.list",
            "compute.networks.get",
            "compute.networks.list",
            "compute.projects.get",
            "resourcemanager.projects.get"
          ],
          "title": "Bare Metal Solution Service Agent"
        },
        {
          "description": "Gives Google Batch account access to manage customer resources.",
          "id": "roles/batch.serviceAgent",
          "is_beta": false,
          "permissions": [
            "backupdr.backupPlanAssociations.createForComputeInstance",
            "backupdr.backupPlanAssociations.deleteForComputeInstance",
            "backupdr.backupPlanAssociations.list",
            "backupdr.backupPlanAssociations.triggerBackupForComputeInstance",
            "backupdr.backupPlans.get",
            "backupdr.backupPlans.list",
            "backupdr.backupPlans.useForComputeInstance",
            "backupdr.backupVaults.get",
            "backupdr.backupVaults.list",
            "backupdr.locations.list",
            "backupdr.operations.get",
            "backupdr.operations.list",
            "backupdr.serviceConfig.initialize",
            "compute.acceleratorTypes.*",
            "compute.addresses.createInternal",
            "compute.addresses.deleteInternal",
            "compute.addresses.get",
            "compute.addresses.list",
            "compute.addresses.listEffectiveTags",
            "compute.addresses.listTagBindings",
            "compute.addresses.use",
            "compute.addresses.useInternal",
            "compute.autoscalers.*",
            "compute.backendBuckets.get",
            "compute.backendBuckets.list",
            "compute.backendBuckets.listEffectiveTags",
            "compute.backendBuckets.listTagBindings",
            "compute.backendServices.get",
            "compute.backendServices.list",
            "compute.backendServices.listEffectiveTags",
            "compute.backendServices.listTagBindings",
            "compute.crossSiteNetworks.get",
            "compute.crossSiteNetworks.list",
            "compute.diskSettings.get",
            "compute.diskTypes.*",
            "compute.disks.addResourcePolicies",
            "compute.disks.create",
            "compute.disks.createSnapshot",
            "compute.disks.createTagBinding",
            "compute.disks.delete",
            "compute.disks.deleteTagBinding",
            "compute.disks.get",
            "compute.disks.getIamPolicy",
            "compute.disks.list",
            "compute.disks.listEffectiveTags",
            "compute.disks.listTagBindings",
            "compute.disks.removeResourcePolicies",
            "compute.disks.resize",
            "compute.disks.setLabels",
            "compute.disks.startAsyncReplication",
            "compute.disks.stopAsyncReplication",
            "compute.disks.stopGroupAsyncReplication",
            "compute.disks.update",
            "compute.disks.use",
            "compute.disks.useReadOnly",
            "compute.externalVpnGateways.get",
            "compute.externalVpnGateways.list",
            "compute.externalVpnGateways.listEffectiveTags",
            "compute.externalVpnGateways.listTagBindings",
            "compute.firewalls.get",
            "compute.firewalls.list",
            "compute.firewalls.listEffectiveTags",
            "compute.firewalls.listTagBindings",
            "compute.forwardingRules.get",
            "compute.forwardingRules.list",
            "compute.forwardingRules.listEffectiveTags",
            "compute.forwardingRules.listTagBindings",
            "compute.globalAddresses.get",
            "compute.globalAddresses.list",
            "compute.globalAddresses.listEffectiveTags",
            "compute.globalAddresses.listTagBindings",
            "compute.globalAddresses.use",
            "compute.globalForwardingRules.get",
            "compute.globalForwardingRules.list",
            "compute.globalForwardingRules.listEffectiveTags",
            "compute.globalForwardingRules.listTagBindings",
            "compute.globalNetworkEndpointGroups.*",
            "compute.globalOperations.get",
            "compute.globalOperations.list",
            "compute.healthChecks.get",
            "compute.healthChecks.list",
            "compute.healthChecks.listEffectiveTags",
            "compute.healthChecks.listTagBindings",
            "compute.httpHealthChecks.get",
            "compute.httpHealthChecks.list",
            "compute.httpHealthChecks.listEffectiveTags",
            "compute.httpHealthChecks.listTagBindings",
            "compute.httpsHealthChecks.get",
            "compute.httpsHealthChecks.list",
            "compute.httpsHealthChecks.listEffectiveTags",
            "compute.httpsHealthChecks.listTagBindings",
            "compute.images.create",
            "compute.images.createTagBinding",
            "compute.images.delete",
            "compute.images.deleteTagBinding",
            "compute.images.deprecate",
            "compute.images.get",
            "compute.images.getFromFamily",
            "compute.images.getIamPolicy",
            "compute.images.list",
            "compute.images.listEffectiveTags",
            "compute.images.listTagBindings",
            "compute.images.setLabels",
            "compute.images.update",
            "compute.images.useReadOnly",
            "compute.instanceGroupManagers.*",
            "compute.instanceGroups.*",
            "compute.instanceSettings.*",
            "compute.instanceTemplates.create",
            "compute.instanceTemplates.delete",
            "compute.instanceTemplates.get",
            "compute.instanceTemplates.getIamPolicy",
            "compute.instanceTemplates.list",
            "compute.instanceTemplates.useReadOnly",
            "compute.instances.addAccessConfig",
            "compute.instances.addNetworkInterface",
            "compute.instances.addResourcePolicies",
            "compute.instances.attachDisk",
            "compute.instances.create",
            "compute.instances.createTagBinding",
            "compute.instances.delete",
            "compute.instances.deleteAccessConfig",
            "compute.instances.deleteNetworkInterface",
            "compute.instances.deleteTagBinding",
            "compute.instances.detachDisk",
            "compute.instances.get",
            "compute.instances.getEffectiveFirewalls",
            "compute.instances.getGuestAttributes",
            "compute.instances.getIamPolicy",
            "compute.instances.getScreenshot",
            "compute.instances.getSerialPortOutput",
            "compute.instances.getShieldedInstanceIdentity",
            "compute.instances.getShieldedVmIdentity",
            "compute.instances.list",
            "compute.instances.listEffectiveTags",
            "compute.instances.listReferrers",
            "compute.instances.listTagBindings",
            "compute.instances.osAdminLogin",
            "compute.instances.osLogin",
            "compute.instances.pscInterfaceCreate",
            "compute.instances.removeResourcePolicies",
            "compute.instances.reset",
            "compute.instances.resume",
            "compute.instances.sendDiagnosticInterrupt",
            "compute.instances.setDeletionProtection",
            "compute.instances.setDiskAutoDelete",
            "compute.instances.setLabels",
            "compute.instances.setMachineResources",
            "compute.instances.setMachineType",
            "compute.instances.setMetadata",
            "compute.instances.setMinCpuPlatform",
            "compute.instances.setName",
            "compute.instances.setScheduling",
            "compute.instances.setSecurityPolicy",
            "compute.instances.setServiceAccount",
            "compute.instances.setShieldedInstanceIntegrityPolicy",
            "compute.instances.setShieldedVmIntegrityPolicy",
            "compute.instances.setTags",
            "compute.instances.simulateMaintenanceEvent",
            "compute.instances.start",
            "compute.instances.startWithEncryptionKey",
            "compute.instances.stop",
            "compute.instances.suspend",
            "compute.instances.update",
            "compute.instances.updateAccessConfig",
            "compute.instances.updateDisplayDevice",
            "compute.instances.updateNetworkInterface",
            "compute.instances.updateSecurity",
            "compute.instances.updateShieldedInstanceConfig",
            "compute.instances.updateShieldedVmConfig",
            "compute.instances.use",
            "compute.instances.useReadOnly",
            "compute.instantSnapshots.create",
            "compute.instantSnapshots.delete",
            "compute.instantSnapshots.export",
            "compute.instantSnapshots.get",
            "compute.instantSnapshots.getIamPolicy",
            "compute.instantSnapshots.list",
            "compute.instantSnapshots.setLabels",
            "compute.instantSnapshots.useReadOnly",
            "compute.interconnectAttachments.get",
            "compute.interconnectAttachments.list",
            "compute.interconnectAttachments.listEffectiveTags",
            "compute.interconnectAttachments.listTagBindings",
            "compute.interconnectLocations.*",
            "compute.interconnectRemoteLocations.*",
            "compute.interconnects.get",
            "compute.interconnects.list",
            "compute.interconnects.listEffectiveTags",
            "compute.interconnects.listTagBindings",
            "compute.licenseCodes.get",
            "compute.licenseCodes.getIamPolicy",
            "compute.licenseCodes.list",
            "compute.licenseCodes.update",
            "compute.licenses.create",
            "compute.licenses.delete",
            "compute.licenses.get",
            "compute.licenses.getIamPolicy",
            "compute.licenses.list",
            "compute.machineImages.create",
            "compute.machineImages.delete",
            "compute.machineImages.get",
            "compute.machineImages.getIamPolicy",
            "compute.machineImages.list",
            "compute.machineImages.useReadOnly",
            "compute.machineTypes.*",
            "compute.multiMig.*",
            "compute.networkAttachments.get",
            "compute.networkAttachments.list",
            "compute.networkAttachments.listEffectiveTags",
            "compute.networkAttachments.listTagBindings",
            "compute.networkEndpointGroups.*",
            "compute.networkProfiles.*",
            "compute.networks.get",
            "compute.networks.list",
            "compute.networks.listEffectiveTags",
            "compute.networks.listTagBindings",
            "compute.networks.use",
            "compute.networks.useExternalIp",
            "compute.projects.get",
            "compute.projects.setCommonInstanceMetadata",
            "compute.regionBackendServices.get",
            "compute.regionBackendServices.list",
            "compute.regionBackendServices.listEffectiveTags",
            "compute.regionBackendServices.listTagBindings",
            "compute.regionHealthCheckServices.get",
            "compute.regionHealthCheckServices.list",
            "compute.regionHealthChecks.get",
            "compute.regionHealthChecks.list",
            "compute.regionHealthChecks.listEffectiveTags",
            "compute.regionHealthChecks.listTagBindings",
            "compute.regionNetworkEndpointGroups.*",
            "compute.regionNotificationEndpoints.get",
            "compute.regionNotificationEndpoints.list",
            "compute.regionOperations.get",
            "compute.regionOperations.list",
            "compute.regionSslCertificates.get",
            "compute.regionSslCertificates.list",
            "compute.regionSslCertificates.listEffectiveTags",
            "compute.regionSslCertificates.listTagBindings",
            "compute.regionSslPolicies.get",
            "compute.regionSslPolicies.list",
            "compute.regionSslPolicies.listAvailableFeatures",
            "compute.regionSslPolicies.listEffectiveTags",
            "compute.regionSslPolicies.listTagBindings",
            "compute.regionTargetHttpProxies.get",
            "compute.regionTargetHttpProxies.list",
            "compute.regionTargetHttpProxies.listEffectiveTags",
            "compute.regionTargetHttpProxies.listTagBindings",
            "compute.regionTargetHttpsProxies.get",
            "compute.regionTargetHttpsProxies.list",
            "compute.regionTargetHttpsProxies.listEffectiveTags",
            "compute.regionTargetHttpsProxies.listTagBindings",
            "compute.regionTargetTcpProxies.get",
            "compute.regionTargetTcpProxies.list",
            "compute.regionTargetTcpProxies.listEffectiveTags",
            "compute.regionTargetTcpProxies.listTagBindings",
            "compute.regionUrlMaps.get",
            "compute.regionUrlMaps.list",
            "compute.regionUrlMaps.listEffectiveTags",
            "compute.regionUrlMaps.listTagBindings",
            "compute.regions.*",
            "compute.reservationBlocks.get",
            "compute.reservationBlocks.list",
            "compute.reservations.get",
            "compute.reservations.list",
            "compute.resourcePolicies.create",
            "compute.resourcePolicies.delete",
            "compute.resourcePolicies.get",
            "compute.resourcePolicies.getIamPolicy",
            "compute.resourcePolicies.list",
            "compute.resourcePolicies.update",
            "compute.resourcePolicies.use",
            "compute.resourcePolicies.useReadOnly",
            "compute.routers.get",
            "compute.routers.getRoutePolicy",
            "compute.routers.list",
            "compute.routers.listBgpRoutes",
            "compute.routers.listEffectiveTags",
            "compute.routers.listRoutePolicies",
            "compute.routers.listTagBindings",
            "compute.routes.get",
            "compute.routes.list",
            "compute.routes.listEffectiveTags",
            "compute.routes.listTagBindings",
            "compute.serviceAttachments.get",
            "compute.serviceAttachments.list",
            "compute.serviceAttachments.listEffectiveTags",
            "compute.serviceAttachments.listTagBindings",
            "compute.snapshots.create",
            "compute.snapshots.createTagBinding",
            "compute.snapshots.delete",
            "compute.snapshots.deleteTagBinding",
            "compute.snapshots.get",
            "compute.snapshots.getIamPolicy",
            "compute.snapshots.list",
            "compute.snapshots.listEffectiveTags",
            "compute.snapshots.listTagBindings",
            "compute.snapshots.setLabels",
            "compute.snapshots.useReadOnly",
            "compute.spotAssistants.get",
            "compute.sslCertificates.get",
            "compute.sslCertificates.list",
            "compute.sslCertificates.listEffectiveTags",
            "compute.sslCertificates.listTagBindings",
            "compute.sslPolicies.get",
            "compute.sslPolicies.list",
            "compute.sslPolicies.listAvailableFeatures",
            "compute.sslPolicies.listEffectiveTags",
            "compute.sslPolicies.listTagBindings",
            "compute.storagePools.get",
            "compute.storagePools.list",
            "compute.storagePools.use",
            "compute.subnetworks.get",
            "compute.subnetworks.list",
            "compute.subnetworks.listEffectiveTags",
            "compute.subnetworks.listTagBindings",
            "compute.subnetworks.use",
            "compute.subnetworks.useExternalIp",
            "compute.targetGrpcProxies.get",
            "compute.targetGrpcProxies.list",
            "compute.targetGrpcProxies.listEffectiveTags",
            "compute.targetGrpcProxies.listTagBindings",
            "compute.targetHttpProxies.get",
            "compute.targetHttpProxies.list",
            "compute.targetHttpProxies.listEffectiveTags",
            "compute.targetHttpProxies.listTagBindings",
            "compute.targetHttpsProxies.get",
            "compute.targetHttpsProxies.list",
            "compute.targetHttpsProxies.listEffectiveTags",
            "compute.targetHttpsProxies.listTagBindings",
            "compute.targetInstances.get",
            "compute.targetInstances.list",
            "compute.targetInstances.listEffectiveTags",
            "compute.targetInstances.listTagBindings",
            "compute.targetPools.get",
            "compute.targetPools.list",
            "compute.targetPools.listEffectiveTags",
            "compute.targetPools.listTagBindings",
            "compute.targetSslProxies.get",
            "compute.targetSslProxies.list",
            "compute.targetSslProxies.listEffectiveTags",
            "compute.targetSslProxies.listTagBindings",
            "compute.targetTcpProxies.get",
            "compute.targetTcpProxies.list",
            "compute.targetTcpProxies.listEffectiveTags",
            "compute.targetTcpProxies.listTagBindings",
            "compute.targetVpnGateways.get",
            "compute.targetVpnGateways.list",
            "compute.targetVpnGateways.listEffectiveTags",
            "compute.targetVpnGateways.listTagBindings",
            "compute.urlMaps.get",
            "compute.urlMaps.list",
            "compute.urlMaps.listEffectiveTags",
            "compute.urlMaps.listTagBindings",
            "compute.vpnGateways.get",
            "compute.vpnGateways.list",
            "compute.vpnGateways.listEffectiveTags",
            "compute.vpnGateways.listTagBindings",
            "compute.vpnTunnels.get",
            "compute.vpnTunnels.list",
            "compute.vpnTunnels.listEffectiveTags",
            "compute.vpnTunnels.listTagBindings",
            "compute.wireGroups.get",
            "compute.wireGroups.list",
            "compute.zoneOperations.get",
            "compute.zoneOperations.list",
            "compute.zones.*",
            "iam.serviceAccounts.actAs",
            "pubsub.topics.publish",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "serviceusage.quotas.get",
            "serviceusage.services.get",
            "serviceusage.services.list",
            "serviceusage.services.use"
          ],
          "title": "Google Batch Service Agent"
        },
        {
          "description": "Gives BigQuery Connection Service access to Cloud SQL instances in user projects.",
          "id": "roles/bigqueryconnection.serviceAgent",
          "is_beta": false,
          "permissions": [
            "cloudsql.instances.connect",
            "cloudsql.instances.get",
            "logging.logEntries.create",
            "logging.logEntries.route",
            "monitoring.metricDescriptors.create",
            "monitoring.metricDescriptors.get",
            "monitoring.metricDescriptors.list",
            "monitoring.monitoredResourceDescriptors.*",
            "monitoring.timeSeries.create"
          ],
          "title": "BigQuery Connection Service Agent"
        },
        {
          "description": "Gives BigQuery Continuous Query access to the service accounts in the user project.",
          "id": "roles/bigquerycontinuousquery.serviceAgent",
          "is_beta": false,
          "permissions": [
            "iam.serviceAccounts.getAccessToken"
          ],
          "title": "BigQuery Continuous Query Service Agent"
        },
        {
          "description": "Gives BigQuery Data Transfer Service access to start BigQuery jobs in consumer project.",
          "id": "roles/bigquerydatatransfer.serviceAgent",
          "is_beta": false,
          "permissions": [
            "bigquery.config.get",
            "bigquery.jobs.create",
            "compute.networkAttachments.get",
            "compute.networkAttachments.update",
            "compute.regionOperations.get",
            "compute.subnetworks.use",
            "dataform.locations.*",
            "dataform.repositories.create",
            "dataform.repositories.list",
            "iam.serviceAccounts.getAccessToken",
            "logging.logEntries.create",
            "logging.logEntries.route",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "BigQuery Data Transfer Service Agent"
        },
        {
          "description": "Gives BigQuery Omni access to tables in user projects.",
          "id": "roles/bigqueryomni.serviceAgent",
          "is_beta": false,
          "permissions": [
            "bigquery.jobs.create",
            "bigquery.tables.updateData"
          ],
          "title": "BigQuery Omni Service Agent"
        },
        {
          "description": "Gives BigQuery Spark access to the service accounts in the user project.",
          "id": "roles/bigqueryspark.serviceAgent",
          "is_beta": false,
          "permissions": [
            "iam.serviceAccounts.getAccessToken"
          ],
          "title": "BigQuery Spark Service Agent"
        },
        {
          "description": "Can read Notes and Occurrences from the Container Analysis Service to find and verify signatures.",
          "id": "roles/binaryauthorization.serviceAgent",
          "is_beta": false,
          "permissions": [
            "artifactregistry.dockerimages.get",
            "artifactregistry.repositories.downloadArtifacts",
            "binaryauthorization.attestors.get",
            "binaryauthorization.attestors.list",
            "binaryauthorization.attestors.verifyImageAttested",
            "binaryauthorization.platformPolicies.evaluatePolicy",
            "binaryauthorization.policy.evaluatePolicy",
            "cloudasset.assets.exportResource",
            "cloudasset.feeds.create",
            "cloudasset.feeds.delete",
            "cloudasset.feeds.get",
            "cloudasset.feeds.update",
            "containeranalysis.notes.get",
            "containeranalysis.notes.list",
            "containeranalysis.notes.listOccurrences",
            "containeranalysis.occurrences.get",
            "containeranalysis.occurrences.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "storage.objects.list"
          ],
          "title": "Binary Authorization Service Agent"
        },
        {
          "description": "Grants Blockchain Node Engine access to metrics in user project",
          "id": "roles/blockchainnodeengine.serviceAgent",
          "is_beta": false,
          "permissions": [
            "monitoring.timeSeries.list"
          ],
          "title": "Blockchain Node Engine Service Agent"
        },
        {
          "description": "Grants Certificate Manager access to services and APIs in the user project.",
          "id": "roles/certificatemanager.serviceAgent",
          "is_beta": false,
          "permissions": [
            "certificatemanager.locations.get"
          ],
          "title": "Certificate Manager Service Agent"
        },
        {
          "description": "Grants Chronicle scoped access to customer project",
          "id": "roles/chronicle.serviceAgent",
          "is_beta": false,
          "permissions": [
            "bigquery.connections.create",
            "bigquery.connections.delegate",
            "bigquery.connections.delete",
            "bigquery.connections.get",
            "bigquery.connections.getIamPolicy",
            "bigquery.connections.list",
            "bigquery.connections.update",
            "bigquery.connections.updateTag",
            "bigquery.connections.use",
            "bigquery.datasets.create",
            "bigquery.jobs.create",
            "bigquery.jobs.get",
            "bigquery.tables.create",
            "bigquery.tables.delete",
            "bigquery.tables.get",
            "bigquery.tables.update",
            "bigquery.tables.updateData",
            "chronicle.dashboards.copy",
            "chronicle.dashboards.create",
            "chronicle.dashboards.get",
            "chronicle.dashboards.list",
            "chronicle.instances.get",
            "chronicle.legacies.legacyGetDetection",
            "chronicle.legacies.legacySearchArtifactIoCDetails",
            "chronicle.legacies.legacySearchAssetEvents",
            "chronicle.legacies.legacySearchCuratedDetections",
            "chronicle.legacies.legacySearchDetections",
            "chronicle.legacies.legacySearchEnterpriseWideIoCs",
            "chronicle.legacies.legacyStreamDetectionAlerts",
            "chronicle.referenceLists.get",
            "chronicle.referenceLists.list",
            "chronicle.referenceLists.update",
            "chronicle.retrohunts.create",
            "chronicle.rules.get",
            "monitoring.alertPolicies.create",
            "monitoring.alertPolicies.delete",
            "monitoring.alertPolicies.get",
            "monitoring.alertPolicies.list",
            "monitoring.alertPolicies.update",
            "serviceusage.quotas.get",
            "serviceusage.services.enable",
            "serviceusage.services.get",
            "serviceusage.services.list",
            "storage.buckets.create",
            "storage.buckets.get",
            "storage.buckets.getIamPolicy",
            "storage.buckets.setIamPolicy",
            "storage.objects.create",
            "storage.objects.delete",
            "storage.objects.get",
            "storage.objects.list"
          ],
          "title": "Chronicle Service Agent"
        },
        {
          "description": "Gives Chronicle SOAR the ability to perform remediation on Cloud Platform resources.",
          "id": "roles/chronicle.soarServiceAgent",
          "is_beta": false,
          "permissions": [
            "cloudasset.assets.analyzeIamPolicy",
            "cloudasset.assets.exportIamPolicy",
            "cloudasset.assets.exportResource",
            "cloudasset.assets.searchAllIamPolicies",
            "cloudasset.assets.searchAllResources",
            "compute.firewalls.get",
            "compute.firewalls.update",
            "compute.instances.deleteAccessConfig",
            "compute.instances.get",
            "compute.instances.list",
            "compute.instances.stop",
            "compute.instances.updateNetworkInterface",
            "compute.networks.updatePolicy",
            "compute.zones.list",
            "iam.serviceAccounts.disable",
            "iam.serviceAccounts.list",
            "recommender.iamPolicyRecommendations.*",
            "resourcemanager.organizations.getIamPolicy",
            "securitycenter.findingexternalsystems.update",
            "securitycenter.findings.list",
            "securitycenter.findings.setMute",
            "securitycenter.findings.setState",
            "securitycenter.findings.update",
            "securitycenter.notificationconfig.create",
            "securitycenter.notificationconfig.delete",
            "securitycenter.notificationconfig.get",
            "securitycenter.notificationconfig.update",
            "securitycenter.sources.list",
            "storage.buckets.get",
            "storage.buckets.getIamPolicy",
            "storage.buckets.list",
            "storage.buckets.update"
          ],
          "title": "Chronicle SOAR Service Agent"
        },
        {
          "description": "Gives CIEM Service Account permission to access GCP resources",
          "id": "roles/ciem.serviceAgent",
          "is_beta": false,
          "permissions": [
            "cloudasset.assets.exportIamPolicy",
            "cloudasset.assets.exportResource",
            "resourcemanager.organizations.get"
          ],
          "title": "CIEM Service Agent"
        },
        {
          "description": "Gives Gemini for Google Cloud components the proper permissions to function.",
          "id": "roles/cloudaicompanion.serviceAgent",
          "is_beta": false,
          "permissions": [
            "cloudaicompanion.codeRepositoryIndexes.get",
            "cloudaicompanion.codeRepositoryIndexes.list",
            "cloudaicompanion.repositoryGroups.get",
            "cloudaicompanion.repositoryGroups.getIamPolicy",
            "cloudaicompanion.repositoryGroups.list",
            "cloudbuild.connections.get",
            "cloudbuild.repositories.accessReadToken",
            "cloudbuild.repositories.fetchGitRefs",
            "cloudbuild.repositories.get",
            "cloudbuild.repositories.list",
            "developerconnect.connections.get",
            "developerconnect.gitRepositoryLinks.fetchGitRefs",
            "developerconnect.gitRepositoryLinks.fetchReadToken",
            "developerconnect.gitRepositoryLinks.get",
            "developerconnect.gitRepositoryLinks.gitProxyRead",
            "developerconnect.gitRepositoryLinks.list",
            "logging.logEntries.create",
            "logging.logEntries.route",
            "monitoring.metricDescriptors.create",
            "monitoring.metricDescriptors.get",
            "monitoring.metricDescriptors.list",
            "monitoring.monitoredResourceDescriptors.*",
            "monitoring.timeSeries.create",
            "serviceusage.services.use"
          ],
          "title": "Gemini for Google Cloud Service Agent"
        },
        {
          "description": "Give effective policy service account access to search all resources and IAM policies.",
          "id": "roles/cloudasset.effectivePolicyServiceAgent",
          "is_beta": false,
          "permissions": [
            "cloudasset.assets.searchAllIamPolicies",
            "cloudasset.assets.searchAllResources"
          ],
          "title": "Effective Policies Service Agent"
        },
        {
          "description": "Gives Cloud Asset service agent permissions to Cloud Storage and BigQuery for exporting Assets, and permission to publish to Cloud Pub/Sub topics for Asset Real Time Feed.",
          "id": "roles/cloudasset.serviceAgent",
          "is_beta": false,
          "permissions": [
            "bigquery.datasets.get",
            "bigquery.jobs.create",
            "bigquery.jobs.get",
            "bigquery.tables.create",
            "bigquery.tables.delete",
            "bigquery.tables.get",
            "bigquery.tables.update",
            "bigquery.tables.updateData",
            "pubsub.topics.publish",
            "storage.buckets.create",
            "storage.buckets.get",
            "storage.buckets.getIamPolicy",
            "storage.objects.create",
            "storage.objects.delete",
            "storage.objects.get"
          ],
          "title": "Cloud Asset Service Agent"
        },
        {
          "description": "Gives the Cloud Build logging-specific service account access to write logs.",
          "id": "roles/cloudbuild.loggingServiceAgent",
          "is_beta": false,
          "permissions": [
            "logging.buckets.write"
          ],
          "title": "Cloud Build Logging Service Agent"
        },
        {
          "description": "Gives Cloud Build service account access to managed resources.",
          "id": "roles/cloudbuild.serviceAgent",
          "is_beta": false,
          "permissions": [
            "artifactregistry.aptartifacts.create",
            "artifactregistry.attachments.create",
            "artifactregistry.attachments.get",
            "artifactregistry.attachments.list",
            "artifactregistry.dockerimages.*",
            "artifactregistry.files.download",
            "artifactregistry.files.get",
            "artifactregistry.files.list",
            "artifactregistry.files.update",
            "artifactregistry.files.upload",
            "artifactregistry.kfpartifacts.create",
            "artifactregistry.locations.*",
            "artifactregistry.mavenartifacts.*",
            "artifactregistry.npmpackages.*",
            "artifactregistry.packages.get",
            "artifactregistry.packages.list",
            "artifactregistry.packages.update",
            "artifactregistry.projectsettings.get",
            "artifactregistry.pythonpackages.*",
            "artifactregistry.repositories.createOnPush",
            "artifactregistry.repositories.deleteArtifacts",
            "artifactregistry.repositories.downloadArtifacts",
            "artifactregistry.repositories.get",
            "artifactregistry.repositories.list",
            "artifactregistry.repositories.listEffectiveTags",
            "artifactregistry.repositories.listTagBindings",
            "artifactregistry.repositories.readViaVirtualRepository",
            "artifactregistry.repositories.uploadArtifacts",
            "artifactregistry.rules.get",
            "artifactregistry.rules.list",
            "artifactregistry.tags.create",
            "artifactregistry.tags.get",
            "artifactregistry.tags.list",
            "artifactregistry.tags.update",
            "artifactregistry.versions.get",
            "artifactregistry.versions.list",
            "artifactregistry.yumartifacts.create",
            "binaryauthorization.attestors.create",
            "binaryauthorization.attestors.delete",
            "binaryauthorization.attestors.get",
            "binaryauthorization.attestors.list",
            "binaryauthorization.attestors.update",
            "binaryauthorization.attestors.verifyImageAttested",
            "cloudbuild.builds.create",
            "cloudbuild.builds.get",
            "cloudbuild.builds.list",
            "cloudbuild.builds.update",
            "cloudbuild.connections.get",
            "cloudbuild.locations.*",
            "cloudbuild.operations.*",
            "cloudbuild.repositories.accessReadToken",
            "cloudbuild.repositories.accessReadWriteToken",
            "cloudbuild.repositories.get",
            "cloudbuild.repositories.list",
            "cloudbuild.workerpools.use",
            "compute.firewalls.get",
            "compute.firewalls.list",
            "compute.networkAttachments.get",
            "compute.networkAttachments.update",
            "compute.networks.get",
            "compute.regionOperations.get",
            "compute.subnetworks.get",
            "containeranalysis.notes.attachOccurrence",
            "containeranalysis.notes.create",
            "containeranalysis.notes.delete",
            "containeranalysis.notes.get",
            "containeranalysis.notes.list",
            "containeranalysis.notes.update",
            "containeranalysis.occurrences.create",
            "containeranalysis.occurrences.delete",
            "containeranalysis.occurrences.get",
            "containeranalysis.occurrences.list",
            "containeranalysis.occurrences.update",
            "developerconnect.connections.get",
            "developerconnect.gitRepositoryLinks.fetchReadToken",
            "developerconnect.gitRepositoryLinks.fetchReadWriteToken",
            "developerconnect.gitRepositoryLinks.get",
            "iam.serviceAccounts.get",
            "iam.serviceAccounts.getAccessToken",
            "iam.serviceAccounts.getOpenIdToken",
            "logging.buckets.create",
            "logging.buckets.get",
            "logging.buckets.list",
            "logging.logEntries.create",
            "logging.logEntries.list",
            "logging.views.access",
            "pubsub.subscriptions.create",
            "pubsub.subscriptions.delete",
            "pubsub.subscriptions.get",
            "pubsub.subscriptions.update",
            "pubsub.topics.attachSubscription",
            "pubsub.topics.create",
            "pubsub.topics.get",
            "pubsub.topics.publish",
            "remotebuildexecution.blobs.get",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "servicedirectory.endpoints.get",
            "servicedirectory.endpoints.getIamPolicy",
            "servicedirectory.endpoints.list",
            "servicedirectory.locations.*",
            "servicedirectory.namespaces.get",
            "servicedirectory.namespaces.getIamPolicy",
            "servicedirectory.namespaces.list",
            "servicedirectory.networks.access",
            "servicedirectory.services.get",
            "servicedirectory.services.getIamPolicy",
            "servicedirectory.services.list",
            "servicedirectory.services.resolve",
            "serviceusage.services.use",
            "source.repos.get",
            "source.repos.list",
            "storage.buckets.create",
            "storage.buckets.get",
            "storage.buckets.list",
            "storage.objects.create",
            "storage.objects.delete",
            "storage.objects.get",
            "storage.objects.list",
            "storage.objects.update"
          ],
          "title": "Cloud Build Service Agent"
        },
        {
          "description": "Gives Infrastructure Manager service agent access to managed resources",
          "id": "roles/cloudconfig.serviceAgent",
          "is_beta": false,
          "permissions": [
            "cloudbuild.builds.create",
            "cloudbuild.builds.get",
            "cloudbuild.builds.list",
            "cloudbuild.builds.update",
            "cloudbuild.workerpools.use",
            "iam.serviceAccounts.actAs",
            "iam.serviceAccounts.getAccessToken",
            "logging.logEntries.create",
            "logging.logEntries.route",
            "serviceusage.services.use",
            "storage.buckets.create",
            "storage.buckets.delete",
            "storage.buckets.get",
            "storage.buckets.list",
            "storage.buckets.update",
            "storage.objects.create",
            "storage.objects.delete",
            "storage.objects.get",
            "storage.objects.list",
            "storage.objects.update"
          ],
          "title": "Infrastructure Manager Service Agent"
        },
        {
          "description": "Gives the Partner Console service account access to read Access Approval Requests for workloads associated with a partner.",
          "id": "roles/cloudcontrolspartner.accessApprovalServiceAgent",
          "is_beta": false,
          "permissions": [
            "accessapproval.requests.get",
            "accessapproval.requests.list"
          ],
          "title": "Cloud Controls Partner Access Approval Service Agent"
        },
        {
          "description": "Gives Cloud Controls Partner service agent permission to list EKM connections, get EKM connection status, and provide EKM diagnostic information.",
          "id": "roles/cloudcontrolspartner.ekmServiceAgent",
          "is_beta": false,
          "permissions": [
            "cloudkms.ekmConnections.get",
            "cloudkms.ekmConnections.getIamPolicy",
            "cloudkms.ekmConnections.list",
            "cloudkms.ekmConnections.verifyConnectivity"
          ],
          "title": "Cloud Controls Partner EKM Service Agent"
        },
        {
          "description": "Gives Cloud Controls Partner monitoring service agent permission to view and list Assured Workload violations. The role is assigned to enable partner monitoring capability.",
          "id": "roles/cloudcontrolspartner.monitoringServiceAgent",
          "is_beta": false,
          "permissions": [
            "assuredworkloads.violations.get",
            "assuredworkloads.violations.list"
          ],
          "title": "Cloud Controls Partner Monitoring Service Agent"
        },
        {
          "description": "Gives the Partner Console service account access to support cases for workloads associated with a partner.",
          "id": "roles/cloudcontrolspartner.supportCaseServiceAgent",
          "is_beta": false,
          "permissions": [
            "cloudsupport.techCases.get"
          ],
          "title": "Cloud Controls Partner Support Case Service Agent"
        },
        {
          "description": "Gives Cloud Deploy Service Account access to managed resources.",
          "id": "roles/clouddeploy.serviceAgent",
          "is_beta": false,
          "permissions": [
            "cloudbuild.builds.create",
            "cloudbuild.builds.get",
            "cloudbuild.builds.list",
            "cloudbuild.builds.update",
            "cloudbuild.workerpools.use",
            "iam.serviceAccounts.actAs",
            "iam.serviceAccounts.getAccessToken",
            "logging.logEntries.create",
            "pubsub.topics.get",
            "pubsub.topics.publish",
            "servicemanagement.services.report",
            "serviceusage.services.use",
            "storage.buckets.create",
            "storage.buckets.get",
            "storage.objects.get"
          ],
          "title": "Cloud Deploy Service Agent"
        },
        {
          "description": "Allows Deployment Manager service to actuate resources across DM projects and folders",
          "id": "roles/clouddeploymentmanager.serviceAgent",
          "is_beta": false,
          "permissions": [
            "accesscontextmanager.accessLevels.create",
            "accesscontextmanager.accessLevels.delete",
            "accesscontextmanager.accessLevels.get",
            "accesscontextmanager.accessLevels.update",
            "accesscontextmanager.policies.list",
            "accesscontextmanager.servicePerimeters.create",
            "accesscontextmanager.servicePerimeters.delete",
            "accesscontextmanager.servicePerimeters.get",
            "accesscontextmanager.servicePerimeters.update",
            "appengine.applications.get",
            "appengine.operations.get",
            "appengine.services.update",
            "appengine.versions.create",
            "appengine.versions.delete",
            "appengine.versions.get",
            "appengine.versions.list",
            "artifactregistry.repositories.create",
            "artifactregistry.repositories.delete",
            "artifactregistry.repositories.get",
            "artifactregistry.repositories.update",
            "bigquery.connections.get",
            "bigquery.datasets.create",
            "bigquery.datasets.delete",
            "bigquery.datasets.get",
            "bigquery.datasets.getIamPolicy",
            "bigquery.datasets.update",
            "bigquery.jobs.create",
            "bigquery.routines.create",
            "bigquery.routines.get",
            "bigquery.routines.update",
            "bigquery.tables.create",
            "bigquery.tables.delete",
            "bigquery.tables.get",
            "bigquery.tables.getData",
            "bigquery.tables.setCategory",
            "bigquery.tables.update",
            "bigquery.tables.updateData",
            "bigtable.instances.create",
            "bigtable.instances.delete",
            "bigtable.instances.get",
            "bigtable.instances.update",
            "bigtable.tables.create",
            "bigtable.tables.delete",
            "bigtable.tables.get",
            "bigtable.tables.update",
            "billing.resourceAssociations.create",
            "billing.resourcebudgets.write",
            "cloudbuild.builds.create",
            "cloudbuild.builds.get",
            "cloudfunctions.functions.call",
            "cloudfunctions.functions.create",
            "cloudfunctions.functions.delete",
            "cloudfunctions.functions.get",
            "cloudfunctions.functions.getIamPolicy",
            "cloudfunctions.functions.list",
            "cloudfunctions.functions.update",
            "cloudfunctions.operations.get",
            "cloudprivatecatalog.targets.get",
            "cloudscheduler.jobs.create",
            "cloudscheduler.jobs.delete",
            "cloudscheduler.jobs.get",
            "cloudscheduler.jobs.update",
            "cloudsql.backupRuns.create",
            "cloudsql.databases.*",
            "cloudsql.instances.create",
            "cloudsql.instances.delete",
            "cloudsql.instances.get",
            "cloudsql.instances.import",
            "cloudsql.instances.restart",
            "cloudsql.instances.update",
            "cloudsql.sslCerts.create",
            "cloudsql.sslCerts.delete",
            "cloudsql.sslCerts.get",
            "cloudsql.users.create",
            "cloudsql.users.delete",
            "cloudtasks.queues.create",
            "cloudtasks.queues.delete",
            "cloudtasks.queues.get",
            "compute.addresses.create",
            "compute.addresses.createInternal",
            "compute.addresses.delete",
            "compute.addresses.deleteInternal",
            "compute.addresses.get",
            "compute.addresses.list",
            "compute.addresses.setLabels",
            "compute.addresses.use",
            "compute.addresses.useInternal",
            "compute.autoscalers.create",
            "compute.autoscalers.delete",
            "compute.autoscalers.get",
            "compute.autoscalers.update",
            "compute.backendBuckets.create",
            "compute.backendBuckets.delete",
            "compute.backendBuckets.get",
            "compute.backendBuckets.update",
            "compute.backendBuckets.use",
            "compute.backendServices.create",
            "compute.backendServices.delete",
            "compute.backendServices.get",
            "compute.backendServices.setSecurityPolicy",
            "compute.backendServices.update",
            "compute.backendServices.use",
            "compute.disks.addResourcePolicies",
            "compute.disks.create",
            "compute.disks.delete",
            "compute.disks.get",
            "compute.disks.removeResourcePolicies",
            "compute.disks.resize",
            "compute.disks.setLabels",
            "compute.disks.update",
            "compute.disks.use",
            "compute.disks.useReadOnly",
            "compute.externalVpnGateways.create",
            "compute.externalVpnGateways.delete",
            "compute.externalVpnGateways.get",
            "compute.externalVpnGateways.setLabels",
            "compute.externalVpnGateways.use",
            "compute.firewallPolicies.create",
            "compute.firewallPolicies.delete",
            "compute.firewallPolicies.get",
            "compute.firewalls.create",
            "compute.firewalls.delete",
            "compute.firewalls.get",
            "compute.firewalls.list",
            "compute.firewalls.update",
            "compute.forwardingRules.create",
            "compute.forwardingRules.delete",
            "compute.forwardingRules.get",
            "compute.forwardingRules.pscCreate",
            "compute.forwardingRules.pscSetLabels",
            "compute.forwardingRules.setLabels",
            "compute.forwardingRules.setTarget",
            "compute.forwardingRules.update",
            "compute.forwardingRules.use",
            "compute.globalAddresses.create",
            "compute.globalAddresses.createInternal",
            "compute.globalAddresses.delete",
            "compute.globalAddresses.deleteInternal",
            "compute.globalAddresses.get",
            "compute.globalAddresses.setLabels",
            "compute.globalAddresses.use",
            "compute.globalForwardingRules.create",
            "compute.globalForwardingRules.delete",
            "compute.globalForwardingRules.get",
            "compute.globalForwardingRules.pscCreate",
            "compute.globalForwardingRules.pscDelete",
            "compute.globalForwardingRules.pscSetLabels",
            "compute.globalForwardingRules.setLabels",
            "compute.globalNetworkEndpointGroups.attachNetworkEndpoints",
            "compute.globalNetworkEndpointGroups.create",
            "compute.globalNetworkEndpointGroups.delete",
            "compute.globalNetworkEndpointGroups.get",
            "compute.globalNetworkEndpointGroups.use",
            "compute.globalOperations.get",
            "compute.healthChecks.create",
            "compute.healthChecks.delete",
            "compute.healthChecks.get",
            "compute.healthChecks.update",
            "compute.healthChecks.use",
            "compute.healthChecks.useReadOnly",
            "compute.httpHealthChecks.create",
            "compute.httpHealthChecks.delete",
            "compute.httpHealthChecks.get",
            "compute.httpHealthChecks.update",
            "compute.httpHealthChecks.use",
            "compute.httpHealthChecks.useReadOnly",
            "compute.httpsHealthChecks.create",
            "compute.httpsHealthChecks.delete",
            "compute.httpsHealthChecks.get",
            "compute.httpsHealthChecks.update",
            "compute.httpsHealthChecks.use",
            "compute.httpsHealthChecks.useReadOnly",
            "compute.images.create",
            "compute.images.delete",
            "compute.images.deprecate",
            "compute.images.get",
            "compute.images.setLabels",
            "compute.images.useReadOnly",
            "compute.instanceGroupManagers.create",
            "compute.instanceGroupManagers.delete",
            "compute.instanceGroupManagers.get",
            "compute.instanceGroupManagers.update",
            "compute.instanceGroupManagers.use",
            "compute.instanceGroups.create",
            "compute.instanceGroups.delete",
            "compute.instanceGroups.get",
            "compute.instanceGroups.update",
            "compute.instanceGroups.use",
            "compute.instanceTemplates.create",
            "compute.instanceTemplates.delete",
            "compute.instanceTemplates.get",
            "compute.instanceTemplates.useReadOnly",
            "compute.instances.addAccessConfig",
            "compute.instances.create",
            "compute.instances.delete",
            "compute.instances.deleteAccessConfig",
            "compute.instances.get",
            "compute.instances.listTagBindings",
            "compute.instances.resume",
            "compute.instances.setDeletionProtection",
            "compute.instances.setDiskAutoDelete",
            "compute.instances.setLabels",
            "compute.instances.setMetadata",
            "compute.instances.setServiceAccount",
            "compute.instances.setTags",
            "compute.instances.start",
            "compute.instances.stop",
            "compute.instances.suspend",
            "compute.instances.update",
            "compute.instances.updateDisplayDevice",
            "compute.instances.use",
            "compute.interconnectAttachments.create",
            "compute.interconnectAttachments.delete",
            "compute.interconnectAttachments.get",
            "compute.interconnectAttachments.setLabels",
            "compute.interconnectAttachments.update",
            "compute.interconnects.create",
            "compute.interconnects.delete",
            "compute.interconnects.get",
            "compute.interconnects.setLabels",
            "compute.interconnects.use",
            "compute.machineImages.useReadOnly",
            "compute.machineTypes.get",
            "compute.networkEndpointGroups.attachNetworkEndpoints",
            "compute.networkEndpointGroups.create",
            "compute.networkEndpointGroups.delete",
            "compute.networkEndpointGroups.get",
            "compute.networkEndpointGroups.use",
            "compute.networks.addPeering",
            "compute.networks.create",
            "compute.networks.delete",
            "compute.networks.get",
            "compute.networks.listPeeringRoutes",
            "compute.networks.removePeering",
            "compute.networks.switchToCustomMode",
            "compute.networks.update",
            "compute.networks.updatePolicy",
            "compute.networks.use",
            "compute.networks.useExternalIp",
            "compute.organizations.disableXpnResource",
            "compute.organizations.enableXpnHost",
            "compute.organizations.enableXpnResource",
            "compute.packetMirrorings.create",
            "compute.packetMirrorings.delete",
            "compute.packetMirrorings.get",
            "compute.projects.get",
            "compute.projects.setUsageExportBucket",
            "compute.regionBackendServices.create",
            "compute.regionBackendServices.delete",
            "compute.regionBackendServices.get",
            "compute.regionBackendServices.update",
            "compute.regionBackendServices.use",
            "compute.regionHealthChecks.create",
            "compute.regionHealthChecks.delete",
            "compute.regionHealthChecks.get",
            "compute.regionHealthChecks.update",
            "compute.regionHealthChecks.use",
            "compute.regionHealthChecks.useReadOnly",
            "compute.regionNetworkEndpointGroups.create",
            "compute.regionNetworkEndpointGroups.delete",
            "compute.regionNetworkEndpointGroups.get",
            "compute.regionNetworkEndpointGroups.use",
            "compute.regionOperations.get",
            "compute.regionSslCertificates.create",
            "compute.regionSslCertificates.delete",
            "compute.regionSslCertificates.get",
            "compute.regionTargetHttpProxies.create",
            "compute.regionTargetHttpProxies.delete",
            "compute.regionTargetHttpProxies.get",
            "compute.regionTargetHttpProxies.use",
            "compute.regionTargetHttpsProxies.create",
            "compute.regionTargetHttpsProxies.delete",
            "compute.regionTargetHttpsProxies.get",
            "compute.regionTargetHttpsProxies.use",
            "compute.regionUrlMaps.create",
            "compute.regionUrlMaps.delete",
            "compute.regionUrlMaps.get",
            "compute.regionUrlMaps.use",
            "compute.regions.get",
            "compute.reservations.list",
            "compute.resourcePolicies.create",
            "compute.resourcePolicies.delete",
            "compute.resourcePolicies.get",
            "compute.resourcePolicies.use",
            "compute.routers.create",
            "compute.routers.delete",
            "compute.routers.get",
            "compute.routers.update",
            "compute.routers.use",
            "compute.routes.create",
            "compute.routes.delete",
            "compute.routes.get",
            "compute.securityPolicies.create",
            "compute.securityPolicies.delete",
            "compute.securityPolicies.get",
            "compute.securityPolicies.setLabels",
            "compute.securityPolicies.update",
            "compute.securityPolicies.use",
            "compute.serviceAttachments.create",
            "compute.serviceAttachments.get",
            "compute.snapshots.useReadOnly",
            "compute.sslCertificates.create",
            "compute.sslCertificates.delete",
            "compute.sslCertificates.get",
            "compute.sslPolicies.create",
            "compute.sslPolicies.delete",
            "compute.sslPolicies.get",
            "compute.sslPolicies.use",
            "compute.subnetworks.create",
            "compute.subnetworks.delete",
            "compute.subnetworks.expandIpCidrRange",
            "compute.subnetworks.get",
            "compute.subnetworks.list",
            "compute.subnetworks.mirror",
            "compute.subnetworks.update",
            "compute.subnetworks.use",
            "compute.subnetworks.useExternalIp",
            "compute.targetHttpProxies.create",
            "compute.targetHttpProxies.delete",
            "compute.targetHttpProxies.get",
            "compute.targetHttpProxies.use",
            "compute.targetHttpsProxies.create",
            "compute.targetHttpsProxies.delete",
            "compute.targetHttpsProxies.get",
            "compute.targetHttpsProxies.setSslCertificates",
            "compute.targetHttpsProxies.setSslPolicy",
            "compute.targetHttpsProxies.use",
            "compute.targetInstances.create",
            "compute.targetInstances.delete",
            "compute.targetInstances.get",
            "compute.targetInstances.use",
            "compute.targetPools.addHealthCheck",
            "compute.targetPools.addInstance",
            "compute.targetPools.create",
            "compute.targetPools.delete",
            "compute.targetPools.get",
            "compute.targetPools.removeHealthCheck",
            "compute.targetPools.removeInstance",
            "compute.targetPools.use",
            "compute.targetSslProxies.create",
            "compute.targetSslProxies.delete",
            "compute.targetSslProxies.get",
            "compute.targetSslProxies.setSslCertificates",
            "compute.targetSslProxies.use",
            "compute.targetTcpProxies.create",
            "compute.targetTcpProxies.delete",
            "compute.targetTcpProxies.get",
            "compute.targetTcpProxies.use",
            "compute.targetVpnGateways.create",
            "compute.targetVpnGateways.delete",
            "compute.targetVpnGateways.get",
            "compute.targetVpnGateways.setLabels",
            "compute.targetVpnGateways.use",
            "compute.urlMaps.create",
            "compute.urlMaps.delete",
            "compute.urlMaps.get",
            "compute.urlMaps.update",
            "compute.urlMaps.use",
            "compute.vpnGateways.create",
            "compute.vpnGateways.delete",
            "compute.vpnGateways.get",
            "compute.vpnGateways.setLabels",
            "compute.vpnGateways.use",
            "compute.vpnTunnels.create",
            "compute.vpnTunnels.delete",
            "compute.vpnTunnels.get",
            "compute.vpnTunnels.setLabels",
            "compute.zoneOperations.get",
            "compute.zoneOperations.list",
            "compute.zones.get",
            "container.backendConfigs.create",
            "container.backendConfigs.delete",
            "container.backendConfigs.get",
            "container.clusterRoleBindings.create",
            "container.clusterRoleBindings.delete",
            "container.clusterRoleBindings.get",
            "container.clusterRoles.bind",
            "container.clusterRoles.create",
            "container.clusterRoles.delete",
            "container.clusterRoles.escalate",
            "container.clusterRoles.get",
            "container.clusters.create",
            "container.clusters.delete",
            "container.clusters.get",
            "container.clusters.getCredentials",
            "container.clusters.update",
            "container.configMaps.create",
            "container.configMaps.delete",
            "container.configMaps.get",
            "container.configMaps.update",
            "container.cronJobs.create",
            "container.cronJobs.delete",
            "container.cronJobs.get",
            "container.cronJobs.update",
            "container.daemonSets.create",
            "container.daemonSets.delete",
            "container.daemonSets.get",
            "container.daemonSets.update",
            "container.deployments.create",
            "container.deployments.delete",
            "container.deployments.get",
            "container.deployments.update",
            "container.frontendConfigs.create",
            "container.frontendConfigs.delete",
            "container.frontendConfigs.get",
            "container.horizontalPodAutoscalers.create",
            "container.horizontalPodAutoscalers.delete",
            "container.horizontalPodAutoscalers.get",
            "container.ingresses.create",
            "container.ingresses.delete",
            "container.ingresses.get",
            "container.jobs.create",
            "container.jobs.delete",
            "container.jobs.get",
            "container.managedCertificates.create",
            "container.managedCertificates.delete",
            "container.managedCertificates.get",
            "container.mutatingWebhookConfigurations.delete",
            "container.mutatingWebhookConfigurations.get",
            "container.namespaces.create",
            "container.namespaces.delete",
            "container.namespaces.get",
            "container.networkPolicies.create",
            "container.networkPolicies.delete",
            "container.networkPolicies.get",
            "container.operations.get",
            "container.podDisruptionBudgets.create",
            "container.podDisruptionBudgets.delete",
            "container.podDisruptionBudgets.get",
            "container.podSecurityPolicies.delete",
            "container.podSecurityPolicies.get",
            "container.priorityClasses.create",
            "container.priorityClasses.delete",
            "container.priorityClasses.get",
            "container.replicationControllers.create",
            "container.replicationControllers.delete",
            "container.replicationControllers.get",
            "container.roleBindings.create",
            "container.roleBindings.delete",
            "container.roleBindings.get",
            "container.roles.bind",
            "container.roles.create",
            "container.roles.delete",
            "container.roles.escalate",
            "container.roles.get",
            "container.roles.update",
            "container.secrets.create",
            "container.secrets.delete",
            "container.secrets.get",
            "container.secrets.update",
            "container.serviceAccounts.create",
            "container.serviceAccounts.delete",
            "container.serviceAccounts.get",
            "container.serviceAccounts.update",
            "container.services.create",
            "container.services.delete",
            "container.services.get",
            "container.statefulSets.create",
            "container.statefulSets.delete",
            "container.statefulSets.get",
            "container.statefulSets.update",
            "container.storageClasses.create",
            "container.storageClasses.delete",
            "container.storageClasses.get",
            "container.thirdPartyObjects.create",
            "container.thirdPartyObjects.delete",
            "container.thirdPartyObjects.get",
            "container.thirdPartyObjects.update",
            "container.validatingWebhookConfigurations.delete",
            "container.validatingWebhookConfigurations.get",
            "datacatalog.taxonomies.get",
            "dataproc.autoscalingPolicies.create",
            "dataproc.autoscalingPolicies.delete",
            "dataproc.autoscalingPolicies.get",
            "dataproc.autoscalingPolicies.use",
            "dataproc.clusters.create",
            "dataproc.clusters.delete",
            "dataproc.clusters.get",
            "dataproc.nodeGroups.create",
            "dataproc.operations.get",
            "dataproc.workflowTemplates.create",
            "dataproc.workflowTemplates.delete",
            "dataproc.workflowTemplates.get",
            "deploymentmanager.compositeTypes.get",
            "deploymentmanager.deployments.create",
            "deploymentmanager.deployments.delete",
            "deploymentmanager.deployments.get",
            "deploymentmanager.deployments.update",
            "deploymentmanager.operations.get",
            "deploymentmanager.typeProviders.create",
            "deploymentmanager.typeProviders.delete",
            "deploymentmanager.typeProviders.get",
            "deploymentmanager.typeProviders.update",
            "dns.changes.*",
            "dns.managedZones.create",
            "dns.managedZones.delete",
            "dns.managedZones.get",
            "dns.managedZones.list",
            "dns.managedZones.update",
            "dns.networks.bindPrivateDNSZone",
            "dns.networks.targetWithPeeringZone",
            "dns.policies.delete",
            "dns.policies.get",
            "dns.resourceRecordSets.create",
            "dns.resourceRecordSets.delete",
            "dns.resourceRecordSets.list",
            "dns.resourceRecordSets.update",
            "file.instances.create",
            "file.instances.delete",
            "file.instances.get",
            "file.instances.update",
            "file.operations.get",
            "firebase.projects.get",
            "firebase.projects.update",
            "firebaseanalytics.resources.googleAnalyticsEdit",
            "iam.roles.create",
            "iam.roles.delete",
            "iam.roles.get",
            "iam.roles.list",
            "iam.roles.update",
            "iam.serviceAccountKeys.delete",
            "iam.serviceAccountKeys.get",
            "iam.serviceAccounts.actAs",
            "iam.serviceAccounts.create",
            "iam.serviceAccounts.delete",
            "iam.serviceAccounts.get",
            "iam.serviceAccounts.list",
            "iam.serviceAccounts.update",
            "logging.buckets.update",
            "logging.exclusions.create",
            "logging.exclusions.delete",
            "logging.exclusions.get",
            "logging.exclusions.update",
            "logging.logEntries.create",
            "logging.logMetrics.create",
            "logging.logMetrics.delete",
            "logging.logMetrics.get",
            "logging.logMetrics.update",
            "logging.notificationRules.create",
            "logging.sinks.create",
            "logging.sinks.delete",
            "logging.sinks.get",
            "logging.sinks.update",
            "monitoring.alertPolicies.create",
            "monitoring.alertPolicies.delete",
            "monitoring.alertPolicies.get",
            "monitoring.alertPolicies.list",
            "monitoring.alertPolicies.update",
            "monitoring.dashboards.create",
            "monitoring.dashboards.delete",
            "monitoring.dashboards.get",
            "monitoring.dashboards.update",
            "monitoring.groups.create",
            "monitoring.groups.delete",
            "monitoring.groups.get",
            "monitoring.groups.update",
            "monitoring.metricDescriptors.create",
            "monitoring.metricDescriptors.delete",
            "monitoring.metricDescriptors.get",
            "monitoring.notificationChannels.create",
            "monitoring.notificationChannels.delete",
            "monitoring.notificationChannels.get",
            "monitoring.notificationChannels.update",
            "monitoring.uptimeCheckConfigs.create",
            "monitoring.uptimeCheckConfigs.delete",
            "monitoring.uptimeCheckConfigs.get",
            "monitoring.uptimeCheckConfigs.update",
            "networksecurity.serverTlsPolicies.use",
            "pubsub.schemas.attach",
            "pubsub.subscriptions.create",
            "pubsub.subscriptions.delete",
            "pubsub.subscriptions.get",
            "pubsub.subscriptions.update",
            "pubsub.topics.attachSubscription",
            "pubsub.topics.create",
            "pubsub.topics.delete",
            "pubsub.topics.get",
            "pubsub.topics.getIamPolicy",
            "pubsub.topics.publish",
            "pubsub.topics.update",
            "redis.instances.create",
            "redis.instances.delete",
            "redis.instances.get",
            "redis.instances.update",
            "redis.instances.updateAuth",
            "redis.operations.get",
            "resourcemanager.folders.create",
            "resourcemanager.folders.delete",
            "resourcemanager.folders.get",
            "resourcemanager.folders.getIamPolicy",
            "resourcemanager.folders.list",
            "resourcemanager.folders.update",
            "resourcemanager.organizations.getIamPolicy",
            "resourcemanager.projects.create",
            "resourcemanager.projects.createBillingAssignment",
            "resourcemanager.projects.delete",
            "resourcemanager.projects.deleteBillingAssignment",
            "resourcemanager.projects.get",
            "resourcemanager.projects.getIamPolicy",
            "resourcemanager.projects.list",
            "resourcemanager.projects.move",
            "resourcemanager.projects.update",
            "resourcemanager.projects.updateLiens",
            "resourcemanager.tagHolds.create",
            "resourcemanager.tagHolds.delete",
            "resourcemanager.tagValueBindings.*",
            "resourcemanager.tagValues.get",
            "runtimeconfig.configs.create",
            "runtimeconfig.configs.delete",
            "runtimeconfig.configs.get",
            "runtimeconfig.configs.list",
            "runtimeconfig.configs.update",
            "runtimeconfig.variables.create",
            "runtimeconfig.variables.delete",
            "runtimeconfig.variables.get",
            "runtimeconfig.variables.list",
            "runtimeconfig.variables.update",
            "runtimeconfig.waiters.create",
            "runtimeconfig.waiters.delete",
            "runtimeconfig.waiters.get",
            "runtimeconfig.waiters.list",
            "servicedirectory.namespaces.associatePrivateZone",
            "servicedirectory.namespaces.create",
            "servicedirectory.namespaces.delete",
            "servicedirectory.services.create",
            "servicemanagement.services.bind",
            "servicenetworking.operations.get",
            "servicenetworking.services.addPeering",
            "servicenetworking.services.get",
            "serviceusage.services.disable",
            "serviceusage.services.enable",
            "serviceusage.services.get",
            "serviceusage.services.use",
            "source.repos.create",
            "spanner.databaseOperations.get",
            "spanner.databases.create",
            "spanner.databases.drop",
            "spanner.databases.get",
            "spanner.databases.updateDdl",
            "spanner.instanceOperations.get",
            "spanner.instances.create",
            "spanner.instances.delete",
            "spanner.instances.get",
            "spanner.instances.update",
            "storage.buckets.create",
            "storage.buckets.delete",
            "storage.buckets.get",
            "storage.buckets.getIamPolicy",
            "storage.buckets.update",
            "storage.hmacKeys.create",
            "storage.objects.create",
            "storage.objects.delete",
            "storage.objects.get",
            "storage.objects.getIamPolicy",
            "storage.objects.list",
            "vpcaccess.connectors.create",
            "vpcaccess.connectors.delete",
            "vpcaccess.operations.get",
            "workflows.operations.get",
            "workflows.workflows.create",
            "workflows.workflows.delete",
            "workflows.workflows.get"
          ],
          "title": "Cloud Deployment Manager Service Agent"
        },
        {
          "description": "Gives Cloud Functions service account access to managed resources.",
          "id": "roles/cloudfunctions.serviceAgent",
          "is_beta": false,
          "permissions": [
            "artifactregistry.aptartifacts.create",
            "artifactregistry.attachments.*",
            "artifactregistry.dockerimages.*",
            "artifactregistry.files.*",
            "artifactregistry.kfpartifacts.create",
            "artifactregistry.locations.*",
            "artifactregistry.mavenartifacts.*",
            "artifactregistry.npmpackages.*",
            "artifactregistry.packages.*",
            "artifactregistry.projectsettings.*",
            "artifactregistry.pythonpackages.*",
            "artifactregistry.repositories.create",
            "artifactregistry.repositories.createTagBinding",
            "artifactregistry.repositories.delete",
            "artifactregistry.repositories.deleteArtifacts",
            "artifactregistry.repositories.deleteTagBinding",
            "artifactregistry.repositories.downloadArtifacts",
            "artifactregistry.repositories.get",
            "artifactregistry.repositories.getIamPolicy",
            "artifactregistry.repositories.list",
            "artifactregistry.repositories.listEffectiveTags",
            "artifactregistry.repositories.listTagBindings",
            "artifactregistry.repositories.readViaVirtualRepository",
            "artifactregistry.repositories.setIamPolicy",
            "artifactregistry.repositories.update",
            "artifactregistry.repositories.uploadArtifacts",
            "artifactregistry.rules.*",
            "artifactregistry.tags.*",
            "artifactregistry.versions.*",
            "artifactregistry.yumartifacts.create",
            "clientauthconfig.clients.list",
            "cloudbuild.builds.create",
            "cloudbuild.builds.get",
            "cloudbuild.builds.list",
            "cloudbuild.builds.update",
            "cloudbuild.locations.*",
            "cloudbuild.operations.*",
            "cloudbuild.workerpools.use",
            "cloudfunctions.functions.get",
            "cloudfunctions.functions.invoke",
            "cloudfunctions.functions.list",
            "cloudfunctions.operations.*",
            "compute.globalOperations.get",
            "compute.networks.access",
            "eventarc.channelConnections.create",
            "eventarc.channelConnections.delete",
            "eventarc.channelConnections.get",
            "eventarc.channelConnections.getIamPolicy",
            "eventarc.channelConnections.list",
            "eventarc.channelConnections.publish",
            "eventarc.channels.attach",
            "eventarc.channels.create",
            "eventarc.channels.delete",
            "eventarc.channels.get",
            "eventarc.channels.getIamPolicy",
            "eventarc.channels.list",
            "eventarc.channels.publish",
            "eventarc.channels.undelete",
            "eventarc.channels.update",
            "eventarc.enrollments.create",
            "eventarc.enrollments.delete",
            "eventarc.enrollments.get",
            "eventarc.enrollments.getIamPolicy",
            "eventarc.enrollments.list",
            "eventarc.enrollments.update",
            "eventarc.googleApiSources.create",
            "eventarc.googleApiSources.delete",
            "eventarc.googleApiSources.get",
            "eventarc.googleApiSources.getIamPolicy",
            "eventarc.googleApiSources.list",
            "eventarc.googleApiSources.update",
            "eventarc.googleChannelConfigs.*",
            "eventarc.kafkaSources.create",
            "eventarc.kafkaSources.delete",
            "eventarc.kafkaSources.get",
            "eventarc.kafkaSources.getIamPolicy",
            "eventarc.kafkaSources.list",
            "eventarc.locations.*",
            "eventarc.operations.*",
            "eventarc.pipelines.create",
            "eventarc.pipelines.delete",
            "eventarc.pipelines.get",
            "eventarc.pipelines.getIamPolicy",
            "eventarc.pipelines.list",
            "eventarc.pipelines.update",
            "eventarc.providers.*",
            "eventarc.triggers.create",
            "eventarc.triggers.delete",
            "eventarc.triggers.get",
            "eventarc.triggers.getIamPolicy",
            "eventarc.triggers.list",
            "eventarc.triggers.undelete",
            "eventarc.triggers.update",
            "firebasedatabase.instances.get",
            "firebasedatabase.instances.update",
            "iam.serviceAccounts.actAs",
            "iam.serviceAccounts.getAccessToken",
            "iam.serviceAccounts.getOpenIdToken",
            "iam.serviceAccounts.signBlob",
            "pubsub.subscriptions.*",
            "pubsub.topics.attachSubscription",
            "pubsub.topics.create",
            "pubsub.topics.get",
            "pubsub.topics.list",
            "recommender.locations.*",
            "recommender.runServiceCostInsights.*",
            "recommender.runServiceCostRecommendations.*",
            "recommender.runServiceIdentityInsights.*",
            "recommender.runServiceIdentityRecommendations.*",
            "recommender.runServicePerformanceInsights.*",
            "recommender.runServicePerformanceRecommendations.*",
            "recommender.runServiceSecurityInsights.*",
            "recommender.runServiceSecurityRecommendations.*",
            "remotebuildexecution.blobs.get",
            "resourcemanager.projects.get",
            "resourcemanager.projects.getIamPolicy",
            "resourcemanager.projects.list",
            "run.configurations.*",
            "run.executions.*",
            "run.jobs.create",
            "run.jobs.delete",
            "run.jobs.get",
            "run.jobs.getIamPolicy",
            "run.jobs.list",
            "run.jobs.listEffectiveTags",
            "run.jobs.listTagBindings",
            "run.jobs.run",
            "run.jobs.runWithOverrides",
            "run.jobs.update",
            "run.locations.list",
            "run.operations.*",
            "run.revisions.*",
            "run.routes.*",
            "run.services.create",
            "run.services.delete",
            "run.services.get",
            "run.services.getIamPolicy",
            "run.services.list",
            "run.services.listEffectiveTags",
            "run.services.listTagBindings",
            "run.services.update",
            "run.tasks.*",
            "serviceusage.quotas.get",
            "serviceusage.services.disable",
            "serviceusage.services.enable",
            "serviceusage.services.get",
            "serviceusage.services.use",
            "source.repos.get",
            "source.repos.list",
            "storage.buckets.create",
            "storage.buckets.delete",
            "storage.buckets.get",
            "storage.buckets.update",
            "storage.objects.create",
            "storage.objects.delete",
            "storage.objects.get",
            "storage.objects.list",
            "vpcaccess.connectors.get",
            "vpcaccess.connectors.use"
          ],
          "title": "Cloud Functions Service Agent"
        },
        {
          "description": "Grants the ability to manage Cloud IoT Core resources, including publishing data to Cloud Pub/Sub and writing device activity logs to Stackdriver. Warning: If this role is removed from the Cloud IoT service account, Cloud IoT Core will be unable to publish data or write device activity logs.",
          "id": "roles/cloudiot.serviceAgent",
          "is_beta": false,
          "permissions": [
            "logging.logEntries.create",
            "logging.logEntries.route",
            "pubsub.topics.publish"
          ],
          "title": "Cloud IoT Core Service Agent"
        },
        {
          "description": "Gives Cloud KMS organization-level service account access to managed resources.",
          "id": "roles/cloudkms.orgServiceAgent",
          "is_beta": false,
          "permissions": [
            "cloudasset.assets.searchAllResources"
          ],
          "title": "Cloud KMS Organization Service Agent"
        },
        {
          "description": "Gives Cloud KMS service account access to managed resources.",
          "id": "roles/cloudkms.serviceAgent",
          "is_beta": false,
          "permissions": [
            "cloudasset.assets.listCloudkmsCryptoKeys"
          ],
          "title": "Cloud KMS Service Agent"
        },
        {
          "description": "Grants Cloud KMS KACLS Service Agent access to KMS resource permissions to perform DEK encryption/decryption.",
          "id": "roles/cloudkmskacls.serviceAgent",
          "is_beta": false,
          "permissions": [
            "cloudkms.cryptoKeyVersions.useToDecrypt",
            "cloudkms.cryptoKeyVersions.useToEncrypt",
            "cloudkms.cryptoKeys.get"
          ],
          "title": "Cloud KMS KACLS Service Agent"
        },
        {
          "description": "Grants Cloud Optimization Service Account access to read and write data in the user project.",
          "id": "roles/cloudoptimization.serviceAgent",
          "is_beta": false,
          "permissions": [
            "storage.buckets.get",
            "storage.objects.create",
            "storage.objects.delete",
            "storage.objects.get",
            "storage.objects.list",
            "storage.objects.update"
          ],
          "title": "Cloud Optimization Service Agent"
        },
        {
          "description": "Grants Cloud Scheduler Service Account access to manage resources.",
          "id": "roles/cloudscheduler.serviceAgent",
          "is_beta": false,
          "permissions": [
            "iam.serviceAccounts.getAccessToken",
            "iam.serviceAccounts.getOpenIdToken",
            "logging.logEntries.create",
            "logging.logEntries.route",
            "pubsub.topics.publish"
          ],
          "title": "Cloud Scheduler Service Agent"
        },
        {
          "description": "Grants Cloud SQL access to services and APIs in the user project",
          "id": "roles/cloudsql.serviceAgent",
          "is_beta": false,
          "permissions": [
            "cloudsql.instances.get"
          ],
          "title": "Cloud SQL Service Agent"
        },
        {
          "description": "Grants Cloud Tasks Service Account access to manage resources.",
          "id": "roles/cloudtasks.serviceAgent",
          "is_beta": false,
          "permissions": [
            "iam.serviceAccounts.getAccessToken",
            "iam.serviceAccounts.getOpenIdToken",
            "logging.logEntries.create"
          ],
          "title": "Cloud Tasks Service Agent"
        },
        {
          "description": "Give Cloud TPUs service account access to managed resources",
          "id": "roles/cloudtpu.serviceAgent",
          "is_beta": false,
          "permissions": [
            "backupdr.backupPlanAssociations.createForComputeInstance",
            "backupdr.backupPlanAssociations.deleteForComputeInstance",
            "backupdr.backupPlanAssociations.list",
            "backupdr.backupPlanAssociations.triggerBackupForComputeInstance",
            "backupdr.backupPlans.get",
            "backupdr.backupPlans.list",
            "backupdr.backupPlans.useForComputeInstance",
            "backupdr.backupVaults.get",
            "backupdr.backupVaults.list",
            "backupdr.locations.list",
            "backupdr.operations.get",
            "backupdr.operations.list",
            "backupdr.serviceConfig.initialize",
            "compute.acceleratorTypes.*",
            "compute.addresses.*",
            "compute.autoscalers.*",
            "compute.backendBuckets.*",
            "compute.backendServices.*",
            "compute.crossSiteNetworks.*",
            "compute.diskSettings.get",
            "compute.diskTypes.*",
            "compute.disks.*",
            "compute.externalVpnGateways.*",
            "compute.firewallPolicies.get",
            "compute.firewallPolicies.list",
            "compute.firewallPolicies.listEffectiveTags",
            "compute.firewallPolicies.listTagBindings",
            "compute.firewallPolicies.use",
            "compute.firewalls.create",
            "compute.firewalls.delete",
            "compute.firewalls.get",
            "compute.firewalls.list",
            "compute.firewalls.listEffectiveTags",
            "compute.firewalls.listTagBindings",
            "compute.firewalls.update",
            "compute.forwardingRules.*",
            "compute.globalAddresses.*",
            "compute.globalForwardingRules.*",
            "compute.globalNetworkEndpointGroups.*",
            "compute.globalOperations.get",
            "compute.globalOperations.list",
            "compute.globalPublicDelegatedPrefixes.delete",
            "compute.globalPublicDelegatedPrefixes.get",
            "compute.globalPublicDelegatedPrefixes.list",
            "compute.globalPublicDelegatedPrefixes.updatePolicy",
            "compute.healthChecks.*",
            "compute.httpHealthChecks.*",
            "compute.httpsHealthChecks.*",
            "compute.images.*",
            "compute.instanceGroupManagers.*",
            "compute.instanceGroups.*",
            "compute.instanceSettings.*",
            "compute.instanceTemplates.*",
            "compute.instances.*",
            "compute.instantSnapshots.*",
            "compute.interconnectAttachments.*",
            "compute.interconnectLocations.*",
            "compute.interconnectRemoteLocations.*",
            "compute.interconnects.*",
            "compute.licenseCodes.*",
            "compute.licenses.*",
            "compute.machineImages.*",
            "compute.machineTypes.*",
            "compute.multiMig.*",
            "compute.networkAttachments.*",
            "compute.networkEndpointGroups.*",
            "compute.networkProfiles.*",
            "compute.networks.*",
            "compute.packetMirrorings.get",
            "compute.packetMirrorings.list",
            "compute.packetMirrorings.listEffectiveTags",
            "compute.packetMirrorings.listTagBindings",
            "compute.projects.get",
            "compute.projects.setCommonInstanceMetadata",
            "compute.publicDelegatedPrefixes.delete",
            "compute.publicDelegatedPrefixes.get",
            "compute.publicDelegatedPrefixes.list",
            "compute.publicDelegatedPrefixes.listEffectiveTags",
            "compute.publicDelegatedPrefixes.listTagBindings",
            "compute.publicDelegatedPrefixes.update",
            "compute.publicDelegatedPrefixes.updatePolicy",
            "compute.regionBackendServices.*",
            "compute.regionFirewallPolicies.get",
            "compute.regionFirewallPolicies.list",
            "compute.regionFirewallPolicies.listEffectiveTags",
            "compute.regionFirewallPolicies.listTagBindings",
            "compute.regionFirewallPolicies.use",
            "compute.regionHealthCheckServices.*",
            "compute.regionHealthChecks.*",
            "compute.regionNetworkEndpointGroups.*",
            "compute.regionNotificationEndpoints.*",
            "compute.regionOperations.get",
            "compute.regionOperations.list",
            "compute.regionSecurityPolicies.get",
            "compute.regionSecurityPolicies.list",
            "compute.regionSecurityPolicies.listEffectiveTags",
            "compute.regionSecurityPolicies.listTagBindings",
            "compute.regionSecurityPolicies.use",
            "compute.regionSslCertificates.get",
            "compute.regionSslCertificates.list",
            "compute.regionSslCertificates.listEffectiveTags",
            "compute.regionSslCertificates.listTagBindings",
            "compute.regionSslPolicies.*",
            "compute.regionTargetHttpProxies.*",
            "compute.regionTargetHttpsProxies.*",
            "compute.regionTargetTcpProxies.*",
            "compute.regionUrlMaps.*",
            "compute.regions.*",
            "compute.reservationBlocks.get",
            "compute.reservationBlocks.list",
            "compute.reservations.get",
            "compute.reservations.list",
            "compute.resourcePolicies.*",
            "compute.routers.*",
            "compute.routes.*",
            "compute.securityPolicies.get",
            "compute.securityPolicies.list",
            "compute.securityPolicies.listEffectiveTags",
            "compute.securityPolicies.listTagBindings",
            "compute.securityPolicies.use",
            "compute.serviceAttachments.*",
            "compute.snapshots.*",
            "compute.spotAssistants.get",
            "compute.sslCertificates.get",
            "compute.sslCertificates.list",
            "compute.sslCertificates.listEffectiveTags",
            "compute.sslCertificates.listTagBindings",
            "compute.sslPolicies.*",
            "compute.storagePools.get",
            "compute.storagePools.list",
            "compute.storagePools.use",
            "compute.subnetworks.*",
            "compute.targetGrpcProxies.*",
            "compute.targetHttpProxies.*",
            "compute.targetHttpsProxies.*",
            "compute.targetInstances.*",
            "compute.targetPools.*",
            "compute.targetSslProxies.*",
            "compute.targetTcpProxies.*",
            "compute.targetVpnGateways.*",
            "compute.urlMaps.*",
            "compute.vpnGateways.*",
            "compute.vpnTunnels.*",
            "compute.wireGroups.*",
            "compute.zoneOperations.get",
            "compute.zoneOperations.list",
            "compute.zones.*",
            "iam.serviceAccounts.actAs",
            "iam.serviceAccounts.get",
            "iam.serviceAccounts.list",
            "logging.logEntries.create",
            "logging.logEntries.route",
            "monitoring.metricDescriptors.create",
            "monitoring.metricDescriptors.get",
            "monitoring.metricDescriptors.list",
            "monitoring.monitoredResourceDescriptors.*",
            "monitoring.timeSeries.create",
            "networkconnectivity.internalRanges.*",
            "networkconnectivity.locations.*",
            "networkconnectivity.operations.*",
            "networkconnectivity.policyBasedRoutes.*",
            "networkconnectivity.regionalEndpoints.*",
            "networkconnectivity.serviceClasses.*",
            "networkconnectivity.serviceConnectionMaps.*",
            "networkconnectivity.serviceConnectionPolicies.*",
            "networkmanagement.connectivitytests.get",
            "networkmanagement.connectivitytests.list",
            "networksecurity.addressGroups.*",
            "networksecurity.authorizationPolicies.*",
            "networksecurity.authzPolicies.*",
            "networksecurity.clientTlsPolicies.*",
            "networksecurity.firewallEndpointAssociations.*",
            "networksecurity.firewallEndpoints.*",
            "networksecurity.gatewaySecurityPolicies.*",
            "networksecurity.gatewaySecurityPolicyRules.*",
            "networksecurity.locations.*",
            "networksecurity.operations.*",
            "networksecurity.securityProfileGroups.*",
            "networksecurity.securityProfiles.*",
            "networksecurity.serverTlsPolicies.*",
            "networksecurity.tlsInspectionPolicies.*",
            "networksecurity.urlLists.*",
            "networkservices.*",
            "pubsub.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "servicedirectory.namespaces.create",
            "servicedirectory.namespaces.delete",
            "servicedirectory.services.create",
            "servicedirectory.services.delete",
            "servicenetworking.operations.get",
            "servicenetworking.services.addPeering",
            "servicenetworking.services.createPeeredDnsDomain",
            "servicenetworking.services.deleteConnection",
            "servicenetworking.services.deletePeeredDnsDomain",
            "servicenetworking.services.disableVpcServiceControls",
            "servicenetworking.services.enableVpcServiceControls",
            "servicenetworking.services.get",
            "servicenetworking.services.listPeeredDnsDomains",
            "serviceusage.quotas.get",
            "serviceusage.services.get",
            "serviceusage.services.list",
            "trafficdirector.*"
          ],
          "title": "Cloud TPU V2 API Service Agent"
        },
        {
          "description": "Gives Cloud Translation Service Account access to consumer resources.",
          "id": "roles/cloudtranslate.serviceAgent",
          "is_beta": false,
          "permissions": [
            "automl.datasets.export",
            "automl.datasets.get",
            "automl.datasets.list",
            "automl.models.get",
            "automl.models.list",
            "automl.operations.get",
            "storage.buckets.get",
            "storage.objects.create",
            "storage.objects.get",
            "storage.objects.list"
          ],
          "title": "Cloud Translation API Service Agent"
        },
        {
          "description": "Gives Compliance Scanning the access it needs to analyze containers and VMs for compliance and create occurrences using the Container Analysis API",
          "id": "roles/compliancescanning.serviceAgent",
          "is_beta": false,
          "permissions": [
            "artifactregistry.dockerimages.*",
            "artifactregistry.files.download",
            "artifactregistry.files.get",
            "artifactregistry.files.list",
            "artifactregistry.locations.*",
            "artifactregistry.mavenartifacts.*",
            "artifactregistry.npmpackages.*",
            "artifactregistry.packages.get",
            "artifactregistry.packages.list",
            "artifactregistry.projectsettings.get",
            "artifactregistry.pythonpackages.*",
            "artifactregistry.repositories.downloadArtifacts",
            "artifactregistry.repositories.get",
            "artifactregistry.repositories.list",
            "artifactregistry.repositories.listEffectiveTags",
            "artifactregistry.repositories.listTagBindings",
            "artifactregistry.repositories.readViaVirtualRepository",
            "artifactregistry.tags.get",
            "artifactregistry.tags.list",
            "artifactregistry.versions.get",
            "artifactregistry.versions.list",
            "compute.images.get",
            "compute.images.list",
            "compute.images.useReadOnly",
            "compute.instances.get",
            "compute.instances.getGuestAttributes",
            "compute.instances.list",
            "compute.zones.*",
            "containeranalysis.notes.attachOccurrence",
            "containeranalysis.notes.create",
            "containeranalysis.notes.delete",
            "containeranalysis.notes.get",
            "containeranalysis.notes.list",
            "containeranalysis.notes.update",
            "containeranalysis.occurrences.create",
            "containeranalysis.occurrences.delete",
            "containeranalysis.occurrences.get",
            "containeranalysis.occurrences.list",
            "containeranalysis.occurrences.update",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "storage.objects.get",
            "storage.objects.list"
          ],
          "title": "Compliance Scanning Service Agent"
        },
        {
          "description": "Cloud Composer API service agent can manage environments.",
          "id": "roles/composer.serviceAgent",
          "is_beta": false,
          "permissions": [
            "appengine.applications.get",
            "appengine.applications.listRuntimes",
            "appengine.applications.update",
            "appengine.instances.*",
            "appengine.memcache.addKey",
            "appengine.memcache.flush",
            "appengine.memcache.get",
            "appengine.memcache.update",
            "appengine.operations.*",
            "appengine.runtimes.actAsAdmin",
            "appengine.services.*",
            "appengine.versions.create",
            "appengine.versions.delete",
            "appengine.versions.get",
            "appengine.versions.list",
            "appengine.versions.update",
            "artifactregistry.projectsettings.get",
            "artifactregistry.repositories.create",
            "artifactregistry.repositories.delete",
            "artifactregistry.repositories.deleteArtifacts",
            "artifactregistry.repositories.downloadArtifacts",
            "artifactregistry.repositories.get",
            "artifactregistry.repositories.list",
            "artifactregistry.repositories.update",
            "artifactregistry.repositories.uploadArtifacts",
            "backupdr.backupPlanAssociations.createForComputeInstance",
            "backupdr.backupPlanAssociations.deleteForComputeInstance",
            "backupdr.backupPlanAssociations.list",
            "backupdr.backupPlanAssociations.triggerBackupForComputeInstance",
            "backupdr.backupPlans.get",
            "backupdr.backupPlans.list",
            "backupdr.backupPlans.useForComputeInstance",
            "backupdr.backupVaults.get",
            "backupdr.backupVaults.list",
            "backupdr.locations.list",
            "backupdr.operations.get",
            "backupdr.operations.list",
            "backupdr.serviceConfig.initialize",
            "cloudaicompanion.companions.*",
            "cloudaicompanion.entitlements.get",
            "cloudaicompanion.instances.completeCode",
            "cloudaicompanion.instances.generateCode",
            "cloudnotifications.activities.list",
            "cloudsql.*",
            "composer.dags.get",
            "composer.environments.get",
            "compute.acceleratorTypes.*",
            "compute.addresses.*",
            "compute.autoscalers.*",
            "compute.backendBuckets.*",
            "compute.backendServices.*",
            "compute.crossSiteNetworks.*",
            "compute.diskSettings.get",
            "compute.diskTypes.*",
            "compute.disks.*",
            "compute.externalVpnGateways.*",
            "compute.firewallPolicies.get",
            "compute.firewallPolicies.list",
            "compute.firewallPolicies.listEffectiveTags",
            "compute.firewallPolicies.listTagBindings",
            "compute.firewallPolicies.use",
            "compute.firewalls.get",
            "compute.firewalls.list",
            "compute.firewalls.listEffectiveTags",
            "compute.firewalls.listTagBindings",
            "compute.forwardingRules.*",
            "compute.globalAddresses.*",
            "compute.globalForwardingRules.*",
            "compute.globalNetworkEndpointGroups.*",
            "compute.globalOperations.get",
            "compute.globalOperations.list",
            "compute.globalPublicDelegatedPrefixes.delete",
            "compute.globalPublicDelegatedPrefixes.get",
            "compute.globalPublicDelegatedPrefixes.list",
            "compute.globalPublicDelegatedPrefixes.updatePolicy",
            "compute.healthChecks.*",
            "compute.httpHealthChecks.*",
            "compute.httpsHealthChecks.*",
            "compute.images.*",
            "compute.instanceGroupManagers.*",
            "compute.instanceGroups.*",
            "compute.instanceSettings.*",
            "compute.instanceTemplates.*",
            "compute.instances.*",
            "compute.instantSnapshots.*",
            "compute.interconnectAttachments.*",
            "compute.interconnectLocations.*",
            "compute.interconnectRemoteLocations.*",
            "compute.interconnects.*",
            "compute.licenseCodes.*",
            "compute.licenses.*",
            "compute.machineImages.*",
            "compute.machineTypes.*",
            "compute.multiMig.*",
            "compute.networkAttachments.*",
            "compute.networkEndpointGroups.*",
            "compute.networkProfiles.*",
            "compute.networks.*",
            "compute.packetMirrorings.get",
            "compute.packetMirrorings.list",
            "compute.packetMirrorings.listEffectiveTags",
            "compute.packetMirrorings.listTagBindings",
            "compute.projects.get",
            "compute.projects.setCommonInstanceMetadata",
            "compute.publicDelegatedPrefixes.delete",
            "compute.publicDelegatedPrefixes.get",
            "compute.publicDelegatedPrefixes.list",
            "compute.publicDelegatedPrefixes.listEffectiveTags",
            "compute.publicDelegatedPrefixes.listTagBindings",
            "compute.publicDelegatedPrefixes.update",
            "compute.publicDelegatedPrefixes.updatePolicy",
            "compute.regionBackendServices.*",
            "compute.regionFirewallPolicies.get",
            "compute.regionFirewallPolicies.list",
            "compute.regionFirewallPolicies.listEffectiveTags",
            "compute.regionFirewallPolicies.listTagBindings",
            "compute.regionFirewallPolicies.use",
            "compute.regionHealthCheckServices.*",
            "compute.regionHealthChecks.*",
            "compute.regionNetworkEndpointGroups.*",
            "compute.regionNotificationEndpoints.*",
            "compute.regionOperations.get",
            "compute.regionOperations.list",
            "compute.regionSecurityPolicies.get",
            "compute.regionSecurityPolicies.list",
            "compute.regionSecurityPolicies.listEffectiveTags",
            "compute.regionSecurityPolicies.listTagBindings",
            "compute.regionSecurityPolicies.use",
            "compute.regionSslCertificates.get",
            "compute.regionSslCertificates.list",
            "compute.regionSslCertificates.listEffectiveTags",
            "compute.regionSslCertificates.listTagBindings",
            "compute.regionSslPolicies.*",
            "compute.regionTargetHttpProxies.*",
            "compute.regionTargetHttpsProxies.*",
            "compute.regionTargetTcpProxies.*",
            "compute.regionUrlMaps.*",
            "compute.regions.*",
            "compute.reservationBlocks.get",
            "compute.reservationBlocks.list",
            "compute.reservations.get",
            "compute.reservations.list",
            "compute.resourcePolicies.*",
            "compute.routers.*",
            "compute.routes.*",
            "compute.securityPolicies.get",
            "compute.securityPolicies.list",
            "compute.securityPolicies.listEffectiveTags",
            "compute.securityPolicies.listTagBindings",
            "compute.securityPolicies.use",
            "compute.serviceAttachments.*",
            "compute.snapshots.*",
            "compute.spotAssistants.get",
            "compute.sslCertificates.get",
            "compute.sslCertificates.list",
            "compute.sslCertificates.listEffectiveTags",
            "compute.sslCertificates.listTagBindings",
            "compute.sslPolicies.*",
            "compute.storagePools.get",
            "compute.storagePools.list",
            "compute.storagePools.use",
            "compute.subnetworks.*",
            "compute.targetGrpcProxies.*",
            "compute.targetHttpProxies.*",
            "compute.targetHttpsProxies.*",
            "compute.targetInstances.*",
            "compute.targetPools.*",
            "compute.targetSslProxies.*",
            "compute.targetTcpProxies.*",
            "compute.targetVpnGateways.*",
            "compute.urlMaps.*",
            "compute.vpnGateways.*",
            "compute.vpnTunnels.*",
            "compute.wireGroups.*",
            "compute.zoneOperations.get",
            "compute.zoneOperations.list",
            "compute.zones.*",
            "container.*",
            "deploymentmanager.compositeTypes.*",
            "deploymentmanager.deployments.cancelPreview",
            "deploymentmanager.deployments.create",
            "deploymentmanager.deployments.delete",
            "deploymentmanager.deployments.get",
            "deploymentmanager.deployments.list",
            "deploymentmanager.deployments.stop",
            "deploymentmanager.deployments.update",
            "deploymentmanager.manifests.*",
            "deploymentmanager.operations.*",
            "deploymentmanager.resources.*",
            "deploymentmanager.typeProviders.*",
            "deploymentmanager.types.*",
            "dns.managedZones.get",
            "dns.managedZones.list",
            "dns.networks.targetWithPeeringZone",
            "firebase.projects.get",
            "iam.serviceAccounts.actAs",
            "iam.serviceAccounts.get",
            "iam.serviceAccounts.getAccessToken",
            "iam.serviceAccounts.getOpenIdToken",
            "iam.serviceAccounts.list",
            "logging.buckets.create",
            "logging.buckets.createTagBinding",
            "logging.buckets.delete",
            "logging.buckets.deleteTagBinding",
            "logging.buckets.get",
            "logging.buckets.list",
            "logging.buckets.listEffectiveTags",
            "logging.buckets.listTagBindings",
            "logging.buckets.undelete",
            "logging.buckets.update",
            "logging.exclusions.*",
            "logging.links.*",
            "logging.locations.*",
            "logging.logEntries.create",
            "logging.logEntries.route",
            "logging.logMetrics.*",
            "logging.logScopes.*",
            "logging.logServiceIndexes.list",
            "logging.logServices.list",
            "logging.logs.list",
            "logging.notificationRules.*",
            "logging.operations.*",
            "logging.settings.*",
            "logging.sinks.*",
            "logging.sqlAlerts.*",
            "logging.views.create",
            "logging.views.delete",
            "logging.views.get",
            "logging.views.getIamPolicy",
            "logging.views.list",
            "logging.views.update",
            "monitoring.alertPolicies.get",
            "monitoring.alertPolicies.list",
            "monitoring.alertPolicies.listEffectiveTags",
            "monitoring.alertPolicies.listTagBindings",
            "monitoring.dashboards.get",
            "monitoring.dashboards.list",
            "monitoring.groups.get",
            "monitoring.groups.list",
            "monitoring.metricDescriptors.create",
            "monitoring.metricDescriptors.get",
            "monitoring.metricDescriptors.list",
            "monitoring.monitoredResourceDescriptors.*",
            "monitoring.notificationChannelDescriptors.*",
            "monitoring.notificationChannels.get",
            "monitoring.notificationChannels.list",
            "monitoring.services.get",
            "monitoring.services.list",
            "monitoring.slos.get",
            "monitoring.slos.list",
            "monitoring.snoozes.get",
            "monitoring.snoozes.list",
            "monitoring.timeSeries.*",
            "monitoring.uptimeCheckConfigs.get",
            "monitoring.uptimeCheckConfigs.list",
            "networkconnectivity.internalRanges.*",
            "networkconnectivity.locations.*",
            "networkconnectivity.operations.*",
            "networkconnectivity.policyBasedRoutes.*",
            "networkconnectivity.regionalEndpoints.*",
            "networkconnectivity.serviceClasses.*",
            "networkconnectivity.serviceConnectionMaps.*",
            "networkconnectivity.serviceConnectionPolicies.*",
            "networkmanagement.connectivitytests.get",
            "networkmanagement.connectivitytests.list",
            "networksecurity.addressGroups.*",
            "networksecurity.authorizationPolicies.*",
            "networksecurity.authzPolicies.*",
            "networksecurity.clientTlsPolicies.*",
            "networksecurity.firewallEndpointAssociations.*",
            "networksecurity.firewallEndpoints.*",
            "networksecurity.gatewaySecurityPolicies.*",
            "networksecurity.gatewaySecurityPolicyRules.*",
            "networksecurity.locations.*",
            "networksecurity.operations.*",
            "networksecurity.securityProfileGroups.*",
            "networksecurity.securityProfiles.*",
            "networksecurity.serverTlsPolicies.*",
            "networksecurity.tlsInspectionPolicies.*",
            "networksecurity.urlLists.*",
            "networkservices.*",
            "observability.scopes.get",
            "opsconfigmonitoring.resourceMetadata.list",
            "orgpolicy.policy.get",
            "pubsub.*",
            "recommender.cloudsqlIdleInstanceRecommendations.*",
            "recommender.cloudsqlInstanceActivityInsights.*",
            "recommender.cloudsqlInstanceCpuUsageInsights.*",
            "recommender.cloudsqlInstanceDiskUsageTrendInsights.*",
            "recommender.cloudsqlInstanceMemoryUsageInsights.*",
            "recommender.cloudsqlInstanceOomProbabilityInsights.*",
            "recommender.cloudsqlInstanceOutOfDiskRecommendations.*",
            "recommender.cloudsqlInstancePerformanceInsights.*",
            "recommender.cloudsqlInstancePerformanceRecommendations.*",
            "recommender.cloudsqlInstanceReliabilityInsights.*",
            "recommender.cloudsqlInstanceReliabilityRecommendations.*",
            "recommender.cloudsqlInstanceSecurityInsights.*",
            "recommender.cloudsqlInstanceSecurityRecommendations.*",
            "recommender.cloudsqlInstanceUnderprovisionedCpuUsageInsights.*",
            "recommender.cloudsqlInstanceUnderprovisionedMemoryUsageInsights.*",
            "recommender.cloudsqlOverprovisionedInstanceRecommendations.*",
            "recommender.cloudsqlUnderProvisionedInstanceRecommendations.*",
            "recommender.containerDiagnosisInsights.*",
            "recommender.containerDiagnosisRecommendations.*",
            "recommender.iamPolicyInsights.*",
            "recommender.iamPolicyRecommendations.*",
            "recommender.locations.*",
            "recommender.networkAnalyzerGkeConnectivityInsights.*",
            "recommender.networkAnalyzerGkeIpAddressInsights.*",
            "recommender.storageBucketSoftDeleteInsights.*",
            "recommender.storageBucketSoftDeleteRecommendations.*",
            "resourcemanager.hierarchyNodes.listEffectiveTags",
            "resourcemanager.projects.get",
            "resourcemanager.projects.getIamPolicy",
            "resourcemanager.projects.list",
            "servicedirectory.namespaces.create",
            "servicedirectory.namespaces.delete",
            "servicedirectory.services.create",
            "servicedirectory.services.delete",
            "servicenetworking.operations.get",
            "servicenetworking.services.addPeering",
            "servicenetworking.services.createPeeredDnsDomain",
            "servicenetworking.services.deleteConnection",
            "servicenetworking.services.deletePeeredDnsDomain",
            "servicenetworking.services.disableVpcServiceControls",
            "servicenetworking.services.enableVpcServiceControls",
            "servicenetworking.services.get",
            "servicenetworking.services.listPeeredDnsDomains",
            "serviceusage.quotas.get",
            "serviceusage.services.get",
            "serviceusage.services.list",
            "stackdriver.projects.get",
            "stackdriver.resourceMetadata.list",
            "storage.anywhereCaches.*",
            "storage.bucketOperations.*",
            "storage.buckets.*",
            "storage.folders.*",
            "storage.intelligenceConfigs.*",
            "storage.managedFolders.*",
            "storage.multipartUploads.*",
            "storage.objects.*",
            "trafficdirector.*"
          ],
          "title": "Cloud Composer API Service Agent"
        },
        {
          "description": "Role containing all permissions required by Managed Instance Groups to create and manage instances.",
          "id": "roles/compute.instanceGroupManagerServiceAgent",
          "is_beta": false,
          "permissions": [
            "compute.addresses.*",
            "compute.disks.addResourcePolicies",
            "compute.disks.create",
            "compute.disks.createSnapshot",
            "compute.disks.createTagBinding",
            "compute.disks.delete",
            "compute.disks.deleteTagBinding",
            "compute.disks.get",
            "compute.disks.getIamPolicy",
            "compute.disks.list",
            "compute.disks.listEffectiveTags",
            "compute.disks.listTagBindings",
            "compute.disks.removeResourcePolicies",
            "compute.disks.resize",
            "compute.disks.setLabels",
            "compute.disks.startAsyncReplication",
            "compute.disks.stopAsyncReplication",
            "compute.disks.stopGroupAsyncReplication",
            "compute.disks.update",
            "compute.disks.use",
            "compute.disks.useReadOnly",
            "compute.globalAddresses.get",
            "compute.globalOperations.get",
            "compute.healthChecks.get",
            "compute.httpHealthChecks.get",
            "compute.httpsHealthChecks.get",
            "compute.images.useReadOnly",
            "compute.instanceGroups.update",
            "compute.instanceTemplates.useReadOnly",
            "compute.instances.addAccessConfig",
            "compute.instances.addNetworkInterface",
            "compute.instances.addResourcePolicies",
            "compute.instances.attachDisk",
            "compute.instances.create",
            "compute.instances.createTagBinding",
            "compute.instances.delete",
            "compute.instances.deleteAccessConfig",
            "compute.instances.deleteNetworkInterface",
            "compute.instances.deleteTagBinding",
            "compute.instances.detachDisk",
            "compute.instances.get",
            "compute.instances.getEffectiveFirewalls",
            "compute.instances.getGuestAttributes",
            "compute.instances.getIamPolicy",
            "compute.instances.getScreenshot",
            "compute.instances.getSerialPortOutput",
            "compute.instances.getShieldedInstanceIdentity",
            "compute.instances.getShieldedVmIdentity",
            "compute.instances.list",
            "compute.instances.listEffectiveTags",
            "compute.instances.listReferrers",
            "compute.instances.listTagBindings",
            "compute.instances.osAdminLogin",
            "compute.instances.osLogin",
            "compute.instances.pscInterfaceCreate",
            "compute.instances.removeResourcePolicies",
            "compute.instances.reset",
            "compute.instances.resume",
            "compute.instances.sendDiagnosticInterrupt",
            "compute.instances.setDeletionProtection",
            "compute.instances.setDiskAutoDelete",
            "compute.instances.setLabels",
            "compute.instances.setMachineResources",
            "compute.instances.setMachineType",
            "compute.instances.setMetadata",
            "compute.instances.setMinCpuPlatform",
            "compute.instances.setName",
            "compute.instances.setScheduling",
            "compute.instances.setSecurityPolicy",
            "compute.instances.setServiceAccount",
            "compute.instances.setShieldedInstanceIntegrityPolicy",
            "compute.instances.setShieldedVmIntegrityPolicy",
            "compute.instances.setTags",
            "compute.instances.simulateMaintenanceEvent",
            "compute.instances.start",
            "compute.instances.startWithEncryptionKey",
            "compute.instances.stop",
            "compute.instances.suspend",
            "compute.instances.update",
            "compute.instances.updateAccessConfig",
            "compute.instances.updateDisplayDevice",
            "compute.instances.updateNetworkInterface",
            "compute.instances.updateSecurity",
            "compute.instances.updateShieldedInstanceConfig",
            "compute.instances.updateShieldedVmConfig",
            "compute.instances.use",
            "compute.instances.useReadOnly",
            "compute.networks.use",
            "compute.networks.useExternalIp",
            "compute.regionOperations.get",
            "compute.resourcePolicies.use",
            "compute.snapshots.useReadOnly",
            "compute.subnetworks.use",
            "compute.subnetworks.useExternalIp",
            "compute.targetPools.addInstance",
            "compute.targetPools.removeInstance",
            "compute.zoneOperations.get",
            "iam.serviceAccounts.actAs"
          ],
          "title": "Instance Group Manager Service Agent"
        },
        {
          "description": "Gives Compute Engine Service Account access to assert service account authority. Includes access to service accounts.",
          "id": "roles/compute.serviceAgent",
          "is_beta": false,
          "permissions": [
            "cloudnotifications.activities.list",
            "compute.addresses.use",
            "compute.addresses.useInternal",
            "compute.disks.create",
            "compute.disks.createTagBinding",
            "compute.disks.setLabels",
            "compute.disks.use",
            "compute.disks.useReadOnly",
            "compute.images.useReadOnly",
            "compute.instanceGroupManagers.get",
            "compute.instanceTemplates.useReadOnly",
            "compute.instances.create",
            "compute.instances.createTagBinding",
            "compute.instances.setDeletionProtection",
            "compute.instances.setLabels",
            "compute.instances.setMetadata",
            "compute.instances.setServiceAccount",
            "compute.instances.setTags",
            "compute.instances.updateDisplayDevice",
            "compute.machineImages.useReadOnly",
            "compute.networks.use",
            "compute.networks.useExternalIp",
            "compute.resourcePolicies.use",
            "compute.snapshots.useReadOnly",
            "compute.subnetworks.use",
            "compute.subnetworks.useExternalIp",
            "iam.serviceAccounts.actAs",
            "iam.serviceAccounts.getAccessToken",
            "iam.serviceAccounts.getOpenIdToken",
            "iam.serviceAccounts.implicitDelegation",
            "iam.serviceAccounts.signJwt",
            "logging.logEntries.create",
            "monitoring.alertPolicies.get",
            "monitoring.alertPolicies.list",
            "monitoring.alertPolicies.listEffectiveTags",
            "monitoring.alertPolicies.listTagBindings",
            "monitoring.dashboards.get",
            "monitoring.dashboards.list",
            "monitoring.groups.get",
            "monitoring.groups.list",
            "monitoring.metricDescriptors.get",
            "monitoring.metricDescriptors.list",
            "monitoring.monitoredResourceDescriptors.*",
            "monitoring.notificationChannelDescriptors.*",
            "monitoring.notificationChannels.get",
            "monitoring.notificationChannels.list",
            "monitoring.services.get",
            "monitoring.services.list",
            "monitoring.slos.get",
            "monitoring.slos.list",
            "monitoring.snoozes.get",
            "monitoring.snoozes.list",
            "monitoring.timeSeries.list",
            "monitoring.uptimeCheckConfigs.get",
            "monitoring.uptimeCheckConfigs.list",
            "opsconfigmonitoring.resourceMetadata.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "stackdriver.projects.get",
            "stackdriver.resourceMetadata.list",
            "storage.objects.create",
            "storage.objects.get",
            "storage.objects.list",
            "storage.objects.update"
          ],
          "title": "Compute Engine Service Agent"
        },
        {
          "description": "Gives the Config Delivery service account permission to manage resources",
          "id": "roles/configdelivery.serviceAgent",
          "is_beta": false,
          "permissions": [
            "artifactregistry.dockerimages.*",
            "artifactregistry.projectsettings.get",
            "artifactregistry.repositories.create",
            "artifactregistry.repositories.downloadArtifacts",
            "artifactregistry.repositories.get",
            "artifactregistry.repositories.getIamPolicy",
            "artifactregistry.repositories.list",
            "artifactregistry.repositories.listEffectiveTags",
            "artifactregistry.repositories.listTagBindings",
            "artifactregistry.repositories.setIamPolicy",
            "artifactregistry.repositories.uploadArtifacts",
            "artifactregistry.tags.*",
            "artifactregistry.versions.delete",
            "artifactregistry.versions.get",
            "artifactregistry.versions.list",
            "cloudbuild.builds.create",
            "cloudbuild.builds.get",
            "cloudbuild.builds.list",
            "cloudbuild.builds.update",
            "cloudbuild.repositories.get",
            "container.customResourceDefinitions.get",
            "container.customResourceDefinitions.list",
            "container.serviceAccounts.get",
            "container.serviceAccounts.list",
            "container.thirdPartyObjects.*",
            "gkehub.gateway.delete",
            "gkehub.gateway.generateCredentials",
            "gkehub.gateway.get",
            "gkehub.gateway.patch",
            "gkehub.gateway.post",
            "gkehub.gateway.put",
            "gkehub.memberships.get",
            "iam.serviceAccounts.actAs"
          ],
          "title": "Config Delivery Service Agent"
        },
        {
          "description": "Grants Connectors Platform service account to manage customer resources",
          "id": "roles/connectors.serviceAgent",
          "is_beta": false,
          "permissions": [
            "connectors.actions.*",
            "connectors.connections.get",
            "connectors.connections.getConnectionSchemaMetadata",
            "connectors.connections.list",
            "connectors.connectors.*",
            "connectors.customConnectorVersions.get",
            "connectors.customConnectorVersions.list",
            "connectors.customConnectors.get",
            "connectors.customConnectors.list",
            "connectors.endpointAttachments.get",
            "connectors.endpointAttachments.list",
            "connectors.entities.get",
            "connectors.entityTypes.list",
            "connectors.eventSubscriptions.get",
            "connectors.eventSubscriptions.list",
            "connectors.eventtypes.*",
            "connectors.locations.*",
            "connectors.managedZones.get",
            "connectors.managedZones.list",
            "connectors.providers.*",
            "connectors.runtimeconfig.get",
            "iam.serviceAccounts.getAccessToken",
            "iam.serviceAccounts.getOpenIdToken",
            "iam.serviceAccounts.implicitDelegation",
            "monitoring.metricDescriptors.create",
            "monitoring.metricDescriptors.get",
            "monitoring.metricDescriptors.list",
            "monitoring.monitoredResourceDescriptors.*",
            "monitoring.timeSeries.create"
          ],
          "title": "Connectors Platform Service Agent"
        },
        {
          "description": "Allows Contact Center AI to read and write APIs including BigQuery, Dialogflow, and Storage.",
          "id": "roles/contactcenterinsights.serviceAgent",
          "is_beta": false,
          "permissions": [
            "bigquery.datasets.create",
            "bigquery.datasets.get",
            "bigquery.jobs.create",
            "bigquery.jobs.get",
            "bigquery.tables.create",
            "bigquery.tables.get",
            "bigquery.tables.update",
            "bigquery.tables.updateData",
            "datalabeling.dataitems.*",
            "datalabeling.datasets.create",
            "datalabeling.datasets.delete",
            "datalabeling.datasets.export",
            "datalabeling.datasets.get",
            "datalabeling.datasets.import",
            "datalabeling.operations.get",
            "datalabeling.operations.list",
            "dialogflow.conversationDatasets.*",
            "dialogflow.conversationModels.*",
            "dialogflow.conversationProfiles.get",
            "dialogflow.documents.*",
            "dialogflow.generators.get",
            "dialogflow.operations.get",
            "dialogflow.participants.suggest",
            "dialogflow.sessions.detectIntent",
            "dlp.deidentifyTemplates.get",
            "dlp.deidentifyTemplates.list",
            "dlp.inspectTemplates.get",
            "dlp.inspectTemplates.list",
            "dlp.kms.encrypt",
            "dlp.locations.*",
            "pubsub.topics.get",
            "pubsub.topics.publish",
            "serviceusage.services.use",
            "speech.customClasses.get",
            "speech.operations.get",
            "speech.phraseSets.get",
            "speech.recognizers.create",
            "speech.recognizers.get",
            "speech.recognizers.recognize",
            "speech.recognizers.update",
            "storage.objects.create",
            "storage.objects.get",
            "storage.objects.list",
            "storage.objects.update"
          ],
          "title": "Contact Center AI Insights Service Agent"
        },
        {
          "description": "Minimal set of permissions required by a GKE node to support standard capabilities such as logging and monitoring. Replaces the container.nodeServiceAgent role with a reduced permission set.",
          "id": "roles/container.defaultNodeServiceAgent",
          "is_beta": false,
          "permissions": [
            "autoscaling.sites.writeMetrics",
            "logging.logEntries.create",
            "monitoring.metricDescriptors.create",
            "monitoring.metricDescriptors.list",
            "monitoring.timeSeries.*",
            "serviceusage.services.use"
          ],
          "title": "Kubernetes Engine Default Node Service Agent"
        },
        {
          "description": "Minimal set of permission required by a GKE node to support standard capabilities such as logging and monitoring export, and image pulls.",
          "id": "roles/container.nodeServiceAgent",
          "is_beta": false,
          "permissions": [
            "autoscaling.sites.writeMetrics",
            "logging.logEntries.create",
            "monitoring.metricDescriptors.create",
            "monitoring.metricDescriptors.list",
            "monitoring.timeSeries.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "serviceusage.services.use",
            "storage.objects.get",
            "storage.objects.list"
          ],
          "title": "[Deprecated] Kubernetes Engine Node Service Agent"
        },
        {
          "description": "Gives Kubernetes Engine account access to manage cluster resources. Includes access to service accounts.",
          "id": "roles/container.serviceAgent",
          "is_beta": false,
          "permissions": [
            "autoscaling.sites.readRecommendations",
            "autoscaling.sites.writeMetrics",
            "autoscaling.sites.writeState",
            "backupdr.backupPlanAssociations.createForComputeInstance",
            "backupdr.backupPlanAssociations.deleteForComputeInstance",
            "backupdr.backupPlanAssociations.list",
            "backupdr.backupPlanAssociations.triggerBackupForComputeInstance",
            "backupdr.backupPlans.get",
            "backupdr.backupPlans.list",
            "backupdr.backupPlans.useForComputeInstance",
            "backupdr.backupVaults.get",
            "backupdr.backupVaults.list",
            "backupdr.locations.list",
            "backupdr.operations.get",
            "backupdr.operations.list",
            "backupdr.serviceConfig.initialize",
            "bigquery.datasets.create",
            "bigquery.datasets.get",
            "bigquery.tables.create",
            "bigquery.tables.get",
            "bigquery.tables.update",
            "bigquery.tables.updateData",
            "binaryauthorization.policy.evaluatePolicy",
            "certificatemanager.certissuanceconfigs.create",
            "certificatemanager.certissuanceconfigs.delete",
            "certificatemanager.certissuanceconfigs.get",
            "certificatemanager.certissuanceconfigs.list",
            "certificatemanager.certissuanceconfigs.listEffectiveTags",
            "certificatemanager.certissuanceconfigs.listTagBindings",
            "certificatemanager.certissuanceconfigs.update",
            "certificatemanager.certissuanceconfigs.use",
            "certificatemanager.certmapentries.create",
            "certificatemanager.certmapentries.delete",
            "certificatemanager.certmapentries.get",
            "certificatemanager.certmapentries.list",
            "certificatemanager.certmapentries.listEffectiveTags",
            "certificatemanager.certmapentries.listTagBindings",
            "certificatemanager.certmapentries.update",
            "certificatemanager.certmaps.create",
            "certificatemanager.certmaps.delete",
            "certificatemanager.certmaps.get",
            "certificatemanager.certmaps.list",
            "certificatemanager.certmaps.listEffectiveTags",
            "certificatemanager.certmaps.listTagBindings",
            "certificatemanager.certmaps.update",
            "certificatemanager.certmaps.use",
            "certificatemanager.certs.create",
            "certificatemanager.certs.delete",
            "certificatemanager.certs.get",
            "certificatemanager.certs.list",
            "certificatemanager.certs.listEffectiveTags",
            "certificatemanager.certs.listTagBindings",
            "certificatemanager.certs.update",
            "certificatemanager.certs.use",
            "certificatemanager.dnsauthorizations.create",
            "certificatemanager.dnsauthorizations.delete",
            "certificatemanager.dnsauthorizations.get",
            "certificatemanager.dnsauthorizations.list",
            "certificatemanager.dnsauthorizations.listEffectiveTags",
            "certificatemanager.dnsauthorizations.listTagBindings",
            "certificatemanager.dnsauthorizations.update",
            "certificatemanager.dnsauthorizations.use",
            "compute.acceleratorTypes.*",
            "compute.addresses.*",
            "compute.autoscalers.*",
            "compute.backendBuckets.*",
            "compute.backendServices.*",
            "compute.crossSiteNetworks.*",
            "compute.diskSettings.*",
            "compute.diskTypes.*",
            "compute.disks.*",
            "compute.externalVpnGateways.*",
            "compute.firewallPolicies.*",
            "compute.firewalls.*",
            "compute.forwardingRules.*",
            "compute.globalAddresses.*",
            "compute.globalForwardingRules.*",
            "compute.globalNetworkEndpointGroups.*",
            "compute.globalOperations.get",
            "compute.globalOperations.list",
            "compute.globalPublicDelegatedPrefixes.delete",
            "compute.globalPublicDelegatedPrefixes.get",
            "compute.globalPublicDelegatedPrefixes.list",
            "compute.globalPublicDelegatedPrefixes.updatePolicy",
            "compute.healthChecks.*",
            "compute.httpHealthChecks.*",
            "compute.httpsHealthChecks.*",
            "compute.images.*",
            "compute.instanceGroupManagers.*",
            "compute.instanceGroups.*",
            "compute.instanceSettings.*",
            "compute.instanceTemplates.*",
            "compute.instances.*",
            "compute.instantSnapshots.*",
            "compute.interconnectAttachments.*",
            "compute.interconnectLocations.*",
            "compute.interconnectRemoteLocations.*",
            "compute.interconnects.*",
            "compute.licenseCodes.*",
            "compute.licenses.*",
            "compute.machineImages.*",
            "compute.machineTypes.*",
            "compute.multiMig.*",
            "compute.networkAttachments.*",
            "compute.networkEndpointGroups.*",
            "compute.networkProfiles.*",
            "compute.networks.*",
            "compute.nodeGroups.get",
            "compute.packetMirrorings.*",
            "compute.projects.get",
            "compute.projects.setCommonInstanceMetadata",
            "compute.publicDelegatedPrefixes.delete",
            "compute.publicDelegatedPrefixes.get",
            "compute.publicDelegatedPrefixes.list",
            "compute.publicDelegatedPrefixes.listEffectiveTags",
            "compute.publicDelegatedPrefixes.listTagBindings",
            "compute.publicDelegatedPrefixes.update",
            "compute.publicDelegatedPrefixes.updatePolicy",
            "compute.regionBackendServices.*",
            "compute.regionFirewallPolicies.*",
            "compute.regionHealthCheckServices.*",
            "compute.regionHealthChecks.*",
            "compute.regionNetworkEndpointGroups.*",
            "compute.regionNotificationEndpoints.*",
            "compute.regionOperations.get",
            "compute.regionOperations.list",
            "compute.regionSecurityPolicies.*",
            "compute.regionSslCertificates.*",
            "compute.regionSslPolicies.*",
            "compute.regionTargetHttpProxies.*",
            "compute.regionTargetHttpsProxies.*",
            "compute.regionTargetTcpProxies.*",
            "compute.regionUrlMaps.*",
            "compute.regions.*",
            "compute.reservationBlocks.get",
            "compute.reservationBlocks.list",
            "compute.reservations.get",
            "compute.reservations.list",
            "compute.resourcePolicies.*",
            "compute.routers.*",
            "compute.routes.*",
            "compute.securityPolicies.*",
            "compute.serviceAttachments.*",
            "compute.snapshots.*",
            "compute.spotAssistants.get",
            "compute.sslCertificates.*",
            "compute.sslPolicies.*",
            "compute.storagePools.*",
            "compute.subnetworks.*",
            "compute.targetGrpcProxies.*",
            "compute.targetHttpProxies.*",
            "compute.targetHttpsProxies.*",
            "compute.targetInstances.*",
            "compute.targetPools.*",
            "compute.targetSslProxies.*",
            "compute.targetTcpProxies.*",
            "compute.targetVpnGateways.*",
            "compute.urlMaps.*",
            "compute.vpnGateways.*",
            "compute.vpnTunnels.*",
            "compute.wireGroups.*",
            "compute.zoneOperations.get",
            "compute.zoneOperations.list",
            "compute.zones.*",
            "container.*",
            "dns.changes.*",
            "dns.dnsKeys.*",
            "dns.gkeClusters.*",
            "dns.managedZoneOperations.*",
            "dns.managedZones.create",
            "dns.managedZones.delete",
            "dns.managedZones.get",
            "dns.managedZones.getIamPolicy",
            "dns.managedZones.list",
            "dns.managedZones.update",
            "dns.networks.*",
            "dns.policies.*",
            "dns.projects.get",
            "dns.resourceRecordSets.*",
            "dns.responsePolicies.*",
            "dns.responsePolicyRules.*",
            "file.*",
            "iam.serviceAccounts.actAs",
            "iam.serviceAccounts.get",
            "logging.logEntries.create",
            "monitoring.metricDescriptors.create",
            "monitoring.metricDescriptors.get",
            "monitoring.metricDescriptors.list",
            "monitoring.timeSeries.*",
            "networkconnectivity.internalRanges.*",
            "networkconnectivity.locations.*",
            "networkconnectivity.operations.*",
            "networkconnectivity.policyBasedRoutes.*",
            "networkconnectivity.regionalEndpoints.*",
            "networkconnectivity.serviceClasses.*",
            "networkconnectivity.serviceConnectionMaps.*",
            "networkconnectivity.serviceConnectionPolicies.*",
            "networkmanagement.connectivitytests.get",
            "networkmanagement.connectivitytests.list",
            "networksecurity.addressGroups.*",
            "networksecurity.authorizationPolicies.*",
            "networksecurity.authzPolicies.*",
            "networksecurity.clientTlsPolicies.*",
            "networksecurity.firewallEndpointAssociations.*",
            "networksecurity.firewallEndpoints.*",
            "networksecurity.gatewaySecurityPolicies.*",
            "networksecurity.gatewaySecurityPolicyRules.*",
            "networksecurity.locations.*",
            "networksecurity.operations.*",
            "networksecurity.securityProfileGroups.*",
            "networksecurity.securityProfiles.*",
            "networksecurity.serverTlsPolicies.*",
            "networksecurity.tlsInspectionPolicies.*",
            "networksecurity.urlLists.*",
            "networkservices.*",
            "parallelstore.instances.create",
            "parallelstore.instances.delete",
            "parallelstore.instances.get",
            "parallelstore.instances.importData",
            "parallelstore.instances.list",
            "parallelstore.instances.update",
            "parallelstore.locations.*",
            "parallelstore.operations.*",
            "pubsub.topics.create",
            "pubsub.topics.get",
            "pubsub.topics.publish",
            "recommender.containerDiagnosisInsights.*",
            "recommender.containerDiagnosisRecommendations.*",
            "recommender.locations.*",
            "recommender.networkAnalyzerGkeConnectivityInsights.*",
            "recommender.networkAnalyzerGkeIpAddressInsights.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "servicedirectory.namespaces.create",
            "servicedirectory.namespaces.delete",
            "servicedirectory.services.create",
            "servicedirectory.services.delete",
            "servicenetworking.operations.get",
            "servicenetworking.services.addPeering",
            "servicenetworking.services.createPeeredDnsDomain",
            "servicenetworking.services.deleteConnection",
            "servicenetworking.services.deletePeeredDnsDomain",
            "servicenetworking.services.disableVpcServiceControls",
            "servicenetworking.services.enableVpcServiceControls",
            "servicenetworking.services.get",
            "servicenetworking.services.listPeeredDnsDomains",
            "serviceusage.quotas.get",
            "serviceusage.services.get",
            "serviceusage.services.list",
            "serviceusage.services.use",
            "tpu.locations.*",
            "tpu.nodes.create",
            "tpu.nodes.delete",
            "tpu.nodes.get",
            "tpu.nodes.list",
            "tpu.operations.*",
            "trafficdirector.*"
          ],
          "title": "Kubernetes Engine Service Agent"
        },
        {
          "description": "Gives Container Analysis API the access it needs to function",
          "id": "roles/containeranalysis.ServiceAgent",
          "is_beta": false,
          "permissions": [
            "artifactregistry.attachments.get",
            "artifactregistry.attachments.list",
            "artifactregistry.dockerimages.*",
            "artifactregistry.files.download",
            "artifactregistry.files.get",
            "artifactregistry.files.list",
            "artifactregistry.locations.*",
            "artifactregistry.mavenartifacts.*",
            "artifactregistry.npmpackages.*",
            "artifactregistry.packages.get",
            "artifactregistry.packages.list",
            "artifactregistry.projectsettings.get",
            "artifactregistry.pythonpackages.*",
            "artifactregistry.repositories.downloadArtifacts",
            "artifactregistry.repositories.get",
            "artifactregistry.repositories.list",
            "artifactregistry.repositories.listEffectiveTags",
            "artifactregistry.repositories.listTagBindings",
            "artifactregistry.repositories.readViaVirtualRepository",
            "artifactregistry.rules.get",
            "artifactregistry.rules.list",
            "artifactregistry.tags.get",
            "artifactregistry.tags.list",
            "artifactregistry.versions.get",
            "artifactregistry.versions.list",
            "containeranalysis.notes.list",
            "containeranalysis.occurrences.create",
            "containeranalysis.occurrences.delete",
            "containeranalysis.occurrences.get",
            "containeranalysis.occurrences.list",
            "containeranalysis.occurrences.update",
            "pubsub.schemas.attach",
            "pubsub.schemas.commit",
            "pubsub.schemas.create",
            "pubsub.schemas.delete",
            "pubsub.schemas.get",
            "pubsub.schemas.list",
            "pubsub.schemas.listRevisions",
            "pubsub.schemas.rollback",
            "pubsub.schemas.validate",
            "pubsub.snapshots.create",
            "pubsub.snapshots.delete",
            "pubsub.snapshots.get",
            "pubsub.snapshots.list",
            "pubsub.snapshots.seek",
            "pubsub.snapshots.update",
            "pubsub.subscriptions.consume",
            "pubsub.subscriptions.create",
            "pubsub.subscriptions.delete",
            "pubsub.subscriptions.get",
            "pubsub.subscriptions.list",
            "pubsub.subscriptions.update",
            "pubsub.topics.attachSubscription",
            "pubsub.topics.create",
            "pubsub.topics.delete",
            "pubsub.topics.detachSubscription",
            "pubsub.topics.get",
            "pubsub.topics.list",
            "pubsub.topics.publish",
            "pubsub.topics.update",
            "pubsub.topics.updateTag",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "serviceusage.quotas.get",
            "serviceusage.services.get",
            "serviceusage.services.list",
            "storage.objects.get",
            "storage.objects.list"
          ],
          "title": "Container Analysis Service Agent"
        },
        {
          "description": "Access for Container Registry",
          "id": "roles/containerregistry.ServiceAgent",
          "is_beta": false,
          "permissions": [
            "pubsub.topics.publish",
            "storage.objects.get",
            "storage.objects.getIamPolicy",
            "storage.objects.list"
          ],
          "title": "Container Registry Service Agent"
        },
        {
          "description": "Gives Container Scanner the access it needs to analyze containers for vulnerabilities and create occurrences using the Container Analysis API",
          "id": "roles/containerscanning.ServiceAgent",
          "is_beta": false,
          "permissions": [
            "artifactregistry.attachments.get",
            "artifactregistry.attachments.list",
            "artifactregistry.dockerimages.*",
            "artifactregistry.files.download",
            "artifactregistry.files.get",
            "artifactregistry.files.list",
            "artifactregistry.locations.*",
            "artifactregistry.mavenartifacts.*",
            "artifactregistry.npmpackages.*",
            "artifactregistry.packages.get",
            "artifactregistry.packages.list",
            "artifactregistry.projectsettings.get",
            "artifactregistry.pythonpackages.*",
            "artifactregistry.repositories.downloadArtifacts",
            "artifactregistry.repositories.get",
            "artifactregistry.repositories.list",
            "artifactregistry.repositories.listEffectiveTags",
            "artifactregistry.repositories.listTagBindings",
            "artifactregistry.repositories.readViaVirtualRepository",
            "artifactregistry.rules.get",
            "artifactregistry.rules.list",
            "artifactregistry.tags.get",
            "artifactregistry.tags.list",
            "artifactregistry.versions.get",
            "artifactregistry.versions.list",
            "containeranalysis.notes.list",
            "containeranalysis.occurrences.create",
            "containeranalysis.occurrences.delete",
            "containeranalysis.occurrences.get",
            "containeranalysis.occurrences.list",
            "containeranalysis.occurrences.update",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "storage.objects.get",
            "storage.objects.list"
          ],
          "title": "Container Scanner Service Agent"
        },
        {
          "description": "Gives Container Threat Detection service account access to enable/disable Container Threat Detection and manage the Container Threat Detection Agent on Google Kubernetes Engine clusters.",
          "id": "roles/containerthreatdetection.serviceAgent",
          "is_beta": false,
          "permissions": [
            "container.apiServices.get",
            "container.apiServices.getStatus",
            "container.apiServices.list",
            "container.auditSinks.get",
            "container.auditSinks.list",
            "container.backendConfigs.get",
            "container.backendConfigs.list",
            "container.bindings.get",
            "container.bindings.list",
            "container.certificateSigningRequests.get",
            "container.certificateSigningRequests.getStatus",
            "container.certificateSigningRequests.list",
            "container.clusterRoleBindings.*",
            "container.clusterRoles.*",
            "container.clusters.connect",
            "container.clusters.get",
            "container.clusters.list",
            "container.componentStatuses.*",
            "container.configMaps.get",
            "container.configMaps.list",
            "container.controllerRevisions.get",
            "container.controllerRevisions.list",
            "container.cronJobs.get",
            "container.cronJobs.getStatus",
            "container.cronJobs.list",
            "container.csiDrivers.get",
            "container.csiDrivers.list",
            "container.csiNodeInfos.get",
            "container.csiNodeInfos.list",
            "container.csiNodes.get",
            "container.csiNodes.list",
            "container.customResourceDefinitions.create",
            "container.customResourceDefinitions.delete",
            "container.customResourceDefinitions.get",
            "container.customResourceDefinitions.getStatus",
            "container.customResourceDefinitions.list",
            "container.customResourceDefinitions.update",
            "container.daemonSets.*",
            "container.deployments.get",
            "container.deployments.getScale",
            "container.deployments.getStatus",
            "container.deployments.list",
            "container.endpointSlices.get",
            "container.endpointSlices.list",
            "container.endpoints.get",
            "container.endpoints.list",
            "container.events.get",
            "container.events.list",
            "container.frontendConfigs.get",
            "container.frontendConfigs.list",
            "container.horizontalPodAutoscalers.get",
            "container.horizontalPodAutoscalers.getStatus",
            "container.horizontalPodAutoscalers.list",
            "container.ingresses.get",
            "container.ingresses.getStatus",
            "container.ingresses.list",
            "container.initializerConfigurations.get",
            "container.initializerConfigurations.list",
            "container.jobs.get",
            "container.jobs.getStatus",
            "container.jobs.list",
            "container.leases.get",
            "container.leases.list",
            "container.limitRanges.get",
            "container.limitRanges.list",
            "container.managedCertificates.get",
            "container.managedCertificates.list",
            "container.mutatingWebhookConfigurations.get",
            "container.mutatingWebhookConfigurations.list",
            "container.namespaces.get",
            "container.namespaces.getStatus",
            "container.namespaces.list",
            "container.networkPolicies.get",
            "container.networkPolicies.list",
            "container.networkPolicies.update",
            "container.nodes.get",
            "container.nodes.getStatus",
            "container.nodes.list",
            "container.operations.*",
            "container.persistentVolumeClaims.get",
            "container.persistentVolumeClaims.getStatus",
            "container.persistentVolumeClaims.list",
            "container.persistentVolumes.get",
            "container.persistentVolumes.getStatus",
            "container.persistentVolumes.list",
            "container.petSets.get",
            "container.petSets.list",
            "container.podDisruptionBudgets.get",
            "container.podDisruptionBudgets.getStatus",
            "container.podDisruptionBudgets.list",
            "container.podPresets.get",
            "container.podPresets.list",
            "container.podSecurityPolicies.get",
            "container.podSecurityPolicies.list",
            "container.podTemplates.get",
            "container.podTemplates.list",
            "container.pods.attach",
            "container.pods.create",
            "container.pods.delete",
            "container.pods.exec",
            "container.pods.get",
            "container.pods.getLogs",
            "container.pods.getStatus",
            "container.pods.list",
            "container.pods.portForward",
            "container.pods.update",
            "container.priorityClasses.get",
            "container.priorityClasses.list",
            "container.replicaSets.get",
            "container.replicaSets.getScale",
            "container.replicaSets.getStatus",
            "container.replicaSets.list",
            "container.replicationControllers.get",
            "container.replicationControllers.getScale",
            "container.replicationControllers.getStatus",
            "container.replicationControllers.list",
            "container.resourceQuotas.get",
            "container.resourceQuotas.getStatus",
            "container.resourceQuotas.list",
            "container.roleBindings.*",
            "container.roles.*",
            "container.runtimeClasses.get",
            "container.runtimeClasses.list",
            "container.scheduledJobs.get",
            "container.scheduledJobs.list",
            "container.secrets.create",
            "container.secrets.delete",
            "container.secrets.list",
            "container.secrets.update",
            "container.serviceAccounts.create",
            "container.serviceAccounts.delete",
            "container.serviceAccounts.get",
            "container.serviceAccounts.list",
            "container.serviceAccounts.update",
            "container.services.get",
            "container.services.getStatus",
            "container.services.list",
            "container.statefulSets.get",
            "container.statefulSets.getScale",
            "container.statefulSets.getStatus",
            "container.statefulSets.list",
            "container.storageClasses.get",
            "container.storageClasses.list",
            "container.storageStates.get",
            "container.storageStates.getStatus",
            "container.storageStates.list",
            "container.storageVersionMigrations.get",
            "container.storageVersionMigrations.getStatus",
            "container.storageVersionMigrations.list",
            "container.thirdPartyObjects.get",
            "container.thirdPartyObjects.list",
            "container.thirdPartyResources.get",
            "container.thirdPartyResources.list",
            "container.tokenReviews.create",
            "container.updateInfos.get",
            "container.updateInfos.list",
            "container.validatingWebhookConfigurations.get",
            "container.validatingWebhookConfigurations.list",
            "container.volumeAttachments.get",
            "container.volumeAttachments.getStatus",
            "container.volumeAttachments.list",
            "container.volumeSnapshotClasses.get",
            "container.volumeSnapshotClasses.list",
            "container.volumeSnapshotContents.get",
            "container.volumeSnapshotContents.getStatus",
            "container.volumeSnapshotContents.list",
            "container.volumeSnapshots.get",
            "container.volumeSnapshots.list",
            "recommender.containerDiagnosisInsights.get",
            "recommender.containerDiagnosisInsights.list",
            "recommender.containerDiagnosisRecommendations.get",
            "recommender.containerDiagnosisRecommendations.list",
            "recommender.locations.*",
            "recommender.networkAnalyzerGkeConnectivityInsights.get",
            "recommender.networkAnalyzerGkeConnectivityInsights.list",
            "recommender.networkAnalyzerGkeIpAddressInsights.get",
            "recommender.networkAnalyzerGkeIpAddressInsights.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Container Threat Detection Service Agent"
        },
        {
          "description": "Gives the Content Warehouse service account to manage customer resources",
          "id": "roles/contentwarehouse.serviceAgent",
          "is_beta": false,
          "permissions": [
            "cloudfunctions.functions.invoke",
            "documentai.datasets.createDocuments",
            "documentai.processors.get",
            "documentai.processors.processBatch",
            "pubsub.topics.publish",
            "pubsublite.topics.publish",
            "storage.buckets.get",
            "storage.buckets.list",
            "storage.objects.create",
            "storage.objects.delete",
            "storage.objects.get",
            "storage.objects.list",
            "storage.objects.update"
          ],
          "title": "Content Warehouse Service Agent"
        },
        {
          "description": "Gives Data Connectors service agent permission to access the virtual private cloud",
          "id": "roles/dataconnectors.serviceAgent",
          "is_beta": false,
          "permissions": [
            "compute.globalOperations.get",
            "compute.networks.access",
            "vpcaccess.connectors.get",
            "vpcaccess.connectors.use"
          ],
          "title": "Data Connectors Service Agent"
        },
        {
          "description": "Gives Cloud Dataflow service account access to managed resources. Includes access to service accounts.",
          "id": "roles/dataflow.serviceAgent",
          "is_beta": false,
          "permissions": [
            "backupdr.backupPlanAssociations.createForComputeInstance",
            "backupdr.backupPlanAssociations.deleteForComputeInstance",
            "backupdr.backupPlanAssociations.list",
            "backupdr.backupPlanAssociations.triggerBackupForComputeInstance",
            "backupdr.backupPlans.get",
            "backupdr.backupPlans.list",
            "backupdr.backupPlans.useForComputeInstance",
            "backupdr.backupVaults.get",
            "backupdr.backupVaults.list",
            "backupdr.locations.list",
            "backupdr.operations.get",
            "backupdr.operations.list",
            "backupdr.serviceConfig.initialize",
            "bigquery.bireservations.*",
            "bigquery.capacityCommitments.*",
            "bigquery.config.*",
            "bigquery.connections.*",
            "bigquery.dataPolicies.create",
            "bigquery.dataPolicies.delete",
            "bigquery.dataPolicies.get",
            "bigquery.dataPolicies.getIamPolicy",
            "bigquery.dataPolicies.list",
            "bigquery.dataPolicies.setIamPolicy",
            "bigquery.dataPolicies.update",
            "bigquery.datasets.*",
            "bigquery.jobs.*",
            "bigquery.models.*",
            "bigquery.readsessions.*",
            "bigquery.reservationAssignments.*",
            "bigquery.reservations.*",
            "bigquery.routines.*",
            "bigquery.rowAccessPolicies.create",
            "bigquery.rowAccessPolicies.delete",
            "bigquery.rowAccessPolicies.getIamPolicy",
            "bigquery.rowAccessPolicies.list",
            "bigquery.rowAccessPolicies.overrideTimeTravelRestrictions",
            "bigquery.rowAccessPolicies.setIamPolicy",
            "bigquery.rowAccessPolicies.update",
            "bigquery.savedqueries.*",
            "bigquery.tables.*",
            "bigquery.transfers.*",
            "bigquerymigration.translation.translate",
            "clouddebugger.breakpoints.list",
            "clouddebugger.breakpoints.listActive",
            "clouddebugger.breakpoints.update",
            "clouddebugger.debuggees.create",
            "cloudnotifications.activities.list",
            "compute.acceleratorTypes.*",
            "compute.addresses.*",
            "compute.autoscalers.*",
            "compute.backendBuckets.*",
            "compute.backendServices.*",
            "compute.crossSiteNetworks.*",
            "compute.diskSettings.*",
            "compute.diskTypes.*",
            "compute.disks.*",
            "compute.externalVpnGateways.*",
            "compute.firewallPolicies.get",
            "compute.firewallPolicies.list",
            "compute.firewallPolicies.listEffectiveTags",
            "compute.firewallPolicies.listTagBindings",
            "compute.firewallPolicies.use",
            "compute.firewalls.get",
            "compute.firewalls.list",
            "compute.firewalls.listEffectiveTags",
            "compute.firewalls.listTagBindings",
            "compute.forwardingRules.*",
            "compute.globalAddresses.*",
            "compute.globalForwardingRules.*",
            "compute.globalNetworkEndpointGroups.*",
            "compute.globalOperations.get",
            "compute.globalOperations.list",
            "compute.globalPublicDelegatedPrefixes.delete",
            "compute.globalPublicDelegatedPrefixes.get",
            "compute.globalPublicDelegatedPrefixes.list",
            "compute.globalPublicDelegatedPrefixes.updatePolicy",
            "compute.healthChecks.*",
            "compute.httpHealthChecks.*",
            "compute.httpsHealthChecks.*",
            "compute.images.*",
            "compute.instanceGroupManagers.*",
            "compute.instanceGroups.*",
            "compute.instanceSettings.get",
            "compute.instanceTemplates.*",
            "compute.instances.*",
            "compute.instantSnapshots.*",
            "compute.interconnectAttachments.*",
            "compute.interconnectLocations.*",
            "compute.interconnectRemoteLocations.*",
            "compute.interconnects.*",
            "compute.licenseCodes.*",
            "compute.licenses.*",
            "compute.machineImages.*",
            "compute.machineTypes.*",
            "compute.multiMig.*",
            "compute.networkAttachments.*",
            "compute.networkEndpointGroups.*",
            "compute.networkProfiles.*",
            "compute.networks.*",
            "compute.packetMirrorings.get",
            "compute.packetMirrorings.list",
            "compute.packetMirrorings.listEffectiveTags",
            "compute.packetMirrorings.listTagBindings",
            "compute.projects.get",
            "compute.publicDelegatedPrefixes.delete",
            "compute.publicDelegatedPrefixes.get",
            "compute.publicDelegatedPrefixes.list",
            "compute.publicDelegatedPrefixes.listEffectiveTags",
            "compute.publicDelegatedPrefixes.listTagBindings",
            "compute.publicDelegatedPrefixes.update",
            "compute.publicDelegatedPrefixes.updatePolicy",
            "compute.regionBackendServices.*",
            "compute.regionFirewallPolicies.get",
            "compute.regionFirewallPolicies.list",
            "compute.regionFirewallPolicies.listEffectiveTags",
            "compute.regionFirewallPolicies.listTagBindings",
            "compute.regionFirewallPolicies.use",
            "compute.regionHealthCheckServices.*",
            "compute.regionHealthChecks.*",
            "compute.regionNetworkEndpointGroups.*",
            "compute.regionNotificationEndpoints.*",
            "compute.regionOperations.get",
            "compute.regionOperations.list",
            "compute.regionSecurityPolicies.get",
            "compute.regionSecurityPolicies.list",
            "compute.regionSecurityPolicies.listEffectiveTags",
            "compute.regionSecurityPolicies.listTagBindings",
            "compute.regionSecurityPolicies.use",
            "compute.regionSslCertificates.get",
            "compute.regionSslCertificates.list",
            "compute.regionSslCertificates.listEffectiveTags",
            "compute.regionSslCertificates.listTagBindings",
            "compute.regionSslPolicies.*",
            "compute.regionTargetHttpProxies.*",
            "compute.regionTargetHttpsProxies.*",
            "compute.regionTargetTcpProxies.*",
            "compute.regionUrlMaps.*",
            "compute.regions.*",
            "compute.reservationBlocks.get",
            "compute.reservationBlocks.list",
            "compute.reservations.get",
            "compute.reservations.list",
            "compute.resourcePolicies.*",
            "compute.routers.*",
            "compute.routes.*",
            "compute.securityPolicies.get",
            "compute.securityPolicies.list",
            "compute.securityPolicies.listEffectiveTags",
            "compute.securityPolicies.listTagBindings",
            "compute.securityPolicies.use",
            "compute.serviceAttachments.*",
            "compute.snapshots.*",
            "compute.sslCertificates.get",
            "compute.sslCertificates.list",
            "compute.sslCertificates.listEffectiveTags",
            "compute.sslCertificates.listTagBindings",
            "compute.sslPolicies.*",
            "compute.storagePools.*",
            "compute.subnetworks.*",
            "compute.targetGrpcProxies.*",
            "compute.targetHttpProxies.*",
            "compute.targetHttpsProxies.*",
            "compute.targetInstances.*",
            "compute.targetPools.*",
            "compute.targetSslProxies.*",
            "compute.targetTcpProxies.*",
            "compute.targetVpnGateways.*",
            "compute.urlMaps.*",
            "compute.vpnGateways.*",
            "compute.vpnTunnels.*",
            "compute.wireGroups.*",
            "compute.zoneOperations.get",
            "compute.zoneOperations.list",
            "compute.zones.*",
            "dataflow.jobs.*",
            "dataflow.messages.list",
            "dataflow.metrics.get",
            "dataflow.snapshots.*",
            "dataform.*",
            "dataplex.projects.search",
            "dns.networks.targetWithPeeringZone",
            "firebase.projects.get",
            "iam.serviceAccounts.actAs",
            "iam.serviceAccounts.get",
            "iam.serviceAccounts.getAccessToken",
            "iam.serviceAccounts.implicitDelegation",
            "iam.serviceAccounts.list",
            "iam.serviceAccounts.signBlob",
            "iam.serviceAccounts.signJwt",
            "logging.buckets.create",
            "logging.buckets.createTagBinding",
            "logging.buckets.delete",
            "logging.buckets.deleteTagBinding",
            "logging.buckets.get",
            "logging.buckets.list",
            "logging.buckets.listEffectiveTags",
            "logging.buckets.listTagBindings",
            "logging.buckets.undelete",
            "logging.buckets.update",
            "logging.exclusions.*",
            "logging.links.*",
            "logging.locations.*",
            "logging.logEntries.create",
            "logging.logEntries.route",
            "logging.logMetrics.*",
            "logging.logScopes.*",
            "logging.logServiceIndexes.list",
            "logging.logServices.list",
            "logging.logs.list",
            "logging.notificationRules.*",
            "logging.operations.*",
            "logging.settings.*",
            "logging.sinks.*",
            "logging.sqlAlerts.*",
            "logging.views.create",
            "logging.views.delete",
            "logging.views.get",
            "logging.views.getIamPolicy",
            "logging.views.list",
            "logging.views.update",
            "monitoring.alertPolicies.get",
            "monitoring.alertPolicies.list",
            "monitoring.alertPolicies.listEffectiveTags",
            "monitoring.alertPolicies.listTagBindings",
            "monitoring.dashboards.get",
            "monitoring.dashboards.list",
            "monitoring.groups.get",
            "monitoring.groups.list",
            "monitoring.metricDescriptors.create",
            "monitoring.metricDescriptors.get",
            "monitoring.metricDescriptors.list",
            "monitoring.monitoredResourceDescriptors.*",
            "monitoring.notificationChannelDescriptors.*",
            "monitoring.notificationChannels.get",
            "monitoring.notificationChannels.list",
            "monitoring.services.get",
            "monitoring.services.list",
            "monitoring.slos.get",
            "monitoring.slos.list",
            "monitoring.snoozes.get",
            "monitoring.snoozes.list",
            "monitoring.timeSeries.*",
            "monitoring.uptimeCheckConfigs.get",
            "monitoring.uptimeCheckConfigs.list",
            "networkconnectivity.internalRanges.*",
            "networkconnectivity.locations.*",
            "networkconnectivity.operations.*",
            "networkconnectivity.policyBasedRoutes.*",
            "networkconnectivity.regionalEndpoints.*",
            "networkconnectivity.serviceClasses.*",
            "networkconnectivity.serviceConnectionMaps.*",
            "networkconnectivity.serviceConnectionPolicies.*",
            "networkmanagement.connectivitytests.get",
            "networkmanagement.connectivitytests.list",
            "networksecurity.addressGroups.*",
            "networksecurity.authorizationPolicies.*",
            "networksecurity.authzPolicies.*",
            "networksecurity.clientTlsPolicies.*",
            "networksecurity.firewallEndpointAssociations.*",
            "networksecurity.firewallEndpoints.*",
            "networksecurity.gatewaySecurityPolicies.*",
            "networksecurity.gatewaySecurityPolicyRules.*",
            "networksecurity.locations.*",
            "networksecurity.operations.*",
            "networksecurity.securityProfileGroups.*",
            "networksecurity.securityProfiles.*",
            "networksecurity.serverTlsPolicies.*",
            "networksecurity.tlsInspectionPolicies.*",
            "networksecurity.urlLists.*",
            "networkservices.*",
            "observability.scopes.get",
            "opsconfigmonitoring.resourceMetadata.list",
            "orgpolicy.policy.get",
            "pubsub.*",
            "recommender.dataflowDiagnosticsInsights.*",
            "recommender.iamPolicyInsights.*",
            "recommender.iamPolicyRecommendations.*",
            "recommender.storageBucketSoftDeleteInsights.*",
            "recommender.storageBucketSoftDeleteRecommendations.*",
            "resourcemanager.hierarchyNodes.listEffectiveTags",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "servicedirectory.namespaces.create",
            "servicedirectory.namespaces.delete",
            "servicedirectory.services.create",
            "servicedirectory.services.delete",
            "servicenetworking.operations.get",
            "servicenetworking.services.addPeering",
            "servicenetworking.services.createPeeredDnsDomain",
            "servicenetworking.services.deleteConnection",
            "servicenetworking.services.deletePeeredDnsDomain",
            "servicenetworking.services.disableVpcServiceControls",
            "servicenetworking.services.enableVpcServiceControls",
            "servicenetworking.services.get",
            "servicenetworking.services.listPeeredDnsDomains",
            "serviceusage.quotas.get",
            "serviceusage.services.get",
            "serviceusage.services.list",
            "serviceusage.services.use",
            "stackdriver.projects.get",
            "stackdriver.resourceMetadata.list",
            "storage.anywhereCaches.*",
            "storage.bucketOperations.*",
            "storage.buckets.*",
            "storage.folders.*",
            "storage.intelligenceConfigs.*",
            "storage.managedFolders.*",
            "storage.multipartUploads.*",
            "storage.objects.*",
            "trafficdirector.*"
          ],
          "title": "Cloud Dataflow Service Agent"
        },
        {
          "description": "Gives permission for the Dataform API to access a secret from Secret Manager",
          "id": "roles/dataform.serviceAgent",
          "is_beta": false,
          "permissions": [
            "dataform.compilationResults.create",
            "dataform.workflowInvocations.create",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Dataform Service Agent"
        },
        {
          "description": "Gives Cloud Data Fusion service account access to Service Networking, Cloud Dataproc, Cloud Storage, BigQuery, Cloud Spanner, and Cloud Bigtable resources.",
          "id": "roles/datafusion.serviceAgent",
          "is_beta": false,
          "permissions": [
            "bigquery.config.get",
            "bigquery.dataPolicies.create",
            "bigquery.dataPolicies.delete",
            "bigquery.dataPolicies.get",
            "bigquery.dataPolicies.getIamPolicy",
            "bigquery.dataPolicies.list",
            "bigquery.dataPolicies.setIamPolicy",
            "bigquery.dataPolicies.update",
            "bigquery.datasets.*",
            "bigquery.jobs.create",
            "bigquery.models.*",
            "bigquery.routines.*",
            "bigquery.rowAccessPolicies.create",
            "bigquery.rowAccessPolicies.delete",
            "bigquery.rowAccessPolicies.getIamPolicy",
            "bigquery.rowAccessPolicies.list",
            "bigquery.rowAccessPolicies.setIamPolicy",
            "bigquery.rowAccessPolicies.update",
            "bigquery.tables.*",
            "bigtable.*",
            "compute.acceleratorTypes.*",
            "compute.addresses.get",
            "compute.addresses.list",
            "compute.addresses.listEffectiveTags",
            "compute.addresses.listTagBindings",
            "compute.autoscalers.get",
            "compute.autoscalers.list",
            "compute.backendBuckets.get",
            "compute.backendBuckets.list",
            "compute.backendBuckets.listEffectiveTags",
            "compute.backendBuckets.listTagBindings",
            "compute.backendServices.get",
            "compute.backendServices.list",
            "compute.backendServices.listEffectiveTags",
            "compute.backendServices.listTagBindings",
            "compute.crossSiteNetworks.get",
            "compute.crossSiteNetworks.list",
            "compute.disks.listEffectiveTags",
            "compute.disks.listTagBindings",
            "compute.externalVpnGateways.get",
            "compute.externalVpnGateways.list",
            "compute.externalVpnGateways.listEffectiveTags",
            "compute.externalVpnGateways.listTagBindings",
            "compute.firewalls.get",
            "compute.firewalls.list",
            "compute.firewalls.listEffectiveTags",
            "compute.firewalls.listTagBindings",
            "compute.forwardingRules.get",
            "compute.forwardingRules.list",
            "compute.forwardingRules.listEffectiveTags",
            "compute.forwardingRules.listTagBindings",
            "compute.globalAddresses.get",
            "compute.globalAddresses.list",
            "compute.globalAddresses.listEffectiveTags",
            "compute.globalAddresses.listTagBindings",
            "compute.globalForwardingRules.get",
            "compute.globalForwardingRules.list",
            "compute.globalForwardingRules.listEffectiveTags",
            "compute.globalForwardingRules.listTagBindings",
            "compute.globalOperations.get",
            "compute.healthChecks.get",
            "compute.healthChecks.list",
            "compute.healthChecks.listEffectiveTags",
            "compute.healthChecks.listTagBindings",
            "compute.httpHealthChecks.get",
            "compute.httpHealthChecks.list",
            "compute.httpHealthChecks.listEffectiveTags",
            "compute.httpHealthChecks.listTagBindings",
            "compute.httpsHealthChecks.get",
            "compute.httpsHealthChecks.list",
            "compute.httpsHealthChecks.listEffectiveTags",
            "compute.httpsHealthChecks.listTagBindings",
            "compute.images.listEffectiveTags",
            "compute.images.listTagBindings",
            "compute.instanceGroupManagers.get",
            "compute.instanceGroupManagers.list",
            "compute.instanceGroupManagers.listEffectiveTags",
            "compute.instanceGroupManagers.listTagBindings",
            "compute.instanceGroups.get",
            "compute.instanceGroups.list",
            "compute.instanceGroups.listEffectiveTags",
            "compute.instanceGroups.listTagBindings",
            "compute.instanceSettings.get",
            "compute.instances.get",
            "compute.instances.getGuestAttributes",
            "compute.instances.getScreenshot",
            "compute.instances.getSerialPortOutput",
            "compute.instances.list",
            "compute.instances.listEffectiveTags",
            "compute.instances.listReferrers",
            "compute.instances.listTagBindings",
            "compute.interconnectAttachments.get",
            "compute.interconnectAttachments.list",
            "compute.interconnectAttachments.listEffectiveTags",
            "compute.interconnectAttachments.listTagBindings",
            "compute.interconnectLocations.*",
            "compute.interconnectRemoteLocations.*",
            "compute.interconnects.get",
            "compute.interconnects.list",
            "compute.interconnects.listEffectiveTags",
            "compute.interconnects.listTagBindings",
            "compute.machineTypes.*",
            "compute.networkAttachments.get",
            "compute.networkAttachments.list",
            "compute.networkAttachments.listEffectiveTags",
            "compute.networkAttachments.listTagBindings",
            "compute.networkAttachments.update",
            "compute.networkProfiles.*",
            "compute.networks.addPeering",
            "compute.networks.get",
            "compute.networks.getEffectiveFirewalls",
            "compute.networks.getRegionEffectiveFirewalls",
            "compute.networks.list",
            "compute.networks.listEffectiveTags",
            "compute.networks.listPeeringRoutes",
            "compute.networks.listTagBindings",
            "compute.networks.removePeering",
            "compute.networks.update",
            "compute.packetMirrorings.get",
            "compute.packetMirrorings.list",
            "compute.packetMirrorings.listEffectiveTags",
            "compute.packetMirrorings.listTagBindings",
            "compute.projects.get",
            "compute.regionBackendServices.get",
            "compute.regionBackendServices.list",
            "compute.regionBackendServices.listEffectiveTags",
            "compute.regionBackendServices.listTagBindings",
            "compute.regionHealthCheckServices.get",
            "compute.regionHealthCheckServices.list",
            "compute.regionHealthChecks.get",
            "compute.regionHealthChecks.list",
            "compute.regionHealthChecks.listEffectiveTags",
            "compute.regionHealthChecks.listTagBindings",
            "compute.regionNotificationEndpoints.get",
            "compute.regionNotificationEndpoints.list",
            "compute.regionSslCertificates.get",
            "compute.regionSslCertificates.list",
            "compute.regionSslCertificates.listEffectiveTags",
            "compute.regionSslCertificates.listTagBindings",
            "compute.regionSslPolicies.get",
            "compute.regionSslPolicies.list",
            "compute.regionSslPolicies.listAvailableFeatures",
            "compute.regionSslPolicies.listEffectiveTags",
            "compute.regionSslPolicies.listTagBindings",
            "compute.regionTargetHttpProxies.get",
            "compute.regionTargetHttpProxies.list",
            "compute.regionTargetHttpProxies.listEffectiveTags",
            "compute.regionTargetHttpProxies.listTagBindings",
            "compute.regionTargetHttpsProxies.get",
            "compute.regionTargetHttpsProxies.list",
            "compute.regionTargetHttpsProxies.listEffectiveTags",
            "compute.regionTargetHttpsProxies.listTagBindings",
            "compute.regionTargetTcpProxies.get",
            "compute.regionTargetTcpProxies.list",
            "compute.regionTargetTcpProxies.listEffectiveTags",
            "compute.regionTargetTcpProxies.listTagBindings",
            "compute.regionUrlMaps.get",
            "compute.regionUrlMaps.list",
            "compute.regionUrlMaps.listEffectiveTags",
            "compute.regionUrlMaps.listTagBindings",
            "compute.regions.*",
            "compute.routers.get",
            "compute.routers.getRoutePolicy",
            "compute.routers.list",
            "compute.routers.listBgpRoutes",
            "compute.routers.listEffectiveTags",
            "compute.routers.listRoutePolicies",
            "compute.routers.listTagBindings",
            "compute.routes.get",
            "compute.routes.list",
            "compute.routes.listEffectiveTags",
            "compute.routes.listTagBindings",
            "compute.serviceAttachments.get",
            "compute.serviceAttachments.list",
            "compute.serviceAttachments.listEffectiveTags",
            "compute.serviceAttachments.listTagBindings",
            "compute.snapshots.listEffectiveTags",
            "compute.snapshots.listTagBindings",
            "compute.sslCertificates.get",
            "compute.sslCertificates.list",
            "compute.sslCertificates.listEffectiveTags",
            "compute.sslCertificates.listTagBindings",
            "compute.sslPolicies.get",
            "compute.sslPolicies.list",
            "compute.sslPolicies.listAvailableFeatures",
            "compute.sslPolicies.listEffectiveTags",
            "compute.sslPolicies.listTagBindings",
            "compute.subnetworks.get",
            "compute.subnetworks.list",
            "compute.subnetworks.listEffectiveTags",
            "compute.subnetworks.listTagBindings",
            "compute.targetGrpcProxies.get",
            "compute.targetGrpcProxies.list",
            "compute.targetGrpcProxies.listEffectiveTags",
            "compute.targetGrpcProxies.listTagBindings",
            "compute.targetHttpProxies.get",
            "compute.targetHttpProxies.list",
            "compute.targetHttpProxies.listEffectiveTags",
            "compute.targetHttpProxies.listTagBindings",
            "compute.targetHttpsProxies.get",
            "compute.targetHttpsProxies.list",
            "compute.targetHttpsProxies.listEffectiveTags",
            "compute.targetHttpsProxies.listTagBindings",
            "compute.targetInstances.get",
            "compute.targetInstances.list",
            "compute.targetInstances.listEffectiveTags",
            "compute.targetInstances.listTagBindings",
            "compute.targetPools.get",
            "compute.targetPools.list",
            "compute.targetPools.listEffectiveTags",
            "compute.targetPools.listTagBindings",
            "compute.targetSslProxies.get",
            "compute.targetSslProxies.list",
            "compute.targetSslProxies.listEffectiveTags",
            "compute.targetSslProxies.listTagBindings",
            "compute.targetTcpProxies.get",
            "compute.targetTcpProxies.list",
            "compute.targetTcpProxies.listEffectiveTags",
            "compute.targetTcpProxies.listTagBindings",
            "compute.targetVpnGateways.get",
            "compute.targetVpnGateways.list",
            "compute.targetVpnGateways.listEffectiveTags",
            "compute.targetVpnGateways.listTagBindings",
            "compute.urlMaps.get",
            "compute.urlMaps.list",
            "compute.urlMaps.listEffectiveTags",
            "compute.urlMaps.listTagBindings",
            "compute.vpnGateways.get",
            "compute.vpnGateways.list",
            "compute.vpnGateways.listEffectiveTags",
            "compute.vpnGateways.listTagBindings",
            "compute.vpnTunnels.get",
            "compute.vpnTunnels.list",
            "compute.vpnTunnels.listEffectiveTags",
            "compute.vpnTunnels.listTagBindings",
            "compute.wireGroups.get",
            "compute.wireGroups.list",
            "compute.zones.*",
            "dataform.locations.*",
            "dataform.repositories.create",
            "dataform.repositories.list",
            "dataproc.autoscalingPolicies.create",
            "dataproc.autoscalingPolicies.delete",
            "dataproc.autoscalingPolicies.get",
            "dataproc.autoscalingPolicies.list",
            "dataproc.autoscalingPolicies.update",
            "dataproc.autoscalingPolicies.use",
            "dataproc.batches.*",
            "dataproc.clusters.create",
            "dataproc.clusters.delete",
            "dataproc.clusters.get",
            "dataproc.clusters.list",
            "dataproc.clusters.start",
            "dataproc.clusters.stop",
            "dataproc.clusters.update",
            "dataproc.clusters.use",
            "dataproc.jobs.cancel",
            "dataproc.jobs.create",
            "dataproc.jobs.delete",
            "dataproc.jobs.get",
            "dataproc.jobs.list",
            "dataproc.jobs.update",
            "dataproc.nodeGroups.*",
            "dataproc.operations.cancel",
            "dataproc.operations.delete",
            "dataproc.operations.get",
            "dataproc.operations.list",
            "dataproc.sessionTemplates.*",
            "dataproc.sessions.*",
            "dataproc.workflowTemplates.create",
            "dataproc.workflowTemplates.delete",
            "dataproc.workflowTemplates.get",
            "dataproc.workflowTemplates.instantiate",
            "dataproc.workflowTemplates.instantiateInline",
            "dataproc.workflowTemplates.list",
            "dataproc.workflowTemplates.update",
            "dataprocrm.nodePools.*",
            "dataprocrm.nodes.get",
            "dataprocrm.nodes.heartbeat",
            "dataprocrm.nodes.list",
            "dataprocrm.nodes.update",
            "dataprocrm.operations.get",
            "dataprocrm.operations.list",
            "dataprocrm.workloads.*",
            "dns.managedZones.create",
            "dns.managedZones.delete",
            "dns.managedZones.get",
            "dns.managedZones.list",
            "dns.networks.bindPrivateDNSZone",
            "dns.networks.targetWithPeeringZone",
            "firebase.projects.get",
            "logging.logEntries.create",
            "monitoring.metricDescriptors.create",
            "monitoring.metricDescriptors.get",
            "monitoring.metricDescriptors.list",
            "monitoring.monitoredResourceDescriptors.*",
            "monitoring.timeSeries.*",
            "networkconnectivity.internalRanges.get",
            "networkconnectivity.internalRanges.list",
            "networkconnectivity.locations.*",
            "networkconnectivity.operations.get",
            "networkconnectivity.operations.list",
            "networkconnectivity.policyBasedRoutes.get",
            "networkconnectivity.policyBasedRoutes.list",
            "networkmanagement.connectivitytests.get",
            "networkmanagement.connectivitytests.list",
            "networksecurity.addressGroups.get",
            "networksecurity.addressGroups.list",
            "networksecurity.authorizationPolicies.get",
            "networksecurity.authorizationPolicies.list",
            "networksecurity.authzPolicies.get",
            "networksecurity.authzPolicies.list",
            "networksecurity.clientTlsPolicies.get",
            "networksecurity.clientTlsPolicies.list",
            "networksecurity.firewallEndpointAssociations.get",
            "networksecurity.firewallEndpointAssociations.list",
            "networksecurity.firewallEndpoints.get",
            "networksecurity.firewallEndpoints.list",
            "networksecurity.gatewaySecurityPolicies.get",
            "networksecurity.gatewaySecurityPolicies.list",
            "networksecurity.gatewaySecurityPolicyRules.get",
            "networksecurity.gatewaySecurityPolicyRules.list",
            "networksecurity.locations.*",
            "networksecurity.operations.get",
            "networksecurity.operations.list",
            "networksecurity.securityProfileGroups.get",
            "networksecurity.securityProfileGroups.list",
            "networksecurity.securityProfiles.get",
            "networksecurity.securityProfiles.list",
            "networksecurity.serverTlsPolicies.get",
            "networksecurity.serverTlsPolicies.list",
            "networksecurity.tlsInspectionPolicies.get",
            "networksecurity.tlsInspectionPolicies.list",
            "networksecurity.urlLists.get",
            "networksecurity.urlLists.list",
            "networkservices.authzExtensions.get",
            "networkservices.authzExtensions.list",
            "networkservices.endpointPolicies.get",
            "networkservices.endpointPolicies.list",
            "networkservices.gateways.get",
            "networkservices.gateways.list",
            "networkservices.grpcRoutes.get",
            "networkservices.grpcRoutes.list",
            "networkservices.httpFilters.get",
            "networkservices.httpFilters.list",
            "networkservices.httpRoutes.get",
            "networkservices.httpRoutes.list",
            "networkservices.httpfilters.get",
            "networkservices.httpfilters.list",
            "networkservices.lbRouteExtensions.get",
            "networkservices.lbRouteExtensions.list",
            "networkservices.lbTrafficExtensions.get",
            "networkservices.lbTrafficExtensions.list",
            "networkservices.locations.*",
            "networkservices.meshes.get",
            "networkservices.meshes.list",
            "networkservices.operations.get",
            "networkservices.operations.list",
            "networkservices.route_views.*",
            "networkservices.serviceBindings.get",
            "networkservices.serviceBindings.list",
            "networkservices.serviceLbPolicies.get",
            "networkservices.serviceLbPolicies.list",
            "networkservices.tcpRoutes.get",
            "networkservices.tcpRoutes.list",
            "networkservices.tlsRoutes.get",
            "networkservices.tlsRoutes.list",
            "networkservices.wasmPlugins.get",
            "networkservices.wasmPlugins.list",
            "orgpolicy.policy.get",
            "recommender.iamPolicyInsights.*",
            "recommender.iamPolicyRecommendations.*",
            "recommender.storageBucketSoftDeleteInsights.*",
            "recommender.storageBucketSoftDeleteRecommendations.*",
            "resourcemanager.hierarchyNodes.listEffectiveTags",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "servicenetworking.services.get",
            "serviceusage.quotas.get",
            "serviceusage.services.get",
            "serviceusage.services.list",
            "spanner.databaseOperations.*",
            "spanner.databases.adapt",
            "spanner.databases.beginOrRollbackReadWriteTransaction",
            "spanner.databases.beginPartitionedDmlTransaction",
            "spanner.databases.beginReadOnlyTransaction",
            "spanner.databases.changequorum",
            "spanner.databases.getDdl",
            "spanner.databases.list",
            "spanner.databases.partitionQuery",
            "spanner.databases.partitionRead",
            "spanner.databases.read",
            "spanner.databases.select",
            "spanner.databases.updateDdl",
            "spanner.databases.write",
            "spanner.instanceConfigs.get",
            "spanner.instanceConfigs.list",
            "spanner.instancePartitions.get",
            "spanner.instancePartitions.list",
            "spanner.instances.get",
            "spanner.instances.list",
            "spanner.instances.listEffectiveTags",
            "spanner.instances.listTagBindings",
            "spanner.sessions.*",
            "storage.anywhereCaches.*",
            "storage.bucketOperations.*",
            "storage.buckets.*",
            "storage.folders.*",
            "storage.intelligenceConfigs.*",
            "storage.managedFolders.*",
            "storage.multipartUploads.*",
            "storage.objects.*",
            "trafficdirector.*"
          ],
          "title": "Cloud Data Fusion API Service Agent"
        },
        {
          "description": "Gives Data Labeling service account read/write access to Cloud Storage, read/write BigQuery, update CMLE model versions, editor access to Annotation service and AutoML service.",
          "id": "roles/datalabeling.serviceAgent",
          "is_beta": false,
          "permissions": [
            "automl.annotationSpecs.*",
            "automl.annotations.*",
            "automl.columnSpecs.*",
            "automl.datasets.create",
            "automl.datasets.delete",
            "automl.datasets.export",
            "automl.datasets.get",
            "automl.datasets.import",
            "automl.datasets.list",
            "automl.datasets.update",
            "automl.examples.*",
            "automl.files.*",
            "automl.humanAnnotationTasks.*",
            "automl.locations.get",
            "automl.locations.list",
            "automl.modelEvaluations.*",
            "automl.models.create",
            "automl.models.delete",
            "automl.models.deploy",
            "automl.models.export",
            "automl.models.get",
            "automl.models.list",
            "automl.models.predict",
            "automl.models.undeploy",
            "automl.operations.*",
            "automl.tableSpecs.*",
            "bigquery.datasets.create",
            "bigquery.datasets.get",
            "bigquery.jobs.create",
            "bigquery.jobs.get",
            "bigquery.tables.create",
            "bigquery.tables.get",
            "bigquery.tables.getData",
            "ml.jobs.create",
            "ml.jobs.get",
            "ml.jobs.getIamPolicy",
            "ml.jobs.list",
            "ml.locations.*",
            "ml.models.*",
            "ml.operations.get",
            "ml.operations.list",
            "ml.projects.getConfig",
            "ml.studies.*",
            "ml.trials.*",
            "ml.versions.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "serviceusage.services.get",
            "serviceusage.services.list",
            "storage.objects.create",
            "storage.objects.delete",
            "storage.objects.get",
            "storage.objects.list",
            "storage.objects.update"
          ],
          "title": "Data Labeling Service Agent"
        },
        {
          "description": "Gives Cloud Database Migration service account access to Cloud SQL resources.",
          "id": "roles/datamigration.serviceAgent",
          "is_beta": false,
          "permissions": [
            "alloydb.clusters.create",
            "alloydb.clusters.delete",
            "alloydb.clusters.generateClientCertificate",
            "alloydb.clusters.get",
            "alloydb.clusters.list",
            "alloydb.clusters.update",
            "alloydb.instances.connect",
            "alloydb.instances.create",
            "alloydb.instances.delete",
            "alloydb.instances.get",
            "alloydb.instances.list",
            "alloydb.instances.update",
            "alloydb.operations.get",
            "alloydb.operations.list",
            "cloudsql.databases.delete",
            "cloudsql.databases.get",
            "cloudsql.databases.list",
            "cloudsql.instances.connect",
            "cloudsql.instances.create",
            "cloudsql.instances.delete",
            "cloudsql.instances.demoteMaster",
            "cloudsql.instances.executeSql",
            "cloudsql.instances.export",
            "cloudsql.instances.get",
            "cloudsql.instances.import",
            "cloudsql.instances.list",
            "cloudsql.instances.migrate",
            "cloudsql.instances.promoteReplica",
            "cloudsql.instances.restart",
            "cloudsql.instances.startReplica",
            "cloudsql.instances.stopReplica",
            "cloudsql.instances.update",
            "compute.forwardingRules.use",
            "compute.globalAddresses.create",
            "compute.globalAddresses.createInternal",
            "compute.globalAddresses.delete",
            "compute.globalAddresses.deleteInternal",
            "compute.globalAddresses.get",
            "compute.globalOperations.get",
            "compute.networks.addPeering",
            "compute.networks.get",
            "compute.networks.list",
            "compute.networks.listPeeringRoutes",
            "compute.networks.removePeering",
            "compute.networks.use",
            "compute.regionOperations.get",
            "compute.regionOperations.list",
            "compute.routers.list",
            "compute.routes.get",
            "compute.routes.list",
            "compute.serviceAttachments.get",
            "compute.serviceAttachments.list",
            "compute.serviceAttachments.update",
            "compute.subnetworks.get",
            "compute.subnetworks.list",
            "compute.subnetworks.use",
            "networkmanagement.connectivitytests.list",
            "serviceusage.services.use",
            "storage.folders.delete",
            "storage.objects.get",
            "storage.objects.list"
          ],
          "title": "Database Migration Service Agent"
        },
        {
          "description": "Gives Datapipelines service permissions to create Dataflow & Cloud Scheduler jobs in the user project.",
          "id": "roles/datapipelines.serviceAgent",
          "is_beta": false,
          "permissions": [
            "appengine.applications.get",
            "bigquery.tables.get",
            "bigtable.tables.get",
            "cloudbuild.builds.create",
            "cloudbuild.builds.get",
            "cloudbuild.builds.list",
            "cloudbuild.builds.update",
            "cloudbuild.locations.*",
            "cloudbuild.operations.*",
            "cloudscheduler.*",
            "compute.machineTypes.get",
            "compute.projects.get",
            "compute.regions.list",
            "compute.zones.list",
            "dataflow.jobs.*",
            "dataflow.messages.list",
            "dataflow.metrics.get",
            "dataflow.snapshots.*",
            "firebase.projects.get",
            "iam.serviceAccounts.actAs",
            "iam.serviceAccounts.get",
            "iam.serviceAccounts.list",
            "orgpolicy.policy.get",
            "pubsub.schemas.get",
            "pubsub.topics.get",
            "recommender.dataflowDiagnosticsInsights.*",
            "recommender.iamPolicyInsights.*",
            "recommender.iamPolicyRecommendations.*",
            "recommender.storageBucketSoftDeleteInsights.*",
            "recommender.storageBucketSoftDeleteRecommendations.*",
            "remotebuildexecution.blobs.get",
            "resourcemanager.hierarchyNodes.listEffectiveTags",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "serviceusage.services.get",
            "serviceusage.services.list",
            "storage.anywhereCaches.*",
            "storage.bucketOperations.*",
            "storage.buckets.*",
            "storage.folders.*",
            "storage.intelligenceConfigs.*",
            "storage.managedFolders.*",
            "storage.multipartUploads.*",
            "storage.objects.*"
          ],
          "title": "Datapipelines Service Agent"
        },
        {
          "description": "Gives the Dataplex Discovery Service Agent permissions to use bigquery connection.",
          "id": "roles/dataplex.discoveryBigLakePublishingServiceAgent",
          "is_beta": false,
          "permissions": [
            "bigquery.connections.delegate",
            "bigquery.connections.use"
          ],
          "title": "Dataplex Discovery BigLake Publishing Service Agent"
        },
        {
          "description": "Gives the Dataplex Discovery Service Agent dataset create and get permissions.",
          "id": "roles/dataplex.discoveryPublishingServiceAgent",
          "is_beta": false,
          "permissions": [
            "bigquery.datasets.create",
            "bigquery.datasets.get"
          ],
          "title": "Dataplex Discovery Publishing Service Agent"
        },
        {
          "description": "Gives the Dataplex Discovery Service Agent bucket read permissions.",
          "id": "roles/dataplex.discoveryServiceAgent",
          "is_beta": false,
          "permissions": [
            "storage.buckets.get",
            "storage.objects.get",
            "storage.objects.list"
          ],
          "title": "Dataplex Discovery Service Agent"
        },
        {
          "description": "Gives the Dataplex service account access to project resources. This access will be used in data discovery, data management and data workload management.",
          "id": "roles/dataplex.serviceAgent",
          "is_beta": false,
          "permissions": [
            "bigquery.bireservations.*",
            "bigquery.capacityCommitments.*",
            "bigquery.config.*",
            "bigquery.connections.*",
            "bigquery.dataPolicies.create",
            "bigquery.dataPolicies.delete",
            "bigquery.dataPolicies.get",
            "bigquery.dataPolicies.getIamPolicy",
            "bigquery.dataPolicies.list",
            "bigquery.dataPolicies.setIamPolicy",
            "bigquery.dataPolicies.update",
            "bigquery.datasets.*",
            "bigquery.jobs.*",
            "bigquery.models.*",
            "bigquery.readsessions.*",
            "bigquery.reservationAssignments.*",
            "bigquery.reservations.*",
            "bigquery.routines.*",
            "bigquery.rowAccessPolicies.create",
            "bigquery.rowAccessPolicies.delete",
            "bigquery.rowAccessPolicies.getIamPolicy",
            "bigquery.rowAccessPolicies.list",
            "bigquery.rowAccessPolicies.overrideTimeTravelRestrictions",
            "bigquery.rowAccessPolicies.setIamPolicy",
            "bigquery.rowAccessPolicies.update",
            "bigquery.savedqueries.*",
            "bigquery.tables.*",
            "bigquery.transfers.*",
            "bigquerymigration.translation.translate",
            "datacatalog.catalogs.searchAll",
            "datacatalog.categories.getIamPolicy",
            "datacatalog.categories.setIamPolicy",
            "datacatalog.entries.get",
            "datacatalog.taxonomies.create",
            "datacatalog.taxonomies.delete",
            "datacatalog.taxonomies.get",
            "datacatalog.taxonomies.list",
            "datacatalog.taxonomies.update",
            "dataform.*",
            "dataplex.assets.getIamPolicy",
            "dataplex.environments.execute",
            "dataplex.environments.get",
            "dataplex.environments.list",
            "dataplex.lakes.get",
            "dataplex.lakes.getIamPolicy",
            "dataplex.projects.search",
            "dataplex.zones.getIamPolicy",
            "dataproc.batches.cancel",
            "dataproc.batches.create",
            "dataproc.batches.get",
            "dataproc.operations.cancel",
            "dataproc.operations.get",
            "dataproc.operations.list",
            "firebase.projects.get",
            "iam.serviceAccounts.actAs",
            "logging.logEntries.create",
            "logging.logEntries.route",
            "metastore.services.get",
            "monitoring.metricDescriptors.create",
            "monitoring.metricDescriptors.get",
            "monitoring.metricDescriptors.list",
            "monitoring.monitoredResourceDescriptors.*",
            "monitoring.timeSeries.create",
            "orgpolicy.policy.get",
            "recommender.iamPolicyInsights.*",
            "recommender.iamPolicyRecommendations.*",
            "recommender.storageBucketSoftDeleteInsights.*",
            "recommender.storageBucketSoftDeleteRecommendations.*",
            "resourcemanager.hierarchyNodes.listEffectiveTags",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "servicemanagement.services.report",
            "serviceusage.services.use",
            "storage.anywhereCaches.*",
            "storage.bucketOperations.*",
            "storage.buckets.*",
            "storage.folders.*",
            "storage.intelligenceConfigs.*",
            "storage.managedFolders.*",
            "storage.multipartUploads.*",
            "storage.objects.*"
          ],
          "title": "Cloud Dataplex Service Agent"
        },
        {
          "description": "Dataprep service identity. Includes access to service accounts.",
          "id": "roles/dataprep.serviceAgent",
          "is_beta": false,
          "permissions": [
            "bigquery.bireservations.get",
            "bigquery.capacityCommitments.get",
            "bigquery.capacityCommitments.list",
            "bigquery.config.get",
            "bigquery.datasets.create",
            "bigquery.datasets.get",
            "bigquery.datasets.getIamPolicy",
            "bigquery.datasets.updateTag",
            "bigquery.jobs.create",
            "bigquery.jobs.list",
            "bigquery.models.*",
            "bigquery.readsessions.*",
            "bigquery.reservationAssignments.list",
            "bigquery.reservationAssignments.search",
            "bigquery.reservations.get",
            "bigquery.reservations.list",
            "bigquery.reservations.listFailoverDatasets",
            "bigquery.reservations.use",
            "bigquery.routines.*",
            "bigquery.savedqueries.get",
            "bigquery.savedqueries.list",
            "bigquery.tables.create",
            "bigquery.tables.createIndex",
            "bigquery.tables.createSnapshot",
            "bigquery.tables.delete",
            "bigquery.tables.deleteIndex",
            "bigquery.tables.export",
            "bigquery.tables.get",
            "bigquery.tables.getData",
            "bigquery.tables.getIamPolicy",
            "bigquery.tables.list",
            "bigquery.tables.replicateData",
            "bigquery.tables.restoreSnapshot",
            "bigquery.tables.update",
            "bigquery.tables.updateData",
            "bigquery.tables.updateIndex",
            "bigquery.tables.updateTag",
            "bigquery.transfers.get",
            "bigquerymigration.translation.translate",
            "cloudbuild.builds.create",
            "cloudbuild.builds.get",
            "cloudbuild.builds.list",
            "cloudbuild.builds.update",
            "cloudbuild.locations.*",
            "cloudbuild.operations.*",
            "compute.acceleratorTypes.*",
            "compute.addresses.get",
            "compute.addresses.list",
            "compute.addresses.listEffectiveTags",
            "compute.addresses.listTagBindings",
            "compute.autoscalers.get",
            "compute.autoscalers.list",
            "compute.backendBuckets.get",
            "compute.backendBuckets.getIamPolicy",
            "compute.backendBuckets.list",
            "compute.backendBuckets.listEffectiveTags",
            "compute.backendBuckets.listTagBindings",
            "compute.backendServices.get",
            "compute.backendServices.getIamPolicy",
            "compute.backendServices.list",
            "compute.backendServices.listEffectiveTags",
            "compute.backendServices.listTagBindings",
            "compute.commitments.get",
            "compute.commitments.list",
            "compute.crossSiteNetworks.get",
            "compute.crossSiteNetworks.list",
            "compute.diskSettings.get",
            "compute.diskTypes.*",
            "compute.disks.get",
            "compute.disks.getIamPolicy",
            "compute.disks.list",
            "compute.disks.listEffectiveTags",
            "compute.disks.listTagBindings",
            "compute.externalVpnGateways.get",
            "compute.externalVpnGateways.list",
            "compute.externalVpnGateways.listEffectiveTags",
            "compute.externalVpnGateways.listTagBindings",
            "compute.firewallPolicies.get",
            "compute.firewallPolicies.getIamPolicy",
            "compute.firewallPolicies.list",
            "compute.firewallPolicies.listEffectiveTags",
            "compute.firewallPolicies.listTagBindings",
            "compute.firewalls.get",
            "compute.firewalls.list",
            "compute.firewalls.listEffectiveTags",
            "compute.firewalls.listTagBindings",
            "compute.forwardingRules.get",
            "compute.forwardingRules.list",
            "compute.forwardingRules.listEffectiveTags",
            "compute.forwardingRules.listTagBindings",
            "compute.futureReservations.get",
            "compute.futureReservations.getIamPolicy",
            "compute.futureReservations.list",
            "compute.globalAddresses.get",
            "compute.globalAddresses.list",
            "compute.globalAddresses.listEffectiveTags",
            "compute.globalAddresses.listTagBindings",
            "compute.globalForwardingRules.get",
            "compute.globalForwardingRules.list",
            "compute.globalForwardingRules.listEffectiveTags",
            "compute.globalForwardingRules.listTagBindings",
            "compute.globalNetworkEndpointGroups.get",
            "compute.globalNetworkEndpointGroups.list",
            "compute.globalNetworkEndpointGroups.listEffectiveTags",
            "compute.globalNetworkEndpointGroups.listTagBindings",
            "compute.globalOperations.get",
            "compute.globalOperations.getIamPolicy",
            "compute.globalOperations.list",
            "compute.globalPublicDelegatedPrefixes.get",
            "compute.globalPublicDelegatedPrefixes.list",
            "compute.healthChecks.get",
            "compute.healthChecks.list",
            "compute.healthChecks.listEffectiveTags",
            "compute.healthChecks.listTagBindings",
            "compute.httpHealthChecks.get",
            "compute.httpHealthChecks.list",
            "compute.httpHealthChecks.listEffectiveTags",
            "compute.httpHealthChecks.listTagBindings",
            "compute.httpsHealthChecks.get",
            "compute.httpsHealthChecks.list",
            "compute.httpsHealthChecks.listEffectiveTags",
            "compute.httpsHealthChecks.listTagBindings",
            "compute.images.get",
            "compute.images.getFromFamily",
            "compute.images.getIamPolicy",
            "compute.images.list",
            "compute.images.listEffectiveTags",
            "compute.images.listTagBindings",
            "compute.instanceGroupManagers.get",
            "compute.instanceGroupManagers.list",
            "compute.instanceGroupManagers.listEffectiveTags",
            "compute.instanceGroupManagers.listTagBindings",
            "compute.instanceGroups.get",
            "compute.instanceGroups.list",
            "compute.instanceGroups.listEffectiveTags",
            "compute.instanceGroups.listTagBindings",
            "compute.instanceSettings.get",
            "compute.instanceTemplates.get",
            "compute.instanceTemplates.getIamPolicy",
            "compute.instanceTemplates.list",
            "compute.instances.get",
            "compute.instances.getEffectiveFirewalls",
            "compute.instances.getGuestAttributes",
            "compute.instances.getIamPolicy",
            "compute.instances.getScreenshot",
            "compute.instances.getSerialPortOutput",
            "compute.instances.getShieldedInstanceIdentity",
            "compute.instances.getShieldedVmIdentity",
            "compute.instances.list",
            "compute.instances.listEffectiveTags",
            "compute.instances.listReferrers",
            "compute.instances.listTagBindings",
            "compute.instantSnapshots.get",
            "compute.instantSnapshots.getIamPolicy",
            "compute.instantSnapshots.list",
            "compute.interconnectAttachments.get",
            "compute.interconnectAttachments.list",
            "compute.interconnectAttachments.listEffectiveTags",
            "compute.interconnectAttachments.listTagBindings",
            "compute.interconnectLocations.*",
            "compute.interconnectRemoteLocations.*",
            "compute.interconnects.get",
            "compute.interconnects.list",
            "compute.interconnects.listEffectiveTags",
            "compute.interconnects.listTagBindings",
            "compute.licenseCodes.get",
            "compute.licenseCodes.getIamPolicy",
            "compute.licenseCodes.list",
            "compute.licenses.get",
            "compute.licenses.getIamPolicy",
            "compute.licenses.list",
            "compute.machineImages.get",
            "compute.machineImages.getIamPolicy",
            "compute.machineImages.list",
            "compute.machineTypes.*",
            "compute.multiMig.get",
            "compute.multiMig.list",
            "compute.networkAttachments.get",
            "compute.networkAttachments.getIamPolicy",
            "compute.networkAttachments.list",
            "compute.networkAttachments.listEffectiveTags",
            "compute.networkAttachments.listTagBindings",
            "compute.networkEdgeSecurityServices.get",
            "compute.networkEdgeSecurityServices.list",
            "compute.networkEdgeSecurityServices.listEffectiveTags",
            "compute.networkEdgeSecurityServices.listTagBindings",
            "compute.networkEndpointGroups.get",
            "compute.networkEndpointGroups.list",
            "compute.networkEndpointGroups.listEffectiveTags",
            "compute.networkEndpointGroups.listTagBindings",
            "compute.networkProfiles.*",
            "compute.networks.get",
            "compute.networks.getEffectiveFirewalls",
            "compute.networks.getRegionEffectiveFirewalls",
            "compute.networks.list",
            "compute.networks.listEffectiveTags",
            "compute.networks.listPeeringRoutes",
            "compute.networks.listTagBindings",
            "compute.nodeGroups.get",
            "compute.nodeGroups.getIamPolicy",
            "compute.nodeGroups.list",
            "compute.nodeTemplates.get",
            "compute.nodeTemplates.getIamPolicy",
            "compute.nodeTemplates.list",
            "compute.nodeTypes.*",
            "compute.organizations.listAssociations",
            "compute.packetMirrorings.get",
            "compute.packetMirrorings.list",
            "compute.packetMirrorings.listEffectiveTags",
            "compute.packetMirrorings.listTagBindings",
            "compute.projects.get",
            "compute.publicAdvertisedPrefixes.get",
            "compute.publicAdvertisedPrefixes.list",
            "compute.publicDelegatedPrefixes.get",
            "compute.publicDelegatedPrefixes.list",
            "compute.publicDelegatedPrefixes.listEffectiveTags",
            "compute.publicDelegatedPrefixes.listTagBindings",
            "compute.regionBackendServices.get",
            "compute.regionBackendServices.getIamPolicy",
            "compute.regionBackendServices.list",
            "compute.regionBackendServices.listEffectiveTags",
            "compute.regionBackendServices.listTagBindings",
            "compute.regionFirewallPolicies.get",
            "compute.regionFirewallPolicies.getIamPolicy",
            "compute.regionFirewallPolicies.list",
            "compute.regionFirewallPolicies.listEffectiveTags",
            "compute.regionFirewallPolicies.listTagBindings",
            "compute.regionHealthCheckServices.get",
            "compute.regionHealthCheckServices.list",
            "compute.regionHealthChecks.get",
            "compute.regionHealthChecks.list",
            "compute.regionHealthChecks.listEffectiveTags",
            "compute.regionHealthChecks.listTagBindings",
            "compute.regionNetworkEndpointGroups.get",
            "compute.regionNetworkEndpointGroups.list",
            "compute.regionNetworkEndpointGroups.listEffectiveTags",
            "compute.regionNetworkEndpointGroups.listTagBindings",
            "compute.regionNotificationEndpoints.get",
            "compute.regionNotificationEndpoints.list",
            "compute.regionOperations.get",
            "compute.regionOperations.getIamPolicy",
            "compute.regionOperations.list",
            "compute.regionSecurityPolicies.get",
            "compute.regionSecurityPolicies.list",
            "compute.regionSecurityPolicies.listEffectiveTags",
            "compute.regionSecurityPolicies.listTagBindings",
            "compute.regionSslCertificates.get",
            "compute.regionSslCertificates.list",
            "compute.regionSslCertificates.listEffectiveTags",
            "compute.regionSslCertificates.listTagBindings",
            "compute.regionSslPolicies.get",
            "compute.regionSslPolicies.list",
            "compute.regionSslPolicies.listAvailableFeatures",
            "compute.regionSslPolicies.listEffectiveTags",
            "compute.regionSslPolicies.listTagBindings",
            "compute.regionTargetHttpProxies.get",
            "compute.regionTargetHttpProxies.list",
            "compute.regionTargetHttpProxies.listEffectiveTags",
            "compute.regionTargetHttpProxies.listTagBindings",
            "compute.regionTargetHttpsProxies.get",
            "compute.regionTargetHttpsProxies.list",
            "compute.regionTargetHttpsProxies.listEffectiveTags",
            "compute.regionTargetHttpsProxies.listTagBindings",
            "compute.regionTargetTcpProxies.get",
            "compute.regionTargetTcpProxies.list",
            "compute.regionTargetTcpProxies.listEffectiveTags",
            "compute.regionTargetTcpProxies.listTagBindings",
            "compute.regionUrlMaps.get",
            "compute.regionUrlMaps.list",
            "compute.regionUrlMaps.listEffectiveTags",
            "compute.regionUrlMaps.listTagBindings",
            "compute.regionUrlMaps.validate",
            "compute.regions.*",
            "compute.reservationBlocks.get",
            "compute.reservationBlocks.list",
            "compute.reservations.get",
            "compute.reservations.list",
            "compute.resourcePolicies.get",
            "compute.resourcePolicies.getIamPolicy",
            "compute.resourcePolicies.list",
            "compute.routers.get",
            "compute.routers.getRoutePolicy",
            "compute.routers.list",
            "compute.routers.listBgpRoutes",
            "compute.routers.listEffectiveTags",
            "compute.routers.listRoutePolicies",
            "compute.routers.listTagBindings",
            "compute.routes.get",
            "compute.routes.list",
            "compute.routes.listEffectiveTags",
            "compute.routes.listTagBindings",
            "compute.securityPolicies.get",
            "compute.securityPolicies.list",
            "compute.securityPolicies.listEffectiveTags",
            "compute.securityPolicies.listTagBindings",
            "compute.serviceAttachments.get",
            "compute.serviceAttachments.getIamPolicy",
            "compute.serviceAttachments.list",
            "compute.serviceAttachments.listEffectiveTags",
            "compute.serviceAttachments.listTagBindings",
            "compute.snapshotSettings.get",
            "compute.snapshots.get",
            "compute.snapshots.getIamPolicy",
            "compute.snapshots.list",
            "compute.snapshots.listEffectiveTags",
            "compute.snapshots.listTagBindings",
            "compute.spotAssistants.get",
            "compute.sslCertificates.get",
            "compute.sslCertificates.list",
            "compute.sslCertificates.listEffectiveTags",
            "compute.sslCertificates.listTagBindings",
            "compute.sslPolicies.get",
            "compute.sslPolicies.list",
            "compute.sslPolicies.listAvailableFeatures",
            "compute.sslPolicies.listEffectiveTags",
            "compute.sslPolicies.listTagBindings",
            "compute.storagePools.get",
            "compute.storagePools.getIamPolicy",
            "compute.storagePools.list",
            "compute.subnetworks.get",
            "compute.subnetworks.getIamPolicy",
            "compute.subnetworks.list",
            "compute.subnetworks.listEffectiveTags",
            "compute.subnetworks.listTagBindings",
            "compute.targetGrpcProxies.get",
            "compute.targetGrpcProxies.list",
            "compute.targetGrpcProxies.listEffectiveTags",
            "compute.targetGrpcProxies.listTagBindings",
            "compute.targetHttpProxies.get",
            "compute.targetHttpProxies.list",
            "compute.targetHttpProxies.listEffectiveTags",
            "compute.targetHttpProxies.listTagBindings",
            "compute.targetHttpsProxies.get",
            "compute.targetHttpsProxies.list",
            "compute.targetHttpsProxies.listEffectiveTags",
            "compute.targetHttpsProxies.listTagBindings",
            "compute.targetInstances.get",
            "compute.targetInstances.list",
            "compute.targetInstances.listEffectiveTags",
            "compute.targetInstances.listTagBindings",
            "compute.targetPools.get",
            "compute.targetPools.list",
            "compute.targetPools.listEffectiveTags",
            "compute.targetPools.listTagBindings",
            "compute.targetSslProxies.get",
            "compute.targetSslProxies.list",
            "compute.targetSslProxies.listEffectiveTags",
            "compute.targetSslProxies.listTagBindings",
            "compute.targetTcpProxies.get",
            "compute.targetTcpProxies.list",
            "compute.targetTcpProxies.listEffectiveTags",
            "compute.targetTcpProxies.listTagBindings",
            "compute.targetVpnGateways.get",
            "compute.targetVpnGateways.list",
            "compute.targetVpnGateways.listEffectiveTags",
            "compute.targetVpnGateways.listTagBindings",
            "compute.urlMaps.get",
            "compute.urlMaps.list",
            "compute.urlMaps.listEffectiveTags",
            "compute.urlMaps.listTagBindings",
            "compute.urlMaps.validate",
            "compute.vpnGateways.get",
            "compute.vpnGateways.list",
            "compute.vpnGateways.listEffectiveTags",
            "compute.vpnGateways.listTagBindings",
            "compute.vpnTunnels.get",
            "compute.vpnTunnels.list",
            "compute.vpnTunnels.listEffectiveTags",
            "compute.vpnTunnels.listTagBindings",
            "compute.wireGroups.get",
            "compute.wireGroups.list",
            "compute.zoneOperations.get",
            "compute.zoneOperations.getIamPolicy",
            "compute.zoneOperations.list",
            "compute.zones.*",
            "dataflow.jobs.*",
            "dataflow.messages.list",
            "dataflow.metrics.get",
            "dataflow.snapshots.*",
            "dataform.locations.*",
            "dataform.repositories.create",
            "dataform.repositories.list",
            "dataplex.projects.search",
            "iam.serviceAccounts.actAs",
            "iam.serviceAccounts.get",
            "iam.serviceAccounts.list",
            "orgpolicy.policy.get",
            "recommender.dataflowDiagnosticsInsights.*",
            "remotebuildexecution.blobs.get",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "serviceusage.quotas.get",
            "serviceusage.services.get",
            "serviceusage.services.list",
            "storage.buckets.get",
            "storage.buckets.list",
            "storage.folders.*",
            "storage.managedFolders.create",
            "storage.managedFolders.delete",
            "storage.managedFolders.get",
            "storage.managedFolders.list",
            "storage.multipartUploads.*",
            "storage.objects.*"
          ],
          "title": "Dataprep Service Agent"
        },
        {
          "description": "Gives Dataproc Service Account access to service accounts, compute resources, storage resources, and kubernetes resources. Includes access to service accounts.",
          "id": "roles/dataproc.serviceAgent",
          "is_beta": false,
          "permissions": [
            "backupdr.backupPlanAssociations.createForComputeInstance",
            "backupdr.backupPlanAssociations.deleteForComputeInstance",
            "backupdr.backupPlanAssociations.list",
            "backupdr.backupPlanAssociations.triggerBackupForComputeInstance",
            "backupdr.backupPlans.get",
            "backupdr.backupPlans.list",
            "backupdr.backupPlans.useForComputeInstance",
            "backupdr.backupVaults.get",
            "backupdr.backupVaults.list",
            "backupdr.locations.list",
            "backupdr.operations.get",
            "backupdr.operations.list",
            "backupdr.serviceConfig.initialize",
            "compute.acceleratorTypes.*",
            "compute.addresses.createInternal",
            "compute.addresses.deleteInternal",
            "compute.addresses.get",
            "compute.addresses.list",
            "compute.addresses.listEffectiveTags",
            "compute.addresses.listTagBindings",
            "compute.addresses.use",
            "compute.addresses.useInternal",
            "compute.autoscalers.*",
            "compute.diskSettings.get",
            "compute.diskTypes.*",
            "compute.disks.create",
            "compute.disks.createSnapshot",
            "compute.disks.createTagBinding",
            "compute.disks.delete",
            "compute.disks.get",
            "compute.disks.list",
            "compute.disks.resize",
            "compute.disks.setLabels",
            "compute.disks.startAsyncReplication",
            "compute.disks.stopAsyncReplication",
            "compute.disks.stopGroupAsyncReplication",
            "compute.disks.update",
            "compute.disks.use",
            "compute.disks.useReadOnly",
            "compute.firewalls.get",
            "compute.firewalls.list",
            "compute.globalAddresses.get",
            "compute.globalAddresses.list",
            "compute.globalAddresses.listEffectiveTags",
            "compute.globalAddresses.listTagBindings",
            "compute.globalAddresses.use",
            "compute.globalNetworkEndpointGroups.*",
            "compute.globalOperations.get",
            "compute.globalOperations.list",
            "compute.images.get",
            "compute.images.getFromFamily",
            "compute.images.list",
            "compute.images.useReadOnly",
            "compute.instanceGroupManagers.*",
            "compute.instanceGroups.*",
            "compute.instanceSettings.get",
            "compute.instanceTemplates.*",
            "compute.instances.*",
            "compute.licenses.get",
            "compute.licenses.list",
            "compute.machineImages.*",
            "compute.machineTypes.*",
            "compute.multiMig.*",
            "compute.networkEndpointGroups.*",
            "compute.networks.get",
            "compute.networks.getEffectiveFirewalls",
            "compute.networks.list",
            "compute.networks.listEffectiveTags",
            "compute.networks.listTagBindings",
            "compute.networks.use",
            "compute.networks.useExternalIp",
            "compute.nodeGroups.get",
            "compute.nodeTypes.get",
            "compute.projects.get",
            "compute.regionNetworkEndpointGroups.*",
            "compute.regionOperations.get",
            "compute.regionOperations.list",
            "compute.regions.*",
            "compute.reservationBlocks.get",
            "compute.reservationBlocks.list",
            "compute.reservations.get",
            "compute.reservations.list",
            "compute.resourcePolicies.list",
            "compute.resourcePolicies.useReadOnly",
            "compute.storagePools.get",
            "compute.storagePools.list",
            "compute.storagePools.use",
            "compute.subnetworks.get",
            "compute.subnetworks.list",
            "compute.subnetworks.listEffectiveTags",
            "compute.subnetworks.listTagBindings",
            "compute.subnetworks.setPrivateIpGoogleAccess",
            "compute.subnetworks.use",
            "compute.subnetworks.useExternalIp",
            "compute.targetPools.get",
            "compute.targetPools.list",
            "compute.targetPools.listEffectiveTags",
            "compute.targetPools.listTagBindings",
            "compute.zoneOperations.get",
            "compute.zoneOperations.list",
            "compute.zones.*",
            "container.clusterRoleBindings.*",
            "container.clusterRoles.*",
            "container.clusters.get",
            "container.clusters.update",
            "container.customResourceDefinitions.create",
            "container.customResourceDefinitions.delete",
            "container.customResourceDefinitions.get",
            "container.customResourceDefinitions.list",
            "container.customResourceDefinitions.update",
            "container.namespaces.create",
            "container.namespaces.delete",
            "container.namespaces.get",
            "container.namespaces.list",
            "container.namespaces.update",
            "container.operations.get",
            "container.roleBindings.*",
            "container.roles.bind",
            "container.roles.escalate",
            "dataproc.autoscalingPolicies.create",
            "dataproc.autoscalingPolicies.delete",
            "dataproc.autoscalingPolicies.get",
            "dataproc.autoscalingPolicies.getIamPolicy",
            "dataproc.autoscalingPolicies.list",
            "dataproc.autoscalingPolicies.update",
            "dataproc.autoscalingPolicies.use",
            "dataproc.clusters.*",
            "dataproc.jobs.*",
            "dataproc.nodeGroups.*",
            "dataproc.operations.cancel",
            "dataproc.sessionTemplates.get",
            "dataproc.sessions.*",
            "dataprocrm.nodePools.*",
            "dataprocrm.nodes.*",
            "dataprocrm.operations.cancel",
            "dataprocrm.operations.get",
            "dataprocrm.operations.list",
            "dataprocrm.workloads.*",
            "firebase.projects.get",
            "iam.serviceAccounts.actAs",
            "iam.serviceAccounts.getAccessToken",
            "metastore.services.get",
            "orgpolicy.policy.get",
            "recommender.iamPolicyInsights.*",
            "recommender.iamPolicyRecommendations.*",
            "recommender.storageBucketSoftDeleteInsights.*",
            "recommender.storageBucketSoftDeleteRecommendations.*",
            "resourcemanager.hierarchyNodes.listEffectiveTags",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "serviceusage.quotas.get",
            "serviceusage.services.get",
            "serviceusage.services.list",
            "serviceusage.services.use",
            "storage.anywhereCaches.*",
            "storage.bucketOperations.*",
            "storage.buckets.*",
            "storage.folders.*",
            "storage.intelligenceConfigs.*",
            "storage.managedFolders.*",
            "storage.multipartUploads.*",
            "storage.objects.*"
          ],
          "title": "Dataproc Service Agent"
        },
        {
          "description": "Dataproc Resource Manager Node Service Agent used to run managed resources in user project with restricted permissions.",
          "id": "roles/dataprocrm.nodeServiceAgent",
          "is_beta": false,
          "permissions": [
            "dataprocrm.nodes.get",
            "dataprocrm.nodes.heartbeat",
            "dataprocrm.nodes.mintOAuthToken",
            "logging.logEntries.create",
            "logging.logEntries.route",
            "monitoring.metricDescriptors.create",
            "monitoring.metricDescriptors.get",
            "monitoring.metricDescriptors.list",
            "monitoring.monitoredResourceDescriptors.*",
            "monitoring.timeSeries.create",
            "serviceusage.services.use"
          ],
          "title": "Dataproc Resource Manager Node Service Agent"
        },
        {
          "description": "Grants Cloud Datastream permissions to write data in the user project.",
          "id": "roles/datastream.serviceAgent",
          "is_beta": false,
          "permissions": [
            "bigquery.connections.delegate",
            "bigquery.connections.get",
            "bigquery.datasets.create",
            "bigquery.datasets.get",
            "bigquery.jobs.create",
            "bigquery.jobs.delete",
            "bigquery.jobs.get",
            "bigquery.jobs.list",
            "bigquery.jobs.update",
            "bigquery.tables.create",
            "bigquery.tables.get",
            "bigquery.tables.getData",
            "bigquery.tables.list",
            "bigquery.tables.update",
            "bigquery.tables.updateData",
            "compute.globalAddresses.create",
            "compute.globalAddresses.createInternal",
            "compute.globalAddresses.delete",
            "compute.globalAddresses.deleteInternal",
            "compute.globalAddresses.get",
            "compute.globalOperations.get",
            "compute.networkAttachments.get",
            "compute.networkAttachments.list",
            "compute.networks.addPeering",
            "compute.networks.get",
            "compute.networks.listPeeringRoutes",
            "compute.networks.removePeering",
            "compute.networks.use",
            "compute.routes.get",
            "compute.routes.list",
            "compute.subnetworks.get",
            "compute.subnetworks.list",
            "pubsub.topics.publish",
            "storage.buckets.get",
            "storage.objects.create",
            "storage.objects.get",
            "storage.objects.list"
          ],
          "title": "Datastream Service Agent"
        },
        {
          "description": "Grants Data Studio Service Account access to manage resources.",
          "id": "roles/datastudio.serviceAgent",
          "is_beta": false,
          "permissions": [
            "bigquery.jobs.create"
          ],
          "title": "Data Studio Service Agent"
        },
        {
          "description": "Gives the DesignCenter API Service Account access to necessary GCP resources.",
          "id": "roles/designcenter.serviceAgent",
          "is_beta": false,
          "permissions": [
            "apphub.applications.create",
            "apphub.applications.delete",
            "apphub.applications.get",
            "apphub.applications.list",
            "apphub.applications.update",
            "apphub.operations.get",
            "apphub.operations.list",
            "apphub.serviceProjectAttachments.get",
            "apphub.serviceProjectAttachments.list",
            "apphub.serviceProjectAttachments.lookup",
            "config.deployments.create",
            "config.deployments.delete",
            "config.deployments.get",
            "config.deployments.getState",
            "config.deployments.list",
            "config.deployments.lock",
            "config.deployments.unlock",
            "config.deployments.update",
            "config.locations.*",
            "config.operations.*",
            "config.previews.create",
            "config.previews.delete",
            "config.previews.get",
            "config.previews.list",
            "config.resources.*",
            "config.revisions.*",
            "config.terraformversions.*",
            "storage.buckets.create",
            "storage.buckets.delete",
            "storage.buckets.get",
            "storage.buckets.list",
            "storage.buckets.update",
            "storage.managedFolders.create",
            "storage.managedFolders.delete",
            "storage.managedFolders.get",
            "storage.managedFolders.getIamPolicy",
            "storage.managedFolders.list",
            "storage.objects.create",
            "storage.objects.delete",
            "storage.objects.get",
            "storage.objects.list",
            "storage.objects.update"
          ],
          "title": "DesignCenter Service Agent"
        },
        {
          "description": "Gives Dialogflow Service Account access to resources on behalf of user project for Integrations (Facebook Messenger, Slack, Telephony, etc.), BigQuery, Discovery Engine, Integration Connectors, and Vertex.",
          "id": "roles/dialogflow.serviceAgent",
          "is_beta": false,
          "permissions": [
            "aiplatform.endpoints.get",
            "aiplatform.endpoints.predict",
            "aiplatform.extensions.execute",
            "aiplatform.extensions.get",
            "aiplatform.models.get",
            "bigquery.datasets.create",
            "bigquery.jobs.create",
            "bigquery.tables.create",
            "bigquery.tables.get",
            "bigquery.tables.getData",
            "bigquery.tables.updateData",
            "cloudfunctions.functions.invoke",
            "connectors.actions.*",
            "connectors.connections.executeSqlQuery",
            "connectors.connections.generateOpenAPISpec",
            "connectors.connections.get",
            "connectors.entities.*",
            "connectors.entityTypes.list",
            "connectors.operations.get",
            "connectors.versions.get",
            "dialogflow.agents.export",
            "dialogflow.agents.get",
            "dialogflow.agents.list",
            "dialogflow.agents.search",
            "dialogflow.agents.searchResources",
            "dialogflow.answerrecords.get",
            "dialogflow.answerrecords.list",
            "dialogflow.callMatchers.list",
            "dialogflow.changelogs.*",
            "dialogflow.contexts.*",
            "dialogflow.conversationDatasets.get",
            "dialogflow.conversationDatasets.list",
            "dialogflow.conversationModels.get",
            "dialogflow.conversationModels.list",
            "dialogflow.conversationProfiles.*",
            "dialogflow.conversations.*",
            "dialogflow.deployments.*",
            "dialogflow.documents.get",
            "dialogflow.documents.list",
            "dialogflow.encryptionspec.get",
            "dialogflow.entityTypes.get",
            "dialogflow.entityTypes.list",
            "dialogflow.environments.get",
            "dialogflow.environments.list",
            "dialogflow.environments.runContinuousTest",
            "dialogflow.examples.get",
            "dialogflow.examples.list",
            "dialogflow.experiments.get",
            "dialogflow.experiments.list",
            "dialogflow.flows.get",
            "dialogflow.flows.list",
            "dialogflow.fulfillments.get",
            "dialogflow.generators.get",
            "dialogflow.generators.list",
            "dialogflow.integrations.get",
            "dialogflow.integrations.list",
            "dialogflow.intents.get",
            "dialogflow.intents.list",
            "dialogflow.knowledgeBases.get",
            "dialogflow.knowledgeBases.list",
            "dialogflow.messages.list",
            "dialogflow.modelEvaluations.*",
            "dialogflow.operations.get",
            "dialogflow.pages.get",
            "dialogflow.pages.list",
            "dialogflow.participants.*",
            "dialogflow.phoneNumberOrders.get",
            "dialogflow.phoneNumberOrders.list",
            "dialogflow.phoneNumbers.list",
            "dialogflow.playbooks.get",
            "dialogflow.playbooks.list",
            "dialogflow.securitySettings.get",
            "dialogflow.securitySettings.list",
            "dialogflow.sessionEntityTypes.*",
            "dialogflow.sessions.*",
            "dialogflow.smartMessagingEntries.get",
            "dialogflow.smartMessagingEntries.list",
            "dialogflow.testcases.get",
            "dialogflow.testcases.list",
            "dialogflow.tools.get",
            "dialogflow.tools.list",
            "dialogflow.transitionRouteGroups.get",
            "dialogflow.transitionRouteGroups.list",
            "dialogflow.versions.get",
            "dialogflow.versions.list",
            "dialogflow.webhooks.get",
            "dialogflow.webhooks.list",
            "discoveryengine.collections.list",
            "discoveryengine.dataStores.create",
            "discoveryengine.dataStores.list",
            "discoveryengine.documents.create",
            "discoveryengine.documents.get",
            "discoveryengine.documents.import",
            "discoveryengine.documents.list",
            "discoveryengine.documents.update",
            "discoveryengine.engines.create",
            "discoveryengine.engines.delete",
            "discoveryengine.engines.get",
            "discoveryengine.engines.update",
            "discoveryengine.schemas.get",
            "discoveryengine.schemas.list",
            "discoveryengine.servingConfigs.search",
            "dlp.deidentifyTemplates.get",
            "dlp.deidentifyTemplates.list",
            "dlp.inspectTemplates.get",
            "dlp.inspectTemplates.list",
            "logging.logEntries.create",
            "logging.logEntries.route",
            "pubsub.snapshots.seek",
            "pubsub.subscriptions.consume",
            "pubsub.topics.attachSubscription",
            "pubsub.topics.publish",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "run.jobs.run",
            "run.routes.invoke",
            "serviceusage.services.use",
            "speakerid.phrases.*",
            "speakerid.speakers.*",
            "speech.adaptations.execute",
            "speech.customClasses.get",
            "speech.customClasses.list",
            "speech.phraseSets.get",
            "speech.phraseSets.list",
            "speech.recognizers.get",
            "speech.recognizers.list",
            "storage.folders.get",
            "storage.folders.list",
            "storage.managedFolders.get",
            "storage.managedFolders.list",
            "storage.objects.create",
            "storage.objects.get",
            "storage.objects.list"
          ],
          "title": "Dialogflow Service Agent"
        },
        {
          "description": "Discovery Engine service uploads documents and user events from Cloud Storage and BigQuery, reports results to the customer Cloud Storage bucket, writes logs to customer projects using Cloud Logging, and writes and reads metrics for customer using Cloud Monitoring.",
          "id": "roles/discoveryengine.serviceAgent",
          "is_beta": false,
          "permissions": [
            "alloydb.clusters.export",
            "alloydb.databases.list",
            "alloydb.instances.get",
            "alloydb.operations.get",
            "bigquery.datasets.create",
            "bigquery.datasets.get",
            "bigquery.jobs.create",
            "bigquery.jobs.get",
            "bigquery.jobs.list",
            "bigquery.jobs.update",
            "bigquery.tables.create",
            "bigquery.tables.export",
            "bigquery.tables.get",
            "bigquery.tables.getData",
            "bigquery.tables.list",
            "bigquery.tables.update",
            "bigquery.tables.updateData",
            "bigtable.tables.readRows",
            "bigtable.tables.sampleRowKeys",
            "cloudsql.databases.get",
            "cloudsql.instances.export",
            "cloudsql.instances.get",
            "datastore.databases.export",
            "datastore.databases.get",
            "datastore.databases.getMetadata",
            "datastore.operations.get",
            "discoveryengine.completionConfigs.completeQuery",
            "discoveryengine.conversations.converse",
            "discoveryengine.conversations.create",
            "discoveryengine.dataStores.completeQuery",
            "discoveryengine.servingConfigs.answer",
            "discoveryengine.servingConfigs.search",
            "discoveryengine.userEvents.create",
            "integrations.apigeeExecutions.list",
            "integrations.apigeeIntegrationVers.get",
            "integrations.apigeeIntegrationVers.list",
            "integrations.integrationVersions.get",
            "integrations.integrationVersions.invoke",
            "integrations.integrationVersions.list",
            "integrations.integrations.get",
            "integrations.integrations.invoke",
            "integrations.integrations.list",
            "integrations.testCases.get",
            "integrations.testCases.invoke",
            "integrations.testCases.list",
            "logging.logEntries.create",
            "monitoring.metricDescriptors.create",
            "monitoring.metricDescriptors.get",
            "monitoring.metricDescriptors.list",
            "monitoring.monitoredResourceDescriptors.*",
            "monitoring.timeSeries.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "spanner.databases.beginReadOnlyTransaction",
            "spanner.databases.partitionQuery",
            "spanner.databases.select",
            "spanner.databases.useDataBoost",
            "spanner.sessions.create",
            "storage.buckets.create",
            "storage.buckets.get",
            "storage.buckets.getIamPolicy",
            "storage.buckets.setIamPolicy",
            "storage.managedFolders.*",
            "storage.objects.create",
            "storage.objects.delete",
            "storage.objects.get",
            "storage.objects.list",
            "storage.objects.update"
          ],
          "title": "Discovery Engine Service Agent"
        },
        {
          "description": "Gives the Cloud DLP API service agent permissions for BigQuery, Cloud Storage, Datastore, Pub/Sub, and Cloud KMS.",
          "id": "roles/dlp.serviceAgent",
          "is_beta": false,
          "permissions": [
            "appengine.applications.get",
            "bigquery.config.get",
            "bigquery.dataPolicies.create",
            "bigquery.dataPolicies.delete",
            "bigquery.dataPolicies.get",
            "bigquery.dataPolicies.getIamPolicy",
            "bigquery.dataPolicies.list",
            "bigquery.dataPolicies.setIamPolicy",
            "bigquery.dataPolicies.update",
            "bigquery.datasets.*",
            "bigquery.jobs.create",
            "bigquery.jobs.get",
            "bigquery.jobs.update",
            "bigquery.models.*",
            "bigquery.readsessions.*",
            "bigquery.routines.*",
            "bigquery.rowAccessPolicies.create",
            "bigquery.rowAccessPolicies.delete",
            "bigquery.rowAccessPolicies.getIamPolicy",
            "bigquery.rowAccessPolicies.list",
            "bigquery.rowAccessPolicies.setIamPolicy",
            "bigquery.rowAccessPolicies.update",
            "bigquery.tables.*",
            "cloudasset.assets.analyzeIamPolicy",
            "cloudasset.assets.exportResource",
            "cloudasset.assets.searchAllIamPolicies",
            "cloudkms.cryptoKeyVersions.useToDecrypt",
            "cloudkms.locations.get",
            "cloudkms.locations.list",
            "datacatalog.categories.fineGrainedGet",
            "datacatalog.tagTemplates.*",
            "dataform.locations.*",
            "dataform.repositories.create",
            "dataform.repositories.list",
            "dataplex.projects.search",
            "datastore.databases.get",
            "datastore.databases.getMetadata",
            "datastore.databases.list",
            "datastore.entities.*",
            "datastore.indexes.list",
            "datastore.namespaces.*",
            "datastore.statistics.*",
            "dlp.analyzeRiskTemplates.get",
            "dlp.analyzeRiskTemplates.list",
            "dlp.deidentifyTemplates.get",
            "dlp.deidentifyTemplates.list",
            "dlp.inspectTemplates.get",
            "dlp.inspectTemplates.list",
            "dlp.jobs.*",
            "dlp.kms.encrypt",
            "firebase.projects.get",
            "orgpolicy.policy.get",
            "pubsub.*",
            "recommender.iamPolicyInsights.*",
            "recommender.iamPolicyRecommendations.*",
            "recommender.storageBucketSoftDeleteInsights.*",
            "recommender.storageBucketSoftDeleteRecommendations.*",
            "resourcemanager.hierarchyNodes.listEffectiveTags",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "serviceusage.quotas.get",
            "serviceusage.services.get",
            "serviceusage.services.list",
            "serviceusage.services.use",
            "storage.anywhereCaches.*",
            "storage.bucketOperations.*",
            "storage.buckets.*",
            "storage.folders.*",
            "storage.intelligenceConfigs.*",
            "storage.managedFolders.*",
            "storage.multipartUploads.*",
            "storage.objects.*"
          ],
          "title": "DLP API Service Agent"
        },
        {
          "description": "Gives Cloud DNS Service Agent access to Cloud Platform resources.",
          "id": "roles/dns.serviceAgent",
          "is_beta": false,
          "permissions": [
            "compute.globalNetworkEndpointGroups.attachNetworkEndpoints",
            "compute.globalNetworkEndpointGroups.create",
            "compute.globalNetworkEndpointGroups.delete",
            "compute.globalNetworkEndpointGroups.detachNetworkEndpoints",
            "compute.globalNetworkEndpointGroups.get",
            "compute.globalOperations.get",
            "compute.healthChecks.get"
          ],
          "title": "Cloud DNS Service Agent"
        },
        {
          "description": "Gives DocumentAI Core Service Account access to consumer resources.",
          "id": "roles/documentaicore.serviceAgent",
          "is_beta": false,
          "permissions": [
            "automl.models.predict",
            "documentai.humanReviewConfigs.review",
            "storage.buckets.get",
            "storage.objects.create",
            "storage.objects.delete",
            "storage.objects.get",
            "storage.objects.list",
            "storage.objects.update"
          ],
          "title": "DocumentAI Core Service Agent"
        },
        {
          "description": "Gives DSPM Service Account access to consumer resources.",
          "id": "roles/dspm.serviceAgent",
          "is_beta": false,
          "permissions": [
            "aiplatform.dataItems.list",
            "aiplatform.datasets.list",
            "aiplatform.endpoints.list",
            "aiplatform.models.list",
            "aiplatform.trainingPipelines.list",
            "aiplatform.tuningJobs.list",
            "bigquery.datasets.createTagBinding",
            "bigquery.datasets.deleteTagBinding",
            "bigquery.datasets.listEffectiveTags",
            "bigquery.datasets.listTagBindings",
            "bigquery.jobs.create",
            "bigquery.tables.createTagBinding",
            "bigquery.tables.deleteTagBinding",
            "bigquery.tables.getData",
            "bigquery.tables.list",
            "bigquery.tables.listEffectiveTags",
            "bigquery.tables.listTagBindings",
            "cloudasset.assets.exportResource",
            "cloudasset.assets.listResource",
            "cloudasset.assets.queryResource",
            "cloudasset.assets.searchAllResources",
            "cloudasset.feeds.create",
            "cloudasset.feeds.delete",
            "cloudasset.feeds.update",
            "resourcemanager.hierarchyNodes.*",
            "resourcemanager.tagKeys.create",
            "resourcemanager.tagKeys.delete",
            "resourcemanager.tagKeys.get",
            "resourcemanager.tagKeys.getIamPolicy",
            "resourcemanager.tagKeys.list",
            "resourcemanager.tagKeys.update",
            "resourcemanager.tagValueBindings.*",
            "resourcemanager.tagValues.create",
            "resourcemanager.tagValues.delete",
            "resourcemanager.tagValues.get",
            "resourcemanager.tagValues.getIamPolicy",
            "resourcemanager.tagValues.list",
            "resourcemanager.tagValues.update",
            "securitycenter.securityhealthanalyticssettings.*",
            "securitycentermanagement.effectiveSecurityHealthAnalyticsCustomModules.get",
            "securitycentermanagement.securityHealthAnalyticsCustomModules.create",
            "securitycentermanagement.securityHealthAnalyticsCustomModules.get",
            "securityposture.operations.get",
            "securityposture.postureDeployments.create",
            "securityposture.postureDeployments.delete",
            "securityposture.postures.create",
            "securityposture.postures.get",
            "storage.buckets.createTagBinding",
            "storage.buckets.deleteTagBinding",
            "storage.buckets.listEffectiveTags",
            "storage.buckets.listTagBindings"
          ],
          "title": "DSPM Service Agent"
        },
        {
          "description": "Grants the Edge Container Cluster Service Account access to manage resources.",
          "id": "roles/edgecontainer.clusterServiceAgent",
          "is_beta": false,
          "permissions": [
            "cloudnotifications.activities.list",
            "gkehub.endpoints.connect",
            "gkehub.features.create",
            "gkehub.features.get",
            "gkehub.features.list",
            "gkehub.features.update",
            "gkehub.fleet.create",
            "gkehub.fleet.delete",
            "gkehub.fleet.get",
            "gkehub.locations.*",
            "gkehub.memberships.create",
            "gkehub.memberships.delete",
            "gkehub.memberships.generateConnectManifest",
            "gkehub.memberships.get",
            "gkehub.memberships.list",
            "gkehub.memberships.update",
            "gkehub.operations.*",
            "kubernetesmetadata.*",
            "logging.logEntries.create",
            "monitoring.alertPolicies.get",
            "monitoring.alertPolicies.list",
            "monitoring.alertPolicies.listEffectiveTags",
            "monitoring.alertPolicies.listTagBindings",
            "monitoring.dashboards.*",
            "monitoring.groups.get",
            "monitoring.groups.list",
            "monitoring.metricDescriptors.create",
            "monitoring.metricDescriptors.get",
            "monitoring.metricDescriptors.list",
            "monitoring.monitoredResourceDescriptors.*",
            "monitoring.notificationChannelDescriptors.*",
            "monitoring.notificationChannels.get",
            "monitoring.notificationChannels.list",
            "monitoring.services.get",
            "monitoring.services.list",
            "monitoring.slos.get",
            "monitoring.slos.list",
            "monitoring.snoozes.get",
            "monitoring.snoozes.list",
            "monitoring.timeSeries.*",
            "monitoring.uptimeCheckConfigs.get",
            "monitoring.uptimeCheckConfigs.list",
            "opsconfigmonitoring.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "serviceusage.quotas.get",
            "serviceusage.services.enable",
            "serviceusage.services.get",
            "serviceusage.services.list",
            "stackdriver.projects.get",
            "stackdriver.resourceMetadata.*",
            "storage.buckets.create",
            "storage.buckets.get",
            "storage.buckets.list",
            "storage.buckets.update",
            "storage.objects.create",
            "storage.objects.delete",
            "storage.objects.get",
            "storage.objects.list",
            "storage.objects.update"
          ],
          "title": "Edge Container Cluster Service Agent"
        },
        {
          "description": "Grants the Edge Container Service Account access to manage resources.",
          "id": "roles/edgecontainer.serviceAgent",
          "is_beta": false,
          "permissions": [
            "compute.externalVpnGateways.create",
            "compute.externalVpnGateways.delete",
            "compute.externalVpnGateways.get",
            "compute.externalVpnGateways.use",
            "compute.globalOperations.get",
            "compute.networks.get",
            "compute.networks.updatePolicy",
            "compute.regionOperations.get",
            "compute.routers.create",
            "compute.routers.delete",
            "compute.routers.get",
            "compute.routers.list",
            "compute.routers.update",
            "compute.routers.use",
            "compute.vpnGateways.create",
            "compute.vpnGateways.delete",
            "compute.vpnGateways.get",
            "compute.vpnGateways.use",
            "compute.vpnTunnels.create",
            "compute.vpnTunnels.delete",
            "compute.vpnTunnels.get",
            "gkehub.memberships.create",
            "gkehub.memberships.delete",
            "gkehub.memberships.generateConnectManifest",
            "gkehub.memberships.get",
            "gkehub.memberships.list",
            "gkehub.memberships.update",
            "gkehub.operations.cancel",
            "gkehub.operations.get",
            "serviceusage.services.list"
          ],
          "title": "Edge Container Service Agent"
        },
        {
          "description": "Gives the Cloud Endpoints service account access to Endpoints services and the ability to act as a service controller.",
          "id": "roles/endpoints.serviceAgent",
          "is_beta": false,
          "permissions": [
            "servicemanagement.services.check",
            "servicemanagement.services.get",
            "servicemanagement.services.quota",
            "servicemanagement.services.report"
          ],
          "title": "Cloud Endpoints Service Agent"
        },
        {
          "description": "Can access information about Endpoints services for consumer portal management, and can read Source Repositories for consumer portal custom content.",
          "id": "roles/endpointsportal.serviceAgent",
          "is_beta": false,
          "permissions": [
            "servicemanagement.services.get",
            "servicemanagement.services.list",
            "source.repos.get"
          ],
          "title": "Endpoints Portal Service Agent"
        },
        {
          "description": "Gives Enterprise Knowledge Graph Service Account access to consumer resources.",
          "id": "roles/enterpriseknowledgegraph.serviceAgent",
          "is_beta": false,
          "permissions": [
            "bigquery.config.get",
            "bigquery.datasets.create",
            "bigquery.datasets.get",
            "bigquery.jobs.create",
            "bigquery.readsessions.create",
            "bigquery.readsessions.getData",
            "bigquery.tables.create",
            "bigquery.tables.get",
            "bigquery.tables.getData",
            "bigquery.tables.list",
            "bigquery.tables.update",
            "bigquery.tables.updateData",
            "dataform.locations.*",
            "dataform.repositories.create",
            "dataform.repositories.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "storage.objects.get",
            "storage.objects.list"
          ],
          "title": "Enterprise Knowledge Graph Service Agent"
        },
        {
          "description": "Gives Eventarc service account access to managed resources.",
          "id": "roles/eventarc.serviceAgent",
          "is_beta": false,
          "permissions": [
            "cloudfunctions.functions.get",
            "compute.instanceGroupManagers.get",
            "compute.networkAttachments.get",
            "compute.networkAttachments.update",
            "compute.regionOperations.get",
            "container.clusters.connect",
            "container.clusters.get",
            "container.deployments.create",
            "container.deployments.delete",
            "container.deployments.get",
            "container.deployments.list",
            "container.deployments.update",
            "container.namespaces.create",
            "container.namespaces.delete",
            "container.namespaces.get",
            "container.namespaces.list",
            "container.serviceAccounts.create",
            "container.serviceAccounts.delete",
            "container.serviceAccounts.get",
            "container.serviceAccounts.list",
            "container.services.get",
            "container.services.list",
            "dns.networks.targetWithPeeringZone",
            "eventarc.channels.publish",
            "eventarc.messageBuses.publish",
            "eventarc.operations.get",
            "iam.serviceAccounts.actAs",
            "iam.serviceAccounts.getAccessToken",
            "iam.serviceAccounts.getOpenIdToken",
            "monitoring.timeSeries.create",
            "pubsub.subscriptions.consume",
            "pubsub.subscriptions.create",
            "pubsub.subscriptions.delete",
            "pubsub.subscriptions.get",
            "pubsub.subscriptions.list",
            "pubsub.subscriptions.update",
            "pubsub.topics.attachSubscription",
            "pubsub.topics.create",
            "pubsub.topics.delete",
            "pubsub.topics.get",
            "pubsub.topics.list",
            "pubsub.topics.publish",
            "pubsub.topics.update",
            "run.jobs.get",
            "run.services.get",
            "serviceusage.services.use",
            "storage.buckets.get",
            "storage.buckets.update",
            "workflows.workflows.get"
          ],
          "title": "Eventarc Service Agent"
        },
        {
          "description": "Gives Cloud Filestore service account access to managed resources.",
          "id": "roles/file.serviceAgent",
          "is_beta": false,
          "permissions": [
            "compute.globalOperations.get",
            "compute.networks.addPeering",
            "compute.networks.get",
            "compute.networks.removePeering",
            "compute.networks.update",
            "compute.networks.updatePeering",
            "compute.routes.list",
            "monitoring.metricDescriptors.create",
            "monitoring.metricDescriptors.get",
            "monitoring.metricDescriptors.list",
            "monitoring.monitoredResourceDescriptors.*",
            "monitoring.timeSeries.create",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Cloud Filestore Service Agent"
        },
        {
          "description": "Read and write access to Firebase App Distribution with the Admin SDK",
          "id": "roles/firebase.appDistributionSdkServiceAgent",
          "is_beta": false,
          "permissions": [
            "firebaseappdistro.*"
          ],
          "title": "Firebase App Distribution Admin SDK Service Agent"
        },
        {
          "description": "Access to create new service agents for Firebase projects; assign roles to service agents; provision GCP resources as required by Firebase services.",
          "id": "roles/firebase.managementServiceAgent",
          "is_beta": false,
          "permissions": [
            "apikeys.keys.create",
            "apikeys.keys.get",
            "apikeys.keys.list",
            "apikeys.keys.update",
            "appengine.applications.create",
            "appengine.applications.get",
            "appengine.applications.update",
            "appengine.operations.get",
            "appengine.services.list",
            "bigquery.datasets.create",
            "bigquery.datasets.get",
            "bigquery.datasets.update",
            "bigquery.transfers.*",
            "clientauthconfig.brands.create",
            "clientauthconfig.brands.get",
            "clientauthconfig.brands.list",
            "clientauthconfig.brands.update",
            "clientauthconfig.clients.create",
            "clientauthconfig.clients.delete",
            "clientauthconfig.clients.get",
            "clientauthconfig.clients.getWithSecret",
            "clientauthconfig.clients.list",
            "clientauthconfig.clients.update",
            "firebase.clients.create",
            "firebase.clients.delete",
            "firebase.clients.get",
            "firebase.clients.undelete",
            "firebase.clients.update",
            "firebase.projects.*",
            "firebaseabt.experiments.delete",
            "firebaseauth.configs.create",
            "firebaseauth.configs.get",
            "firebaseauth.configs.update",
            "firebaserules.releases.create",
            "firebaserules.releases.delete",
            "firebaserules.releases.get",
            "firebaserules.rulesets.create",
            "firebasestorage.defaultBucket.get",
            "iam.roles.get",
            "iam.serviceAccounts.create",
            "iam.serviceAccounts.get",
            "iam.serviceAccounts.list",
            "resourcemanager.organizations.get",
            "resourcemanager.projects.get",
            "resourcemanager.projects.getIamPolicy",
            "resourcemanager.projects.setIamPolicy",
            "resourcemanager.projects.update",
            "servicemanagement.services.bind",
            "serviceusage.services.enable",
            "serviceusage.services.get",
            "serviceusage.services.list",
            "serviceusage.services.use",
            "storage.buckets.create",
            "storage.buckets.get",
            "storage.buckets.getIamPolicy",
            "storage.buckets.list",
            "storage.buckets.setIamPolicy"
          ],
          "title": "Firebase Service Management Service Agent"
        },
        {
          "description": "Gives Firebase App Hosting access to resource for Building & Deploying Backends.",
          "id": "roles/firebaseapphosting.serviceAgent",
          "is_beta": false,
          "permissions": [
            "artifactregistry.dockerimages.*",
            "artifactregistry.repositories.create",
            "artifactregistry.repositories.delete",
            "artifactregistry.repositories.deleteArtifacts",
            "artifactregistry.repositories.downloadArtifacts",
            "artifactregistry.repositories.get",
            "artifactregistry.repositories.update",
            "cloudbuild.builds.create",
            "cloudbuild.builds.get",
            "cloudbuild.builds.update",
            "cloudbuild.connections.get",
            "cloudbuild.operations.get",
            "cloudbuild.repositories.accessReadToken",
            "cloudbuild.repositories.accessReadWriteToken",
            "cloudbuild.repositories.get",
            "developerconnect.connections.get",
            "developerconnect.gitRepositoryLinks.fetchReadToken",
            "developerconnect.gitRepositoryLinks.fetchReadWriteToken",
            "developerconnect.gitRepositoryLinks.get",
            "iam.serviceAccounts.actAs",
            "run.operations.delete",
            "run.operations.get",
            "run.revisions.delete",
            "run.revisions.get",
            "run.routes.get",
            "run.routes.invoke",
            "run.services.create",
            "run.services.delete",
            "run.services.get",
            "run.services.update",
            "serviceusage.services.use"
          ],
          "title": "Firebase App Hosting Service Agent"
        },
        {
          "description": "Access to BigQuery export for Crashlytics",
          "id": "roles/firebasecrashlytics.serviceAgent",
          "is_beta": false,
          "permissions": [
            "bigquery.datasets.create",
            "bigquery.datasets.get",
            "bigquery.tables.create",
            "bigquery.tables.get",
            "bigquery.tables.getData",
            "bigquery.tables.update",
            "bigquery.tables.updateData",
            "serviceusage.services.use"
          ],
          "title": "Firebase Crashlytics Service Agent"
        },
        {
          "description": "Access to publish triggers",
          "id": "roles/firebasedatabase.serviceAgent",
          "is_beta": false,
          "permissions": [
            "pubsub.topics.publish",
            "serviceusage.services.use"
          ],
          "title": "Firebase Realtime Database Service Agent"
        },
        {
          "description": "Gives Firebase Data Connect access to administer Cloud SQL instances.",
          "id": "roles/firebasedataconnect.serviceAgent",
          "is_beta": false,
          "permissions": [
            "cloudsql.databases.create",
            "cloudsql.databases.get",
            "cloudsql.instances.connect",
            "cloudsql.instances.get",
            "cloudsql.instances.login",
            "cloudsql.users.create",
            "cloudsql.users.get",
            "serviceusage.services.use"
          ],
          "title": "Firebase Data Connect Service Agent"
        },
        {
          "description": "Access to Cloud ML and AI resources used by Firebase ML",
          "id": "roles/firebaseml.serviceAgent",
          "is_beta": false,
          "permissions": [
            "aiplatform.endpoints.predict"
          ],
          "title": "Firebase Machine Learning Service Agent"
        },
        {
          "description": "Grants Firebase Security Rules access to Firestore for providing cross-service Rules.",
          "id": "roles/firebaserules.firestoreServiceAgent",
          "is_beta": false,
          "permissions": [
            "datastore.entities.get"
          ],
          "title": "Firebase Rules Firestore Service Agent"
        },
        {
          "description": "Access to Cloud Storage for Firebase through API and SDK.",
          "id": "roles/firebasestorage.serviceAgent",
          "is_beta": false,
          "permissions": [
            "storage.buckets.get",
            "storage.buckets.getIamPolicy",
            "storage.objects.create",
            "storage.objects.delete",
            "storage.objects.get",
            "storage.objects.getIamPolicy",
            "storage.objects.list",
            "storage.objects.update"
          ],
          "title": "Cloud Storage for Firebase Service Agent"
        },
        {
          "description": "Gives Firestore service account access to managed resources.",
          "id": "roles/firestore.serviceAgent",
          "is_beta": false,
          "permissions": [
            "storage.buckets.get",
            "storage.objects.create",
            "storage.objects.delete",
            "storage.objects.get",
            "storage.objects.list"
          ],
          "title": "Firestore Service Agent"
        },
        {
          "description": "Gives Cloud Firewall Insights service agent permissions to retrieve Firewall, VM and route resources on user behalf.",
          "id": "roles/firewallinsights.serviceAgent",
          "is_beta": false,
          "permissions": [
            "compute.backendServices.list",
            "compute.firewalls.get",
            "compute.firewalls.list",
            "compute.forwardingRules.list",
            "compute.healthChecks.list",
            "compute.httpHealthChecks.list",
            "compute.httpsHealthChecks.list",
            "compute.instanceGroups.list",
            "compute.instances.get",
            "compute.instances.list",
            "compute.networks.getEffectiveFirewalls",
            "compute.networks.list",
            "compute.projects.get",
            "compute.regionTargetTcpProxies.list",
            "compute.routers.list",
            "compute.routes.get",
            "compute.routes.list",
            "compute.subnetworks.list",
            "compute.targetHttpProxies.list",
            "compute.targetHttpsProxies.list",
            "compute.targetPools.list",
            "compute.targetSslProxies.list",
            "compute.targetTcpProxies.list",
            "compute.targetVpnGateways.list",
            "compute.urlMaps.list",
            "compute.vpnGateways.list",
            "compute.vpnTunnels.list"
          ],
          "title": "Cloud Firewall Insights Service Agent"
        },
        {
          "description": "Grants the FleetEngine Service Account access to manage resources.",
          "id": "roles/fleetengine.serviceAgent",
          "is_beta": false,
          "permissions": [
            "bigquery.config.get",
            "bigquery.datasets.create",
            "bigquery.datasets.get",
            "bigquery.jobs.create",
            "bigquery.tables.getData",
            "dataform.locations.*",
            "dataform.repositories.create",
            "dataform.repositories.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "serviceusage.services.enable"
          ],
          "title": "FleetEngine Service Agent"
        },
        {
          "description": "Gives Game Services Service Account access to GCP resources.",
          "id": "roles/gameservices.serviceAgent",
          "is_beta": false,
          "permissions": [
            "container.apiServices.*",
            "container.auditSinks.*",
            "container.backendConfigs.*",
            "container.bindings.*",
            "container.certificateSigningRequests.create",
            "container.certificateSigningRequests.delete",
            "container.certificateSigningRequests.get",
            "container.certificateSigningRequests.list",
            "container.certificateSigningRequests.update",
            "container.certificateSigningRequests.updateStatus",
            "container.clusterRoleBindings.create",
            "container.clusterRoleBindings.get",
            "container.clusterRoleBindings.list",
            "container.clusterRoleBindings.update",
            "container.clusterRoles.bind",
            "container.clusterRoles.create",
            "container.clusterRoles.escalate",
            "container.clusterRoles.get",
            "container.clusterRoles.list",
            "container.clusterRoles.update",
            "container.clusters.connect",
            "container.clusters.create",
            "container.clusters.delete",
            "container.clusters.get",
            "container.clusters.list",
            "container.clusters.update",
            "container.componentStatuses.*",
            "container.configMaps.*",
            "container.controllerRevisions.get",
            "container.controllerRevisions.list",
            "container.cronJobs.*",
            "container.csiDrivers.*",
            "container.csiNodeInfos.*",
            "container.csiNodes.*",
            "container.customResourceDefinitions.*",
            "container.daemonSets.*",
            "container.deployments.*",
            "container.endpointSlices.*",
            "container.endpoints.*",
            "container.events.*",
            "container.frontendConfigs.*",
            "container.horizontalPodAutoscalers.*",
            "container.ingresses.*",
            "container.initializerConfigurations.*",
            "container.jobs.*",
            "container.leases.*",
            "container.limitRanges.*",
            "container.localSubjectAccessReviews.*",
            "container.managedCertificates.*",
            "container.mutatingWebhookConfigurations.*",
            "container.namespaces.*",
            "container.networkPolicies.*",
            "container.nodes.*",
            "container.operations.*",
            "container.persistentVolumeClaims.*",
            "container.persistentVolumes.*",
            "container.petSets.*",
            "container.podDisruptionBudgets.*",
            "container.podPresets.*",
            "container.podSecurityPolicies.get",
            "container.podSecurityPolicies.list",
            "container.podTemplates.*",
            "container.pods.*",
            "container.priorityClasses.*",
            "container.replicaSets.*",
            "container.replicationControllers.*",
            "container.resourceQuotas.*",
            "container.roleBindings.create",
            "container.roleBindings.get",
            "container.roleBindings.list",
            "container.roles.bind",
            "container.roles.create",
            "container.roles.escalate",
            "container.roles.get",
            "container.roles.list",
            "container.runtimeClasses.*",
            "container.scheduledJobs.*",
            "container.secrets.*",
            "container.selfSubjectAccessReviews.*",
            "container.selfSubjectRulesReviews.create",
            "container.serviceAccounts.*",
            "container.services.*",
            "container.statefulSets.*",
            "container.storageClasses.*",
            "container.storageStates.*",
            "container.storageVersionMigrations.*",
            "container.subjectAccessReviews.*",
            "container.thirdPartyObjects.*",
            "container.thirdPartyResources.*",
            "container.tokenReviews.create",
            "container.updateInfos.*",
            "container.validatingWebhookConfigurations.*",
            "container.volumeAttachments.*",
            "container.volumeSnapshotClasses.*",
            "container.volumeSnapshotContents.*",
            "container.volumeSnapshots.*",
            "gkehub.features.get",
            "gkehub.features.getIamPolicy",
            "gkehub.features.list",
            "gkehub.fleet.get",
            "gkehub.fleet.getFreeTrial",
            "gkehub.locations.*",
            "gkehub.membershipbindings.get",
            "gkehub.membershipbindings.list",
            "gkehub.membershipfeatures.get",
            "gkehub.membershipfeatures.list",
            "gkehub.memberships.generateConnectManifest",
            "gkehub.memberships.get",
            "gkehub.memberships.getIamPolicy",
            "gkehub.memberships.list",
            "gkehub.namespaces.get",
            "gkehub.namespaces.list",
            "gkehub.operations.get",
            "gkehub.operations.list",
            "gkehub.rbacrolebindings.get",
            "gkehub.rbacrolebindings.list",
            "gkehub.scopes.get",
            "gkehub.scopes.list",
            "gkehub.scopes.listBoundMemberships",
            "iam.serviceAccounts.actAs",
            "recommender.containerDiagnosisInsights.*",
            "recommender.containerDiagnosisRecommendations.*",
            "recommender.locations.*",
            "recommender.networkAnalyzerGkeConnectivityInsights.*",
            "recommender.networkAnalyzerGkeIpAddressInsights.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Game Services Service Agent"
        },
        {
          "description": "Gives Genomics Service Account access to compute resources. Includes access to service accounts.",
          "id": "roles/genomics.serviceAgent",
          "is_beta": false,
          "permissions": [
            "backupdr.backupPlanAssociations.createForComputeInstance",
            "backupdr.backupPlanAssociations.deleteForComputeInstance",
            "backupdr.backupPlanAssociations.list",
            "backupdr.backupPlanAssociations.triggerBackupForComputeInstance",
            "backupdr.backupPlans.get",
            "backupdr.backupPlans.list",
            "backupdr.backupPlans.useForComputeInstance",
            "backupdr.backupVaults.get",
            "backupdr.backupVaults.list",
            "backupdr.locations.list",
            "backupdr.operations.get",
            "backupdr.operations.list",
            "backupdr.serviceConfig.initialize",
            "compute.acceleratorTypes.*",
            "compute.addresses.createInternal",
            "compute.addresses.deleteInternal",
            "compute.addresses.get",
            "compute.addresses.list",
            "compute.addresses.listEffectiveTags",
            "compute.addresses.listTagBindings",
            "compute.addresses.use",
            "compute.addresses.useInternal",
            "compute.autoscalers.*",
            "compute.backendBuckets.get",
            "compute.backendBuckets.list",
            "compute.backendBuckets.listEffectiveTags",
            "compute.backendBuckets.listTagBindings",
            "compute.backendServices.get",
            "compute.backendServices.list",
            "compute.backendServices.listEffectiveTags",
            "compute.backendServices.listTagBindings",
            "compute.crossSiteNetworks.get",
            "compute.crossSiteNetworks.list",
            "compute.diskSettings.get",
            "compute.diskTypes.*",
            "compute.disks.*",
            "compute.externalVpnGateways.get",
            "compute.externalVpnGateways.list",
            "compute.externalVpnGateways.listEffectiveTags",
            "compute.externalVpnGateways.listTagBindings",
            "compute.firewalls.get",
            "compute.firewalls.list",
            "compute.firewalls.listEffectiveTags",
            "compute.firewalls.listTagBindings",
            "compute.forwardingRules.get",
            "compute.forwardingRules.list",
            "compute.forwardingRules.listEffectiveTags",
            "compute.forwardingRules.listTagBindings",
            "compute.globalAddresses.get",
            "compute.globalAddresses.list",
            "compute.globalAddresses.listEffectiveTags",
            "compute.globalAddresses.listTagBindings",
            "compute.globalAddresses.use",
            "compute.globalForwardingRules.get",
            "compute.globalForwardingRules.list",
            "compute.globalForwardingRules.listEffectiveTags",
            "compute.globalForwardingRules.listTagBindings",
            "compute.globalNetworkEndpointGroups.*",
            "compute.globalOperations.get",
            "compute.globalOperations.list",
            "compute.healthChecks.get",
            "compute.healthChecks.list",
            "compute.healthChecks.listEffectiveTags",
            "compute.healthChecks.listTagBindings",
            "compute.httpHealthChecks.get",
            "compute.httpHealthChecks.list",
            "compute.httpHealthChecks.listEffectiveTags",
            "compute.httpHealthChecks.listTagBindings",
            "compute.httpsHealthChecks.get",
            "compute.httpsHealthChecks.list",
            "compute.httpsHealthChecks.listEffectiveTags",
            "compute.httpsHealthChecks.listTagBindings",
            "compute.images.*",
            "compute.instanceGroupManagers.*",
            "compute.instanceGroups.*",
            "compute.instanceSettings.*",
            "compute.instanceTemplates.*",
            "compute.instances.*",
            "compute.instantSnapshots.*",
            "compute.interconnectAttachments.get",
            "compute.interconnectAttachments.list",
            "compute.interconnectAttachments.listEffectiveTags",
            "compute.interconnectAttachments.listTagBindings",
            "compute.interconnectLocations.*",
            "compute.interconnectRemoteLocations.*",
            "compute.interconnects.get",
            "compute.interconnects.list",
            "compute.interconnects.listEffectiveTags",
            "compute.interconnects.listTagBindings",
            "compute.licenseCodes.*",
            "compute.licenses.*",
            "compute.machineImages.*",
            "compute.machineTypes.*",
            "compute.multiMig.*",
            "compute.networkAttachments.get",
            "compute.networkAttachments.list",
            "compute.networkAttachments.listEffectiveTags",
            "compute.networkAttachments.listTagBindings",
            "compute.networkEndpointGroups.*",
            "compute.networkProfiles.*",
            "compute.networks.get",
            "compute.networks.list",
            "compute.networks.listEffectiveTags",
            "compute.networks.listTagBindings",
            "compute.networks.use",
            "compute.networks.useExternalIp",
            "compute.projects.get",
            "compute.projects.setCommonInstanceMetadata",
            "compute.regionBackendServices.get",
            "compute.regionBackendServices.list",
            "compute.regionBackendServices.listEffectiveTags",
            "compute.regionBackendServices.listTagBindings",
            "compute.regionHealthCheckServices.get",
            "compute.regionHealthCheckServices.list",
            "compute.regionHealthChecks.get",
            "compute.regionHealthChecks.list",
            "compute.regionHealthChecks.listEffectiveTags",
            "compute.regionHealthChecks.listTagBindings",
            "compute.regionNetworkEndpointGroups.*",
            "compute.regionNotificationEndpoints.get",
            "compute.regionNotificationEndpoints.list",
            "compute.regionOperations.get",
            "compute.regionOperations.list",
            "compute.regionSslCertificates.get",
            "compute.regionSslCertificates.list",
            "compute.regionSslCertificates.listEffectiveTags",
            "compute.regionSslCertificates.listTagBindings",
            "compute.regionSslPolicies.get",
            "compute.regionSslPolicies.list",
            "compute.regionSslPolicies.listAvailableFeatures",
            "compute.regionSslPolicies.listEffectiveTags",
            "compute.regionSslPolicies.listTagBindings",
            "compute.regionTargetHttpProxies.get",
            "compute.regionTargetHttpProxies.list",
            "compute.regionTargetHttpProxies.listEffectiveTags",
            "compute.regionTargetHttpProxies.listTagBindings",
            "compute.regionTargetHttpsProxies.get",
            "compute.regionTargetHttpsProxies.list",
            "compute.regionTargetHttpsProxies.listEffectiveTags",
            "compute.regionTargetHttpsProxies.listTagBindings",
            "compute.regionTargetTcpProxies.get",
            "compute.regionTargetTcpProxies.list",
            "compute.regionTargetTcpProxies.listEffectiveTags",
            "compute.regionTargetTcpProxies.listTagBindings",
            "compute.regionUrlMaps.get",
            "compute.regionUrlMaps.list",
            "compute.regionUrlMaps.listEffectiveTags",
            "compute.regionUrlMaps.listTagBindings",
            "compute.regions.*",
            "compute.reservationBlocks.get",
            "compute.reservationBlocks.list",
            "compute.reservations.get",
            "compute.reservations.list",
            "compute.resourcePolicies.*",
            "compute.routers.get",
            "compute.routers.getRoutePolicy",
            "compute.routers.list",
            "compute.routers.listBgpRoutes",
            "compute.routers.listEffectiveTags",
            "compute.routers.listRoutePolicies",
            "compute.routers.listTagBindings",
            "compute.routes.get",
            "compute.routes.list",
            "compute.routes.listEffectiveTags",
            "compute.routes.listTagBindings",
            "compute.serviceAttachments.get",
            "compute.serviceAttachments.list",
            "compute.serviceAttachments.listEffectiveTags",
            "compute.serviceAttachments.listTagBindings",
            "compute.snapshots.*",
            "compute.spotAssistants.get",
            "compute.sslCertificates.get",
            "compute.sslCertificates.list",
            "compute.sslCertificates.listEffectiveTags",
            "compute.sslCertificates.listTagBindings",
            "compute.sslPolicies.get",
            "compute.sslPolicies.list",
            "compute.sslPolicies.listAvailableFeatures",
            "compute.sslPolicies.listEffectiveTags",
            "compute.sslPolicies.listTagBindings",
            "compute.storagePools.get",
            "compute.storagePools.list",
            "compute.storagePools.use",
            "compute.subnetworks.get",
            "compute.subnetworks.list",
            "compute.subnetworks.listEffectiveTags",
            "compute.subnetworks.listTagBindings",
            "compute.subnetworks.use",
            "compute.subnetworks.useExternalIp",
            "compute.targetGrpcProxies.get",
            "compute.targetGrpcProxies.list",
            "compute.targetGrpcProxies.listEffectiveTags",
            "compute.targetGrpcProxies.listTagBindings",
            "compute.targetHttpProxies.get",
            "compute.targetHttpProxies.list",
            "compute.targetHttpProxies.listEffectiveTags",
            "compute.targetHttpProxies.listTagBindings",
            "compute.targetHttpsProxies.get",
            "compute.targetHttpsProxies.list",
            "compute.targetHttpsProxies.listEffectiveTags",
            "compute.targetHttpsProxies.listTagBindings",
            "compute.targetInstances.get",
            "compute.targetInstances.list",
            "compute.targetInstances.listEffectiveTags",
            "compute.targetInstances.listTagBindings",
            "compute.targetPools.get",
            "compute.targetPools.list",
            "compute.targetPools.listEffectiveTags",
            "compute.targetPools.listTagBindings",
            "compute.targetSslProxies.get",
            "compute.targetSslProxies.list",
            "compute.targetSslProxies.listEffectiveTags",
            "compute.targetSslProxies.listTagBindings",
            "compute.targetTcpProxies.get",
            "compute.targetTcpProxies.list",
            "compute.targetTcpProxies.listEffectiveTags",
            "compute.targetTcpProxies.listTagBindings",
            "compute.targetVpnGateways.get",
            "compute.targetVpnGateways.list",
            "compute.targetVpnGateways.listEffectiveTags",
            "compute.targetVpnGateways.listTagBindings",
            "compute.urlMaps.get",
            "compute.urlMaps.list",
            "compute.urlMaps.listEffectiveTags",
            "compute.urlMaps.listTagBindings",
            "compute.vpnGateways.get",
            "compute.vpnGateways.list",
            "compute.vpnGateways.listEffectiveTags",
            "compute.vpnGateways.listTagBindings",
            "compute.vpnTunnels.get",
            "compute.vpnTunnels.list",
            "compute.vpnTunnels.listEffectiveTags",
            "compute.vpnTunnels.listTagBindings",
            "compute.wireGroups.get",
            "compute.wireGroups.list",
            "compute.zoneOperations.get",
            "compute.zoneOperations.list",
            "compute.zones.*",
            "iam.serviceAccounts.actAs",
            "pubsub.topics.publish",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "serviceusage.quotas.get",
            "serviceusage.services.get",
            "serviceusage.services.list",
            "serviceusage.services.use"
          ],
          "title": "Genomics Service Agent"
        },
        {
          "description": "Grants the Backup for GKE Service Account access to managed resources.",
          "id": "roles/gkebackup.serviceAgent",
          "is_beta": false,
          "permissions": [
            "compute.disks.create",
            "compute.disks.createSnapshot",
            "compute.disks.get",
            "compute.disks.list",
            "compute.disks.setLabels",
            "compute.disks.useReadOnly",
            "compute.globalOperations.get",
            "compute.regionOperations.get",
            "compute.snapshots.delete",
            "compute.snapshots.get",
            "compute.zoneOperations.get",
            "container.apiServices.*",
            "container.auditSinks.*",
            "container.backendConfigs.*",
            "container.bindings.*",
            "container.certificateSigningRequests.create",
            "container.certificateSigningRequests.delete",
            "container.certificateSigningRequests.get",
            "container.certificateSigningRequests.list",
            "container.certificateSigningRequests.update",
            "container.certificateSigningRequests.updateStatus",
            "container.clusterRoleBindings.get",
            "container.clusterRoleBindings.list",
            "container.clusterRoles.get",
            "container.clusterRoles.list",
            "container.clusters.connect",
            "container.clusters.get",
            "container.clusters.list",
            "container.clusters.update",
            "container.componentStatuses.*",
            "container.configMaps.*",
            "container.controllerRevisions.get",
            "container.controllerRevisions.list",
            "container.cronJobs.*",
            "container.csiDrivers.*",
            "container.csiNodeInfos.*",
            "container.csiNodes.*",
            "container.customResourceDefinitions.*",
            "container.daemonSets.*",
            "container.deployments.*",
            "container.endpointSlices.*",
            "container.endpoints.*",
            "container.events.*",
            "container.frontendConfigs.*",
            "container.horizontalPodAutoscalers.*",
            "container.ingresses.*",
            "container.initializerConfigurations.*",
            "container.jobs.*",
            "container.leases.*",
            "container.limitRanges.*",
            "container.localSubjectAccessReviews.*",
            "container.managedCertificates.*",
            "container.mutatingWebhookConfigurations.get",
            "container.mutatingWebhookConfigurations.list",
            "container.namespaces.*",
            "container.networkPolicies.*",
            "container.nodes.*",
            "container.operations.*",
            "container.persistentVolumeClaims.*",
            "container.persistentVolumes.*",
            "container.petSets.*",
            "container.podDisruptionBudgets.*",
            "container.podPresets.*",
            "container.podSecurityPolicies.get",
            "container.podSecurityPolicies.list",
            "container.podTemplates.*",
            "container.pods.*",
            "container.priorityClasses.*",
            "container.replicaSets.*",
            "container.replicationControllers.*",
            "container.resourceQuotas.*",
            "container.roleBindings.get",
            "container.roleBindings.list",
            "container.roles.get",
            "container.roles.list",
            "container.runtimeClasses.*",
            "container.scheduledJobs.*",
            "container.secrets.*",
            "container.selfSubjectAccessReviews.*",
            "container.selfSubjectRulesReviews.create",
            "container.serviceAccounts.*",
            "container.services.*",
            "container.statefulSets.*",
            "container.storageClasses.*",
            "container.storageStates.*",
            "container.storageVersionMigrations.*",
            "container.subjectAccessReviews.*",
            "container.thirdPartyObjects.*",
            "container.thirdPartyResources.*",
            "container.tokenReviews.create",
            "container.updateInfos.*",
            "container.validatingWebhookConfigurations.get",
            "container.validatingWebhookConfigurations.list",
            "container.volumeAttachments.*",
            "container.volumeSnapshotClasses.*",
            "container.volumeSnapshotContents.*",
            "container.volumeSnapshots.*",
            "gkebackup.operations.get",
            "recommender.containerDiagnosisInsights.*",
            "recommender.containerDiagnosisRecommendations.*",
            "recommender.locations.*",
            "recommender.networkAnalyzerGkeConnectivityInsights.*",
            "recommender.networkAnalyzerGkeIpAddressInsights.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "resourcemanager.projects.updateLiens"
          ],
          "title": "Backup for GKE Service Agent"
        },
        {
          "description": "Gives the Warp Run service agent access to Cloud Platform resources.",
          "id": "roles/gkedataplanemanagement.warpRunServiceAgent",
          "is_beta": false,
          "permissions": [
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Warp Run Service Agent"
        },
        {
          "description": "Gives the GKE Hub service agent permission to manage the project for cross-project fleet registration.",
          "id": "roles/gkehub.crossProjectServiceAgent",
          "is_beta": false,
          "permissions": [
            "resourcemanager.projects.getIamPolicy",
            "resourcemanager.projects.setIamPolicy"
          ],
          "title": "GKE Hub Cross Project Service Agent"
        },
        {
          "description": "Gives the GKE Hub service agent access to Cloud Platform resources.",
          "id": "roles/gkehub.serviceAgent",
          "is_beta": false,
          "permissions": [
            "container.clusterRoleBindings.*",
            "container.clusterRoles.*",
            "container.clusters.connect",
            "container.clusters.get",
            "container.clusters.list",
            "container.clusters.update",
            "container.customResourceDefinitions.create",
            "container.customResourceDefinitions.delete",
            "container.customResourceDefinitions.get",
            "container.customResourceDefinitions.list",
            "container.customResourceDefinitions.update",
            "container.namespaces.get",
            "container.operations.get",
            "container.thirdPartyObjects.*",
            "gkehub.features.create",
            "gkehub.features.get",
            "gkehub.features.list",
            "gkehub.fleet.create",
            "gkehub.fleet.get",
            "gkehub.gateway.delete",
            "gkehub.gateway.generateCredentials",
            "gkehub.gateway.get",
            "gkehub.gateway.patch",
            "gkehub.gateway.post",
            "gkehub.gateway.put",
            "gkehub.locations.*",
            "gkehub.memberships.create",
            "gkehub.memberships.generateConnectManifest",
            "gkehub.memberships.get",
            "gkehub.memberships.list",
            "gkehub.operations.get",
            "gkemulticloud.awsClusters.get",
            "gkemulticloud.azureClusters.get",
            "gkeonprem.bareMetalClusters.get",
            "gkeonprem.vmwareClusters.get",
            "logging.buckets.create",
            "logging.buckets.get",
            "logging.buckets.list",
            "logging.buckets.update",
            "logging.exclusions.*",
            "logging.sinks.*",
            "logging.views.create",
            "logging.views.get",
            "logging.views.list",
            "logging.views.update",
            "monitoring.metricsScopes.link",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "serviceusage.services.get",
            "serviceusage.services.list"
          ],
          "title": "GKE Hub Service Agent"
        },
        {
          "description": "Grants the Anthos Multi-Cloud Container Service Account access to manage resources.",
          "id": "roles/gkemulticloud.containerServiceAgent",
          "is_beta": false,
          "permissions": [
            "binaryauthorization.platformPolicies.evaluatePolicy",
            "binaryauthorization.platformPolicies.get",
            "binaryauthorization.platformPolicies.list",
            "binaryauthorization.policy.evaluatePolicy",
            "binaryauthorization.policy.get",
            "cloudnotifications.activities.list",
            "kubernetesmetadata.*",
            "logging.logEntries.create",
            "logging.logEntries.route",
            "monitoring.alertPolicies.get",
            "monitoring.alertPolicies.list",
            "monitoring.alertPolicies.listEffectiveTags",
            "monitoring.alertPolicies.listTagBindings",
            "monitoring.dashboards.get",
            "monitoring.dashboards.list",
            "monitoring.groups.get",
            "monitoring.groups.list",
            "monitoring.metricDescriptors.create",
            "monitoring.metricDescriptors.get",
            "monitoring.metricDescriptors.list",
            "monitoring.monitoredResourceDescriptors.*",
            "monitoring.notificationChannelDescriptors.*",
            "monitoring.notificationChannels.get",
            "monitoring.notificationChannels.list",
            "monitoring.services.get",
            "monitoring.services.list",
            "monitoring.slos.get",
            "monitoring.slos.list",
            "monitoring.snoozes.get",
            "monitoring.snoozes.list",
            "monitoring.timeSeries.*",
            "monitoring.uptimeCheckConfigs.get",
            "monitoring.uptimeCheckConfigs.list",
            "opsconfigmonitoring.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "serviceusage.services.use",
            "stackdriver.projects.get",
            "stackdriver.resourceMetadata.list"
          ],
          "title": "Anthos Multi-Cloud Container Service Agent"
        },
        {
          "description": "Grants the Anthos Multi-Cloud Control Plane Machine Service Account access to manage resources.",
          "id": "roles/gkemulticloud.controlPlaneMachineServiceAgent",
          "is_beta": false,
          "permissions": [
            "artifactregistry.dockerimages.get",
            "artifactregistry.repositories.downloadArtifacts",
            "artifactregistry.repositories.get",
            "serviceusage.services.use"
          ],
          "title": "Anthos Multi-Cloud Control Plane Machine Service Agent"
        },
        {
          "description": "Grants the Anthos Multi-Cloud Node Pool Machine Service Account access to manage resources.",
          "id": "roles/gkemulticloud.nodePoolMachineServiceAgent",
          "is_beta": false,
          "permissions": [
            "artifactregistry.dockerimages.get",
            "artifactregistry.repositories.downloadArtifacts",
            "artifactregistry.repositories.get",
            "serviceusage.services.use"
          ],
          "title": "Anthos Multi-Cloud Node Pool Machine Service Agent"
        },
        {
          "description": "Grants the Anthos Multi-Cloud Service Account access to manage resources.",
          "id": "roles/gkemulticloud.serviceAgent",
          "is_beta": false,
          "permissions": [
            "gkehub.features.*",
            "gkehub.fleet.*",
            "gkehub.locations.*",
            "gkehub.membershipbindings.*",
            "gkehub.membershipfeatures.*",
            "gkehub.memberships.*",
            "gkehub.namespaces.*",
            "gkehub.operations.*",
            "gkehub.rbacrolebindings.*",
            "gkehub.scopes.create",
            "gkehub.scopes.delete",
            "gkehub.scopes.get",
            "gkehub.scopes.getIamPolicy",
            "gkehub.scopes.list",
            "gkehub.scopes.listBoundMemberships",
            "gkehub.scopes.update",
            "gkemulticloud.awsClusters.delete",
            "gkemulticloud.awsNodePools.delete",
            "gkemulticloud.azureClients.delete",
            "gkemulticloud.azureClusters.delete",
            "gkemulticloud.azureNodePools.delete",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Anthos Multi-Cloud Service Agent"
        },
        {
          "description": "Gives the GKE On-Prem service agent access to Cloud Platform resources.",
          "id": "roles/gkeonprem.serviceAgent",
          "is_beta": false,
          "permissions": [
            "gkehub.memberships.delete",
            "gkehub.memberships.get",
            "gkehub.memberships.update",
            "gkeonprem.bareMetalAdminClusters.connect",
            "gkeonprem.bareMetalAdminClusters.enroll",
            "gkeonprem.bareMetalAdminClusters.get",
            "gkeonprem.bareMetalAdminClusters.unenroll",
            "gkeonprem.bareMetalClusters.enroll",
            "gkeonprem.bareMetalClusters.get",
            "gkeonprem.bareMetalClusters.unenroll",
            "gkeonprem.bareMetalNodePools.enroll",
            "gkeonprem.bareMetalNodePools.get",
            "gkeonprem.bareMetalNodePools.unenroll",
            "gkeonprem.operations.get",
            "gkeonprem.operations.list",
            "gkeonprem.vmwareAdminClusters.connect",
            "gkeonprem.vmwareAdminClusters.enroll",
            "gkeonprem.vmwareAdminClusters.get",
            "gkeonprem.vmwareAdminClusters.unenroll",
            "gkeonprem.vmwareClusters.enroll",
            "gkeonprem.vmwareClusters.get",
            "gkeonprem.vmwareClusters.unenroll",
            "gkeonprem.vmwareNodePools.enroll",
            "gkeonprem.vmwareNodePools.get",
            "gkeonprem.vmwareNodePools.unenroll"
          ],
          "title": "GKE On-Prem Service Agent"
        },
        {
          "description": "Gives the Healthcare Service Account access to networks, Kubernetes engine, and Pub/Sub resources.",
          "id": "roles/healthcare.serviceAgent",
          "is_beta": false,
          "permissions": [
            "cloudnotifications.activities.list",
            "monitoring.alertPolicies.get",
            "monitoring.alertPolicies.list",
            "monitoring.alertPolicies.listEffectiveTags",
            "monitoring.alertPolicies.listTagBindings",
            "monitoring.dashboards.get",
            "monitoring.dashboards.list",
            "monitoring.groups.get",
            "monitoring.groups.list",
            "monitoring.metricDescriptors.create",
            "monitoring.metricDescriptors.get",
            "monitoring.metricDescriptors.list",
            "monitoring.monitoredResourceDescriptors.*",
            "monitoring.notificationChannelDescriptors.*",
            "monitoring.notificationChannels.get",
            "monitoring.notificationChannels.list",
            "monitoring.services.get",
            "monitoring.services.list",
            "monitoring.slos.get",
            "monitoring.slos.list",
            "monitoring.snoozes.get",
            "monitoring.snoozes.list",
            "monitoring.timeSeries.*",
            "monitoring.uptimeCheckConfigs.get",
            "monitoring.uptimeCheckConfigs.list",
            "opsconfigmonitoring.resourceMetadata.list",
            "pubsub.snapshots.seek",
            "pubsub.subscriptions.consume",
            "pubsub.topics.attachSubscription",
            "pubsub.topics.publish",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "stackdriver.projects.get",
            "stackdriver.resourceMetadata.list"
          ],
          "title": "Healthcare Service Agent"
        },
        {
          "description": "Gives Identity Platform service account access to customer project resources.",
          "id": "roles/identitytoolkit.serviceAgent",
          "is_beta": false,
          "permissions": [
            "cloudfunctions.functions.invoke",
            "recaptchaenterprise.assessments.create",
            "recaptchaenterprise.keys.create",
            "recaptchaenterprise.keys.delete",
            "recaptchaenterprise.keys.get"
          ],
          "title": "Identity Platform Service Agent"
        },
        {
          "description": "Service agent that grants access to execute an integration.",
          "id": "roles/integrations.serviceAgent",
          "is_beta": false,
          "permissions": [
            "cloudfunctions.functions.invoke",
            "cloudscheduler.jobs.create",
            "cloudscheduler.jobs.delete",
            "cloudscheduler.jobs.enable",
            "cloudscheduler.jobs.fullView",
            "cloudscheduler.jobs.get",
            "cloudscheduler.jobs.pause",
            "cloudscheduler.jobs.run",
            "cloudscheduler.jobs.update",
            "cloudscheduler.locations.*",
            "connectors.actions.*",
            "connectors.connections.executeSqlQuery",
            "connectors.connections.get",
            "connectors.entities.*",
            "connectors.entityTypes.list",
            "iam.serviceAccounts.getAccessToken",
            "iam.serviceAccounts.getOpenIdToken",
            "integrations.apigeeAuthConfigs.*",
            "integrations.apigeeCertificates.*",
            "integrations.apigeeExecutions.list",
            "integrations.apigeeIntegrationVers.*",
            "integrations.apigeeIntegrations.*",
            "integrations.apigeeSfdcChannels.*",
            "integrations.apigeeSfdcInstances.*",
            "integrations.apigeeSuspensions.*",
            "integrations.authConfigs.*",
            "integrations.certificates.*",
            "integrations.executions.list",
            "integrations.integrationVersions.create",
            "integrations.integrationVersions.delete",
            "integrations.integrationVersions.deploy",
            "integrations.integrationVersions.get",
            "integrations.integrationVersions.list",
            "integrations.integrationVersions.update",
            "integrations.integrations.create",
            "integrations.integrations.delete",
            "integrations.integrations.deploy",
            "integrations.integrations.get",
            "integrations.integrations.invoke",
            "integrations.integrations.list",
            "integrations.integrations.update",
            "integrations.sfdcChannels.*",
            "integrations.sfdcInstances.*",
            "integrations.suspensions.*",
            "pubsub.schemas.attach",
            "pubsub.schemas.create",
            "pubsub.schemas.delete",
            "pubsub.schemas.get",
            "pubsub.schemas.list",
            "pubsub.schemas.validate",
            "pubsub.snapshots.create",
            "pubsub.snapshots.delete",
            "pubsub.snapshots.get",
            "pubsub.snapshots.list",
            "pubsub.snapshots.seek",
            "pubsub.snapshots.update",
            "pubsub.subscriptions.consume",
            "pubsub.subscriptions.create",
            "pubsub.subscriptions.delete",
            "pubsub.subscriptions.get",
            "pubsub.subscriptions.list",
            "pubsub.subscriptions.update",
            "pubsub.topics.attachSubscription",
            "pubsub.topics.create",
            "pubsub.topics.delete",
            "pubsub.topics.detachSubscription",
            "pubsub.topics.get",
            "pubsub.topics.list",
            "pubsub.topics.publish",
            "pubsub.topics.update",
            "pubsub.topics.updateTag",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "run.jobs.run",
            "run.routes.invoke",
            "serviceusage.quotas.get",
            "serviceusage.services.get",
            "serviceusage.services.list",
            "storage.buckets.create",
            "storage.buckets.get",
            "storage.buckets.list",
            "storage.buckets.update",
            "storage.objects.create",
            "storage.objects.get",
            "storage.objects.list",
            "storage.objects.update"
          ],
          "title": "Application Integration Service Agent"
        },
        {
          "description": "Grants permissions to resources managed by AnthosApiEndpoint.",
          "id": "roles/krmapihosting.anthosApiEndpointServiceAgent",
          "is_beta": false,
          "permissions": [
            "compute.instanceGroupManagers.get",
            "container.*",
            "gkehub.features.*",
            "gkehub.fleet.*",
            "gkehub.gateway.*",
            "gkehub.locations.*",
            "gkehub.membershipbindings.*",
            "gkehub.membershipfeatures.*",
            "gkehub.memberships.*",
            "gkehub.namespaces.*",
            "gkehub.operations.*",
            "gkehub.rbacrolebindings.*",
            "gkehub.scopes.create",
            "gkehub.scopes.delete",
            "gkehub.scopes.get",
            "gkehub.scopes.getIamPolicy",
            "gkehub.scopes.list",
            "gkehub.scopes.listBoundMemberships",
            "gkehub.scopes.update",
            "iam.serviceAccounts.actAs",
            "meshconfig.projects.init",
            "recommender.containerDiagnosisInsights.*",
            "recommender.containerDiagnosisRecommendations.*",
            "recommender.locations.*",
            "recommender.networkAnalyzerGkeConnectivityInsights.*",
            "recommender.networkAnalyzerGkeIpAddressInsights.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.getIamPolicy",
            "resourcemanager.projects.list",
            "resourcemanager.projects.setIamPolicy",
            "serviceusage.services.enable",
            "serviceusage.services.get",
            "serviceusage.services.list",
            "serviceusage.services.use"
          ],
          "title": "KRM API Hosting AnthosApiEndpoint Service Agent"
        },
        {
          "description": "Gives KRM API Hosting service account access to managed resource.",
          "id": "roles/krmapihosting.serviceAgent",
          "is_beta": false,
          "permissions": [
            "compute.instanceGroupManagers.get",
            "compute.regions.get",
            "container.*",
            "iam.serviceAccounts.actAs",
            "recommender.containerDiagnosisInsights.*",
            "recommender.containerDiagnosisRecommendations.*",
            "recommender.locations.*",
            "recommender.networkAnalyzerGkeConnectivityInsights.*",
            "recommender.networkAnalyzerGkeIpAddressInsights.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "serviceusage.services.use"
          ],
          "title": "KRM API Hosting Service Agent"
        },
        {
          "description": "Service account role used to setup authentication for the control plane used by KubeRun Events.",
          "id": "roles/kuberun.eventsControlPlaneServiceAgent",
          "is_beta": false,
          "permissions": [
            "cloudscheduler.jobs.create",
            "cloudscheduler.jobs.delete",
            "cloudscheduler.jobs.get",
            "logging.sinks.create",
            "logging.sinks.delete",
            "logging.sinks.get",
            "pubsub.subscriptions.create",
            "pubsub.subscriptions.delete",
            "pubsub.subscriptions.get",
            "pubsub.topics.attachSubscription",
            "pubsub.topics.create",
            "pubsub.topics.delete",
            "pubsub.topics.get",
            "pubsub.topics.getIamPolicy",
            "pubsub.topics.setIamPolicy",
            "resourcemanager.projects.get",
            "storage.buckets.get",
            "storage.buckets.update"
          ],
          "title": "KubeRun Events Control Plane Service Agent"
        },
        {
          "description": "Service account role used to setup authentication for the data plane used by KubeRun Events.",
          "id": "roles/kuberun.eventsDataPlaneServiceAgent",
          "is_beta": false,
          "permissions": [
            "cloudtrace.traces.patch",
            "monitoring.timeSeries.create",
            "pubsub.subscriptions.consume",
            "pubsub.subscriptions.get",
            "pubsub.topics.get",
            "pubsub.topics.publish",
            "resourcemanager.projects.get"
          ],
          "title": "KubeRun Events Data Plane Service Agent"
        },
        {
          "description": "Gives Cloud Life Sciences Service Account access to compute resources. Includes access to service accounts.",
          "id": "roles/lifesciences.serviceAgent",
          "is_beta": false,
          "permissions": [
            "backupdr.backupPlanAssociations.createForComputeInstance",
            "backupdr.backupPlanAssociations.deleteForComputeInstance",
            "backupdr.backupPlanAssociations.list",
            "backupdr.backupPlanAssociations.triggerBackupForComputeInstance",
            "backupdr.backupPlans.get",
            "backupdr.backupPlans.list",
            "backupdr.backupPlans.useForComputeInstance",
            "backupdr.backupVaults.get",
            "backupdr.backupVaults.list",
            "backupdr.locations.list",
            "backupdr.operations.get",
            "backupdr.operations.list",
            "backupdr.serviceConfig.initialize",
            "compute.acceleratorTypes.*",
            "compute.addresses.createInternal",
            "compute.addresses.deleteInternal",
            "compute.addresses.get",
            "compute.addresses.list",
            "compute.addresses.listEffectiveTags",
            "compute.addresses.listTagBindings",
            "compute.addresses.use",
            "compute.addresses.useInternal",
            "compute.autoscalers.*",
            "compute.backendBuckets.get",
            "compute.backendBuckets.list",
            "compute.backendBuckets.listEffectiveTags",
            "compute.backendBuckets.listTagBindings",
            "compute.backendServices.get",
            "compute.backendServices.list",
            "compute.backendServices.listEffectiveTags",
            "compute.backendServices.listTagBindings",
            "compute.crossSiteNetworks.get",
            "compute.crossSiteNetworks.list",
            "compute.diskSettings.get",
            "compute.diskTypes.*",
            "compute.disks.*",
            "compute.externalVpnGateways.get",
            "compute.externalVpnGateways.list",
            "compute.externalVpnGateways.listEffectiveTags",
            "compute.externalVpnGateways.listTagBindings",
            "compute.firewalls.get",
            "compute.firewalls.list",
            "compute.firewalls.listEffectiveTags",
            "compute.firewalls.listTagBindings",
            "compute.forwardingRules.get",
            "compute.forwardingRules.list",
            "compute.forwardingRules.listEffectiveTags",
            "compute.forwardingRules.listTagBindings",
            "compute.globalAddresses.get",
            "compute.globalAddresses.list",
            "compute.globalAddresses.listEffectiveTags",
            "compute.globalAddresses.listTagBindings",
            "compute.globalAddresses.use",
            "compute.globalForwardingRules.get",
            "compute.globalForwardingRules.list",
            "compute.globalForwardingRules.listEffectiveTags",
            "compute.globalForwardingRules.listTagBindings",
            "compute.globalNetworkEndpointGroups.*",
            "compute.globalOperations.get",
            "compute.globalOperations.list",
            "compute.healthChecks.get",
            "compute.healthChecks.list",
            "compute.healthChecks.listEffectiveTags",
            "compute.healthChecks.listTagBindings",
            "compute.httpHealthChecks.get",
            "compute.httpHealthChecks.list",
            "compute.httpHealthChecks.listEffectiveTags",
            "compute.httpHealthChecks.listTagBindings",
            "compute.httpsHealthChecks.get",
            "compute.httpsHealthChecks.list",
            "compute.httpsHealthChecks.listEffectiveTags",
            "compute.httpsHealthChecks.listTagBindings",
            "compute.images.*",
            "compute.instanceGroupManagers.*",
            "compute.instanceGroups.*",
            "compute.instanceSettings.*",
            "compute.instanceTemplates.*",
            "compute.instances.*",
            "compute.instantSnapshots.*",
            "compute.interconnectAttachments.get",
            "compute.interconnectAttachments.list",
            "compute.interconnectAttachments.listEffectiveTags",
            "compute.interconnectAttachments.listTagBindings",
            "compute.interconnectLocations.*",
            "compute.interconnectRemoteLocations.*",
            "compute.interconnects.get",
            "compute.interconnects.list",
            "compute.interconnects.listEffectiveTags",
            "compute.interconnects.listTagBindings",
            "compute.licenseCodes.*",
            "compute.licenses.*",
            "compute.machineImages.*",
            "compute.machineTypes.*",
            "compute.multiMig.*",
            "compute.networkAttachments.get",
            "compute.networkAttachments.list",
            "compute.networkAttachments.listEffectiveTags",
            "compute.networkAttachments.listTagBindings",
            "compute.networkEndpointGroups.*",
            "compute.networkProfiles.*",
            "compute.networks.get",
            "compute.networks.list",
            "compute.networks.listEffectiveTags",
            "compute.networks.listTagBindings",
            "compute.networks.use",
            "compute.networks.useExternalIp",
            "compute.projects.get",
            "compute.projects.setCommonInstanceMetadata",
            "compute.regionBackendServices.get",
            "compute.regionBackendServices.list",
            "compute.regionBackendServices.listEffectiveTags",
            "compute.regionBackendServices.listTagBindings",
            "compute.regionHealthCheckServices.get",
            "compute.regionHealthCheckServices.list",
            "compute.regionHealthChecks.get",
            "compute.regionHealthChecks.list",
            "compute.regionHealthChecks.listEffectiveTags",
            "compute.regionHealthChecks.listTagBindings",
            "compute.regionNetworkEndpointGroups.*",
            "compute.regionNotificationEndpoints.get",
            "compute.regionNotificationEndpoints.list",
            "compute.regionOperations.get",
            "compute.regionOperations.list",
            "compute.regionSslCertificates.get",
            "compute.regionSslCertificates.list",
            "compute.regionSslCertificates.listEffectiveTags",
            "compute.regionSslCertificates.listTagBindings",
            "compute.regionSslPolicies.get",
            "compute.regionSslPolicies.list",
            "compute.regionSslPolicies.listAvailableFeatures",
            "compute.regionSslPolicies.listEffectiveTags",
            "compute.regionSslPolicies.listTagBindings",
            "compute.regionTargetHttpProxies.get",
            "compute.regionTargetHttpProxies.list",
            "compute.regionTargetHttpProxies.listEffectiveTags",
            "compute.regionTargetHttpProxies.listTagBindings",
            "compute.regionTargetHttpsProxies.get",
            "compute.regionTargetHttpsProxies.list",
            "compute.regionTargetHttpsProxies.listEffectiveTags",
            "compute.regionTargetHttpsProxies.listTagBindings",
            "compute.regionTargetTcpProxies.get",
            "compute.regionTargetTcpProxies.list",
            "compute.regionTargetTcpProxies.listEffectiveTags",
            "compute.regionTargetTcpProxies.listTagBindings",
            "compute.regionUrlMaps.get",
            "compute.regionUrlMaps.list",
            "compute.regionUrlMaps.listEffectiveTags",
            "compute.regionUrlMaps.listTagBindings",
            "compute.regions.*",
            "compute.reservationBlocks.get",
            "compute.reservationBlocks.list",
            "compute.reservations.get",
            "compute.reservations.list",
            "compute.resourcePolicies.*",
            "compute.routers.get",
            "compute.routers.getRoutePolicy",
            "compute.routers.list",
            "compute.routers.listBgpRoutes",
            "compute.routers.listEffectiveTags",
            "compute.routers.listRoutePolicies",
            "compute.routers.listTagBindings",
            "compute.routes.get",
            "compute.routes.list",
            "compute.routes.listEffectiveTags",
            "compute.routes.listTagBindings",
            "compute.serviceAttachments.get",
            "compute.serviceAttachments.list",
            "compute.serviceAttachments.listEffectiveTags",
            "compute.serviceAttachments.listTagBindings",
            "compute.snapshots.*",
            "compute.spotAssistants.get",
            "compute.sslCertificates.get",
            "compute.sslCertificates.list",
            "compute.sslCertificates.listEffectiveTags",
            "compute.sslCertificates.listTagBindings",
            "compute.sslPolicies.get",
            "compute.sslPolicies.list",
            "compute.sslPolicies.listAvailableFeatures",
            "compute.sslPolicies.listEffectiveTags",
            "compute.sslPolicies.listTagBindings",
            "compute.storagePools.get",
            "compute.storagePools.list",
            "compute.storagePools.use",
            "compute.subnetworks.get",
            "compute.subnetworks.list",
            "compute.subnetworks.listEffectiveTags",
            "compute.subnetworks.listTagBindings",
            "compute.subnetworks.use",
            "compute.subnetworks.useExternalIp",
            "compute.targetGrpcProxies.get",
            "compute.targetGrpcProxies.list",
            "compute.targetGrpcProxies.listEffectiveTags",
            "compute.targetGrpcProxies.listTagBindings",
            "compute.targetHttpProxies.get",
            "compute.targetHttpProxies.list",
            "compute.targetHttpProxies.listEffectiveTags",
            "compute.targetHttpProxies.listTagBindings",
            "compute.targetHttpsProxies.get",
            "compute.targetHttpsProxies.list",
            "compute.targetHttpsProxies.listEffectiveTags",
            "compute.targetHttpsProxies.listTagBindings",
            "compute.targetInstances.get",
            "compute.targetInstances.list",
            "compute.targetInstances.listEffectiveTags",
            "compute.targetInstances.listTagBindings",
            "compute.targetPools.get",
            "compute.targetPools.list",
            "compute.targetPools.listEffectiveTags",
            "compute.targetPools.listTagBindings",
            "compute.targetSslProxies.get",
            "compute.targetSslProxies.list",
            "compute.targetSslProxies.listEffectiveTags",
            "compute.targetSslProxies.listTagBindings",
            "compute.targetTcpProxies.get",
            "compute.targetTcpProxies.list",
            "compute.targetTcpProxies.listEffectiveTags",
            "compute.targetTcpProxies.listTagBindings",
            "compute.targetVpnGateways.get",
            "compute.targetVpnGateways.list",
            "compute.targetVpnGateways.listEffectiveTags",
            "compute.targetVpnGateways.listTagBindings",
            "compute.urlMaps.get",
            "compute.urlMaps.list",
            "compute.urlMaps.listEffectiveTags",
            "compute.urlMaps.listTagBindings",
            "compute.vpnGateways.get",
            "compute.vpnGateways.list",
            "compute.vpnGateways.listEffectiveTags",
            "compute.vpnGateways.listTagBindings",
            "compute.vpnTunnels.get",
            "compute.vpnTunnels.list",
            "compute.vpnTunnels.listEffectiveTags",
            "compute.vpnTunnels.listTagBindings",
            "compute.wireGroups.get",
            "compute.wireGroups.list",
            "compute.zoneOperations.get",
            "compute.zoneOperations.list",
            "compute.zones.*",
            "iam.serviceAccounts.actAs",
            "pubsub.topics.publish",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "serviceusage.quotas.get",
            "serviceusage.services.get",
            "serviceusage.services.list",
            "serviceusage.services.use"
          ],
          "title": "Cloud Life Sciences Service Agent"
        },
        {
          "description": "Uploads media files to customer Cloud Storage buckets.",
          "id": "roles/livestream.serviceAgent",
          "is_beta": false,
          "permissions": [
            "storage.objects.create",
            "storage.objects.delete",
            "storage.objects.get",
            "storage.objects.list",
            "storage.objects.update"
          ],
          "title": "Live Stream Service Agent"
        },
        {
          "description": "Grants a Cloud Logging Service Account the ability to create and link datasets.",
          "id": "roles/logging.serviceAgent",
          "is_beta": false,
          "permissions": [
            "bigquery.datasets.create",
            "bigquery.datasets.get",
            "bigquery.datasets.link"
          ],
          "title": "Cloud Logging Service Agent"
        },
        {
          "description": "Gives the Looker service account permission to manage customer resources",
          "id": "roles/looker.serviceAgent",
          "is_beta": false,
          "permissions": [
            "bigquery.config.get",
            "bigquery.datasets.get",
            "bigquery.jobs.create",
            "bigquery.models.export",
            "bigquery.models.getData",
            "bigquery.models.getMetadata",
            "bigquery.models.list",
            "bigquery.tables.create",
            "bigquery.tables.createSnapshot",
            "bigquery.tables.export",
            "bigquery.tables.get",
            "bigquery.tables.getData",
            "bigquery.tables.list",
            "compute.globalAddresses.get",
            "looker.backups.create",
            "resourcemanager.projects.get",
            "serviceusage.services.use"
          ],
          "title": "Looker Service Agent"
        },
        {
          "description": "Gives Managed Flink Service Agent access to Cloud Platform resources.",
          "id": "roles/managedflink.serviceAgent",
          "is_beta": false,
          "permissions": [
            "compute.networkAttachments.create",
            "compute.networkAttachments.delete",
            "compute.networkAttachments.get",
            "compute.networkAttachments.list",
            "compute.networkAttachments.update",
            "compute.networks.get",
            "compute.networks.list",
            "compute.regionOperations.get",
            "compute.subnetworks.get",
            "compute.subnetworks.list",
            "compute.subnetworks.use",
            "dns.networks.targetWithPeeringZone",
            "managedkafka.clusters.get",
            "managedkafka.clusters.list",
            "managedkafka.clusters.update",
            "monitoring.metricDescriptors.create",
            "monitoring.metricDescriptors.get",
            "monitoring.metricDescriptors.list",
            "monitoring.monitoredResourceDescriptors.*",
            "monitoring.timeSeries.create",
            "serviceusage.services.use",
            "storage.objects.get"
          ],
          "title": "Managed Flink Service Agent"
        },
        {
          "description": "Gives Managed Identities service account access to managed resources.",
          "id": "roles/managedidentities.serviceAgent",
          "is_beta": false,
          "permissions": [
            "compute.globalOperations.get",
            "compute.networks.addPeering",
            "compute.networks.get",
            "compute.networks.removePeering",
            "compute.networks.update",
            "compute.routes.list",
            "dns.changes.*",
            "dns.dnsKeys.*",
            "dns.managedZoneOperations.*",
            "dns.managedZones.create",
            "dns.managedZones.delete",
            "dns.managedZones.get",
            "dns.managedZones.list",
            "dns.managedZones.update",
            "dns.networks.bindPrivateDNSPolicy",
            "dns.networks.bindPrivateDNSZone",
            "dns.policies.*",
            "dns.projects.get",
            "dns.resourceRecordSets.*",
            "dns.responsePolicies.*",
            "dns.responsePolicyRules.*",
            "monitoring.metricDescriptors.create",
            "monitoring.metricDescriptors.get",
            "monitoring.metricDescriptors.list",
            "monitoring.monitoredResourceDescriptors.*",
            "monitoring.timeSeries.create",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Cloud Managed Identities Service Agent"
        },
        {
          "description": "Gives Managed Kafka Service Agent access to Cloud Platform resources.",
          "id": "roles/managedkafka.serviceAgent",
          "is_beta": false,
          "permissions": [
            "compute.addresses.create",
            "compute.addresses.createInternal",
            "compute.addresses.delete",
            "compute.addresses.deleteInternal",
            "compute.addresses.list",
            "compute.addresses.use",
            "compute.addresses.useInternal",
            "compute.forwardingRules.create",
            "compute.forwardingRules.delete",
            "compute.forwardingRules.list",
            "compute.forwardingRules.pscCreate",
            "compute.forwardingRules.pscDelete",
            "compute.networkAttachments.create",
            "compute.networkAttachments.delete",
            "compute.networkAttachments.get",
            "compute.networks.get",
            "compute.networks.use",
            "compute.regionOperations.get",
            "compute.subnetworks.get",
            "compute.subnetworks.use",
            "dns.changes.create",
            "dns.managedZones.create",
            "dns.managedZones.delete",
            "dns.managedZones.list",
            "dns.networks.bindPrivateDNSZone",
            "dns.networks.targetWithPeeringZone",
            "dns.resourceRecordSets.create",
            "dns.resourceRecordSets.delete",
            "dns.resourceRecordSets.list",
            "dns.resourceRecordSets.update",
            "managedkafka.clusters.connect",
            "privateca.caPools.get",
            "servicedirectory.namespaces.create",
            "servicedirectory.services.create",
            "servicedirectory.services.delete"
          ],
          "title": "Managed Kafka Service Agent"
        },
        {
          "description": "Downloads and uploads media files from and to customer Cloud Storage buckets.",
          "id": "roles/mediaasset.serviceAgent",
          "is_beta": false,
          "permissions": [
            "pubsub.topics.get",
            "pubsub.topics.publish",
            "storage.objects.create",
            "storage.objects.delete",
            "storage.objects.get",
            "transcoder.jobs.create",
            "transcoder.jobs.delete",
            "transcoder.jobs.get"
          ],
          "title": "Media Asset Service Agent"
        },
        {
          "description": "Gives Cloud Memorystore Memcached service account access to managed resource",
          "id": "roles/memcache.serviceAgent",
          "is_beta": false,
          "permissions": [
            "compute.globalOperations.get",
            "compute.networks.addPeering",
            "compute.networks.get",
            "compute.networks.removePeering",
            "compute.networks.update",
            "compute.routes.get",
            "compute.routes.list",
            "compute.subnetworks.get",
            "compute.subnetworks.list",
            "monitoring.metricDescriptors.create",
            "monitoring.metricDescriptors.get",
            "monitoring.metricDescriptors.list",
            "monitoring.monitoredResourceDescriptors.*",
            "monitoring.timeSeries.create",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Cloud Memorystore Memcached Service Agent"
        },
        {
          "description": "Gives Cloud Memorystore service account access to managed resource",
          "id": "roles/memorystore.serviceAgent",
          "is_beta": false,
          "permissions": [
            "compute.globalOperations.get",
            "compute.networks.addPeering",
            "compute.networks.get",
            "compute.networks.removePeering",
            "compute.projects.get",
            "compute.routes.get",
            "compute.routes.list",
            "compute.subnetworks.get",
            "compute.subnetworks.list",
            "monitoring.metricDescriptors.create",
            "monitoring.metricDescriptors.get",
            "monitoring.metricDescriptors.list",
            "monitoring.monitoredResourceDescriptors.*",
            "monitoring.timeSeries.create",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Cloud Memorystore Service Agent"
        },
        {
          "description": "Apply mesh configuration",
          "id": "roles/meshconfig.serviceAgent",
          "is_beta": false,
          "permissions": [
            "compute.backendServices.create",
            "compute.backendServices.delete",
            "compute.backendServices.get",
            "compute.backendServices.list",
            "compute.backendServices.setSecurityPolicy",
            "compute.backendServices.update",
            "compute.backendServices.use",
            "compute.firewalls.create",
            "compute.firewalls.delete",
            "compute.firewalls.get",
            "compute.firewalls.list",
            "compute.firewalls.update",
            "compute.globalForwardingRules.create",
            "compute.globalForwardingRules.delete",
            "compute.globalForwardingRules.get",
            "compute.globalForwardingRules.list",
            "compute.globalForwardingRules.setLabels",
            "compute.globalForwardingRules.setTarget",
            "compute.globalOperations.get",
            "compute.globalOperations.list",
            "compute.healthChecks.create",
            "compute.healthChecks.delete",
            "compute.healthChecks.get",
            "compute.healthChecks.list",
            "compute.healthChecks.update",
            "compute.healthChecks.use",
            "compute.healthChecks.useReadOnly",
            "compute.networkEndpointGroups.get",
            "compute.networkEndpointGroups.list",
            "compute.networkEndpointGroups.use",
            "compute.networks.get",
            "compute.networks.updatePolicy",
            "compute.networks.use",
            "compute.regionTargetTcpProxies.create",
            "compute.regionTargetTcpProxies.delete",
            "compute.regionTargetTcpProxies.get",
            "compute.regionTargetTcpProxies.list",
            "compute.regionTargetTcpProxies.use",
            "compute.subnetworks.use",
            "compute.targetHttpProxies.create",
            "compute.targetHttpProxies.delete",
            "compute.targetHttpProxies.get",
            "compute.targetHttpProxies.list",
            "compute.targetHttpProxies.setUrlMap",
            "compute.targetHttpProxies.use",
            "compute.targetHttpsProxies.create",
            "compute.targetHttpsProxies.delete",
            "compute.targetHttpsProxies.get",
            "compute.targetHttpsProxies.list",
            "compute.targetHttpsProxies.setSslCertificates",
            "compute.targetHttpsProxies.setSslPolicy",
            "compute.targetHttpsProxies.setUrlMap",
            "compute.targetHttpsProxies.use",
            "compute.targetSslProxies.create",
            "compute.targetSslProxies.delete",
            "compute.targetSslProxies.get",
            "compute.targetSslProxies.list",
            "compute.targetSslProxies.setBackendService",
            "compute.targetSslProxies.setProxyHeader",
            "compute.targetSslProxies.setSslCertificates",
            "compute.targetSslProxies.use",
            "compute.targetTcpProxies.create",
            "compute.targetTcpProxies.delete",
            "compute.targetTcpProxies.get",
            "compute.targetTcpProxies.list",
            "compute.targetTcpProxies.update",
            "compute.targetTcpProxies.use",
            "compute.urlMaps.create",
            "compute.urlMaps.delete",
            "compute.urlMaps.get",
            "compute.urlMaps.invalidateCache",
            "compute.urlMaps.list",
            "compute.urlMaps.update",
            "compute.urlMaps.use",
            "compute.urlMaps.validate",
            "networksecurity.clientTlsPolicies.create",
            "networksecurity.clientTlsPolicies.delete",
            "networksecurity.clientTlsPolicies.get",
            "networksecurity.clientTlsPolicies.list",
            "networksecurity.clientTlsPolicies.update",
            "networksecurity.serverTlsPolicies.create",
            "networksecurity.serverTlsPolicies.delete",
            "networksecurity.serverTlsPolicies.get",
            "networksecurity.serverTlsPolicies.list",
            "networksecurity.serverTlsPolicies.update",
            "networkservices.httpFilters.*",
            "networkservices.httpfilters.create",
            "networkservices.httpfilters.delete",
            "networkservices.httpfilters.get",
            "networkservices.httpfilters.list",
            "networkservices.httpfilters.update"
          ],
          "title": "Mesh Config Service Agent"
        },
        {
          "description": "Anthos Service Mesh Managed Control Plane Agent",
          "id": "roles/meshcontrolplane.serviceAgent",
          "is_beta": false,
          "permissions": [
            "container.apiServices.*",
            "container.auditSinks.*",
            "container.backendConfigs.*",
            "container.bindings.*",
            "container.certificateSigningRequests.*",
            "container.clusterRoleBindings.*",
            "container.clusterRoles.*",
            "container.clusters.get",
            "container.clusters.getCredentials",
            "container.clusters.list",
            "container.clusters.update",
            "container.componentStatuses.*",
            "container.configMaps.*",
            "container.controllerRevisions.*",
            "container.cronJobs.*",
            "container.csiDrivers.*",
            "container.csiNodeInfos.*",
            "container.csiNodes.*",
            "container.customResourceDefinitions.*",
            "container.daemonSets.*",
            "container.deployments.*",
            "container.endpointSlices.*",
            "container.endpoints.*",
            "container.events.*",
            "container.frontendConfigs.*",
            "container.horizontalPodAutoscalers.*",
            "container.hostServiceAgent.use",
            "container.ingresses.*",
            "container.initializerConfigurations.*",
            "container.jobs.*",
            "container.leases.*",
            "container.limitRanges.*",
            "container.localSubjectAccessReviews.*",
            "container.managedCertificates.*",
            "container.mutatingWebhookConfigurations.*",
            "container.namespaces.*",
            "container.networkPolicies.*",
            "container.nodes.*",
            "container.operations.*",
            "container.persistentVolumeClaims.*",
            "container.persistentVolumes.*",
            "container.petSets.*",
            "container.podDisruptionBudgets.*",
            "container.podPresets.*",
            "container.podSecurityPolicies.*",
            "container.podTemplates.*",
            "container.pods.*",
            "container.priorityClasses.*",
            "container.replicaSets.*",
            "container.replicationControllers.*",
            "container.resourceQuotas.*",
            "container.roleBindings.*",
            "container.roles.*",
            "container.runtimeClasses.*",
            "container.scheduledJobs.*",
            "container.secrets.*",
            "container.selfSubjectAccessReviews.*",
            "container.selfSubjectRulesReviews.create",
            "container.serviceAccounts.*",
            "container.services.*",
            "container.statefulSets.*",
            "container.storageClasses.*",
            "container.storageStates.*",
            "container.storageVersionMigrations.*",
            "container.subjectAccessReviews.*",
            "container.thirdPartyObjects.*",
            "container.thirdPartyResources.*",
            "container.tokenReviews.create",
            "container.updateInfos.*",
            "container.validatingWebhookConfigurations.*",
            "container.volumeAttachments.*",
            "container.volumeSnapshotClasses.*",
            "container.volumeSnapshotContents.*",
            "container.volumeSnapshots.*",
            "gkehub.features.get",
            "gkehub.features.getIamPolicy",
            "gkehub.features.list",
            "gkehub.fleet.get",
            "gkehub.fleet.getFreeTrial",
            "gkehub.gateway.*",
            "gkehub.locations.*",
            "gkehub.membershipbindings.get",
            "gkehub.membershipbindings.list",
            "gkehub.membershipfeatures.get",
            "gkehub.membershipfeatures.list",
            "gkehub.memberships.generateConnectManifest",
            "gkehub.memberships.get",
            "gkehub.memberships.getIamPolicy",
            "gkehub.memberships.list",
            "gkehub.namespaces.get",
            "gkehub.namespaces.list",
            "gkehub.operations.get",
            "gkehub.operations.list",
            "gkehub.rbacrolebindings.get",
            "gkehub.rbacrolebindings.list",
            "gkehub.scopes.get",
            "gkehub.scopes.list",
            "gkehub.scopes.listBoundMemberships",
            "logging.logEntries.create",
            "logging.logEntries.route",
            "monitoring.metricDescriptors.create",
            "monitoring.metricDescriptors.get",
            "monitoring.metricDescriptors.list",
            "monitoring.monitoredResourceDescriptors.*",
            "monitoring.timeSeries.create",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "serviceusage.services.get",
            "serviceusage.services.use",
            "trafficdirector.*"
          ],
          "title": "Mesh Managed Control Plane Service Agent"
        },
        {
          "description": "Run user-space Istio components",
          "id": "roles/meshdataplane.serviceAgent",
          "is_beta": false,
          "permissions": [
            "cloudtrace.traces.patch",
            "compute.forwardingRules.get",
            "compute.globalForwardingRules.get",
            "logging.logEntries.create",
            "logging.logEntries.route",
            "monitoring.metricDescriptors.create",
            "monitoring.metricDescriptors.get",
            "monitoring.metricDescriptors.list",
            "monitoring.monitoredResourceDescriptors.*",
            "monitoring.timeSeries.create",
            "serviceusage.services.use",
            "telemetry.traces.write"
          ],
          "title": "Mesh Data Plane Service Agent"
        },
        {
          "description": "Gives the Dataproc Metastore service account access to managed resources.",
          "id": "roles/metastore.serviceAgent",
          "is_beta": false,
          "permissions": [
            "compute.addresses.createInternal",
            "compute.addresses.deleteInternal",
            "compute.addresses.get",
            "compute.addresses.use",
            "compute.forwardingRules.create",
            "compute.forwardingRules.delete",
            "compute.forwardingRules.get",
            "compute.forwardingRules.pscCreate",
            "compute.forwardingRules.pscDelete",
            "compute.globalAddresses.createInternal",
            "compute.globalAddresses.deleteInternal",
            "compute.globalAddresses.get",
            "compute.globalAddresses.list",
            "compute.globalOperations.get",
            "compute.globalOperations.list",
            "compute.networks.addPeering",
            "compute.networks.get",
            "compute.networks.removePeering",
            "compute.networks.updatePeering",
            "compute.networks.use",
            "compute.regionOperations.get",
            "compute.subnetworks.get",
            "compute.subnetworks.use",
            "dns.changes.create",
            "dns.changes.get",
            "dns.managedZones.create",
            "dns.managedZones.delete",
            "dns.managedZones.get",
            "dns.managedZones.list",
            "dns.networks.bindPrivateDNSZone",
            "dns.networks.targetWithPeeringZone",
            "dns.resourceRecordSets.*",
            "metastore.databases.get",
            "metastore.databases.setIamPolicy",
            "metastore.databases.update",
            "metastore.federations.use",
            "metastore.services.get",
            "metastore.tables.get",
            "metastore.tables.setIamPolicy",
            "metastore.tables.update",
            "servicedirectory.namespaces.create",
            "servicedirectory.namespaces.delete",
            "servicedirectory.services.create",
            "servicedirectory.services.delete",
            "storage.buckets.create",
            "storage.buckets.delete",
            "storage.buckets.get",
            "storage.buckets.update",
            "storage.objects.create",
            "storage.objects.delete",
            "storage.objects.get",
            "storage.objects.list",
            "storage.objects.update"
          ],
          "title": "Dataproc Metastore Service Agent"
        },
        {
          "description": "Gives Migration Center Service Account access to objects storedin object store and Cloud Migration products.",
          "id": "roles/migrationcenter.serviceAgent",
          "is_beta": false,
          "permissions": [
            "storage.objects.get",
            "vmmigration.migratingVms.create"
          ],
          "title": "Migration Center Service Agent"
        },
        {
          "description": "AI Platform service agent can act as log writer, Cloud Storage admin, Artifact Registry Reader, BigQuery writer, and service account access token creator.",
          "id": "roles/ml.serviceAgent",
          "is_beta": false,
          "permissions": [
            "artifactregistry.attachments.get",
            "artifactregistry.attachments.list",
            "artifactregistry.dockerimages.*",
            "artifactregistry.files.download",
            "artifactregistry.files.get",
            "artifactregistry.files.list",
            "artifactregistry.locations.*",
            "artifactregistry.mavenartifacts.*",
            "artifactregistry.npmpackages.*",
            "artifactregistry.packages.get",
            "artifactregistry.packages.list",
            "artifactregistry.projectsettings.get",
            "artifactregistry.pythonpackages.*",
            "artifactregistry.repositories.downloadArtifacts",
            "artifactregistry.repositories.get",
            "artifactregistry.repositories.list",
            "artifactregistry.repositories.listEffectiveTags",
            "artifactregistry.repositories.listTagBindings",
            "artifactregistry.repositories.readViaVirtualRepository",
            "artifactregistry.rules.get",
            "artifactregistry.rules.list",
            "artifactregistry.tags.get",
            "artifactregistry.tags.list",
            "artifactregistry.versions.get",
            "artifactregistry.versions.list",
            "bigquery.datasets.create",
            "bigquery.datasets.get",
            "bigquery.jobs.create",
            "bigquery.jobs.get",
            "bigquery.jobs.list",
            "bigquery.jobs.update",
            "bigquery.tables.create",
            "bigquery.tables.get",
            "bigquery.tables.getData",
            "bigquery.tables.list",
            "bigquery.tables.updateData",
            "firebase.projects.get",
            "iam.serviceAccounts.get",
            "iam.serviceAccounts.getAccessToken",
            "iam.serviceAccounts.getOpenIdToken",
            "iam.serviceAccounts.implicitDelegation",
            "iam.serviceAccounts.list",
            "iam.serviceAccounts.signBlob",
            "iam.serviceAccounts.signJwt",
            "logging.logEntries.create",
            "logging.logEntries.route",
            "orgpolicy.policy.get",
            "recommender.iamPolicyInsights.*",
            "recommender.iamPolicyRecommendations.*",
            "recommender.storageBucketSoftDeleteInsights.*",
            "recommender.storageBucketSoftDeleteRecommendations.*",
            "resourcemanager.hierarchyNodes.listEffectiveTags",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "storage.anywhereCaches.*",
            "storage.bucketOperations.*",
            "storage.buckets.*",
            "storage.folders.*",
            "storage.intelligenceConfigs.*",
            "storage.managedFolders.*",
            "storage.multipartUploads.*",
            "storage.objects.*"
          ],
          "title": "AI Platform Service Agent"
        },
        {
          "description": "Gives Model Armor Service Account permission to make DLP calls.",
          "id": "roles/modelarmor.serviceAgent",
          "is_beta": false,
          "permissions": [
            "dlp.analyzeRiskTemplates.get",
            "dlp.analyzeRiskTemplates.list",
            "dlp.deidentifyTemplates.get",
            "dlp.deidentifyTemplates.list",
            "dlp.inspectFindings.list",
            "dlp.inspectTemplates.get",
            "dlp.inspectTemplates.list",
            "dlp.jobTriggers.get",
            "dlp.jobTriggers.list",
            "dlp.jobs.get",
            "dlp.jobs.list",
            "dlp.kms.encrypt",
            "dlp.locations.*",
            "dlp.storedInfoTypes.get",
            "dlp.storedInfoTypes.list",
            "serviceusage.services.use"
          ],
          "title": "Model Armor Service Agent"
        },
        {
          "description": "Grants permissions to deliver notifications directly to resources within the target project, such as delivering to Pub/Sub topics within the project.",
          "id": "roles/monitoring.notificationServiceAgent",
          "is_beta": false,
          "permissions": [
            "bigquery.jobs.create",
            "cloudfunctions.functions.get",
            "cloudtrace.traces.patch",
            "logging.links.list",
            "monitoring.metricDescriptors.get",
            "monitoring.metricDescriptors.list",
            "monitoring.monitoredResourceDescriptors.*",
            "monitoring.timeSeries.list",
            "run.routes.invoke",
            "servicedirectory.networks.access",
            "servicedirectory.services.resolve",
            "serviceusage.services.use"
          ],
          "title": "Monitoring Service Agent"
        },
        {
          "description": "Gives the Multi Cluster Ingress service agent access to CloudPlatform resources.",
          "id": "roles/multiclusteringress.serviceAgent",
          "is_beta": false,
          "permissions": [
            "certificatemanager.certissuanceconfigs.create",
            "certificatemanager.certissuanceconfigs.delete",
            "certificatemanager.certissuanceconfigs.get",
            "certificatemanager.certissuanceconfigs.list",
            "certificatemanager.certissuanceconfigs.listEffectiveTags",
            "certificatemanager.certissuanceconfigs.listTagBindings",
            "certificatemanager.certissuanceconfigs.update",
            "certificatemanager.certissuanceconfigs.use",
            "certificatemanager.certmapentries.create",
            "certificatemanager.certmapentries.delete",
            "certificatemanager.certmapentries.get",
            "certificatemanager.certmapentries.list",
            "certificatemanager.certmapentries.listEffectiveTags",
            "certificatemanager.certmapentries.listTagBindings",
            "certificatemanager.certmapentries.update",
            "certificatemanager.certmaps.create",
            "certificatemanager.certmaps.delete",
            "certificatemanager.certmaps.get",
            "certificatemanager.certmaps.list",
            "certificatemanager.certmaps.listEffectiveTags",
            "certificatemanager.certmaps.listTagBindings",
            "certificatemanager.certmaps.update",
            "certificatemanager.certmaps.use",
            "certificatemanager.certs.create",
            "certificatemanager.certs.delete",
            "certificatemanager.certs.get",
            "certificatemanager.certs.list",
            "certificatemanager.certs.listEffectiveTags",
            "certificatemanager.certs.listTagBindings",
            "certificatemanager.certs.update",
            "certificatemanager.certs.use",
            "certificatemanager.dnsauthorizations.create",
            "certificatemanager.dnsauthorizations.delete",
            "certificatemanager.dnsauthorizations.get",
            "certificatemanager.dnsauthorizations.list",
            "certificatemanager.dnsauthorizations.listEffectiveTags",
            "certificatemanager.dnsauthorizations.listTagBindings",
            "certificatemanager.dnsauthorizations.update",
            "certificatemanager.dnsauthorizations.use",
            "compute.addresses.create",
            "compute.addresses.createInternal",
            "compute.addresses.delete",
            "compute.addresses.deleteInternal",
            "compute.addresses.get",
            "compute.addresses.list",
            "compute.addresses.use",
            "compute.addresses.useInternal",
            "compute.backendServices.*",
            "compute.firewalls.*",
            "compute.forwardingRules.*",
            "compute.globalAddresses.create",
            "compute.globalAddresses.delete",
            "compute.globalAddresses.get",
            "compute.globalAddresses.list",
            "compute.globalAddresses.use",
            "compute.globalForwardingRules.*",
            "compute.healthChecks.*",
            "compute.networkEndpointGroups.get",
            "compute.networkEndpointGroups.list",
            "compute.networkEndpointGroups.use",
            "compute.networks.updatePolicy",
            "compute.networks.use",
            "compute.regionBackendServices.*",
            "compute.regionHealthChecks.*",
            "compute.regionSslCertificates.*",
            "compute.regionSslPolicies.use",
            "compute.regionTargetHttpProxies.*",
            "compute.regionTargetHttpsProxies.*",
            "compute.regionUrlMaps.*",
            "compute.securityPolicies.use",
            "compute.sslCertificates.*",
            "compute.sslPolicies.use",
            "compute.subnetworks.list",
            "compute.subnetworks.use",
            "compute.targetHttpProxies.*",
            "compute.targetHttpsProxies.*",
            "compute.urlMaps.*",
            "container.backendConfigs.*",
            "container.clusters.get",
            "container.customResourceDefinitions.create",
            "container.customResourceDefinitions.delete",
            "container.customResourceDefinitions.get",
            "container.customResourceDefinitions.list",
            "container.customResourceDefinitions.update",
            "container.deployments.*",
            "container.events.create",
            "container.events.update",
            "container.frontendConfigs.*",
            "container.namespaces.list",
            "container.secrets.get",
            "container.secrets.list",
            "container.services.*",
            "container.thirdPartyObjects.*",
            "gkehub.features.get",
            "gkehub.gateway.delete",
            "gkehub.gateway.generateCredentials",
            "gkehub.gateway.get",
            "gkehub.gateway.patch",
            "gkehub.gateway.post",
            "gkehub.gateway.put",
            "gkehub.locations.*",
            "gkehub.memberships.get",
            "gkehub.memberships.list",
            "serviceusage.services.get",
            "serviceusage.services.list",
            "serviceusage.services.use"
          ],
          "title": "Multi Cluster Ingress Service Agent"
        },
        {
          "description": "Gives the Multi-cluster metering service agent access to CloudPlatform resources.",
          "id": "roles/multiclustermetering.serviceAgent",
          "is_beta": false,
          "permissions": [
            "gkehub.features.get",
            "gkehub.gateway.delete",
            "gkehub.gateway.generateCredentials",
            "gkehub.gateway.get",
            "gkehub.gateway.patch",
            "gkehub.gateway.post",
            "gkehub.gateway.put",
            "gkehub.locations.*",
            "gkehub.memberships.get",
            "gkehub.memberships.list"
          ],
          "title": "Multi-cluster metering Service Agent"
        },
        {
          "description": "Gives the Multi-Cluster Service Discovery service access to Cloud Platform resources.",
          "id": "roles/multiclusterservicediscovery.serviceAgent",
          "is_beta": false,
          "permissions": [
            "compute.backendServices.*",
            "compute.firewalls.*",
            "compute.forwardingRules.*",
            "compute.globalForwardingRules.*",
            "compute.globalOperations.get",
            "compute.healthChecks.*",
            "compute.httpHealthChecks.*",
            "compute.httpsHealthChecks.*",
            "compute.networkEndpointGroups.use",
            "compute.networks.get",
            "compute.networks.list",
            "compute.networks.updatePolicy",
            "compute.networks.use",
            "compute.regionTargetTcpProxies.*",
            "compute.regions.*",
            "compute.targetHttpProxies.*",
            "compute.targetHttpsProxies.*",
            "compute.targetTcpProxies.*",
            "compute.urlMaps.*",
            "container.clusters.get",
            "container.clusters.list",
            "container.thirdPartyObjects.list",
            "container.thirdPartyObjects.update",
            "dns.changes.*",
            "dns.dnsKeys.*",
            "dns.gkeClusters.*",
            "dns.managedZoneOperations.*",
            "dns.managedZones.create",
            "dns.managedZones.delete",
            "dns.managedZones.get",
            "dns.managedZones.getIamPolicy",
            "dns.managedZones.list",
            "dns.managedZones.update",
            "dns.networks.*",
            "dns.policies.*",
            "dns.projects.get",
            "dns.resourceRecordSets.*",
            "dns.responsePolicies.*",
            "dns.responsePolicyRules.*",
            "gkehub.features.get",
            "gkehub.gateway.delete",
            "gkehub.gateway.generateCredentials",
            "gkehub.gateway.get",
            "gkehub.gateway.patch",
            "gkehub.gateway.post",
            "gkehub.gateway.put",
            "gkehub.locations.*",
            "gkehub.memberships.get",
            "gkehub.memberships.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Multi-Cluster Service Discovery Service Agent"
        },
        {
          "description": "Gives Network Actions service account access to read required resources.",
          "id": "roles/networkactions.serviceAgent",
          "is_beta": false,
          "permissions": [
            "artifactregistry.repositories.downloadArtifacts"
          ],
          "title": "Network Actions Service Agent"
        },
        {
          "description": "Grants the Network Connectivity API authority to read some networking resources. It does not mutate these resources.",
          "id": "roles/networkconnectivity.serviceAgent",
          "is_beta": false,
          "permissions": [
            "compute.addresses.create",
            "compute.addresses.createInternal",
            "compute.addresses.delete",
            "compute.addresses.deleteInternal",
            "compute.addresses.get",
            "compute.addresses.setLabels",
            "compute.addresses.use",
            "compute.forwardingRules.create",
            "compute.forwardingRules.delete",
            "compute.forwardingRules.get",
            "compute.forwardingRules.pscCreate",
            "compute.forwardingRules.pscDelete",
            "compute.forwardingRules.pscSetLabels",
            "compute.forwardingRules.pscSetTarget",
            "compute.forwardingRules.pscUpdate",
            "compute.forwardingRules.setLabels",
            "compute.instances.get",
            "compute.interconnectAttachments.get",
            "compute.networks.get",
            "compute.networks.use",
            "compute.projects.get",
            "compute.regionOperations.get",
            "compute.routers.get",
            "compute.subnetworks.get",
            "compute.subnetworks.getIamPolicy",
            "compute.subnetworks.list",
            "compute.subnetworks.setIamPolicy",
            "compute.subnetworks.use",
            "compute.vpnTunnels.get",
            "dns.managedZones.create",
            "dns.networks.bindPrivateDNSZone",
            "networkconnectivity.hubRouteTables.get",
            "networkconnectivity.hubRouteTables.list",
            "networkconnectivity.hubRoutes.get",
            "networkconnectivity.hubRoutes.list",
            "networkconnectivity.operations.get",
            "servicedirectory.namespaces.associatePrivateZone",
            "servicedirectory.namespaces.create",
            "servicedirectory.namespaces.delete",
            "servicedirectory.services.create",
            "servicedirectory.services.delete"
          ],
          "title": "Network Connectivity Service Agent"
        },
        {
          "description": "Grants the GCP Network Management API the authority to complete analysis based on network configurations from Compute Engine and Container Engine.",
          "id": "roles/networkmanagement.serviceAgent",
          "is_beta": false,
          "permissions": [
            "cloudsql.instances.get",
            "cloudsql.instances.list",
            "compute.addresses.get",
            "compute.addresses.list",
            "compute.backendServices.get",
            "compute.backendServices.list",
            "compute.externalVpnGateways.get",
            "compute.externalVpnGateways.list",
            "compute.firewalls.get",
            "compute.firewalls.list",
            "compute.forwardingRules.get",
            "compute.forwardingRules.list",
            "compute.globalAddresses.get",
            "compute.globalAddresses.list",
            "compute.globalForwardingRules.get",
            "compute.globalForwardingRules.list",
            "compute.globalNetworkEndpointGroups.get",
            "compute.globalNetworkEndpointGroups.list",
            "compute.healthChecks.get",
            "compute.healthChecks.list",
            "compute.httpHealthChecks.get",
            "compute.httpHealthChecks.list",
            "compute.httpsHealthChecks.get",
            "compute.httpsHealthChecks.list",
            "compute.instanceGroups.get",
            "compute.instanceGroups.list",
            "compute.instances.get",
            "compute.instances.list",
            "compute.networkEndpointGroups.get",
            "compute.networkEndpointGroups.list",
            "compute.networks.get",
            "compute.networks.getEffectiveFirewalls",
            "compute.networks.list",
            "compute.networks.listPeeringRoutes",
            "compute.packetMirrorings.get",
            "compute.packetMirrorings.list",
            "compute.regionBackendServices.get",
            "compute.regionBackendServices.list",
            "compute.regionHealthChecks.get",
            "compute.regionHealthChecks.list",
            "compute.regionNetworkEndpointGroups.get",
            "compute.regionNetworkEndpointGroups.list",
            "compute.regionTargetHttpProxies.get",
            "compute.regionTargetHttpProxies.list",
            "compute.regionTargetHttpsProxies.get",
            "compute.regionTargetHttpsProxies.list",
            "compute.regionTargetTcpProxies.get",
            "compute.regionTargetTcpProxies.list",
            "compute.regionUrlMaps.get",
            "compute.regionUrlMaps.list",
            "compute.routers.get",
            "compute.routers.list",
            "compute.routes.get",
            "compute.routes.list",
            "compute.subnetworks.get",
            "compute.subnetworks.list",
            "compute.targetGrpcProxies.get",
            "compute.targetGrpcProxies.list",
            "compute.targetHttpProxies.get",
            "compute.targetHttpProxies.list",
            "compute.targetHttpsProxies.get",
            "compute.targetHttpsProxies.list",
            "compute.targetInstances.get",
            "compute.targetInstances.list",
            "compute.targetPools.get",
            "compute.targetPools.list",
            "compute.targetSslProxies.get",
            "compute.targetSslProxies.list",
            "compute.targetTcpProxies.get",
            "compute.targetTcpProxies.list",
            "compute.targetVpnGateways.get",
            "compute.targetVpnGateways.list",
            "compute.urlMaps.get",
            "compute.urlMaps.list",
            "compute.vpnGateways.get",
            "compute.vpnGateways.list",
            "compute.vpnTunnels.get",
            "compute.vpnTunnels.list",
            "container.clusters.get",
            "container.clusters.list",
            "container.nodes.get",
            "container.nodes.list"
          ],
          "title": "GCP Network Management Service Agent"
        },
        {
          "description": "Provide access for notebooks service agent to manage notebook instances in user projects",
          "id": "roles/notebooks.serviceAgent",
          "is_beta": false,
          "permissions": [
            "aiplatform.customJobs.cancel",
            "aiplatform.customJobs.create",
            "aiplatform.customJobs.get",
            "aiplatform.customJobs.list",
            "aiplatform.notebookExecutionJobs.*",
            "aiplatform.operations.list",
            "aiplatform.pipelineJobs.create",
            "aiplatform.schedules.*",
            "backupdr.backupPlanAssociations.createForComputeInstance",
            "backupdr.backupPlanAssociations.deleteForComputeInstance",
            "backupdr.backupPlanAssociations.list",
            "backupdr.backupPlanAssociations.triggerBackupForComputeInstance",
            "backupdr.backupPlans.get",
            "backupdr.backupPlans.list",
            "backupdr.backupPlans.useForComputeInstance",
            "backupdr.backupVaults.get",
            "backupdr.backupVaults.list",
            "backupdr.locations.list",
            "backupdr.operations.get",
            "backupdr.operations.list",
            "backupdr.serviceConfig.initialize",
            "compute.acceleratorTypes.*",
            "compute.addresses.createInternal",
            "compute.addresses.deleteInternal",
            "compute.addresses.get",
            "compute.addresses.list",
            "compute.addresses.listEffectiveTags",
            "compute.addresses.listTagBindings",
            "compute.addresses.use",
            "compute.addresses.useInternal",
            "compute.autoscalers.*",
            "compute.backendBuckets.get",
            "compute.backendBuckets.getIamPolicy",
            "compute.backendBuckets.list",
            "compute.backendBuckets.listEffectiveTags",
            "compute.backendBuckets.listTagBindings",
            "compute.backendServices.get",
            "compute.backendServices.getIamPolicy",
            "compute.backendServices.list",
            "compute.backendServices.listEffectiveTags",
            "compute.backendServices.listTagBindings",
            "compute.commitments.get",
            "compute.commitments.list",
            "compute.crossSiteNetworks.get",
            "compute.crossSiteNetworks.list",
            "compute.diskSettings.get",
            "compute.diskTypes.*",
            "compute.disks.*",
            "compute.externalVpnGateways.get",
            "compute.externalVpnGateways.list",
            "compute.externalVpnGateways.listEffectiveTags",
            "compute.externalVpnGateways.listTagBindings",
            "compute.firewallPolicies.get",
            "compute.firewallPolicies.getIamPolicy",
            "compute.firewallPolicies.list",
            "compute.firewallPolicies.listEffectiveTags",
            "compute.firewallPolicies.listTagBindings",
            "compute.firewalls.get",
            "compute.firewalls.list",
            "compute.firewalls.listEffectiveTags",
            "compute.firewalls.listTagBindings",
            "compute.forwardingRules.get",
            "compute.forwardingRules.list",
            "compute.forwardingRules.listEffectiveTags",
            "compute.forwardingRules.listTagBindings",
            "compute.futureReservations.get",
            "compute.futureReservations.getIamPolicy",
            "compute.futureReservations.list",
            "compute.globalAddresses.get",
            "compute.globalAddresses.list",
            "compute.globalAddresses.listEffectiveTags",
            "compute.globalAddresses.listTagBindings",
            "compute.globalAddresses.use",
            "compute.globalForwardingRules.get",
            "compute.globalForwardingRules.list",
            "compute.globalForwardingRules.listEffectiveTags",
            "compute.globalForwardingRules.listTagBindings",
            "compute.globalNetworkEndpointGroups.*",
            "compute.globalOperations.get",
            "compute.globalOperations.getIamPolicy",
            "compute.globalOperations.list",
            "compute.globalPublicDelegatedPrefixes.get",
            "compute.globalPublicDelegatedPrefixes.list",
            "compute.healthChecks.get",
            "compute.healthChecks.list",
            "compute.healthChecks.listEffectiveTags",
            "compute.healthChecks.listTagBindings",
            "compute.httpHealthChecks.get",
            "compute.httpHealthChecks.list",
            "compute.httpHealthChecks.listEffectiveTags",
            "compute.httpHealthChecks.listTagBindings",
            "compute.httpsHealthChecks.get",
            "compute.httpsHealthChecks.list",
            "compute.httpsHealthChecks.listEffectiveTags",
            "compute.httpsHealthChecks.listTagBindings",
            "compute.images.*",
            "compute.instanceGroupManagers.*",
            "compute.instanceGroups.*",
            "compute.instanceSettings.*",
            "compute.instanceTemplates.*",
            "compute.instances.*",
            "compute.instantSnapshots.*",
            "compute.interconnectAttachments.get",
            "compute.interconnectAttachments.list",
            "compute.interconnectAttachments.listEffectiveTags",
            "compute.interconnectAttachments.listTagBindings",
            "compute.interconnectLocations.*",
            "compute.interconnectRemoteLocations.*",
            "compute.interconnects.get",
            "compute.interconnects.list",
            "compute.interconnects.listEffectiveTags",
            "compute.interconnects.listTagBindings",
            "compute.licenseCodes.*",
            "compute.licenses.*",
            "compute.machineImages.*",
            "compute.machineTypes.*",
            "compute.multiMig.*",
            "compute.networkAttachments.get",
            "compute.networkAttachments.getIamPolicy",
            "compute.networkAttachments.list",
            "compute.networkAttachments.listEffectiveTags",
            "compute.networkAttachments.listTagBindings",
            "compute.networkEdgeSecurityServices.get",
            "compute.networkEdgeSecurityServices.list",
            "compute.networkEdgeSecurityServices.listEffectiveTags",
            "compute.networkEdgeSecurityServices.listTagBindings",
            "compute.networkEndpointGroups.*",
            "compute.networkProfiles.*",
            "compute.networks.get",
            "compute.networks.getEffectiveFirewalls",
            "compute.networks.getRegionEffectiveFirewalls",
            "compute.networks.list",
            "compute.networks.listEffectiveTags",
            "compute.networks.listPeeringRoutes",
            "compute.networks.listTagBindings",
            "compute.networks.use",
            "compute.networks.useExternalIp",
            "compute.nodeGroups.get",
            "compute.nodeGroups.getIamPolicy",
            "compute.nodeGroups.list",
            "compute.nodeTemplates.get",
            "compute.nodeTemplates.getIamPolicy",
            "compute.nodeTemplates.list",
            "compute.nodeTypes.*",
            "compute.organizations.listAssociations",
            "compute.packetMirrorings.get",
            "compute.packetMirrorings.list",
            "compute.packetMirrorings.listEffectiveTags",
            "compute.packetMirrorings.listTagBindings",
            "compute.projects.get",
            "compute.projects.setCommonInstanceMetadata",
            "compute.publicAdvertisedPrefixes.get",
            "compute.publicAdvertisedPrefixes.list",
            "compute.publicDelegatedPrefixes.get",
            "compute.publicDelegatedPrefixes.list",
            "compute.publicDelegatedPrefixes.listEffectiveTags",
            "compute.publicDelegatedPrefixes.listTagBindings",
            "compute.regionBackendServices.get",
            "compute.regionBackendServices.getIamPolicy",
            "compute.regionBackendServices.list",
            "compute.regionBackendServices.listEffectiveTags",
            "compute.regionBackendServices.listTagBindings",
            "compute.regionFirewallPolicies.get",
            "compute.regionFirewallPolicies.getIamPolicy",
            "compute.regionFirewallPolicies.list",
            "compute.regionFirewallPolicies.listEffectiveTags",
            "compute.regionFirewallPolicies.listTagBindings",
            "compute.regionHealthCheckServices.get",
            "compute.regionHealthCheckServices.list",
            "compute.regionHealthChecks.get",
            "compute.regionHealthChecks.list",
            "compute.regionHealthChecks.listEffectiveTags",
            "compute.regionHealthChecks.listTagBindings",
            "compute.regionNetworkEndpointGroups.*",
            "compute.regionNotificationEndpoints.get",
            "compute.regionNotificationEndpoints.list",
            "compute.regionOperations.get",
            "compute.regionOperations.getIamPolicy",
            "compute.regionOperations.list",
            "compute.regionSecurityPolicies.get",
            "compute.regionSecurityPolicies.list",
            "compute.regionSecurityPolicies.listEffectiveTags",
            "compute.regionSecurityPolicies.listTagBindings",
            "compute.regionSslCertificates.get",
            "compute.regionSslCertificates.list",
            "compute.regionSslCertificates.listEffectiveTags",
            "compute.regionSslCertificates.listTagBindings",
            "compute.regionSslPolicies.get",
            "compute.regionSslPolicies.list",
            "compute.regionSslPolicies.listAvailableFeatures",
            "compute.regionSslPolicies.listEffectiveTags",
            "compute.regionSslPolicies.listTagBindings",
            "compute.regionTargetHttpProxies.get",
            "compute.regionTargetHttpProxies.list",
            "compute.regionTargetHttpProxies.listEffectiveTags",
            "compute.regionTargetHttpProxies.listTagBindings",
            "compute.regionTargetHttpsProxies.get",
            "compute.regionTargetHttpsProxies.list",
            "compute.regionTargetHttpsProxies.listEffectiveTags",
            "compute.regionTargetHttpsProxies.listTagBindings",
            "compute.regionTargetTcpProxies.get",
            "compute.regionTargetTcpProxies.list",
            "compute.regionTargetTcpProxies.listEffectiveTags",
            "compute.regionTargetTcpProxies.listTagBindings",
            "compute.regionUrlMaps.get",
            "compute.regionUrlMaps.list",
            "compute.regionUrlMaps.listEffectiveTags",
            "compute.regionUrlMaps.listTagBindings",
            "compute.regionUrlMaps.validate",
            "compute.regions.*",
            "compute.reservationBlocks.get",
            "compute.reservationBlocks.list",
            "compute.reservations.get",
            "compute.reservations.list",
            "compute.resourcePolicies.*",
            "compute.routers.get",
            "compute.routers.getRoutePolicy",
            "compute.routers.list",
            "compute.routers.listBgpRoutes",
            "compute.routers.listEffectiveTags",
            "compute.routers.listRoutePolicies",
            "compute.routers.listTagBindings",
            "compute.routes.get",
            "compute.routes.list",
            "compute.routes.listEffectiveTags",
            "compute.routes.listTagBindings",
            "compute.securityPolicies.get",
            "compute.securityPolicies.list",
            "compute.securityPolicies.listEffectiveTags",
            "compute.securityPolicies.listTagBindings",
            "compute.serviceAttachments.get",
            "compute.serviceAttachments.getIamPolicy",
            "compute.serviceAttachments.list",
            "compute.serviceAttachments.listEffectiveTags",
            "compute.serviceAttachments.listTagBindings",
            "compute.snapshotSettings.get",
            "compute.snapshots.*",
            "compute.spotAssistants.get",
            "compute.sslCertificates.get",
            "compute.sslCertificates.list",
            "compute.sslCertificates.listEffectiveTags",
            "compute.sslCertificates.listTagBindings",
            "compute.sslPolicies.get",
            "compute.sslPolicies.list",
            "compute.sslPolicies.listAvailableFeatures",
            "compute.sslPolicies.listEffectiveTags",
            "compute.sslPolicies.listTagBindings",
            "compute.storagePools.get",
            "compute.storagePools.getIamPolicy",
            "compute.storagePools.list",
            "compute.storagePools.use",
            "compute.subnetworks.get",
            "compute.subnetworks.getIamPolicy",
            "compute.subnetworks.list",
            "compute.subnetworks.listEffectiveTags",
            "compute.subnetworks.listTagBindings",
            "compute.subnetworks.use",
            "compute.subnetworks.useExternalIp",
            "compute.targetGrpcProxies.get",
            "compute.targetGrpcProxies.list",
            "compute.targetGrpcProxies.listEffectiveTags",
            "compute.targetGrpcProxies.listTagBindings",
            "compute.targetHttpProxies.get",
            "compute.targetHttpProxies.list",
            "compute.targetHttpProxies.listEffectiveTags",
            "compute.targetHttpProxies.listTagBindings",
            "compute.targetHttpsProxies.get",
            "compute.targetHttpsProxies.list",
            "compute.targetHttpsProxies.listEffectiveTags",
            "compute.targetHttpsProxies.listTagBindings",
            "compute.targetInstances.get",
            "compute.targetInstances.list",
            "compute.targetInstances.listEffectiveTags",
            "compute.targetInstances.listTagBindings",
            "compute.targetPools.get",
            "compute.targetPools.list",
            "compute.targetPools.listEffectiveTags",
            "compute.targetPools.listTagBindings",
            "compute.targetSslProxies.get",
            "compute.targetSslProxies.list",
            "compute.targetSslProxies.listEffectiveTags",
            "compute.targetSslProxies.listTagBindings",
            "compute.targetTcpProxies.get",
            "compute.targetTcpProxies.list",
            "compute.targetTcpProxies.listEffectiveTags",
            "compute.targetTcpProxies.listTagBindings",
            "compute.targetVpnGateways.get",
            "compute.targetVpnGateways.list",
            "compute.targetVpnGateways.listEffectiveTags",
            "compute.targetVpnGateways.listTagBindings",
            "compute.urlMaps.get",
            "compute.urlMaps.list",
            "compute.urlMaps.listEffectiveTags",
            "compute.urlMaps.listTagBindings",
            "compute.urlMaps.validate",
            "compute.vpnGateways.get",
            "compute.vpnGateways.list",
            "compute.vpnGateways.listEffectiveTags",
            "compute.vpnGateways.listTagBindings",
            "compute.vpnTunnels.get",
            "compute.vpnTunnels.list",
            "compute.vpnTunnels.listEffectiveTags",
            "compute.vpnTunnels.listTagBindings",
            "compute.wireGroups.get",
            "compute.wireGroups.list",
            "compute.zoneOperations.get",
            "compute.zoneOperations.getIamPolicy",
            "compute.zoneOperations.list",
            "compute.zones.*",
            "dataproc.clusters.get",
            "dataproc.clusters.use",
            "dataproc.jobs.cancel",
            "dataproc.jobs.create",
            "dataproc.jobs.delete",
            "dataproc.jobs.get",
            "dataproc.jobs.list",
            "dataproc.jobs.update",
            "iam.serviceAccounts.actAs",
            "iam.serviceAccounts.get",
            "iam.serviceAccounts.getAccessToken",
            "iam.serviceAccounts.list",
            "ml.jobs.create",
            "ml.jobs.get",
            "ml.jobs.list",
            "notebooks.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "serviceusage.quotas.get",
            "serviceusage.services.get",
            "serviceusage.services.list"
          ],
          "title": "AI Platform Notebooks Service Agent"
        },
        {
          "description": "Grants Oracle Database@Google Cloud access to services and APIs in the user project",
          "id": "roles/oci.serviceAgent",
          "is_beta": false,
          "permissions": [
            "compute.addresses.get",
            "compute.addresses.list",
            "compute.globalAddresses.get",
            "compute.globalAddresses.list",
            "compute.globalOperations.get",
            "compute.globalOperations.list",
            "compute.interconnectAttachments.create",
            "compute.interconnectAttachments.delete",
            "compute.interconnectAttachments.get",
            "compute.interconnectAttachments.list",
            "compute.interconnectAttachments.setLabels",
            "compute.interconnectAttachments.update",
            "compute.interconnectAttachments.use",
            "compute.interconnectLocations.*",
            "compute.interconnectRemoteLocations.*",
            "compute.interconnects.create",
            "compute.interconnects.delete",
            "compute.interconnects.get",
            "compute.interconnects.getMacsecConfig",
            "compute.interconnects.list",
            "compute.interconnects.setLabels",
            "compute.interconnects.update",
            "compute.interconnects.use",
            "compute.networks.get",
            "compute.networks.list",
            "compute.networks.updatePolicy",
            "compute.projects.get",
            "compute.regionOperations.get",
            "compute.regionOperations.list",
            "compute.regions.*",
            "compute.routers.create",
            "compute.routers.delete",
            "compute.routers.get",
            "compute.routers.list",
            "compute.routers.update",
            "compute.routers.use",
            "compute.routes.get",
            "compute.routes.list",
            "compute.subnetworks.get",
            "compute.subnetworks.list",
            "compute.zones.*",
            "dns.changes.*",
            "dns.dnsKeys.*",
            "dns.managedZoneOperations.*",
            "dns.managedZones.create",
            "dns.managedZones.delete",
            "dns.managedZones.get",
            "dns.managedZones.getIamPolicy",
            "dns.managedZones.list",
            "dns.managedZones.update",
            "dns.networks.*",
            "dns.policies.*",
            "dns.projects.get",
            "dns.resourceRecordSets.*",
            "dns.responsePolicies.*",
            "dns.responsePolicyRules.*",
            "networkconnectivity.internalRanges.create",
            "networkconnectivity.internalRanges.delete",
            "networkconnectivity.internalRanges.get",
            "networkconnectivity.internalRanges.list",
            "networkconnectivity.operations.get",
            "networkconnectivity.operations.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.updateLiens"
          ],
          "title": "Oracle Database@Google Cloud Service Agent"
        },
        {
          "description": "Gives the On-Demand Scanning API the access it needs to function.",
          "id": "roles/ondemandscanning.serviceAgent",
          "is_beta": false,
          "permissions": [
            "artifactregistry.dockerimages.*",
            "artifactregistry.files.download",
            "artifactregistry.files.get",
            "artifactregistry.files.list",
            "artifactregistry.locations.*",
            "artifactregistry.mavenartifacts.*",
            "artifactregistry.npmpackages.*",
            "artifactregistry.packages.get",
            "artifactregistry.packages.list",
            "artifactregistry.projectsettings.get",
            "artifactregistry.pythonpackages.*",
            "artifactregistry.repositories.downloadArtifacts",
            "artifactregistry.repositories.get",
            "artifactregistry.repositories.list",
            "artifactregistry.repositories.listEffectiveTags",
            "artifactregistry.repositories.listTagBindings",
            "artifactregistry.repositories.readViaVirtualRepository",
            "artifactregistry.tags.get",
            "artifactregistry.tags.list",
            "artifactregistry.versions.get",
            "artifactregistry.versions.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "storage.objects.get",
            "storage.objects.list"
          ],
          "title": "On-Demand Scanning Service Agent"
        },
        {
          "description": "Grants OS Config Rollout Service Account access to zonal OS Config resources.",
          "id": "roles/osconfig.rolloutServiceAgent",
          "is_beta": false,
          "permissions": [
            "osconfig.operations.get",
            "osconfig.osPolicyAssignments.delete",
            "osconfig.osPolicyAssignments.get",
            "osconfig.osPolicyAssignments.update"
          ],
          "title": "Cloud OS Config Rollout Service Agent"
        },
        {
          "description": "Grants OS Config Service Account access to Google Compute Engine instances.",
          "id": "roles/osconfig.serviceAgent",
          "is_beta": false,
          "permissions": [
            "cloudasset.assets.listOSConfigOSPolicyAssignments",
            "cloudasset.assets.listPatchDeployments",
            "compute.globalOperations.get",
            "compute.instances.get",
            "compute.instances.getGuestAttributes",
            "compute.instances.list",
            "compute.instances.setMetadata",
            "compute.projects.get",
            "compute.projects.setCommonInstanceMetadata",
            "compute.zones.*",
            "containeranalysis.notes.attachOccurrence",
            "containeranalysis.notes.create",
            "containeranalysis.notes.delete",
            "containeranalysis.notes.get",
            "containeranalysis.notes.list",
            "containeranalysis.notes.update",
            "containeranalysis.occurrences.create",
            "containeranalysis.occurrences.delete",
            "containeranalysis.occurrences.get",
            "containeranalysis.occurrences.list",
            "containeranalysis.occurrences.update",
            "iam.serviceAccounts.actAs",
            "osconfig.projectFeatureSettings.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Cloud OS Config Service Agent"
        },
        {
          "description": "Gives the Parallelstore service agent ability to access customer resources.",
          "id": "roles/parallelstore.serviceAgent",
          "is_beta": false,
          "permissions": [
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Parallelstore Service Agent"
        },
        {
          "description": "Gives privileged access manager service account access to modify IAM policies on GCP folders",
          "id": "roles/privilegedaccessmanager.folderServiceAgent",
          "is_beta": false,
          "permissions": [
            "resourcemanager.folders.get",
            "resourcemanager.folders.getIamPolicy",
            "resourcemanager.folders.setIamPolicy"
          ],
          "title": "Privileged Access Manager Folder Service Agent"
        },
        {
          "description": "Gives privileged access manager service account access to modify IAM policies on GCP organizations",
          "id": "roles/privilegedaccessmanager.organizationServiceAgent",
          "is_beta": false,
          "permissions": [
            "resourcemanager.organizations.get",
            "resourcemanager.organizations.getIamPolicy",
            "resourcemanager.organizations.setIamPolicy"
          ],
          "title": "Privileged Access Manager Organization Service Agent"
        },
        {
          "description": "Gives privileged access manager service account access to modify IAM policies on GCP projects",
          "id": "roles/privilegedaccessmanager.projectServiceAgent",
          "is_beta": false,
          "permissions": [
            "resourcemanager.projects.get",
            "resourcemanager.projects.getIamPolicy",
            "resourcemanager.projects.setIamPolicy"
          ],
          "title": "Privileged Access Manager Project Service Agent"
        },
        {
          "description": "Gives privileged access manager service account access to modify IAM policies on GCP resources",
          "id": "roles/privilegedaccessmanager.serviceAgent",
          "is_beta": false,
          "permissions": [
            "resourcemanager.folders.get",
            "resourcemanager.folders.getIamPolicy",
            "resourcemanager.folders.setIamPolicy",
            "resourcemanager.organizations.get",
            "resourcemanager.organizations.getIamPolicy",
            "resourcemanager.organizations.setIamPolicy",
            "resourcemanager.projects.get",
            "resourcemanager.projects.getIamPolicy",
            "resourcemanager.projects.setIamPolicy"
          ],
          "title": "Privileged Access Manager Service Agent"
        },
        {
          "description": "Gives Progressive Rollout the ability to roll out a customer change.",
          "id": "roles/progressiverollout.serviceAgent",
          "is_beta": false,
          "permissions": [
            "cloudasset.assets.searchAllResources"
          ],
          "title": "Progressive Rollout Service Agent"
        },
        {
          "description": "Grants Cloud Pub/Sub Service Account access to manage resources.",
          "id": "roles/pubsub.serviceAgent",
          "is_beta": false,
          "permissions": [
            "iam.serviceAccounts.get",
            "iam.serviceAccounts.getAccessToken",
            "iam.serviceAccounts.getOpenIdToken",
            "iam.serviceAccounts.implicitDelegation",
            "iam.serviceAccounts.list",
            "iam.serviceAccounts.signBlob",
            "iam.serviceAccounts.signJwt",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Cloud Pub/Sub Service Agent"
        },
        {
          "description": "Grants Pub/Sub Lite Service Agent access to project resources.",
          "id": "roles/pubsublite.serviceAgent",
          "is_beta": false,
          "permissions": [
            "pubsub.topics.publish",
            "pubsublite.subscriptions.get",
            "pubsublite.subscriptions.getCursor",
            "pubsublite.subscriptions.setCursor",
            "pubsublite.subscriptions.subscribe",
            "pubsublite.topics.computeHeadCursor",
            "pubsublite.topics.getPartitions",
            "pubsublite.topics.publish",
            "pubsublite.topics.subscribe"
          ],
          "title": "Pub/Sub Lite Service Agent"
        },
        {
          "description": "Gives RMA service account access to MC resources.",
          "id": "roles/rapidmigrationassessment.serviceAgent",
          "is_beta": false,
          "permissions": [
            "autoscaling.sites.writeMetrics",
            "cloudasset.assets.exportResource",
            "cloudasset.feeds.create",
            "logging.logEntries.create",
            "migrationcenter.assets.list",
            "migrationcenter.assets.reportFrames",
            "migrationcenter.importJobs.get",
            "migrationcenter.importJobs.list",
            "migrationcenter.sources.*",
            "monitoring.metricDescriptors.create",
            "monitoring.metricDescriptors.list",
            "monitoring.timeSeries.create",
            "resourcemanager.projects.get"
          ],
          "title": "RMA Service Agent"
        },
        {
          "description": "Gives Cloud Memorystore Redis service account access to managed resource",
          "id": "roles/redis.serviceAgent",
          "is_beta": false,
          "permissions": [
            "compute.globalOperations.get",
            "compute.networks.addPeering",
            "compute.networks.get",
            "compute.networks.removePeering",
            "compute.networks.update",
            "compute.projects.get",
            "compute.routes.get",
            "compute.routes.list",
            "compute.subnetworks.get",
            "compute.subnetworks.list",
            "monitoring.metricDescriptors.create",
            "monitoring.metricDescriptors.get",
            "monitoring.metricDescriptors.list",
            "monitoring.monitoredResourceDescriptors.*",
            "monitoring.timeSeries.create",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Cloud Memorystore Redis Service Agent"
        },
        {
          "description": "Gives Remote Build Execution service account access to managed resources.",
          "id": "roles/remotebuildexecution.serviceAgent",
          "is_beta": false,
          "permissions": [
            "remotebuildexecution.actions.update",
            "remotebuildexecution.blobs.*",
            "remotebuildexecution.botsessions.*",
            "remotebuildexecution.logstreams.create",
            "remotebuildexecution.logstreams.update"
          ],
          "title": "Remote Build Execution Service Agent"
        },
        {
          "description": "Grants Chrome Remote Desktop Service Agent access to Google Compute Engine metadata.",
          "id": "roles/remotingcloud.serviceAgent",
          "is_beta": false,
          "permissions": [
            "compute.instanceSettings.get",
            "compute.instances.get",
            "compute.projects.get"
          ],
          "title": "Remoting Cloud Service Agent"
        },
        {
          "description": "Retail service uploads product feeds and user events from Cloud Storage and BigQuery, reports results to the customer Cloud Storage bucket, writes logs to customer projects, and writes and reads Google Cloud Observability metrics for customer projects.",
          "id": "roles/retail.serviceAgent",
          "is_beta": false,
          "permissions": [
            "bigquery.datasets.create",
            "bigquery.datasets.get",
            "bigquery.jobs.create",
            "bigquery.jobs.get",
            "bigquery.jobs.list",
            "bigquery.jobs.update",
            "bigquery.tables.create",
            "bigquery.tables.export",
            "bigquery.tables.get",
            "bigquery.tables.getData",
            "bigquery.tables.list",
            "bigquery.tables.update",
            "bigquery.tables.updateData",
            "cloudnotifications.activities.list",
            "dataflow.jobs.*",
            "dataflow.messages.list",
            "dataflow.metrics.get",
            "logging.logEntries.create",
            "logging.logEntries.route",
            "monitoring.alertPolicies.get",
            "monitoring.alertPolicies.list",
            "monitoring.alertPolicies.listEffectiveTags",
            "monitoring.alertPolicies.listTagBindings",
            "monitoring.dashboards.get",
            "monitoring.dashboards.list",
            "monitoring.groups.get",
            "monitoring.groups.list",
            "monitoring.metricDescriptors.create",
            "monitoring.metricDescriptors.get",
            "monitoring.metricDescriptors.list",
            "monitoring.monitoredResourceDescriptors.*",
            "monitoring.notificationChannelDescriptors.*",
            "monitoring.notificationChannels.get",
            "monitoring.notificationChannels.list",
            "monitoring.services.get",
            "monitoring.services.list",
            "monitoring.slos.get",
            "monitoring.slos.list",
            "monitoring.snoozes.get",
            "monitoring.snoozes.list",
            "monitoring.timeSeries.*",
            "monitoring.uptimeCheckConfigs.get",
            "monitoring.uptimeCheckConfigs.list",
            "opsconfigmonitoring.resourceMetadata.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "stackdriver.projects.get",
            "stackdriver.resourceMetadata.list",
            "storage.buckets.create",
            "storage.buckets.get",
            "storage.objects.create",
            "storage.objects.delete",
            "storage.objects.get",
            "storage.objects.list",
            "storage.objects.update"
          ],
          "title": "Retail Service Agent"
        },
        {
          "description": "Service agent that grants Risk Manager service access to fetch findings for generating Reports",
          "id": "roles/riskmanager.serviceAgent",
          "is_beta": false,
          "permissions": [
            "cloudasset.assets.*",
            "cloudasset.othercloudconnections.get",
            "cloudasset.othercloudconnections.list",
            "cloudasset.othercloudconnections.verify",
            "recommender.cloudAssetInsights.get",
            "recommender.cloudAssetInsights.list",
            "recommender.locations.*",
            "resourcemanager.folders.get",
            "resourcemanager.folders.list",
            "resourcemanager.organizations.get",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "securitycenter.assets.group",
            "securitycenter.assets.list",
            "securitycenter.assets.listAssetPropertyNames",
            "securitycenter.bigQueryExports.get",
            "securitycenter.bigQueryExports.list",
            "securitycenter.complianceReports.aggregate",
            "securitycenter.compliancesnapshots.list",
            "securitycenter.containerthreatdetectionsettings.calculate",
            "securitycenter.containerthreatdetectionsettings.get",
            "securitycenter.effectivesecurityhealthanalyticscustommodules.*",
            "securitycenter.eventthreatdetectionsettings.calculate",
            "securitycenter.eventthreatdetectionsettings.get",
            "securitycenter.findingexplanations.get",
            "securitycenter.findings.group",
            "securitycenter.findings.list",
            "securitycenter.findings.listFindingPropertyNames",
            "securitycenter.integratedvulnerabilityscannersettings.calculate",
            "securitycenter.integratedvulnerabilityscannersettings.get",
            "securitycenter.issues.get",
            "securitycenter.issues.group",
            "securitycenter.issues.list",
            "securitycenter.issues.listFilterValues",
            "securitycenter.muteconfigs.get",
            "securitycenter.muteconfigs.list",
            "securitycenter.notificationconfig.get",
            "securitycenter.notificationconfig.list",
            "securitycenter.organizationsettings.get",
            "securitycenter.rapidvulnerabilitydetectionsettings.calculate",
            "securitycenter.rapidvulnerabilitydetectionsettings.get",
            "securitycenter.securitycentersettings.get",
            "securitycenter.securityhealthanalyticscustommodules.get",
            "securitycenter.securityhealthanalyticscustommodules.list",
            "securitycenter.securityhealthanalyticssettings.calculate",
            "securitycenter.securityhealthanalyticssettings.get",
            "securitycenter.sources.get",
            "securitycenter.sources.list",
            "securitycenter.subscription.get",
            "securitycenter.userinterfacemetadata.get",
            "securitycenter.virtualmachinethreatdetectionsettings.calculate",
            "securitycenter.virtualmachinethreatdetectionsettings.get",
            "securitycenter.vulnerabilitysnapshots.list",
            "securitycenter.websecurityscannersettings.calculate",
            "securitycenter.websecurityscannersettings.get",
            "securitycentermanagement.billingMetadata.get",
            "securitycentermanagement.effectiveEventThreatDetectionCustomModules.*",
            "securitycentermanagement.effectiveSecurityHealthAnalyticsCustomModules.*",
            "securitycentermanagement.eventThreatDetectionCustomModules.get",
            "securitycentermanagement.eventThreatDetectionCustomModules.list",
            "securitycentermanagement.eventThreatDetectionCustomModules.validate",
            "securitycentermanagement.locations.*",
            "securitycentermanagement.securityCenterServices.get",
            "securitycentermanagement.securityCenterServices.list",
            "securitycentermanagement.securityCommandCenter.checkActivationOperation",
            "securitycentermanagement.securityCommandCenter.checkOnboardingStatus",
            "securitycentermanagement.securityCommandCenter.get",
            "securitycentermanagement.securityHealthAnalyticsCustomModules.get",
            "securitycentermanagement.securityHealthAnalyticsCustomModules.list",
            "securitycentermanagement.securityHealthAnalyticsCustomModules.simulate",
            "securitycentermanagement.securityHealthAnalyticsCustomModules.test"
          ],
          "title": "Risk Manager Service Agent"
        },
        {
          "description": "Grants Route Optimization Service Account access to read and write GCS objects in the host project.",
          "id": "roles/routeoptimization.serviceAgent",
          "is_beta": false,
          "permissions": [
            "storage.buckets.get",
            "storage.objects.create",
            "storage.objects.get",
            "storage.objects.list",
            "storage.objects.update"
          ],
          "title": "Route Optimization Service Agent"
        },
        {
          "description": "Gives Cloud Run service account access to managed resources.",
          "id": "roles/run.serviceAgent",
          "is_beta": false,
          "permissions": [
            "artifactregistry.attachments.get",
            "artifactregistry.attachments.list",
            "artifactregistry.dockerimages.*",
            "artifactregistry.files.download",
            "artifactregistry.files.get",
            "artifactregistry.files.list",
            "artifactregistry.locations.*",
            "artifactregistry.mavenartifacts.*",
            "artifactregistry.npmpackages.*",
            "artifactregistry.packages.get",
            "artifactregistry.packages.list",
            "artifactregistry.projectsettings.get",
            "artifactregistry.pythonpackages.*",
            "artifactregistry.repositories.downloadArtifacts",
            "artifactregistry.repositories.get",
            "artifactregistry.repositories.list",
            "artifactregistry.repositories.listEffectiveTags",
            "artifactregistry.repositories.listTagBindings",
            "artifactregistry.repositories.readViaVirtualRepository",
            "artifactregistry.repositories.uploadArtifacts",
            "artifactregistry.rules.get",
            "artifactregistry.rules.list",
            "artifactregistry.tags.get",
            "artifactregistry.tags.list",
            "artifactregistry.versions.get",
            "artifactregistry.versions.list",
            "binaryauthorization.platformPolicies.evaluatePolicy",
            "binaryauthorization.policy.evaluatePolicy",
            "clientauthconfig.clients.list",
            "cloudbuild.builds.create",
            "cloudbuild.builds.get",
            "compute.addresses.create",
            "compute.addresses.createInternal",
            "compute.addresses.delete",
            "compute.addresses.deleteInternal",
            "compute.addresses.get",
            "compute.addresses.list",
            "compute.globalOperations.get",
            "compute.networks.access",
            "compute.networks.get",
            "compute.subnetworks.get",
            "compute.subnetworks.use",
            "iam.serviceAccounts.actAs",
            "iam.serviceAccounts.getAccessToken",
            "iam.serviceAccounts.getOpenIdToken",
            "iam.serviceAccounts.signBlob",
            "networkservices.meshes.get",
            "resourcemanager.projects.get",
            "resourcemanager.projects.getIamPolicy",
            "resourcemanager.projects.list",
            "run.routes.invoke",
            "serviceusage.services.get",
            "serviceusage.services.use",
            "storage.folders.get",
            "storage.folders.list",
            "storage.managedFolders.get",
            "storage.managedFolders.list",
            "storage.objects.get",
            "storage.objects.list",
            "vpcaccess.connectors.get",
            "vpcaccess.connectors.use"
          ],
          "title": "Cloud Run Service Agent"
        },
        {
          "description": "Gives Serverless Integrations Service Account access to customer project resources.",
          "id": "roles/runapps.serviceAgent",
          "is_beta": false,
          "permissions": [
            "cloudbuild.builds.create",
            "cloudbuild.builds.get",
            "cloudsql.databases.get",
            "cloudsql.instances.get",
            "cloudsql.users.get",
            "compute.backendServices.get",
            "compute.backendServices.list",
            "compute.globalAddresses.get",
            "compute.globalAddresses.list",
            "compute.globalForwardingRules.get",
            "compute.globalForwardingRules.list",
            "compute.networks.get",
            "compute.networks.list",
            "compute.regionNetworkEndpointGroups.get",
            "compute.regionNetworkEndpointGroups.list",
            "compute.sslCertificates.get",
            "compute.sslCertificates.list",
            "compute.targetHttpProxies.get",
            "compute.targetHttpProxies.list",
            "compute.targetHttpsProxies.get",
            "compute.targetHttpsProxies.list",
            "compute.urlMaps.get",
            "compute.urlMaps.list",
            "firebasehosting.sites.get",
            "iam.serviceAccounts.actAs",
            "redis.instances.get",
            "redis.instances.list",
            "run.jobs.get",
            "run.jobs.list",
            "run.services.get",
            "run.services.list",
            "serviceusage.services.use",
            "storage.buckets.create",
            "storage.buckets.delete",
            "storage.buckets.get",
            "storage.objects.create",
            "storage.objects.delete",
            "storage.objects.get",
            "storage.objects.list",
            "vpcaccess.connectors.get",
            "vpcaccess.connectors.list"
          ],
          "title": "Serverless Integrations Service Agent"
        },
        {
          "description": "Service Agent used by SaaS Service Management.",
          "id": "roles/saasservicemgmt.serviceAgent",
          "is_beta": false,
          "permissions": [
            "saasservicemgmt.locations.*",
            "saasservicemgmt.operations.get",
            "saasservicemgmt.operations.list",
            "saasservicemgmt.releases.create",
            "saasservicemgmt.releases.get",
            "saasservicemgmt.releases.list",
            "saasservicemgmt.releases.update",
            "saasservicemgmt.rolloutKinds.*",
            "saasservicemgmt.rollouts.*",
            "saasservicemgmt.saas.create",
            "saasservicemgmt.saas.get",
            "saasservicemgmt.saas.list",
            "saasservicemgmt.saas.update",
            "saasservicemgmt.unitKinds.create",
            "saasservicemgmt.unitKinds.get",
            "saasservicemgmt.unitKinds.list",
            "saasservicemgmt.unitKinds.update",
            "saasservicemgmt.unitOperations.*",
            "saasservicemgmt.units.*"
          ],
          "title": "SaaS Service Management Service Agent"
        },
        {
          "description": "Service agent used by SecLM to access resources used by SecLM Workbenches.",
          "id": "roles/seclm.serviceAgent",
          "is_beta": false,
          "permissions": [
            "aiplatform.endpoints.predict",
            "aiplatform.locations.get",
            "aiplatform.ragCorpora.get",
            "aiplatform.ragCorpora.list",
            "aiplatform.ragCorpora.query",
            "discoveryengine.dataStores.completeQuery",
            "discoveryengine.dataStores.get",
            "discoveryengine.dataStores.list",
            "discoveryengine.servingConfigs.search"
          ],
          "title": "SecLM Service Agent"
        },
        {
          "description": "Grants Secured Landing Zone service account permissions to manage resources in the customer project",
          "id": "roles/securedlandingzone.serviceAgent",
          "is_beta": false,
          "permissions": [
            "cloudasset.assets.exportOrgPolicy",
            "cloudasset.assets.exportResource",
            "cloudasset.feeds.create",
            "cloudasset.feeds.delete",
            "cloudasset.feeds.update",
            "logging.logEntries.list",
            "pubsub.subscriptions.consume",
            "pubsub.subscriptions.create",
            "pubsub.subscriptions.delete",
            "pubsub.topics.attachSubscription",
            "pubsub.topics.create",
            "pubsub.topics.delete",
            "pubsub.topics.detachSubscription",
            "pubsub.topics.getIamPolicy",
            "pubsub.topics.setIamPolicy",
            "resourcemanager.projects.get",
            "securitycenter.assetsecuritymarks.update",
            "securitycenter.findings.list",
            "securitycenter.findings.update",
            "securitycenter.sources.list",
            "securitycenter.sources.update",
            "serviceusage.services.use"
          ],
          "title": "Secured Landing Zone Service Agent"
        },
        {
          "description": "Gives Secure Source Manager service account access to managed resources.",
          "id": "roles/securesourcemanager.serviceAgent",
          "is_beta": false,
          "permissions": [
            "iam.serviceAccounts.signJwt",
            "securesourcemanager.instances.access",
            "serviceusage.services.use"
          ],
          "title": "Secure Source Manager Service Agent"
        },
        {
          "description": "Gives Mandiant Attack Surface Management the ability to scan Cloud Platform resources.",
          "id": "roles/securitycenter.attackSurfaceManagementScannerServiceAgent",
          "is_beta": false,
          "permissions": [
            "apigateway.apiconfigs.get",
            "cloudasset.assets.listResource",
            "dns.managedZones.list",
            "dns.resourceRecordSets.list",
            "resourcemanager.projects.get"
          ],
          "title": "Attack Surface Management Scanner Service Agent"
        },
        {
          "description": "Security Center automation service agent can configure GCP resources to enable security scanning.",
          "id": "roles/securitycenter.automationServiceAgent",
          "is_beta": false,
          "permissions": [
            "cloudasset.feeds.*",
            "resourcemanager.folders.get",
            "resourcemanager.folders.list",
            "resourcemanager.organizations.get",
            "resourcemanager.projects.get",
            "resourcemanager.projects.getIamPolicy",
            "resourcemanager.projects.list",
            "serviceusage.services.enable",
            "serviceusage.services.get"
          ],
          "title": "Security Center Automation Service Agent"
        },
        {
          "description": "Security Center Control service agent can monitor and configure GCP resources and import security findings.",
          "id": "roles/securitycenter.controlServiceAgent",
          "is_beta": false,
          "permissions": [
            "accesscontextmanager.gcpUserAccessBindings.get",
            "accesscontextmanager.gcpUserAccessBindings.list",
            "aiplatform.dataItems.list",
            "aiplatform.datasets.list",
            "bigquery.datasets.get",
            "binaryauthorization.policy.get",
            "cloudasset.assets.analyzeIamPolicy",
            "cloudasset.assets.analyzeMove",
            "cloudasset.assets.analyzeOrgPolicy",
            "cloudasset.assets.exportAccessLevel",
            "cloudasset.assets.exportAccessPolicy",
            "cloudasset.assets.exportAiplatformBatchPredictionJobs",
            "cloudasset.assets.exportAiplatformCustomJobs",
            "cloudasset.assets.exportAiplatformDataLabelingJobs",
            "cloudasset.assets.exportAiplatformDatasets",
            "cloudasset.assets.exportAiplatformEndpoints",
            "cloudasset.assets.exportAiplatformHyperparameterTuningJobs",
            "cloudasset.assets.exportAiplatformMetadataStores",
            "cloudasset.assets.exportAiplatformModelDeploymentMonitoringJobs",
            "cloudasset.assets.exportAiplatformModels",
            "cloudasset.assets.exportAiplatformPipelineJobs",
            "cloudasset.assets.exportAiplatformSpecialistPools",
            "cloudasset.assets.exportAiplatformTrainingPipelines",
            "cloudasset.assets.exportAllAccessPolicy",
            "cloudasset.assets.exportAnthosConnectedCluster",
            "cloudasset.assets.exportAnthosedgeCluster",
            "cloudasset.assets.exportApigatewayApi",
            "cloudasset.assets.exportApigatewayApiConfig",
            "cloudasset.assets.exportApigatewayGateway",
            "cloudasset.assets.exportApikeysKeys",
            "cloudasset.assets.exportAppengineApplications",
            "cloudasset.assets.exportAppengineServices",
            "cloudasset.assets.exportAppengineVersions",
            "cloudasset.assets.exportArtifactregistryDockerImages",
            "cloudasset.assets.exportArtifactregistryRepositories",
            "cloudasset.assets.exportAssuredWorkloadsWorkloads",
            "cloudasset.assets.exportBeyondCorpApiGateways",
            "cloudasset.assets.exportBeyondCorpAppConnections",
            "cloudasset.assets.exportBeyondCorpAppConnectors",
            "cloudasset.assets.exportBeyondCorpAppGateways",
            "cloudasset.assets.exportBeyondCorpClientConnectorServices",
            "cloudasset.assets.exportBeyondCorpClientGateways",
            "cloudasset.assets.exportBigqueryDatasets",
            "cloudasset.assets.exportBigqueryModels",
            "cloudasset.assets.exportBigqueryTables",
            "cloudasset.assets.exportBigtableAppProfile",
            "cloudasset.assets.exportBigtableBackup",
            "cloudasset.assets.exportBigtableCluster",
            "cloudasset.assets.exportBigtableInstance",
            "cloudasset.assets.exportBigtableTable",
            "cloudasset.assets.exportCloudAssetFeeds",
            "cloudasset.assets.exportCloudDeployDeliveryPipelines",
            "cloudasset.assets.exportCloudDeployReleases",
            "cloudasset.assets.exportCloudDeployRollouts",
            "cloudasset.assets.exportCloudDeployTargets",
            "cloudasset.assets.exportCloudDocumentAIEvaluation",
            "cloudasset.assets.exportCloudDocumentAIHumanReviewConfig",
            "cloudasset.assets.exportCloudDocumentAILabelerPool",
            "cloudasset.assets.exportCloudDocumentAIProcessor",
            "cloudasset.assets.exportCloudDocumentAIProcessorVersion",
            "cloudasset.assets.exportCloudbillingBillingAccounts",
            "cloudasset.assets.exportCloudbillingProjectBillingInfos",
            "cloudasset.assets.exportCloudfunctionsFunctions",
            "cloudasset.assets.exportCloudfunctionsGen2Functions",
            "cloudasset.assets.exportCloudkmsCryptoKeyVersions",
            "cloudasset.assets.exportCloudkmsCryptoKeys",
            "cloudasset.assets.exportCloudkmsEkmConnections",
            "cloudasset.assets.exportCloudkmsImportJobs",
            "cloudasset.assets.exportCloudkmsKeyRings",
            "cloudasset.assets.exportCloudmemcacheInstances",
            "cloudasset.assets.exportCloudresourcemanagerFolders",
            "cloudasset.assets.exportCloudresourcemanagerOrganizations",
            "cloudasset.assets.exportCloudresourcemanagerProjects",
            "cloudasset.assets.exportCloudresourcemanagerTagBindings",
            "cloudasset.assets.exportCloudresourcemanagerTagKeys",
            "cloudasset.assets.exportCloudresourcemanagerTagValues",
            "cloudasset.assets.exportComposerEnvironments",
            "cloudasset.assets.exportComputeAddress",
            "cloudasset.assets.exportComputeAutoscalers",
            "cloudasset.assets.exportComputeBackendBuckets",
            "cloudasset.assets.exportComputeBackendServices",
            "cloudasset.assets.exportComputeCommitments",
            "cloudasset.assets.exportComputeDisks",
            "cloudasset.assets.exportComputeExternalVpnGateways",
            "cloudasset.assets.exportComputeFirewallPolicies",
            "cloudasset.assets.exportComputeFirewalls",
            "cloudasset.assets.exportComputeForwardingRules",
            "cloudasset.assets.exportComputeGlobalAddress",
            "cloudasset.assets.exportComputeGlobalForwardingRules",
            "cloudasset.assets.exportComputeHealthChecks",
            "cloudasset.assets.exportComputeHttpHealthChecks",
            "cloudasset.assets.exportComputeHttpsHealthChecks",
            "cloudasset.assets.exportComputeImages",
            "cloudasset.assets.exportComputeInstanceGroupManagers",
            "cloudasset.assets.exportComputeInstanceGroups",
            "cloudasset.assets.exportComputeInstanceTemplates",
            "cloudasset.assets.exportComputeInstances",
            "cloudasset.assets.exportComputeInterconnect",
            "cloudasset.assets.exportComputeInterconnectAttachment",
            "cloudasset.assets.exportComputeLicenses",
            "cloudasset.assets.exportComputeNetworkEndpointGroups",
            "cloudasset.assets.exportComputeNetworks",
            "cloudasset.assets.exportComputeNodeGroups",
            "cloudasset.assets.exportComputeNodeTemplates",
            "cloudasset.assets.exportComputePacketMirrorings",
            "cloudasset.assets.exportComputeProjects",
            "cloudasset.assets.exportComputeRegionAutoscaler",
            "cloudasset.assets.exportComputeRegionBackendServices",
            "cloudasset.assets.exportComputeRegionDisk",
            "cloudasset.assets.exportComputeRegionInstanceGroup",
            "cloudasset.assets.exportComputeRegionInstanceGroupManager",
            "cloudasset.assets.exportComputeReservations",
            "cloudasset.assets.exportComputeResourcePolicies",
            "cloudasset.assets.exportComputeRouters",
            "cloudasset.assets.exportComputeRoutes",
            "cloudasset.assets.exportComputeSecurityPolicy",
            "cloudasset.assets.exportComputeServiceAttachments",
            "cloudasset.assets.exportComputeSnapshots",
            "cloudasset.assets.exportComputeSslCertificates",
            "cloudasset.assets.exportComputeSslPolicies",
            "cloudasset.assets.exportComputeSubnetworks",
            "cloudasset.assets.exportComputeTargetHttpProxies",
            "cloudasset.assets.exportComputeTargetHttpsProxies",
            "cloudasset.assets.exportComputeTargetInstances",
            "cloudasset.assets.exportComputeTargetPools",
            "cloudasset.assets.exportComputeTargetSslProxies",
            "cloudasset.assets.exportComputeTargetTcpProxies",
            "cloudasset.assets.exportComputeTargetVpnGateways",
            "cloudasset.assets.exportComputeUrlMaps",
            "cloudasset.assets.exportComputeVpnGateways",
            "cloudasset.assets.exportComputeVpnTunnels",
            "cloudasset.assets.exportConnectorsConnections",
            "cloudasset.assets.exportConnectorsConnectorVersions",
            "cloudasset.assets.exportConnectorsConnectors",
            "cloudasset.assets.exportConnectorsProviders",
            "cloudasset.assets.exportConnectorsRuntimeConfigs",
            "cloudasset.assets.exportContainerAppsDeployment",
            "cloudasset.assets.exportContainerAppsReplicaSets",
            "cloudasset.assets.exportContainerBatchJobs",
            "cloudasset.assets.exportContainerClusterrole",
            "cloudasset.assets.exportContainerClusterrolebinding",
            "cloudasset.assets.exportContainerClusters",
            "cloudasset.assets.exportContainerExtensionsIngresses",
            "cloudasset.assets.exportContainerJobs",
            "cloudasset.assets.exportContainerNamespace",
            "cloudasset.assets.exportContainerNetworkingIngresses",
            "cloudasset.assets.exportContainerNetworkingNetworkPolicies",
            "cloudasset.assets.exportContainerNode",
            "cloudasset.assets.exportContainerNodepool",
            "cloudasset.assets.exportContainerPod",
            "cloudasset.assets.exportContainerReplicaSets",
            "cloudasset.assets.exportContainerRole",
            "cloudasset.assets.exportContainerRolebinding",
            "cloudasset.assets.exportContainerServices",
            "cloudasset.assets.exportContainerregistryImage",
            "cloudasset.assets.exportDataMigrationConnectionProfiles",
            "cloudasset.assets.exportDataMigrationMigrationJobs",
            "cloudasset.assets.exportDataflowJobs",
            "cloudasset.assets.exportDatafusionInstance",
            "cloudasset.assets.exportDataplexAssets",
            "cloudasset.assets.exportDataplexLakes",
            "cloudasset.assets.exportDataplexTasks",
            "cloudasset.assets.exportDataplexZones",
            "cloudasset.assets.exportDataprocAutoscalingPolicies",
            "cloudasset.assets.exportDataprocBatches",
            "cloudasset.assets.exportDataprocClusters",
            "cloudasset.assets.exportDataprocJobs",
            "cloudasset.assets.exportDataprocSessions",
            "cloudasset.assets.exportDataprocWorkflowTemplates",
            "cloudasset.assets.exportDatastreamConnectionProfile",
            "cloudasset.assets.exportDatastreamPrivateConnection",
            "cloudasset.assets.exportDatastreamStream",
            "cloudasset.assets.exportDialogflowAgents",
            "cloudasset.assets.exportDialogflowConversationProfiles",
            "cloudasset.assets.exportDialogflowKnowledgeBases",
            "cloudasset.assets.exportDialogflowLocationSettings",
            "cloudasset.assets.exportDlpDeidentifyTemplates",
            "cloudasset.assets.exportDlpDlpJobs",
            "cloudasset.assets.exportDlpInspectTemplates",
            "cloudasset.assets.exportDlpJobTriggers",
            "cloudasset.assets.exportDlpStoredInfoTypes",
            "cloudasset.assets.exportDnsManagedZones",
            "cloudasset.assets.exportDnsPolicies",
            "cloudasset.assets.exportDomainsRegistrations",
            "cloudasset.assets.exportEventarcTriggers",
            "cloudasset.assets.exportFileBackups",
            "cloudasset.assets.exportFileInstances",
            "cloudasset.assets.exportFirebaseAppInfos",
            "cloudasset.assets.exportFirebaseProjects",
            "cloudasset.assets.exportFirestoreDatabases",
            "cloudasset.assets.exportGKEHubFeatures",
            "cloudasset.assets.exportGKEHubMemberships",
            "cloudasset.assets.exportGameservicesGameServerClusters",
            "cloudasset.assets.exportGameservicesGameServerConfigs",
            "cloudasset.assets.exportGameservicesGameServerDeployments",
            "cloudasset.assets.exportGameservicesRealms",
            "cloudasset.assets.exportGkeBackupBackupPlans",
            "cloudasset.assets.exportGkeBackupBackups",
            "cloudasset.assets.exportGkeBackupRestorePlans",
            "cloudasset.assets.exportGkeBackupRestores",
            "cloudasset.assets.exportGkeBackupVolumeBackups",
            "cloudasset.assets.exportGkeBackupVolumeRestores",
            "cloudasset.assets.exportHealthcareConsentStores",
            "cloudasset.assets.exportHealthcareDatasets",
            "cloudasset.assets.exportHealthcareDicomStores",
            "cloudasset.assets.exportHealthcareFhirStores",
            "cloudasset.assets.exportHealthcareHl7V2Stores",
            "cloudasset.assets.exportIamPolicy",
            "cloudasset.assets.exportIamRoles",
            "cloudasset.assets.exportIamServiceAccountKeys",
            "cloudasset.assets.exportIamServiceAccounts",
            "cloudasset.assets.exportIapTunnel",
            "cloudasset.assets.exportIapTunnelInstances",
            "cloudasset.assets.exportIapTunnelZones",
            "cloudasset.assets.exportIapWeb",
            "cloudasset.assets.exportIapWebServiceVersion",
            "cloudasset.assets.exportIapWebServices",
            "cloudasset.assets.exportIapWebType",
            "cloudasset.assets.exportIdsEndpoints",
            "cloudasset.assets.exportIntegrationsAuthConfigs",
            "cloudasset.assets.exportIntegrationsCertificates",
            "cloudasset.assets.exportIntegrationsExecutions",
            "cloudasset.assets.exportIntegrationsIntegrationVersions",
            "cloudasset.assets.exportIntegrationsIntegrations",
            "cloudasset.assets.exportIntegrationsSfdcChannels",
            "cloudasset.assets.exportIntegrationsSfdcInstances",
            "cloudasset.assets.exportIntegrationsSuspensions",
            "cloudasset.assets.exportLoggingLogMetrics",
            "cloudasset.assets.exportLoggingLogSinks",
            "cloudasset.assets.exportManagedidentitiesDomain",
            "cloudasset.assets.exportMetastoreBackups",
            "cloudasset.assets.exportMetastoreMetadataImports",
            "cloudasset.assets.exportMetastoreServices",
            "cloudasset.assets.exportMonitoringAlertPolicies",
            "cloudasset.assets.exportNetworkConnectivityHubs",
            "cloudasset.assets.exportNetworkConnectivitySpokes",
            "cloudasset.assets.exportNetworkManagementConnectivityTests",
            "cloudasset.assets.exportNetworkServicesEndpointPolicies",
            "cloudasset.assets.exportNetworkServicesGateways",
            "cloudasset.assets.exportNetworkServicesGrpcRoutes",
            "cloudasset.assets.exportNetworkServicesHttpRoutes",
            "cloudasset.assets.exportNetworkServicesMeshes",
            "cloudasset.assets.exportNetworkServicesServiceBindings",
            "cloudasset.assets.exportNetworkServicesTcpRoutes",
            "cloudasset.assets.exportNetworkServicesTlsRoutes",
            "cloudasset.assets.exportOSConfigOSPolicyAssignmentReports",
            "cloudasset.assets.exportOSConfigOSPolicyAssignments",
            "cloudasset.assets.exportOSConfigVulnerabilityReports",
            "cloudasset.assets.exportOSInventories",
            "cloudasset.assets.exportOrgPolicy",
            "cloudasset.assets.exportPatchDeployments",
            "cloudasset.assets.exportPubsubSnapshots",
            "cloudasset.assets.exportPubsubSubscriptions",
            "cloudasset.assets.exportPubsubTopics",
            "cloudasset.assets.exportRedisInstances",
            "cloudasset.assets.exportResource",
            "cloudasset.assets.exportSecretManagerSecretVersions",
            "cloudasset.assets.exportSecretManagerSecrets",
            "cloudasset.assets.exportServiceDirectoryNamespaces",
            "cloudasset.assets.exportServicePerimeter",
            "cloudasset.assets.exportServiceconsumermanagementConsumerProperty",
            "cloudasset.assets.exportServiceconsumermanagementConsumerQuotaLimits",
            "cloudasset.assets.exportServiceconsumermanagementConsumers",
            "cloudasset.assets.exportServiceconsumermanagementProducerOverrides",
            "cloudasset.assets.exportServiceconsumermanagementTenancyUnits",
            "cloudasset.assets.exportServiceconsumermanagementVisibility",
            "cloudasset.assets.exportServicemanagementServices",
            "cloudasset.assets.exportServiceusageAdminOverrides",
            "cloudasset.assets.exportServiceusageConsumerOverrides",
            "cloudasset.assets.exportServiceusageServices",
            "cloudasset.assets.exportSpannerBackups",
            "cloudasset.assets.exportSpannerDatabases",
            "cloudasset.assets.exportSpannerInstances",
            "cloudasset.assets.exportSpeakerIdPhrases",
            "cloudasset.assets.exportSpeakerIdSettings",
            "cloudasset.assets.exportSpeakerIdSpeakers",
            "cloudasset.assets.exportSpeechCustomClasses",
            "cloudasset.assets.exportSpeechPhraseSets",
            "cloudasset.assets.exportSqladminBackupRuns",
            "cloudasset.assets.exportSqladminInstances",
            "cloudasset.assets.exportStorageBuckets",
            "cloudasset.assets.exportTpuNodes",
            "cloudasset.assets.exportVpcaccessConnector",
            "cloudasset.assets.listAccessLevel",
            "cloudasset.assets.listAccessPolicy",
            "cloudasset.assets.listAiplatformBatchPredictionJobs",
            "cloudasset.assets.listAiplatformCustomJobs",
            "cloudasset.assets.listAiplatformDataLabelingJobs",
            "cloudasset.assets.listAiplatformDatasets",
            "cloudasset.assets.listAiplatformEndpoints",
            "cloudasset.assets.listAiplatformHyperparameterTuningJobs",
            "cloudasset.assets.listAiplatformMetadataStores",
            "cloudasset.assets.listAiplatformModelDeploymentMonitoringJobs",
            "cloudasset.assets.listAiplatformModels",
            "cloudasset.assets.listAiplatformPipelineJobs",
            "cloudasset.assets.listAiplatformSpecialistPools",
            "cloudasset.assets.listAiplatformTrainingPipelines",
            "cloudasset.assets.listAllAccessPolicy",
            "cloudasset.assets.listAnthosConnectedCluster",
            "cloudasset.assets.listAnthosedgeCluster",
            "cloudasset.assets.listApigatewayApi",
            "cloudasset.assets.listApigatewayApiConfig",
            "cloudasset.assets.listApigatewayGateway",
            "cloudasset.assets.listApikeysKeys",
            "cloudasset.assets.listAppengineApplications",
            "cloudasset.assets.listAppengineServices",
            "cloudasset.assets.listAppengineVersions",
            "cloudasset.assets.listArtifactregistryDockerImages",
            "cloudasset.assets.listArtifactregistryRepositories",
            "cloudasset.assets.listAssuredWorkloadsWorkloads",
            "cloudasset.assets.listBeyondCorpApiGateways",
            "cloudasset.assets.listBeyondCorpAppConnections",
            "cloudasset.assets.listBeyondCorpAppConnectors",
            "cloudasset.assets.listBeyondCorpAppGateways",
            "cloudasset.assets.listBeyondCorpClientConnectorServices",
            "cloudasset.assets.listBeyondCorpClientGateways",
            "cloudasset.assets.listBigqueryDatasets",
            "cloudasset.assets.listBigqueryModels",
            "cloudasset.assets.listBigqueryTables",
            "cloudasset.assets.listBigtableAppProfile",
            "cloudasset.assets.listBigtableBackup",
            "cloudasset.assets.listBigtableCluster",
            "cloudasset.assets.listBigtableInstance",
            "cloudasset.assets.listBigtableTable",
            "cloudasset.assets.listCloudAssetFeeds",
            "cloudasset.assets.listCloudDeployDeliveryPipelines",
            "cloudasset.assets.listCloudDeployReleases",
            "cloudasset.assets.listCloudDeployRollouts",
            "cloudasset.assets.listCloudDeployTargets",
            "cloudasset.assets.listCloudDocumentAIEvaluation",
            "cloudasset.assets.listCloudDocumentAIHumanReviewConfig",
            "cloudasset.assets.listCloudDocumentAILabelerPool",
            "cloudasset.assets.listCloudDocumentAIProcessor",
            "cloudasset.assets.listCloudDocumentAIProcessorVersion",
            "cloudasset.assets.listCloudbillingBillingAccounts",
            "cloudasset.assets.listCloudbillingProjectBillingInfos",
            "cloudasset.assets.listCloudfunctionsFunctions",
            "cloudasset.assets.listCloudfunctionsGen2Functions",
            "cloudasset.assets.listCloudkmsCryptoKeyVersions",
            "cloudasset.assets.listCloudkmsCryptoKeys",
            "cloudasset.assets.listCloudkmsEkmConnections",
            "cloudasset.assets.listCloudkmsImportJobs",
            "cloudasset.assets.listCloudkmsKeyRings",
            "cloudasset.assets.listCloudmemcacheInstances",
            "cloudasset.assets.listCloudresourcemanagerFolders",
            "cloudasset.assets.listCloudresourcemanagerOrganizations",
            "cloudasset.assets.listCloudresourcemanagerProjects",
            "cloudasset.assets.listCloudresourcemanagerTagBindings",
            "cloudasset.assets.listCloudresourcemanagerTagKeys",
            "cloudasset.assets.listCloudresourcemanagerTagValues",
            "cloudasset.assets.listComposerEnvironments",
            "cloudasset.assets.listComputeAddress",
            "cloudasset.assets.listComputeAutoscalers",
            "cloudasset.assets.listComputeBackendBuckets",
            "cloudasset.assets.listComputeBackendServices",
            "cloudasset.assets.listComputeCommitments",
            "cloudasset.assets.listComputeDisks",
            "cloudasset.assets.listComputeExternalVpnGateways",
            "cloudasset.assets.listComputeFirewallPolicies",
            "cloudasset.assets.listComputeFirewalls",
            "cloudasset.assets.listComputeForwardingRules",
            "cloudasset.assets.listComputeGlobalAddress",
            "cloudasset.assets.listComputeGlobalForwardingRules",
            "cloudasset.assets.listComputeHealthChecks",
            "cloudasset.assets.listComputeHttpHealthChecks",
            "cloudasset.assets.listComputeHttpsHealthChecks",
            "cloudasset.assets.listComputeImages",
            "cloudasset.assets.listComputeInstanceGroupManagers",
            "cloudasset.assets.listComputeInstanceGroups",
            "cloudasset.assets.listComputeInstanceTemplates",
            "cloudasset.assets.listComputeInstances",
            "cloudasset.assets.listComputeInterconnect",
            "cloudasset.assets.listComputeInterconnectAttachment",
            "cloudasset.assets.listComputeLicenses",
            "cloudasset.assets.listComputeNetworkEndpointGroups",
            "cloudasset.assets.listComputeNetworks",
            "cloudasset.assets.listComputeNodeGroups",
            "cloudasset.assets.listComputeNodeTemplates",
            "cloudasset.assets.listComputePacketMirrorings",
            "cloudasset.assets.listComputeProjects",
            "cloudasset.assets.listComputeRegionAutoscaler",
            "cloudasset.assets.listComputeRegionBackendServices",
            "cloudasset.assets.listComputeRegionDisk",
            "cloudasset.assets.listComputeRegionInstanceGroup",
            "cloudasset.assets.listComputeRegionInstanceGroupManager",
            "cloudasset.assets.listComputeReservations",
            "cloudasset.assets.listComputeResourcePolicies",
            "cloudasset.assets.listComputeRouters",
            "cloudasset.assets.listComputeRoutes",
            "cloudasset.assets.listComputeSecurityPolicy",
            "cloudasset.assets.listComputeServiceAttachments",
            "cloudasset.assets.listComputeSnapshots",
            "cloudasset.assets.listComputeSslCertificates",
            "cloudasset.assets.listComputeSslPolicies",
            "cloudasset.assets.listComputeSubnetworks",
            "cloudasset.assets.listComputeTargetHttpProxies",
            "cloudasset.assets.listComputeTargetHttpsProxies",
            "cloudasset.assets.listComputeTargetInstances",
            "cloudasset.assets.listComputeTargetPools",
            "cloudasset.assets.listComputeTargetSslProxies",
            "cloudasset.assets.listComputeTargetTcpProxies",
            "cloudasset.assets.listComputeTargetVpnGateways",
            "cloudasset.assets.listComputeUrlMaps",
            "cloudasset.assets.listComputeVpnGateways",
            "cloudasset.assets.listComputeVpnTunnels",
            "cloudasset.assets.listConnectorsConnections",
            "cloudasset.assets.listConnectorsConnectorVersions",
            "cloudasset.assets.listConnectorsConnectors",
            "cloudasset.assets.listConnectorsProviders",
            "cloudasset.assets.listConnectorsRuntimeConfigs",
            "cloudasset.assets.listContainerAppsDeployment",
            "cloudasset.assets.listContainerAppsReplicaSets",
            "cloudasset.assets.listContainerBatchJobs",
            "cloudasset.assets.listContainerClusterrole",
            "cloudasset.assets.listContainerClusterrolebinding",
            "cloudasset.assets.listContainerClusters",
            "cloudasset.assets.listContainerExtensionsIngresses",
            "cloudasset.assets.listContainerJobs",
            "cloudasset.assets.listContainerNamespace",
            "cloudasset.assets.listContainerNetworkingIngresses",
            "cloudasset.assets.listContainerNetworkingNetworkPolicies",
            "cloudasset.assets.listContainerNode",
            "cloudasset.assets.listContainerNodepool",
            "cloudasset.assets.listContainerPod",
            "cloudasset.assets.listContainerReplicaSets",
            "cloudasset.assets.listContainerRole",
            "cloudasset.assets.listContainerRolebinding",
            "cloudasset.assets.listContainerServices",
            "cloudasset.assets.listContainerregistryImage",
            "cloudasset.assets.listDataMigrationConnectionProfiles",
            "cloudasset.assets.listDataMigrationMigrationJobs",
            "cloudasset.assets.listDataflowJobs",
            "cloudasset.assets.listDatafusionInstance",
            "cloudasset.assets.listDataplexAssets",
            "cloudasset.assets.listDataplexLakes",
            "cloudasset.assets.listDataplexTasks",
            "cloudasset.assets.listDataplexZones",
            "cloudasset.assets.listDataprocAutoscalingPolicies",
            "cloudasset.assets.listDataprocBatches",
            "cloudasset.assets.listDataprocClusters",
            "cloudasset.assets.listDataprocJobs",
            "cloudasset.assets.listDataprocSessions",
            "cloudasset.assets.listDataprocWorkflowTemplates",
            "cloudasset.assets.listDatastreamConnectionProfile",
            "cloudasset.assets.listDatastreamPrivateConnection",
            "cloudasset.assets.listDatastreamStream",
            "cloudasset.assets.listDialogflowAgents",
            "cloudasset.assets.listDialogflowConversationProfiles",
            "cloudasset.assets.listDialogflowKnowledgeBases",
            "cloudasset.assets.listDialogflowLocationSettings",
            "cloudasset.assets.listDlpDeidentifyTemplates",
            "cloudasset.assets.listDlpDlpJobs",
            "cloudasset.assets.listDlpInspectTemplates",
            "cloudasset.assets.listDlpJobTriggers",
            "cloudasset.assets.listDlpStoredInfoTypes",
            "cloudasset.assets.listDnsManagedZones",
            "cloudasset.assets.listDnsPolicies",
            "cloudasset.assets.listDomainsRegistrations",
            "cloudasset.assets.listEventarcTriggers",
            "cloudasset.assets.listFileBackups",
            "cloudasset.assets.listFileInstances",
            "cloudasset.assets.listFirebaseAppInfos",
            "cloudasset.assets.listFirebaseProjects",
            "cloudasset.assets.listFirestoreDatabases",
            "cloudasset.assets.listGKEHubFeatures",
            "cloudasset.assets.listGKEHubMemberships",
            "cloudasset.assets.listGameservicesGameServerClusters",
            "cloudasset.assets.listGameservicesGameServerConfigs",
            "cloudasset.assets.listGameservicesGameServerDeployments",
            "cloudasset.assets.listGameservicesRealms",
            "cloudasset.assets.listGkeBackupBackupPlans",
            "cloudasset.assets.listGkeBackupBackups",
            "cloudasset.assets.listGkeBackupRestorePlans",
            "cloudasset.assets.listGkeBackupRestores",
            "cloudasset.assets.listGkeBackupVolumeBackups",
            "cloudasset.assets.listGkeBackupVolumeRestores",
            "cloudasset.assets.listHealthcareConsentStores",
            "cloudasset.assets.listHealthcareDatasets",
            "cloudasset.assets.listHealthcareDicomStores",
            "cloudasset.assets.listHealthcareFhirStores",
            "cloudasset.assets.listHealthcareHl7V2Stores",
            "cloudasset.assets.listIamPolicy",
            "cloudasset.assets.listIamRoles",
            "cloudasset.assets.listIamServiceAccountKeys",
            "cloudasset.assets.listIamServiceAccounts",
            "cloudasset.assets.listIapTunnel",
            "cloudasset.assets.listIapTunnelInstances",
            "cloudasset.assets.listIapTunnelZones",
            "cloudasset.assets.listIapWeb",
            "cloudasset.assets.listIapWebServiceVersion",
            "cloudasset.assets.listIapWebServices",
            "cloudasset.assets.listIapWebType",
            "cloudasset.assets.listIdsEndpoints",
            "cloudasset.assets.listIntegrationsAuthConfigs",
            "cloudasset.assets.listIntegrationsCertificates",
            "cloudasset.assets.listIntegrationsExecutions",
            "cloudasset.assets.listIntegrationsIntegrationVersions",
            "cloudasset.assets.listIntegrationsIntegrations",
            "cloudasset.assets.listIntegrationsSfdcChannels",
            "cloudasset.assets.listIntegrationsSfdcInstances",
            "cloudasset.assets.listIntegrationsSuspensions",
            "cloudasset.assets.listLoggingLogMetrics",
            "cloudasset.assets.listLoggingLogSinks",
            "cloudasset.assets.listManagedidentitiesDomain",
            "cloudasset.assets.listMetastoreBackups",
            "cloudasset.assets.listMetastoreMetadataImports",
            "cloudasset.assets.listMetastoreServices",
            "cloudasset.assets.listMonitoringAlertPolicies",
            "cloudasset.assets.listNetworkConnectivityHubs",
            "cloudasset.assets.listNetworkConnectivitySpokes",
            "cloudasset.assets.listNetworkManagementConnectivityTests",
            "cloudasset.assets.listNetworkServicesEndpointPolicies",
            "cloudasset.assets.listNetworkServicesGateways",
            "cloudasset.assets.listNetworkServicesGrpcRoutes",
            "cloudasset.assets.listNetworkServicesHttpRoutes",
            "cloudasset.assets.listNetworkServicesMeshes",
            "cloudasset.assets.listNetworkServicesServiceBindings",
            "cloudasset.assets.listNetworkServicesTcpRoutes",
            "cloudasset.assets.listNetworkServicesTlsRoutes",
            "cloudasset.assets.listOSConfigOSPolicyAssignmentReports",
            "cloudasset.assets.listOSConfigOSPolicyAssignments",
            "cloudasset.assets.listOSConfigVulnerabilityReports",
            "cloudasset.assets.listOSInventories",
            "cloudasset.assets.listOrgPolicy",
            "cloudasset.assets.listPatchDeployments",
            "cloudasset.assets.listPubsubSnapshots",
            "cloudasset.assets.listPubsubSubscriptions",
            "cloudasset.assets.listPubsubTopics",
            "cloudasset.assets.listRedisInstances",
            "cloudasset.assets.listResource",
            "cloudasset.assets.listRunDomainMapping",
            "cloudasset.assets.listRunRevision",
            "cloudasset.assets.listRunService",
            "cloudasset.assets.listSecretManagerSecretVersions",
            "cloudasset.assets.listSecretManagerSecrets",
            "cloudasset.assets.listServiceDirectoryNamespaces",
            "cloudasset.assets.listServicePerimeter",
            "cloudasset.assets.listServiceconsumermanagementConsumerProperty",
            "cloudasset.assets.listServiceconsumermanagementConsumerQuotaLimits",
            "cloudasset.assets.listServiceconsumermanagementConsumers",
            "cloudasset.assets.listServiceconsumermanagementProducerOverrides",
            "cloudasset.assets.listServiceconsumermanagementTenancyUnits",
            "cloudasset.assets.listServiceconsumermanagementVisibility",
            "cloudasset.assets.listServicemanagementServices",
            "cloudasset.assets.listServiceusageAdminOverrides",
            "cloudasset.assets.listServiceusageConsumerOverrides",
            "cloudasset.assets.listServiceusageServices",
            "cloudasset.assets.listSpannerBackups",
            "cloudasset.assets.listSpannerDatabases",
            "cloudasset.assets.listSpannerInstances",
            "cloudasset.assets.listSpeakerIdPhrases",
            "cloudasset.assets.listSpeakerIdSettings",
            "cloudasset.assets.listSpeakerIdSpeakers",
            "cloudasset.assets.listSpeechCustomClasses",
            "cloudasset.assets.listSpeechPhraseSets",
            "cloudasset.assets.listSqladminBackupRuns",
            "cloudasset.assets.listSqladminInstances",
            "cloudasset.assets.listStorageBuckets",
            "cloudasset.assets.listTpuNodes",
            "cloudasset.assets.listVpcaccessConnector",
            "cloudasset.assets.queryAccessPolicy",
            "cloudasset.assets.queryIamPolicy",
            "cloudasset.assets.queryOSInventories",
            "cloudasset.assets.queryResource",
            "cloudasset.assets.searchAllIamPolicies",
            "cloudasset.assets.searchAllResources",
            "cloudasset.feeds.*",
            "cloudasset.othercloudconnections.get",
            "cloudasset.othercloudconnections.list",
            "cloudasset.othercloudconnections.verify",
            "cloudsql.instances.connect",
            "cloudsql.users.list",
            "compute.disks.useReadOnly",
            "compute.globalOperations.get",
            "compute.instances.get",
            "compute.instances.list",
            "compute.networkEndpointGroups.get",
            "compute.projects.get",
            "container.clusters.get",
            "iam.denypolicies.get",
            "iam.denypolicies.list",
            "iam.googleapis.com/workloadIdentityPoolProviders.list",
            "iam.googleapis.com/workloadIdentityPools.list",
            "logging.logEntries.list",
            "monitoring.alertPolicies.list",
            "monitoring.timeSeries.list",
            "orgpolicy.policies.list",
            "orgpolicy.policy.get",
            "recommender.cloudAssetInsights.get",
            "recommender.cloudAssetInsights.list",
            "recommender.locations.*",
            "resourcemanager.folders.get",
            "resourcemanager.folders.list",
            "resourcemanager.organizations.get",
            "resourcemanager.projects.get",
            "resourcemanager.projects.getIamPolicy",
            "resourcemanager.projects.list",
            "resourcemanager.tagValues.get",
            "securitycenter.assets.list",
            "securitycenter.assetsecuritymarks.update",
            "securitycenter.findings.list",
            "securitycenter.notificationconfig.create",
            "securitycenter.notificationconfig.delete",
            "securitycenter.notificationconfig.update",
            "securitycenter.organizationsettings.get",
            "securitycenter.resourcevalueconfigs.get",
            "securitycenter.resourcevalueconfigs.list",
            "securitycenter.sources.list",
            "securitycenter.valuedresources.list",
            "securitycentermanagement.effectiveSecurityHealthAnalyticsCustomModules.*",
            "securitycentermanagement.securityHealthAnalyticsCustomModules.create",
            "securitycentermanagement.securityHealthAnalyticsCustomModules.delete",
            "securitycentermanagement.securityHealthAnalyticsCustomModules.get",
            "securitycentermanagement.securityHealthAnalyticsCustomModules.list",
            "securitycentermanagement.securityHealthAnalyticsCustomModules.simulate",
            "securitycentermanagement.securityHealthAnalyticsCustomModules.update",
            "serviceusage.quotas.get",
            "serviceusage.services.disable",
            "serviceusage.services.enable",
            "serviceusage.services.get",
            "serviceusage.services.list",
            "stackdriver.projects.get",
            "storage.buckets.get",
            "storage.buckets.getIamPolicy",
            "storage.buckets.list"
          ],
          "title": "Security Center Control Service Agent"
        },
        {
          "description": "Gives Security Center access to execute Integrations.",
          "id": "roles/securitycenter.integrationExecutorServiceAgent",
          "is_beta": false,
          "permissions": [
            "integrations.securityExecutions.cancel",
            "integrations.securityExecutions.list",
            "integrations.securityIntegrations.invoke"
          ],
          "title": "Security Center Integration Executor Service Agent"
        },
        {
          "description": "Security Center service agent can publish notifications to Pub/Sub topics.",
          "id": "roles/securitycenter.notificationServiceAgent",
          "is_beta": false,
          "permissions": [
            "pubsub.topics.publish"
          ],
          "title": "Security Center Notification Service Agent"
        },
        {
          "description": "Security Health Analytics service agent can scan GCP resource metadata to find security vulnerabilities.",
          "id": "roles/securitycenter.securityHealthAnalyticsServiceAgent",
          "is_beta": false,
          "permissions": [
            "bigquery.datasets.get",
            "binaryauthorization.policy.get",
            "cloudasset.assets.analyzeIamPolicy",
            "cloudasset.assets.analyzeMove",
            "cloudasset.assets.analyzeOrgPolicy",
            "cloudasset.assets.exportAccessLevel",
            "cloudasset.assets.exportAccessPolicy",
            "cloudasset.assets.exportAiplatformBatchPredictionJobs",
            "cloudasset.assets.exportAiplatformCustomJobs",
            "cloudasset.assets.exportAiplatformDataLabelingJobs",
            "cloudasset.assets.exportAiplatformDatasets",
            "cloudasset.assets.exportAiplatformEndpoints",
            "cloudasset.assets.exportAiplatformHyperparameterTuningJobs",
            "cloudasset.assets.exportAiplatformMetadataStores",
            "cloudasset.assets.exportAiplatformModelDeploymentMonitoringJobs",
            "cloudasset.assets.exportAiplatformModels",
            "cloudasset.assets.exportAiplatformPipelineJobs",
            "cloudasset.assets.exportAiplatformSpecialistPools",
            "cloudasset.assets.exportAiplatformTrainingPipelines",
            "cloudasset.assets.exportAllAccessPolicy",
            "cloudasset.assets.exportAnthosConnectedCluster",
            "cloudasset.assets.exportAnthosedgeCluster",
            "cloudasset.assets.exportApigatewayApi",
            "cloudasset.assets.exportApigatewayApiConfig",
            "cloudasset.assets.exportApigatewayGateway",
            "cloudasset.assets.exportApikeysKeys",
            "cloudasset.assets.exportAppengineApplications",
            "cloudasset.assets.exportAppengineServices",
            "cloudasset.assets.exportAppengineVersions",
            "cloudasset.assets.exportArtifactregistryDockerImages",
            "cloudasset.assets.exportArtifactregistryRepositories",
            "cloudasset.assets.exportAssuredWorkloadsWorkloads",
            "cloudasset.assets.exportBeyondCorpApiGateways",
            "cloudasset.assets.exportBeyondCorpAppConnections",
            "cloudasset.assets.exportBeyondCorpAppConnectors",
            "cloudasset.assets.exportBeyondCorpAppGateways",
            "cloudasset.assets.exportBeyondCorpClientConnectorServices",
            "cloudasset.assets.exportBeyondCorpClientGateways",
            "cloudasset.assets.exportBigqueryDatasets",
            "cloudasset.assets.exportBigqueryModels",
            "cloudasset.assets.exportBigqueryTables",
            "cloudasset.assets.exportBigtableAppProfile",
            "cloudasset.assets.exportBigtableBackup",
            "cloudasset.assets.exportBigtableCluster",
            "cloudasset.assets.exportBigtableInstance",
            "cloudasset.assets.exportBigtableTable",
            "cloudasset.assets.exportCloudAssetFeeds",
            "cloudasset.assets.exportCloudDeployDeliveryPipelines",
            "cloudasset.assets.exportCloudDeployReleases",
            "cloudasset.assets.exportCloudDeployRollouts",
            "cloudasset.assets.exportCloudDeployTargets",
            "cloudasset.assets.exportCloudDocumentAIEvaluation",
            "cloudasset.assets.exportCloudDocumentAIHumanReviewConfig",
            "cloudasset.assets.exportCloudDocumentAILabelerPool",
            "cloudasset.assets.exportCloudDocumentAIProcessor",
            "cloudasset.assets.exportCloudDocumentAIProcessorVersion",
            "cloudasset.assets.exportCloudbillingBillingAccounts",
            "cloudasset.assets.exportCloudbillingProjectBillingInfos",
            "cloudasset.assets.exportCloudfunctionsFunctions",
            "cloudasset.assets.exportCloudfunctionsGen2Functions",
            "cloudasset.assets.exportCloudkmsCryptoKeyVersions",
            "cloudasset.assets.exportCloudkmsCryptoKeys",
            "cloudasset.assets.exportCloudkmsEkmConnections",
            "cloudasset.assets.exportCloudkmsImportJobs",
            "cloudasset.assets.exportCloudkmsKeyRings",
            "cloudasset.assets.exportCloudmemcacheInstances",
            "cloudasset.assets.exportCloudresourcemanagerFolders",
            "cloudasset.assets.exportCloudresourcemanagerOrganizations",
            "cloudasset.assets.exportCloudresourcemanagerProjects",
            "cloudasset.assets.exportCloudresourcemanagerTagBindings",
            "cloudasset.assets.exportCloudresourcemanagerTagKeys",
            "cloudasset.assets.exportCloudresourcemanagerTagValues",
            "cloudasset.assets.exportComposerEnvironments",
            "cloudasset.assets.exportComputeAddress",
            "cloudasset.assets.exportComputeAutoscalers",
            "cloudasset.assets.exportComputeBackendBuckets",
            "cloudasset.assets.exportComputeBackendServices",
            "cloudasset.assets.exportComputeCommitments",
            "cloudasset.assets.exportComputeDisks",
            "cloudasset.assets.exportComputeExternalVpnGateways",
            "cloudasset.assets.exportComputeFirewallPolicies",
            "cloudasset.assets.exportComputeFirewalls",
            "cloudasset.assets.exportComputeForwardingRules",
            "cloudasset.assets.exportComputeGlobalAddress",
            "cloudasset.assets.exportComputeGlobalForwardingRules",
            "cloudasset.assets.exportComputeHealthChecks",
            "cloudasset.assets.exportComputeHttpHealthChecks",
            "cloudasset.assets.exportComputeHttpsHealthChecks",
            "cloudasset.assets.exportComputeImages",
            "cloudasset.assets.exportComputeInstanceGroupManagers",
            "cloudasset.assets.exportComputeInstanceGroups",
            "cloudasset.assets.exportComputeInstanceTemplates",
            "cloudasset.assets.exportComputeInstances",
            "cloudasset.assets.exportComputeInterconnect",
            "cloudasset.assets.exportComputeInterconnectAttachment",
            "cloudasset.assets.exportComputeLicenses",
            "cloudasset.assets.exportComputeNetworkEndpointGroups",
            "cloudasset.assets.exportComputeNetworks",
            "cloudasset.assets.exportComputeNodeGroups",
            "cloudasset.assets.exportComputeNodeTemplates",
            "cloudasset.assets.exportComputePacketMirrorings",
            "cloudasset.assets.exportComputeProjects",
            "cloudasset.assets.exportComputeRegionAutoscaler",
            "cloudasset.assets.exportComputeRegionBackendServices",
            "cloudasset.assets.exportComputeRegionDisk",
            "cloudasset.assets.exportComputeRegionInstanceGroup",
            "cloudasset.assets.exportComputeRegionInstanceGroupManager",
            "cloudasset.assets.exportComputeReservations",
            "cloudasset.assets.exportComputeResourcePolicies",
            "cloudasset.assets.exportComputeRouters",
            "cloudasset.assets.exportComputeRoutes",
            "cloudasset.assets.exportComputeSecurityPolicy",
            "cloudasset.assets.exportComputeServiceAttachments",
            "cloudasset.assets.exportComputeSnapshots",
            "cloudasset.assets.exportComputeSslCertificates",
            "cloudasset.assets.exportComputeSslPolicies",
            "cloudasset.assets.exportComputeSubnetworks",
            "cloudasset.assets.exportComputeTargetHttpProxies",
            "cloudasset.assets.exportComputeTargetHttpsProxies",
            "cloudasset.assets.exportComputeTargetInstances",
            "cloudasset.assets.exportComputeTargetPools",
            "cloudasset.assets.exportComputeTargetSslProxies",
            "cloudasset.assets.exportComputeTargetTcpProxies",
            "cloudasset.assets.exportComputeTargetVpnGateways",
            "cloudasset.assets.exportComputeUrlMaps",
            "cloudasset.assets.exportComputeVpnGateways",
            "cloudasset.assets.exportComputeVpnTunnels",
            "cloudasset.assets.exportConnectorsConnections",
            "cloudasset.assets.exportConnectorsConnectorVersions",
            "cloudasset.assets.exportConnectorsConnectors",
            "cloudasset.assets.exportConnectorsProviders",
            "cloudasset.assets.exportConnectorsRuntimeConfigs",
            "cloudasset.assets.exportContainerAppsDeployment",
            "cloudasset.assets.exportContainerAppsReplicaSets",
            "cloudasset.assets.exportContainerBatchJobs",
            "cloudasset.assets.exportContainerClusterrole",
            "cloudasset.assets.exportContainerClusterrolebinding",
            "cloudasset.assets.exportContainerClusters",
            "cloudasset.assets.exportContainerExtensionsIngresses",
            "cloudasset.assets.exportContainerJobs",
            "cloudasset.assets.exportContainerNamespace",
            "cloudasset.assets.exportContainerNetworkingIngresses",
            "cloudasset.assets.exportContainerNetworkingNetworkPolicies",
            "cloudasset.assets.exportContainerNode",
            "cloudasset.assets.exportContainerNodepool",
            "cloudasset.assets.exportContainerPod",
            "cloudasset.assets.exportContainerReplicaSets",
            "cloudasset.assets.exportContainerRole",
            "cloudasset.assets.exportContainerRolebinding",
            "cloudasset.assets.exportContainerServices",
            "cloudasset.assets.exportContainerregistryImage",
            "cloudasset.assets.exportDataMigrationConnectionProfiles",
            "cloudasset.assets.exportDataMigrationMigrationJobs",
            "cloudasset.assets.exportDataflowJobs",
            "cloudasset.assets.exportDatafusionInstance",
            "cloudasset.assets.exportDataplexAssets",
            "cloudasset.assets.exportDataplexLakes",
            "cloudasset.assets.exportDataplexTasks",
            "cloudasset.assets.exportDataplexZones",
            "cloudasset.assets.exportDataprocAutoscalingPolicies",
            "cloudasset.assets.exportDataprocBatches",
            "cloudasset.assets.exportDataprocClusters",
            "cloudasset.assets.exportDataprocJobs",
            "cloudasset.assets.exportDataprocSessions",
            "cloudasset.assets.exportDataprocWorkflowTemplates",
            "cloudasset.assets.exportDatastreamConnectionProfile",
            "cloudasset.assets.exportDatastreamPrivateConnection",
            "cloudasset.assets.exportDatastreamStream",
            "cloudasset.assets.exportDialogflowAgents",
            "cloudasset.assets.exportDialogflowConversationProfiles",
            "cloudasset.assets.exportDialogflowKnowledgeBases",
            "cloudasset.assets.exportDialogflowLocationSettings",
            "cloudasset.assets.exportDlpDeidentifyTemplates",
            "cloudasset.assets.exportDlpDlpJobs",
            "cloudasset.assets.exportDlpInspectTemplates",
            "cloudasset.assets.exportDlpJobTriggers",
            "cloudasset.assets.exportDlpStoredInfoTypes",
            "cloudasset.assets.exportDnsManagedZones",
            "cloudasset.assets.exportDnsPolicies",
            "cloudasset.assets.exportDomainsRegistrations",
            "cloudasset.assets.exportEventarcTriggers",
            "cloudasset.assets.exportFileBackups",
            "cloudasset.assets.exportFileInstances",
            "cloudasset.assets.exportFirebaseAppInfos",
            "cloudasset.assets.exportFirebaseProjects",
            "cloudasset.assets.exportFirestoreDatabases",
            "cloudasset.assets.exportGKEHubFeatures",
            "cloudasset.assets.exportGKEHubMemberships",
            "cloudasset.assets.exportGameservicesGameServerClusters",
            "cloudasset.assets.exportGameservicesGameServerConfigs",
            "cloudasset.assets.exportGameservicesGameServerDeployments",
            "cloudasset.assets.exportGameservicesRealms",
            "cloudasset.assets.exportGkeBackupBackupPlans",
            "cloudasset.assets.exportGkeBackupBackups",
            "cloudasset.assets.exportGkeBackupRestorePlans",
            "cloudasset.assets.exportGkeBackupRestores",
            "cloudasset.assets.exportGkeBackupVolumeBackups",
            "cloudasset.assets.exportGkeBackupVolumeRestores",
            "cloudasset.assets.exportHealthcareConsentStores",
            "cloudasset.assets.exportHealthcareDatasets",
            "cloudasset.assets.exportHealthcareDicomStores",
            "cloudasset.assets.exportHealthcareFhirStores",
            "cloudasset.assets.exportHealthcareHl7V2Stores",
            "cloudasset.assets.exportIamPolicy",
            "cloudasset.assets.exportIamRoles",
            "cloudasset.assets.exportIamServiceAccountKeys",
            "cloudasset.assets.exportIamServiceAccounts",
            "cloudasset.assets.exportIapTunnel",
            "cloudasset.assets.exportIapTunnelInstances",
            "cloudasset.assets.exportIapTunnelZones",
            "cloudasset.assets.exportIapWeb",
            "cloudasset.assets.exportIapWebServiceVersion",
            "cloudasset.assets.exportIapWebServices",
            "cloudasset.assets.exportIapWebType",
            "cloudasset.assets.exportIdsEndpoints",
            "cloudasset.assets.exportIntegrationsAuthConfigs",
            "cloudasset.assets.exportIntegrationsCertificates",
            "cloudasset.assets.exportIntegrationsExecutions",
            "cloudasset.assets.exportIntegrationsIntegrationVersions",
            "cloudasset.assets.exportIntegrationsIntegrations",
            "cloudasset.assets.exportIntegrationsSfdcChannels",
            "cloudasset.assets.exportIntegrationsSfdcInstances",
            "cloudasset.assets.exportIntegrationsSuspensions",
            "cloudasset.assets.exportLoggingLogMetrics",
            "cloudasset.assets.exportLoggingLogSinks",
            "cloudasset.assets.exportManagedidentitiesDomain",
            "cloudasset.assets.exportMetastoreBackups",
            "cloudasset.assets.exportMetastoreMetadataImports",
            "cloudasset.assets.exportMetastoreServices",
            "cloudasset.assets.exportMonitoringAlertPolicies",
            "cloudasset.assets.exportNetworkConnectivityHubs",
            "cloudasset.assets.exportNetworkConnectivitySpokes",
            "cloudasset.assets.exportNetworkManagementConnectivityTests",
            "cloudasset.assets.exportNetworkServicesEndpointPolicies",
            "cloudasset.assets.exportNetworkServicesGateways",
            "cloudasset.assets.exportNetworkServicesGrpcRoutes",
            "cloudasset.assets.exportNetworkServicesHttpRoutes",
            "cloudasset.assets.exportNetworkServicesMeshes",
            "cloudasset.assets.exportNetworkServicesServiceBindings",
            "cloudasset.assets.exportNetworkServicesTcpRoutes",
            "cloudasset.assets.exportNetworkServicesTlsRoutes",
            "cloudasset.assets.exportOSConfigOSPolicyAssignmentReports",
            "cloudasset.assets.exportOSConfigOSPolicyAssignments",
            "cloudasset.assets.exportOSConfigVulnerabilityReports",
            "cloudasset.assets.exportOSInventories",
            "cloudasset.assets.exportOrgPolicy",
            "cloudasset.assets.exportPatchDeployments",
            "cloudasset.assets.exportPubsubSnapshots",
            "cloudasset.assets.exportPubsubSubscriptions",
            "cloudasset.assets.exportPubsubTopics",
            "cloudasset.assets.exportRedisInstances",
            "cloudasset.assets.exportResource",
            "cloudasset.assets.exportSecretManagerSecretVersions",
            "cloudasset.assets.exportSecretManagerSecrets",
            "cloudasset.assets.exportServiceDirectoryNamespaces",
            "cloudasset.assets.exportServicePerimeter",
            "cloudasset.assets.exportServiceconsumermanagementConsumerProperty",
            "cloudasset.assets.exportServiceconsumermanagementConsumerQuotaLimits",
            "cloudasset.assets.exportServiceconsumermanagementConsumers",
            "cloudasset.assets.exportServiceconsumermanagementProducerOverrides",
            "cloudasset.assets.exportServiceconsumermanagementTenancyUnits",
            "cloudasset.assets.exportServiceconsumermanagementVisibility",
            "cloudasset.assets.exportServicemanagementServices",
            "cloudasset.assets.exportServiceusageAdminOverrides",
            "cloudasset.assets.exportServiceusageConsumerOverrides",
            "cloudasset.assets.exportServiceusageServices",
            "cloudasset.assets.exportSpannerBackups",
            "cloudasset.assets.exportSpannerDatabases",
            "cloudasset.assets.exportSpannerInstances",
            "cloudasset.assets.exportSpeakerIdPhrases",
            "cloudasset.assets.exportSpeakerIdSettings",
            "cloudasset.assets.exportSpeakerIdSpeakers",
            "cloudasset.assets.exportSpeechCustomClasses",
            "cloudasset.assets.exportSpeechPhraseSets",
            "cloudasset.assets.exportSqladminBackupRuns",
            "cloudasset.assets.exportSqladminInstances",
            "cloudasset.assets.exportStorageBuckets",
            "cloudasset.assets.exportTpuNodes",
            "cloudasset.assets.exportVpcaccessConnector",
            "cloudasset.assets.listAccessLevel",
            "cloudasset.assets.listAccessPolicy",
            "cloudasset.assets.listAiplatformBatchPredictionJobs",
            "cloudasset.assets.listAiplatformCustomJobs",
            "cloudasset.assets.listAiplatformDataLabelingJobs",
            "cloudasset.assets.listAiplatformDatasets",
            "cloudasset.assets.listAiplatformEndpoints",
            "cloudasset.assets.listAiplatformHyperparameterTuningJobs",
            "cloudasset.assets.listAiplatformMetadataStores",
            "cloudasset.assets.listAiplatformModelDeploymentMonitoringJobs",
            "cloudasset.assets.listAiplatformModels",
            "cloudasset.assets.listAiplatformPipelineJobs",
            "cloudasset.assets.listAiplatformSpecialistPools",
            "cloudasset.assets.listAiplatformTrainingPipelines",
            "cloudasset.assets.listAllAccessPolicy",
            "cloudasset.assets.listAnthosConnectedCluster",
            "cloudasset.assets.listAnthosedgeCluster",
            "cloudasset.assets.listApigatewayApi",
            "cloudasset.assets.listApigatewayApiConfig",
            "cloudasset.assets.listApigatewayGateway",
            "cloudasset.assets.listApikeysKeys",
            "cloudasset.assets.listAppengineApplications",
            "cloudasset.assets.listAppengineServices",
            "cloudasset.assets.listAppengineVersions",
            "cloudasset.assets.listArtifactregistryDockerImages",
            "cloudasset.assets.listArtifactregistryRepositories",
            "cloudasset.assets.listAssuredWorkloadsWorkloads",
            "cloudasset.assets.listBeyondCorpApiGateways",
            "cloudasset.assets.listBeyondCorpAppConnections",
            "cloudasset.assets.listBeyondCorpAppConnectors",
            "cloudasset.assets.listBeyondCorpAppGateways",
            "cloudasset.assets.listBeyondCorpClientConnectorServices",
            "cloudasset.assets.listBeyondCorpClientGateways",
            "cloudasset.assets.listBigqueryDatasets",
            "cloudasset.assets.listBigqueryModels",
            "cloudasset.assets.listBigqueryTables",
            "cloudasset.assets.listBigtableAppProfile",
            "cloudasset.assets.listBigtableBackup",
            "cloudasset.assets.listBigtableCluster",
            "cloudasset.assets.listBigtableInstance",
            "cloudasset.assets.listBigtableTable",
            "cloudasset.assets.listCloudAssetFeeds",
            "cloudasset.assets.listCloudDeployDeliveryPipelines",
            "cloudasset.assets.listCloudDeployReleases",
            "cloudasset.assets.listCloudDeployRollouts",
            "cloudasset.assets.listCloudDeployTargets",
            "cloudasset.assets.listCloudDocumentAIEvaluation",
            "cloudasset.assets.listCloudDocumentAIHumanReviewConfig",
            "cloudasset.assets.listCloudDocumentAILabelerPool",
            "cloudasset.assets.listCloudDocumentAIProcessor",
            "cloudasset.assets.listCloudDocumentAIProcessorVersion",
            "cloudasset.assets.listCloudbillingBillingAccounts",
            "cloudasset.assets.listCloudbillingProjectBillingInfos",
            "cloudasset.assets.listCloudfunctionsFunctions",
            "cloudasset.assets.listCloudfunctionsGen2Functions",
            "cloudasset.assets.listCloudkmsCryptoKeyVersions",
            "cloudasset.assets.listCloudkmsCryptoKeys",
            "cloudasset.assets.listCloudkmsEkmConnections",
            "cloudasset.assets.listCloudkmsImportJobs",
            "cloudasset.assets.listCloudkmsKeyRings",
            "cloudasset.assets.listCloudmemcacheInstances",
            "cloudasset.assets.listCloudresourcemanagerFolders",
            "cloudasset.assets.listCloudresourcemanagerOrganizations",
            "cloudasset.assets.listCloudresourcemanagerProjects",
            "cloudasset.assets.listCloudresourcemanagerTagBindings",
            "cloudasset.assets.listCloudresourcemanagerTagKeys",
            "cloudasset.assets.listCloudresourcemanagerTagValues",
            "cloudasset.assets.listComposerEnvironments",
            "cloudasset.assets.listComputeAddress",
            "cloudasset.assets.listComputeAutoscalers",
            "cloudasset.assets.listComputeBackendBuckets",
            "cloudasset.assets.listComputeBackendServices",
            "cloudasset.assets.listComputeCommitments",
            "cloudasset.assets.listComputeDisks",
            "cloudasset.assets.listComputeExternalVpnGateways",
            "cloudasset.assets.listComputeFirewallPolicies",
            "cloudasset.assets.listComputeFirewalls",
            "cloudasset.assets.listComputeForwardingRules",
            "cloudasset.assets.listComputeGlobalAddress",
            "cloudasset.assets.listComputeGlobalForwardingRules",
            "cloudasset.assets.listComputeHealthChecks",
            "cloudasset.assets.listComputeHttpHealthChecks",
            "cloudasset.assets.listComputeHttpsHealthChecks",
            "cloudasset.assets.listComputeImages",
            "cloudasset.assets.listComputeInstanceGroupManagers",
            "cloudasset.assets.listComputeInstanceGroups",
            "cloudasset.assets.listComputeInstanceTemplates",
            "cloudasset.assets.listComputeInstances",
            "cloudasset.assets.listComputeInterconnect",
            "cloudasset.assets.listComputeInterconnectAttachment",
            "cloudasset.assets.listComputeLicenses",
            "cloudasset.assets.listComputeNetworkEndpointGroups",
            "cloudasset.assets.listComputeNetworks",
            "cloudasset.assets.listComputeNodeGroups",
            "cloudasset.assets.listComputeNodeTemplates",
            "cloudasset.assets.listComputePacketMirrorings",
            "cloudasset.assets.listComputeProjects",
            "cloudasset.assets.listComputeRegionAutoscaler",
            "cloudasset.assets.listComputeRegionBackendServices",
            "cloudasset.assets.listComputeRegionDisk",
            "cloudasset.assets.listComputeRegionInstanceGroup",
            "cloudasset.assets.listComputeRegionInstanceGroupManager",
            "cloudasset.assets.listComputeReservations",
            "cloudasset.assets.listComputeResourcePolicies",
            "cloudasset.assets.listComputeRouters",
            "cloudasset.assets.listComputeRoutes",
            "cloudasset.assets.listComputeSecurityPolicy",
            "cloudasset.assets.listComputeServiceAttachments",
            "cloudasset.assets.listComputeSnapshots",
            "cloudasset.assets.listComputeSslCertificates",
            "cloudasset.assets.listComputeSslPolicies",
            "cloudasset.assets.listComputeSubnetworks",
            "cloudasset.assets.listComputeTargetHttpProxies",
            "cloudasset.assets.listComputeTargetHttpsProxies",
            "cloudasset.assets.listComputeTargetInstances",
            "cloudasset.assets.listComputeTargetPools",
            "cloudasset.assets.listComputeTargetSslProxies",
            "cloudasset.assets.listComputeTargetTcpProxies",
            "cloudasset.assets.listComputeTargetVpnGateways",
            "cloudasset.assets.listComputeUrlMaps",
            "cloudasset.assets.listComputeVpnGateways",
            "cloudasset.assets.listComputeVpnTunnels",
            "cloudasset.assets.listConnectorsConnections",
            "cloudasset.assets.listConnectorsConnectorVersions",
            "cloudasset.assets.listConnectorsConnectors",
            "cloudasset.assets.listConnectorsProviders",
            "cloudasset.assets.listConnectorsRuntimeConfigs",
            "cloudasset.assets.listContainerAppsDeployment",
            "cloudasset.assets.listContainerAppsReplicaSets",
            "cloudasset.assets.listContainerBatchJobs",
            "cloudasset.assets.listContainerClusterrole",
            "cloudasset.assets.listContainerClusterrolebinding",
            "cloudasset.assets.listContainerClusters",
            "cloudasset.assets.listContainerExtensionsIngresses",
            "cloudasset.assets.listContainerJobs",
            "cloudasset.assets.listContainerNamespace",
            "cloudasset.assets.listContainerNetworkingIngresses",
            "cloudasset.assets.listContainerNetworkingNetworkPolicies",
            "cloudasset.assets.listContainerNode",
            "cloudasset.assets.listContainerNodepool",
            "cloudasset.assets.listContainerPod",
            "cloudasset.assets.listContainerReplicaSets",
            "cloudasset.assets.listContainerRole",
            "cloudasset.assets.listContainerRolebinding",
            "cloudasset.assets.listContainerServices",
            "cloudasset.assets.listContainerregistryImage",
            "cloudasset.assets.listDataMigrationConnectionProfiles",
            "cloudasset.assets.listDataMigrationMigrationJobs",
            "cloudasset.assets.listDataflowJobs",
            "cloudasset.assets.listDatafusionInstance",
            "cloudasset.assets.listDataplexAssets",
            "cloudasset.assets.listDataplexLakes",
            "cloudasset.assets.listDataplexTasks",
            "cloudasset.assets.listDataplexZones",
            "cloudasset.assets.listDataprocAutoscalingPolicies",
            "cloudasset.assets.listDataprocBatches",
            "cloudasset.assets.listDataprocClusters",
            "cloudasset.assets.listDataprocJobs",
            "cloudasset.assets.listDataprocSessions",
            "cloudasset.assets.listDataprocWorkflowTemplates",
            "cloudasset.assets.listDatastreamConnectionProfile",
            "cloudasset.assets.listDatastreamPrivateConnection",
            "cloudasset.assets.listDatastreamStream",
            "cloudasset.assets.listDialogflowAgents",
            "cloudasset.assets.listDialogflowConversationProfiles",
            "cloudasset.assets.listDialogflowKnowledgeBases",
            "cloudasset.assets.listDialogflowLocationSettings",
            "cloudasset.assets.listDlpDeidentifyTemplates",
            "cloudasset.assets.listDlpDlpJobs",
            "cloudasset.assets.listDlpInspectTemplates",
            "cloudasset.assets.listDlpJobTriggers",
            "cloudasset.assets.listDlpStoredInfoTypes",
            "cloudasset.assets.listDnsManagedZones",
            "cloudasset.assets.listDnsPolicies",
            "cloudasset.assets.listDomainsRegistrations",
            "cloudasset.assets.listEventarcTriggers",
            "cloudasset.assets.listFileBackups",
            "cloudasset.assets.listFileInstances",
            "cloudasset.assets.listFirebaseAppInfos",
            "cloudasset.assets.listFirebaseProjects",
            "cloudasset.assets.listFirestoreDatabases",
            "cloudasset.assets.listGKEHubFeatures",
            "cloudasset.assets.listGKEHubMemberships",
            "cloudasset.assets.listGameservicesGameServerClusters",
            "cloudasset.assets.listGameservicesGameServerConfigs",
            "cloudasset.assets.listGameservicesGameServerDeployments",
            "cloudasset.assets.listGameservicesRealms",
            "cloudasset.assets.listGkeBackupBackupPlans",
            "cloudasset.assets.listGkeBackupBackups",
            "cloudasset.assets.listGkeBackupRestorePlans",
            "cloudasset.assets.listGkeBackupRestores",
            "cloudasset.assets.listGkeBackupVolumeBackups",
            "cloudasset.assets.listGkeBackupVolumeRestores",
            "cloudasset.assets.listHealthcareConsentStores",
            "cloudasset.assets.listHealthcareDatasets",
            "cloudasset.assets.listHealthcareDicomStores",
            "cloudasset.assets.listHealthcareFhirStores",
            "cloudasset.assets.listHealthcareHl7V2Stores",
            "cloudasset.assets.listIamPolicy",
            "cloudasset.assets.listIamRoles",
            "cloudasset.assets.listIamServiceAccountKeys",
            "cloudasset.assets.listIamServiceAccounts",
            "cloudasset.assets.listIapTunnel",
            "cloudasset.assets.listIapTunnelInstances",
            "cloudasset.assets.listIapTunnelZones",
            "cloudasset.assets.listIapWeb",
            "cloudasset.assets.listIapWebServiceVersion",
            "cloudasset.assets.listIapWebServices",
            "cloudasset.assets.listIapWebType",
            "cloudasset.assets.listIdsEndpoints",
            "cloudasset.assets.listIntegrationsAuthConfigs",
            "cloudasset.assets.listIntegrationsCertificates",
            "cloudasset.assets.listIntegrationsExecutions",
            "cloudasset.assets.listIntegrationsIntegrationVersions",
            "cloudasset.assets.listIntegrationsIntegrations",
            "cloudasset.assets.listIntegrationsSfdcChannels",
            "cloudasset.assets.listIntegrationsSfdcInstances",
            "cloudasset.assets.listIntegrationsSuspensions",
            "cloudasset.assets.listLoggingLogMetrics",
            "cloudasset.assets.listLoggingLogSinks",
            "cloudasset.assets.listManagedidentitiesDomain",
            "cloudasset.assets.listMetastoreBackups",
            "cloudasset.assets.listMetastoreMetadataImports",
            "cloudasset.assets.listMetastoreServices",
            "cloudasset.assets.listMonitoringAlertPolicies",
            "cloudasset.assets.listNetworkConnectivityHubs",
            "cloudasset.assets.listNetworkConnectivitySpokes",
            "cloudasset.assets.listNetworkManagementConnectivityTests",
            "cloudasset.assets.listNetworkServicesEndpointPolicies",
            "cloudasset.assets.listNetworkServicesGateways",
            "cloudasset.assets.listNetworkServicesGrpcRoutes",
            "cloudasset.assets.listNetworkServicesHttpRoutes",
            "cloudasset.assets.listNetworkServicesMeshes",
            "cloudasset.assets.listNetworkServicesServiceBindings",
            "cloudasset.assets.listNetworkServicesTcpRoutes",
            "cloudasset.assets.listNetworkServicesTlsRoutes",
            "cloudasset.assets.listOSConfigOSPolicyAssignmentReports",
            "cloudasset.assets.listOSConfigOSPolicyAssignments",
            "cloudasset.assets.listOSConfigVulnerabilityReports",
            "cloudasset.assets.listOSInventories",
            "cloudasset.assets.listOrgPolicy",
            "cloudasset.assets.listPatchDeployments",
            "cloudasset.assets.listPubsubSnapshots",
            "cloudasset.assets.listPubsubSubscriptions",
            "cloudasset.assets.listPubsubTopics",
            "cloudasset.assets.listRedisInstances",
            "cloudasset.assets.listResource",
            "cloudasset.assets.listRunDomainMapping",
            "cloudasset.assets.listRunRevision",
            "cloudasset.assets.listRunService",
            "cloudasset.assets.listSecretManagerSecretVersions",
            "cloudasset.assets.listSecretManagerSecrets",
            "cloudasset.assets.listServiceDirectoryNamespaces",
            "cloudasset.assets.listServicePerimeter",
            "cloudasset.assets.listServiceconsumermanagementConsumerProperty",
            "cloudasset.assets.listServiceconsumermanagementConsumerQuotaLimits",
            "cloudasset.assets.listServiceconsumermanagementConsumers",
            "cloudasset.assets.listServiceconsumermanagementProducerOverrides",
            "cloudasset.assets.listServiceconsumermanagementTenancyUnits",
            "cloudasset.assets.listServiceconsumermanagementVisibility",
            "cloudasset.assets.listServicemanagementServices",
            "cloudasset.assets.listServiceusageAdminOverrides",
            "cloudasset.assets.listServiceusageConsumerOverrides",
            "cloudasset.assets.listServiceusageServices",
            "cloudasset.assets.listSpannerBackups",
            "cloudasset.assets.listSpannerDatabases",
            "cloudasset.assets.listSpannerInstances",
            "cloudasset.assets.listSpeakerIdPhrases",
            "cloudasset.assets.listSpeakerIdSettings",
            "cloudasset.assets.listSpeakerIdSpeakers",
            "cloudasset.assets.listSpeechCustomClasses",
            "cloudasset.assets.listSpeechPhraseSets",
            "cloudasset.assets.listSqladminBackupRuns",
            "cloudasset.assets.listSqladminInstances",
            "cloudasset.assets.listStorageBuckets",
            "cloudasset.assets.listTpuNodes",
            "cloudasset.assets.listVpcaccessConnector",
            "cloudasset.assets.queryAccessPolicy",
            "cloudasset.assets.queryIamPolicy",
            "cloudasset.assets.queryOSInventories",
            "cloudasset.assets.queryResource",
            "cloudasset.assets.searchAllIamPolicies",
            "cloudasset.assets.searchAllResources",
            "cloudasset.feeds.*",
            "cloudasset.othercloudconnections.get",
            "cloudasset.othercloudconnections.list",
            "cloudasset.othercloudconnections.verify",
            "cloudsql.instances.connect",
            "cloudsql.users.list",
            "compute.globalOperations.get",
            "compute.instances.get",
            "compute.instances.list",
            "compute.networkEndpointGroups.get",
            "compute.projects.get",
            "container.clusters.get",
            "monitoring.alertPolicies.list",
            "orgpolicy.policy.get",
            "recommender.cloudAssetInsights.get",
            "recommender.cloudAssetInsights.list",
            "recommender.locations.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "securitycenter.organizationsettings.get",
            "serviceusage.quotas.get",
            "serviceusage.services.get",
            "serviceusage.services.list",
            "stackdriver.projects.get"
          ],
          "title": "Security Health Analytics Service Agent"
        },
        {
          "description": "Gives Playbook Runner permissions to execute all Google authored Playbooks. This role will keep evolving as we add more playbooks",
          "id": "roles/securitycenter.securityResponseServiceAgent",
          "is_beta": false,
          "permissions": [
            "compute.instances.deleteAccessConfig",
            "compute.instances.get",
            "compute.instances.setMetadata",
            "iam.serviceAccounts.actAs",
            "pubsub.topics.publish",
            "securitycenter.findings.list",
            "storage.buckets.get",
            "storage.buckets.update"
          ],
          "title": "Google Cloud Security Response Service Agent"
        },
        {
          "description": "Security Center service agent can scan GCP resources and import security scans.",
          "id": "roles/securitycenter.serviceAgent",
          "is_beta": false,
          "permissions": [
            "accesscontextmanager.gcpUserAccessBindings.get",
            "accesscontextmanager.gcpUserAccessBindings.list",
            "aiplatform.dataItems.list",
            "aiplatform.datasets.list",
            "bigquery.datasets.get",
            "binaryauthorization.policy.get",
            "cloudasset.assets.analyzeIamPolicy",
            "cloudasset.assets.analyzeMove",
            "cloudasset.assets.analyzeOrgPolicy",
            "cloudasset.assets.exportAccessLevel",
            "cloudasset.assets.exportAccessPolicy",
            "cloudasset.assets.exportAiplatformBatchPredictionJobs",
            "cloudasset.assets.exportAiplatformCustomJobs",
            "cloudasset.assets.exportAiplatformDataLabelingJobs",
            "cloudasset.assets.exportAiplatformDatasets",
            "cloudasset.assets.exportAiplatformEndpoints",
            "cloudasset.assets.exportAiplatformHyperparameterTuningJobs",
            "cloudasset.assets.exportAiplatformMetadataStores",
            "cloudasset.assets.exportAiplatformModelDeploymentMonitoringJobs",
            "cloudasset.assets.exportAiplatformModels",
            "cloudasset.assets.exportAiplatformPipelineJobs",
            "cloudasset.assets.exportAiplatformSpecialistPools",
            "cloudasset.assets.exportAiplatformTrainingPipelines",
            "cloudasset.assets.exportAllAccessPolicy",
            "cloudasset.assets.exportAnthosConnectedCluster",
            "cloudasset.assets.exportAnthosedgeCluster",
            "cloudasset.assets.exportApigatewayApi",
            "cloudasset.assets.exportApigatewayApiConfig",
            "cloudasset.assets.exportApigatewayGateway",
            "cloudasset.assets.exportApikeysKeys",
            "cloudasset.assets.exportAppengineApplications",
            "cloudasset.assets.exportAppengineServices",
            "cloudasset.assets.exportAppengineVersions",
            "cloudasset.assets.exportArtifactregistryDockerImages",
            "cloudasset.assets.exportArtifactregistryRepositories",
            "cloudasset.assets.exportAssuredWorkloadsWorkloads",
            "cloudasset.assets.exportBeyondCorpApiGateways",
            "cloudasset.assets.exportBeyondCorpAppConnections",
            "cloudasset.assets.exportBeyondCorpAppConnectors",
            "cloudasset.assets.exportBeyondCorpAppGateways",
            "cloudasset.assets.exportBeyondCorpClientConnectorServices",
            "cloudasset.assets.exportBeyondCorpClientGateways",
            "cloudasset.assets.exportBigqueryDatasets",
            "cloudasset.assets.exportBigqueryModels",
            "cloudasset.assets.exportBigqueryTables",
            "cloudasset.assets.exportBigtableAppProfile",
            "cloudasset.assets.exportBigtableBackup",
            "cloudasset.assets.exportBigtableCluster",
            "cloudasset.assets.exportBigtableInstance",
            "cloudasset.assets.exportBigtableTable",
            "cloudasset.assets.exportCloudAssetFeeds",
            "cloudasset.assets.exportCloudDeployDeliveryPipelines",
            "cloudasset.assets.exportCloudDeployReleases",
            "cloudasset.assets.exportCloudDeployRollouts",
            "cloudasset.assets.exportCloudDeployTargets",
            "cloudasset.assets.exportCloudDocumentAIEvaluation",
            "cloudasset.assets.exportCloudDocumentAIHumanReviewConfig",
            "cloudasset.assets.exportCloudDocumentAILabelerPool",
            "cloudasset.assets.exportCloudDocumentAIProcessor",
            "cloudasset.assets.exportCloudDocumentAIProcessorVersion",
            "cloudasset.assets.exportCloudbillingBillingAccounts",
            "cloudasset.assets.exportCloudbillingProjectBillingInfos",
            "cloudasset.assets.exportCloudfunctionsFunctions",
            "cloudasset.assets.exportCloudfunctionsGen2Functions",
            "cloudasset.assets.exportCloudkmsCryptoKeyVersions",
            "cloudasset.assets.exportCloudkmsCryptoKeys",
            "cloudasset.assets.exportCloudkmsEkmConnections",
            "cloudasset.assets.exportCloudkmsImportJobs",
            "cloudasset.assets.exportCloudkmsKeyRings",
            "cloudasset.assets.exportCloudmemcacheInstances",
            "cloudasset.assets.exportCloudresourcemanagerFolders",
            "cloudasset.assets.exportCloudresourcemanagerOrganizations",
            "cloudasset.assets.exportCloudresourcemanagerProjects",
            "cloudasset.assets.exportCloudresourcemanagerTagBindings",
            "cloudasset.assets.exportCloudresourcemanagerTagKeys",
            "cloudasset.assets.exportCloudresourcemanagerTagValues",
            "cloudasset.assets.exportComposerEnvironments",
            "cloudasset.assets.exportComputeAddress",
            "cloudasset.assets.exportComputeAutoscalers",
            "cloudasset.assets.exportComputeBackendBuckets",
            "cloudasset.assets.exportComputeBackendServices",
            "cloudasset.assets.exportComputeCommitments",
            "cloudasset.assets.exportComputeDisks",
            "cloudasset.assets.exportComputeExternalVpnGateways",
            "cloudasset.assets.exportComputeFirewallPolicies",
            "cloudasset.assets.exportComputeFirewalls",
            "cloudasset.assets.exportComputeForwardingRules",
            "cloudasset.assets.exportComputeGlobalAddress",
            "cloudasset.assets.exportComputeGlobalForwardingRules",
            "cloudasset.assets.exportComputeHealthChecks",
            "cloudasset.assets.exportComputeHttpHealthChecks",
            "cloudasset.assets.exportComputeHttpsHealthChecks",
            "cloudasset.assets.exportComputeImages",
            "cloudasset.assets.exportComputeInstanceGroupManagers",
            "cloudasset.assets.exportComputeInstanceGroups",
            "cloudasset.assets.exportComputeInstanceTemplates",
            "cloudasset.assets.exportComputeInstances",
            "cloudasset.assets.exportComputeInterconnect",
            "cloudasset.assets.exportComputeInterconnectAttachment",
            "cloudasset.assets.exportComputeLicenses",
            "cloudasset.assets.exportComputeNetworkEndpointGroups",
            "cloudasset.assets.exportComputeNetworks",
            "cloudasset.assets.exportComputeNodeGroups",
            "cloudasset.assets.exportComputeNodeTemplates",
            "cloudasset.assets.exportComputePacketMirrorings",
            "cloudasset.assets.exportComputeProjects",
            "cloudasset.assets.exportComputeRegionAutoscaler",
            "cloudasset.assets.exportComputeRegionBackendServices",
            "cloudasset.assets.exportComputeRegionDisk",
            "cloudasset.assets.exportComputeRegionInstanceGroup",
            "cloudasset.assets.exportComputeRegionInstanceGroupManager",
            "cloudasset.assets.exportComputeReservations",
            "cloudasset.assets.exportComputeResourcePolicies",
            "cloudasset.assets.exportComputeRouters",
            "cloudasset.assets.exportComputeRoutes",
            "cloudasset.assets.exportComputeSecurityPolicy",
            "cloudasset.assets.exportComputeServiceAttachments",
            "cloudasset.assets.exportComputeSnapshots",
            "cloudasset.assets.exportComputeSslCertificates",
            "cloudasset.assets.exportComputeSslPolicies",
            "cloudasset.assets.exportComputeSubnetworks",
            "cloudasset.assets.exportComputeTargetHttpProxies",
            "cloudasset.assets.exportComputeTargetHttpsProxies",
            "cloudasset.assets.exportComputeTargetInstances",
            "cloudasset.assets.exportComputeTargetPools",
            "cloudasset.assets.exportComputeTargetSslProxies",
            "cloudasset.assets.exportComputeTargetTcpProxies",
            "cloudasset.assets.exportComputeTargetVpnGateways",
            "cloudasset.assets.exportComputeUrlMaps",
            "cloudasset.assets.exportComputeVpnGateways",
            "cloudasset.assets.exportComputeVpnTunnels",
            "cloudasset.assets.exportConnectorsConnections",
            "cloudasset.assets.exportConnectorsConnectorVersions",
            "cloudasset.assets.exportConnectorsConnectors",
            "cloudasset.assets.exportConnectorsProviders",
            "cloudasset.assets.exportConnectorsRuntimeConfigs",
            "cloudasset.assets.exportContainerAppsDeployment",
            "cloudasset.assets.exportContainerAppsReplicaSets",
            "cloudasset.assets.exportContainerBatchJobs",
            "cloudasset.assets.exportContainerClusterrole",
            "cloudasset.assets.exportContainerClusterrolebinding",
            "cloudasset.assets.exportContainerClusters",
            "cloudasset.assets.exportContainerExtensionsIngresses",
            "cloudasset.assets.exportContainerJobs",
            "cloudasset.assets.exportContainerNamespace",
            "cloudasset.assets.exportContainerNetworkingIngresses",
            "cloudasset.assets.exportContainerNetworkingNetworkPolicies",
            "cloudasset.assets.exportContainerNode",
            "cloudasset.assets.exportContainerNodepool",
            "cloudasset.assets.exportContainerPod",
            "cloudasset.assets.exportContainerReplicaSets",
            "cloudasset.assets.exportContainerRole",
            "cloudasset.assets.exportContainerRolebinding",
            "cloudasset.assets.exportContainerServices",
            "cloudasset.assets.exportContainerregistryImage",
            "cloudasset.assets.exportDataMigrationConnectionProfiles",
            "cloudasset.assets.exportDataMigrationMigrationJobs",
            "cloudasset.assets.exportDataflowJobs",
            "cloudasset.assets.exportDatafusionInstance",
            "cloudasset.assets.exportDataplexAssets",
            "cloudasset.assets.exportDataplexLakes",
            "cloudasset.assets.exportDataplexTasks",
            "cloudasset.assets.exportDataplexZones",
            "cloudasset.assets.exportDataprocAutoscalingPolicies",
            "cloudasset.assets.exportDataprocBatches",
            "cloudasset.assets.exportDataprocClusters",
            "cloudasset.assets.exportDataprocJobs",
            "cloudasset.assets.exportDataprocSessions",
            "cloudasset.assets.exportDataprocWorkflowTemplates",
            "cloudasset.assets.exportDatastreamConnectionProfile",
            "cloudasset.assets.exportDatastreamPrivateConnection",
            "cloudasset.assets.exportDatastreamStream",
            "cloudasset.assets.exportDialogflowAgents",
            "cloudasset.assets.exportDialogflowConversationProfiles",
            "cloudasset.assets.exportDialogflowKnowledgeBases",
            "cloudasset.assets.exportDialogflowLocationSettings",
            "cloudasset.assets.exportDlpDeidentifyTemplates",
            "cloudasset.assets.exportDlpDlpJobs",
            "cloudasset.assets.exportDlpInspectTemplates",
            "cloudasset.assets.exportDlpJobTriggers",
            "cloudasset.assets.exportDlpStoredInfoTypes",
            "cloudasset.assets.exportDnsManagedZones",
            "cloudasset.assets.exportDnsPolicies",
            "cloudasset.assets.exportDomainsRegistrations",
            "cloudasset.assets.exportEventarcTriggers",
            "cloudasset.assets.exportFileBackups",
            "cloudasset.assets.exportFileInstances",
            "cloudasset.assets.exportFirebaseAppInfos",
            "cloudasset.assets.exportFirebaseProjects",
            "cloudasset.assets.exportFirestoreDatabases",
            "cloudasset.assets.exportGKEHubFeatures",
            "cloudasset.assets.exportGKEHubMemberships",
            "cloudasset.assets.exportGameservicesGameServerClusters",
            "cloudasset.assets.exportGameservicesGameServerConfigs",
            "cloudasset.assets.exportGameservicesGameServerDeployments",
            "cloudasset.assets.exportGameservicesRealms",
            "cloudasset.assets.exportGkeBackupBackupPlans",
            "cloudasset.assets.exportGkeBackupBackups",
            "cloudasset.assets.exportGkeBackupRestorePlans",
            "cloudasset.assets.exportGkeBackupRestores",
            "cloudasset.assets.exportGkeBackupVolumeBackups",
            "cloudasset.assets.exportGkeBackupVolumeRestores",
            "cloudasset.assets.exportHealthcareConsentStores",
            "cloudasset.assets.exportHealthcareDatasets",
            "cloudasset.assets.exportHealthcareDicomStores",
            "cloudasset.assets.exportHealthcareFhirStores",
            "cloudasset.assets.exportHealthcareHl7V2Stores",
            "cloudasset.assets.exportIamPolicy",
            "cloudasset.assets.exportIamRoles",
            "cloudasset.assets.exportIamServiceAccountKeys",
            "cloudasset.assets.exportIamServiceAccounts",
            "cloudasset.assets.exportIapTunnel",
            "cloudasset.assets.exportIapTunnelInstances",
            "cloudasset.assets.exportIapTunnelZones",
            "cloudasset.assets.exportIapWeb",
            "cloudasset.assets.exportIapWebServiceVersion",
            "cloudasset.assets.exportIapWebServices",
            "cloudasset.assets.exportIapWebType",
            "cloudasset.assets.exportIdsEndpoints",
            "cloudasset.assets.exportIntegrationsAuthConfigs",
            "cloudasset.assets.exportIntegrationsCertificates",
            "cloudasset.assets.exportIntegrationsExecutions",
            "cloudasset.assets.exportIntegrationsIntegrationVersions",
            "cloudasset.assets.exportIntegrationsIntegrations",
            "cloudasset.assets.exportIntegrationsSfdcChannels",
            "cloudasset.assets.exportIntegrationsSfdcInstances",
            "cloudasset.assets.exportIntegrationsSuspensions",
            "cloudasset.assets.exportLoggingLogMetrics",
            "cloudasset.assets.exportLoggingLogSinks",
            "cloudasset.assets.exportManagedidentitiesDomain",
            "cloudasset.assets.exportMetastoreBackups",
            "cloudasset.assets.exportMetastoreMetadataImports",
            "cloudasset.assets.exportMetastoreServices",
            "cloudasset.assets.exportMonitoringAlertPolicies",
            "cloudasset.assets.exportNetworkConnectivityHubs",
            "cloudasset.assets.exportNetworkConnectivitySpokes",
            "cloudasset.assets.exportNetworkManagementConnectivityTests",
            "cloudasset.assets.exportNetworkServicesEndpointPolicies",
            "cloudasset.assets.exportNetworkServicesGateways",
            "cloudasset.assets.exportNetworkServicesGrpcRoutes",
            "cloudasset.assets.exportNetworkServicesHttpRoutes",
            "cloudasset.assets.exportNetworkServicesMeshes",
            "cloudasset.assets.exportNetworkServicesServiceBindings",
            "cloudasset.assets.exportNetworkServicesTcpRoutes",
            "cloudasset.assets.exportNetworkServicesTlsRoutes",
            "cloudasset.assets.exportOSConfigOSPolicyAssignmentReports",
            "cloudasset.assets.exportOSConfigOSPolicyAssignments",
            "cloudasset.assets.exportOSConfigVulnerabilityReports",
            "cloudasset.assets.exportOSInventories",
            "cloudasset.assets.exportOrgPolicy",
            "cloudasset.assets.exportPatchDeployments",
            "cloudasset.assets.exportPubsubSnapshots",
            "cloudasset.assets.exportPubsubSubscriptions",
            "cloudasset.assets.exportPubsubTopics",
            "cloudasset.assets.exportRedisInstances",
            "cloudasset.assets.exportResource",
            "cloudasset.assets.exportSecretManagerSecretVersions",
            "cloudasset.assets.exportSecretManagerSecrets",
            "cloudasset.assets.exportServiceDirectoryNamespaces",
            "cloudasset.assets.exportServicePerimeter",
            "cloudasset.assets.exportServiceconsumermanagementConsumerProperty",
            "cloudasset.assets.exportServiceconsumermanagementConsumerQuotaLimits",
            "cloudasset.assets.exportServiceconsumermanagementConsumers",
            "cloudasset.assets.exportServiceconsumermanagementProducerOverrides",
            "cloudasset.assets.exportServiceconsumermanagementTenancyUnits",
            "cloudasset.assets.exportServiceconsumermanagementVisibility",
            "cloudasset.assets.exportServicemanagementServices",
            "cloudasset.assets.exportServiceusageAdminOverrides",
            "cloudasset.assets.exportServiceusageConsumerOverrides",
            "cloudasset.assets.exportServiceusageServices",
            "cloudasset.assets.exportSpannerBackups",
            "cloudasset.assets.exportSpannerDatabases",
            "cloudasset.assets.exportSpannerInstances",
            "cloudasset.assets.exportSpeakerIdPhrases",
            "cloudasset.assets.exportSpeakerIdSettings",
            "cloudasset.assets.exportSpeakerIdSpeakers",
            "cloudasset.assets.exportSpeechCustomClasses",
            "cloudasset.assets.exportSpeechPhraseSets",
            "cloudasset.assets.exportSqladminBackupRuns",
            "cloudasset.assets.exportSqladminInstances",
            "cloudasset.assets.exportStorageBuckets",
            "cloudasset.assets.exportTpuNodes",
            "cloudasset.assets.exportVpcaccessConnector",
            "cloudasset.assets.listAccessLevel",
            "cloudasset.assets.listAccessPolicy",
            "cloudasset.assets.listAiplatformBatchPredictionJobs",
            "cloudasset.assets.listAiplatformCustomJobs",
            "cloudasset.assets.listAiplatformDataLabelingJobs",
            "cloudasset.assets.listAiplatformDatasets",
            "cloudasset.assets.listAiplatformEndpoints",
            "cloudasset.assets.listAiplatformHyperparameterTuningJobs",
            "cloudasset.assets.listAiplatformMetadataStores",
            "cloudasset.assets.listAiplatformModelDeploymentMonitoringJobs",
            "cloudasset.assets.listAiplatformModels",
            "cloudasset.assets.listAiplatformPipelineJobs",
            "cloudasset.assets.listAiplatformSpecialistPools",
            "cloudasset.assets.listAiplatformTrainingPipelines",
            "cloudasset.assets.listAllAccessPolicy",
            "cloudasset.assets.listAnthosConnectedCluster",
            "cloudasset.assets.listAnthosedgeCluster",
            "cloudasset.assets.listApigatewayApi",
            "cloudasset.assets.listApigatewayApiConfig",
            "cloudasset.assets.listApigatewayGateway",
            "cloudasset.assets.listApikeysKeys",
            "cloudasset.assets.listAppengineApplications",
            "cloudasset.assets.listAppengineServices",
            "cloudasset.assets.listAppengineVersions",
            "cloudasset.assets.listArtifactregistryDockerImages",
            "cloudasset.assets.listArtifactregistryRepositories",
            "cloudasset.assets.listAssuredWorkloadsWorkloads",
            "cloudasset.assets.listBeyondCorpApiGateways",
            "cloudasset.assets.listBeyondCorpAppConnections",
            "cloudasset.assets.listBeyondCorpAppConnectors",
            "cloudasset.assets.listBeyondCorpAppGateways",
            "cloudasset.assets.listBeyondCorpClientConnectorServices",
            "cloudasset.assets.listBeyondCorpClientGateways",
            "cloudasset.assets.listBigqueryDatasets",
            "cloudasset.assets.listBigqueryModels",
            "cloudasset.assets.listBigqueryTables",
            "cloudasset.assets.listBigtableAppProfile",
            "cloudasset.assets.listBigtableBackup",
            "cloudasset.assets.listBigtableCluster",
            "cloudasset.assets.listBigtableInstance",
            "cloudasset.assets.listBigtableTable",
            "cloudasset.assets.listCloudAssetFeeds",
            "cloudasset.assets.listCloudDeployDeliveryPipelines",
            "cloudasset.assets.listCloudDeployReleases",
            "cloudasset.assets.listCloudDeployRollouts",
            "cloudasset.assets.listCloudDeployTargets",
            "cloudasset.assets.listCloudDocumentAIEvaluation",
            "cloudasset.assets.listCloudDocumentAIHumanReviewConfig",
            "cloudasset.assets.listCloudDocumentAILabelerPool",
            "cloudasset.assets.listCloudDocumentAIProcessor",
            "cloudasset.assets.listCloudDocumentAIProcessorVersion",
            "cloudasset.assets.listCloudbillingBillingAccounts",
            "cloudasset.assets.listCloudbillingProjectBillingInfos",
            "cloudasset.assets.listCloudfunctionsFunctions",
            "cloudasset.assets.listCloudfunctionsGen2Functions",
            "cloudasset.assets.listCloudkmsCryptoKeyVersions",
            "cloudasset.assets.listCloudkmsCryptoKeys",
            "cloudasset.assets.listCloudkmsEkmConnections",
            "cloudasset.assets.listCloudkmsImportJobs",
            "cloudasset.assets.listCloudkmsKeyRings",
            "cloudasset.assets.listCloudmemcacheInstances",
            "cloudasset.assets.listCloudresourcemanagerFolders",
            "cloudasset.assets.listCloudresourcemanagerOrganizations",
            "cloudasset.assets.listCloudresourcemanagerProjects",
            "cloudasset.assets.listCloudresourcemanagerTagBindings",
            "cloudasset.assets.listCloudresourcemanagerTagKeys",
            "cloudasset.assets.listCloudresourcemanagerTagValues",
            "cloudasset.assets.listComposerEnvironments",
            "cloudasset.assets.listComputeAddress",
            "cloudasset.assets.listComputeAutoscalers",
            "cloudasset.assets.listComputeBackendBuckets",
            "cloudasset.assets.listComputeBackendServices",
            "cloudasset.assets.listComputeCommitments",
            "cloudasset.assets.listComputeDisks",
            "cloudasset.assets.listComputeExternalVpnGateways",
            "cloudasset.assets.listComputeFirewallPolicies",
            "cloudasset.assets.listComputeFirewalls",
            "cloudasset.assets.listComputeForwardingRules",
            "cloudasset.assets.listComputeGlobalAddress",
            "cloudasset.assets.listComputeGlobalForwardingRules",
            "cloudasset.assets.listComputeHealthChecks",
            "cloudasset.assets.listComputeHttpHealthChecks",
            "cloudasset.assets.listComputeHttpsHealthChecks",
            "cloudasset.assets.listComputeImages",
            "cloudasset.assets.listComputeInstanceGroupManagers",
            "cloudasset.assets.listComputeInstanceGroups",
            "cloudasset.assets.listComputeInstanceTemplates",
            "cloudasset.assets.listComputeInstances",
            "cloudasset.assets.listComputeInterconnect",
            "cloudasset.assets.listComputeInterconnectAttachment",
            "cloudasset.assets.listComputeLicenses",
            "cloudasset.assets.listComputeNetworkEndpointGroups",
            "cloudasset.assets.listComputeNetworks",
            "cloudasset.assets.listComputeNodeGroups",
            "cloudasset.assets.listComputeNodeTemplates",
            "cloudasset.assets.listComputePacketMirrorings",
            "cloudasset.assets.listComputeProjects",
            "cloudasset.assets.listComputeRegionAutoscaler",
            "cloudasset.assets.listComputeRegionBackendServices",
            "cloudasset.assets.listComputeRegionDisk",
            "cloudasset.assets.listComputeRegionInstanceGroup",
            "cloudasset.assets.listComputeRegionInstanceGroupManager",
            "cloudasset.assets.listComputeReservations",
            "cloudasset.assets.listComputeResourcePolicies",
            "cloudasset.assets.listComputeRouters",
            "cloudasset.assets.listComputeRoutes",
            "cloudasset.assets.listComputeSecurityPolicy",
            "cloudasset.assets.listComputeServiceAttachments",
            "cloudasset.assets.listComputeSnapshots",
            "cloudasset.assets.listComputeSslCertificates",
            "cloudasset.assets.listComputeSslPolicies",
            "cloudasset.assets.listComputeSubnetworks",
            "cloudasset.assets.listComputeTargetHttpProxies",
            "cloudasset.assets.listComputeTargetHttpsProxies",
            "cloudasset.assets.listComputeTargetInstances",
            "cloudasset.assets.listComputeTargetPools",
            "cloudasset.assets.listComputeTargetSslProxies",
            "cloudasset.assets.listComputeTargetTcpProxies",
            "cloudasset.assets.listComputeTargetVpnGateways",
            "cloudasset.assets.listComputeUrlMaps",
            "cloudasset.assets.listComputeVpnGateways",
            "cloudasset.assets.listComputeVpnTunnels",
            "cloudasset.assets.listConnectorsConnections",
            "cloudasset.assets.listConnectorsConnectorVersions",
            "cloudasset.assets.listConnectorsConnectors",
            "cloudasset.assets.listConnectorsProviders",
            "cloudasset.assets.listConnectorsRuntimeConfigs",
            "cloudasset.assets.listContainerAppsDeployment",
            "cloudasset.assets.listContainerAppsReplicaSets",
            "cloudasset.assets.listContainerBatchJobs",
            "cloudasset.assets.listContainerClusterrole",
            "cloudasset.assets.listContainerClusterrolebinding",
            "cloudasset.assets.listContainerClusters",
            "cloudasset.assets.listContainerExtensionsIngresses",
            "cloudasset.assets.listContainerJobs",
            "cloudasset.assets.listContainerNamespace",
            "cloudasset.assets.listContainerNetworkingIngresses",
            "cloudasset.assets.listContainerNetworkingNetworkPolicies",
            "cloudasset.assets.listContainerNode",
            "cloudasset.assets.listContainerNodepool",
            "cloudasset.assets.listContainerPod",
            "cloudasset.assets.listContainerReplicaSets",
            "cloudasset.assets.listContainerRole",
            "cloudasset.assets.listContainerRolebinding",
            "cloudasset.assets.listContainerServices",
            "cloudasset.assets.listContainerregistryImage",
            "cloudasset.assets.listDataMigrationConnectionProfiles",
            "cloudasset.assets.listDataMigrationMigrationJobs",
            "cloudasset.assets.listDataflowJobs",
            "cloudasset.assets.listDatafusionInstance",
            "cloudasset.assets.listDataplexAssets",
            "cloudasset.assets.listDataplexLakes",
            "cloudasset.assets.listDataplexTasks",
            "cloudasset.assets.listDataplexZones",
            "cloudasset.assets.listDataprocAutoscalingPolicies",
            "cloudasset.assets.listDataprocBatches",
            "cloudasset.assets.listDataprocClusters",
            "cloudasset.assets.listDataprocJobs",
            "cloudasset.assets.listDataprocSessions",
            "cloudasset.assets.listDataprocWorkflowTemplates",
            "cloudasset.assets.listDatastreamConnectionProfile",
            "cloudasset.assets.listDatastreamPrivateConnection",
            "cloudasset.assets.listDatastreamStream",
            "cloudasset.assets.listDialogflowAgents",
            "cloudasset.assets.listDialogflowConversationProfiles",
            "cloudasset.assets.listDialogflowKnowledgeBases",
            "cloudasset.assets.listDialogflowLocationSettings",
            "cloudasset.assets.listDlpDeidentifyTemplates",
            "cloudasset.assets.listDlpDlpJobs",
            "cloudasset.assets.listDlpInspectTemplates",
            "cloudasset.assets.listDlpJobTriggers",
            "cloudasset.assets.listDlpStoredInfoTypes",
            "cloudasset.assets.listDnsManagedZones",
            "cloudasset.assets.listDnsPolicies",
            "cloudasset.assets.listDomainsRegistrations",
            "cloudasset.assets.listEventarcTriggers",
            "cloudasset.assets.listFileBackups",
            "cloudasset.assets.listFileInstances",
            "cloudasset.assets.listFirebaseAppInfos",
            "cloudasset.assets.listFirebaseProjects",
            "cloudasset.assets.listFirestoreDatabases",
            "cloudasset.assets.listGKEHubFeatures",
            "cloudasset.assets.listGKEHubMemberships",
            "cloudasset.assets.listGameservicesGameServerClusters",
            "cloudasset.assets.listGameservicesGameServerConfigs",
            "cloudasset.assets.listGameservicesGameServerDeployments",
            "cloudasset.assets.listGameservicesRealms",
            "cloudasset.assets.listGkeBackupBackupPlans",
            "cloudasset.assets.listGkeBackupBackups",
            "cloudasset.assets.listGkeBackupRestorePlans",
            "cloudasset.assets.listGkeBackupRestores",
            "cloudasset.assets.listGkeBackupVolumeBackups",
            "cloudasset.assets.listGkeBackupVolumeRestores",
            "cloudasset.assets.listHealthcareConsentStores",
            "cloudasset.assets.listHealthcareDatasets",
            "cloudasset.assets.listHealthcareDicomStores",
            "cloudasset.assets.listHealthcareFhirStores",
            "cloudasset.assets.listHealthcareHl7V2Stores",
            "cloudasset.assets.listIamPolicy",
            "cloudasset.assets.listIamRoles",
            "cloudasset.assets.listIamServiceAccountKeys",
            "cloudasset.assets.listIamServiceAccounts",
            "cloudasset.assets.listIapTunnel",
            "cloudasset.assets.listIapTunnelInstances",
            "cloudasset.assets.listIapTunnelZones",
            "cloudasset.assets.listIapWeb",
            "cloudasset.assets.listIapWebServiceVersion",
            "cloudasset.assets.listIapWebServices",
            "cloudasset.assets.listIapWebType",
            "cloudasset.assets.listIdsEndpoints",
            "cloudasset.assets.listIntegrationsAuthConfigs",
            "cloudasset.assets.listIntegrationsCertificates",
            "cloudasset.assets.listIntegrationsExecutions",
            "cloudasset.assets.listIntegrationsIntegrationVersions",
            "cloudasset.assets.listIntegrationsIntegrations",
            "cloudasset.assets.listIntegrationsSfdcChannels",
            "cloudasset.assets.listIntegrationsSfdcInstances",
            "cloudasset.assets.listIntegrationsSuspensions",
            "cloudasset.assets.listLoggingLogMetrics",
            "cloudasset.assets.listLoggingLogSinks",
            "cloudasset.assets.listManagedidentitiesDomain",
            "cloudasset.assets.listMetastoreBackups",
            "cloudasset.assets.listMetastoreMetadataImports",
            "cloudasset.assets.listMetastoreServices",
            "cloudasset.assets.listMonitoringAlertPolicies",
            "cloudasset.assets.listNetworkConnectivityHubs",
            "cloudasset.assets.listNetworkConnectivitySpokes",
            "cloudasset.assets.listNetworkManagementConnectivityTests",
            "cloudasset.assets.listNetworkServicesEndpointPolicies",
            "cloudasset.assets.listNetworkServicesGateways",
            "cloudasset.assets.listNetworkServicesGrpcRoutes",
            "cloudasset.assets.listNetworkServicesHttpRoutes",
            "cloudasset.assets.listNetworkServicesMeshes",
            "cloudasset.assets.listNetworkServicesServiceBindings",
            "cloudasset.assets.listNetworkServicesTcpRoutes",
            "cloudasset.assets.listNetworkServicesTlsRoutes",
            "cloudasset.assets.listOSConfigOSPolicyAssignmentReports",
            "cloudasset.assets.listOSConfigOSPolicyAssignments",
            "cloudasset.assets.listOSConfigVulnerabilityReports",
            "cloudasset.assets.listOSInventories",
            "cloudasset.assets.listOrgPolicy",
            "cloudasset.assets.listPatchDeployments",
            "cloudasset.assets.listPubsubSnapshots",
            "cloudasset.assets.listPubsubSubscriptions",
            "cloudasset.assets.listPubsubTopics",
            "cloudasset.assets.listRedisInstances",
            "cloudasset.assets.listResource",
            "cloudasset.assets.listRunDomainMapping",
            "cloudasset.assets.listRunRevision",
            "cloudasset.assets.listRunService",
            "cloudasset.assets.listSecretManagerSecretVersions",
            "cloudasset.assets.listSecretManagerSecrets",
            "cloudasset.assets.listServiceDirectoryNamespaces",
            "cloudasset.assets.listServicePerimeter",
            "cloudasset.assets.listServiceconsumermanagementConsumerProperty",
            "cloudasset.assets.listServiceconsumermanagementConsumerQuotaLimits",
            "cloudasset.assets.listServiceconsumermanagementConsumers",
            "cloudasset.assets.listServiceconsumermanagementProducerOverrides",
            "cloudasset.assets.listServiceconsumermanagementTenancyUnits",
            "cloudasset.assets.listServiceconsumermanagementVisibility",
            "cloudasset.assets.listServicemanagementServices",
            "cloudasset.assets.listServiceusageAdminOverrides",
            "cloudasset.assets.listServiceusageConsumerOverrides",
            "cloudasset.assets.listServiceusageServices",
            "cloudasset.assets.listSpannerBackups",
            "cloudasset.assets.listSpannerDatabases",
            "cloudasset.assets.listSpannerInstances",
            "cloudasset.assets.listSpeakerIdPhrases",
            "cloudasset.assets.listSpeakerIdSettings",
            "cloudasset.assets.listSpeakerIdSpeakers",
            "cloudasset.assets.listSpeechCustomClasses",
            "cloudasset.assets.listSpeechPhraseSets",
            "cloudasset.assets.listSqladminBackupRuns",
            "cloudasset.assets.listSqladminInstances",
            "cloudasset.assets.listStorageBuckets",
            "cloudasset.assets.listTpuNodes",
            "cloudasset.assets.listVpcaccessConnector",
            "cloudasset.assets.queryAccessPolicy",
            "cloudasset.assets.queryIamPolicy",
            "cloudasset.assets.queryOSInventories",
            "cloudasset.assets.queryResource",
            "cloudasset.assets.searchAllIamPolicies",
            "cloudasset.assets.searchAllResources",
            "cloudasset.feeds.*",
            "cloudasset.othercloudconnections.get",
            "cloudasset.othercloudconnections.list",
            "cloudasset.othercloudconnections.verify",
            "cloudsql.instances.connect",
            "cloudsql.users.list",
            "compute.disks.useReadOnly",
            "compute.globalOperations.get",
            "compute.instances.get",
            "compute.instances.list",
            "compute.networkEndpointGroups.get",
            "compute.projects.get",
            "container.clusters.get",
            "iam.denypolicies.get",
            "iam.denypolicies.list",
            "iam.googleapis.com/workloadIdentityPoolProviders.list",
            "iam.googleapis.com/workloadIdentityPools.list",
            "logging.logEntries.list",
            "monitoring.alertPolicies.list",
            "monitoring.timeSeries.list",
            "orgpolicy.policies.list",
            "orgpolicy.policy.get",
            "recommender.cloudAssetInsights.get",
            "recommender.cloudAssetInsights.list",
            "recommender.locations.*",
            "resourcemanager.folders.get",
            "resourcemanager.folders.list",
            "resourcemanager.organizations.get",
            "resourcemanager.projects.get",
            "resourcemanager.projects.getIamPolicy",
            "resourcemanager.projects.list",
            "resourcemanager.tagValues.get",
            "securitycenter.assets.list",
            "securitycenter.assetsecuritymarks.update",
            "securitycenter.findings.list",
            "securitycenter.notificationconfig.create",
            "securitycenter.notificationconfig.delete",
            "securitycenter.notificationconfig.update",
            "securitycenter.organizationsettings.get",
            "securitycenter.resourcevalueconfigs.get",
            "securitycenter.resourcevalueconfigs.list",
            "securitycenter.sources.list",
            "securitycenter.valuedresources.list",
            "securitycentermanagement.effectiveSecurityHealthAnalyticsCustomModules.*",
            "securitycentermanagement.securityHealthAnalyticsCustomModules.create",
            "securitycentermanagement.securityHealthAnalyticsCustomModules.delete",
            "securitycentermanagement.securityHealthAnalyticsCustomModules.get",
            "securitycentermanagement.securityHealthAnalyticsCustomModules.list",
            "securitycentermanagement.securityHealthAnalyticsCustomModules.simulate",
            "securitycentermanagement.securityHealthAnalyticsCustomModules.update",
            "serviceusage.quotas.get",
            "serviceusage.services.disable",
            "serviceusage.services.enable",
            "serviceusage.services.get",
            "serviceusage.services.list",
            "stackdriver.projects.get",
            "storage.buckets.get",
            "storage.buckets.getIamPolicy",
            "storage.buckets.list"
          ],
          "title": "Security Center Service Agent"
        },
        {
          "description": "Give the Service Directory service agent access to Cloud Platform resources.",
          "id": "roles/servicedirectory.serviceAgent",
          "is_beta": false,
          "permissions": [
            "container.clusters.get",
            "gkehub.features.get",
            "gkehub.gateway.delete",
            "gkehub.gateway.generateCredentials",
            "gkehub.gateway.get",
            "gkehub.gateway.patch",
            "gkehub.gateway.post",
            "gkehub.gateway.put",
            "gkehub.locations.*",
            "gkehub.memberships.get",
            "gkehub.memberships.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "servicedirectory.endpoints.create",
            "servicedirectory.endpoints.delete",
            "servicedirectory.endpoints.get",
            "servicedirectory.endpoints.getIamPolicy",
            "servicedirectory.endpoints.list",
            "servicedirectory.endpoints.update",
            "servicedirectory.locations.*",
            "servicedirectory.namespaces.associatePrivateZone",
            "servicedirectory.namespaces.create",
            "servicedirectory.namespaces.delete",
            "servicedirectory.namespaces.get",
            "servicedirectory.namespaces.getIamPolicy",
            "servicedirectory.namespaces.list",
            "servicedirectory.namespaces.update",
            "servicedirectory.networks.attach",
            "servicedirectory.services.bind",
            "servicedirectory.services.create",
            "servicedirectory.services.delete",
            "servicedirectory.services.get",
            "servicedirectory.services.getIamPolicy",
            "servicedirectory.services.list",
            "servicedirectory.services.resolve",
            "servicedirectory.services.update"
          ],
          "title": "Service Directory Service Agent"
        },
        {
          "description": "Gives permission to manage network configuration, such as establishing network peering, necessary for service producers",
          "id": "roles/servicenetworking.serviceAgent",
          "is_beta": false,
          "permissions": [
            "compute.globalAddresses.get",
            "compute.globalAddresses.list",
            "compute.globalOperations.get",
            "compute.networks.addPeering",
            "compute.networks.create",
            "compute.networks.delete",
            "compute.networks.get",
            "compute.networks.list",
            "compute.networks.listPeeringRoutes",
            "compute.networks.removePeering",
            "compute.networks.update",
            "compute.networks.updatePeering",
            "compute.networks.updatePolicy",
            "compute.projects.get",
            "compute.regionOperations.get",
            "compute.routers.get",
            "compute.routers.list",
            "compute.routes.list",
            "compute.subnetworks.create",
            "compute.subnetworks.delete",
            "compute.subnetworks.get",
            "compute.subnetworks.list",
            "dns.changes.*",
            "dns.dnsKeys.*",
            "dns.gkeClusters.*",
            "dns.managedZoneOperations.*",
            "dns.managedZones.create",
            "dns.managedZones.delete",
            "dns.managedZones.get",
            "dns.managedZones.getIamPolicy",
            "dns.managedZones.list",
            "dns.managedZones.update",
            "dns.networks.*",
            "dns.policies.*",
            "dns.projects.get",
            "dns.resourceRecordSets.*",
            "dns.responsePolicies.*",
            "dns.responsePolicyRules.*",
            "networkconnectivity.internalRanges.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Service Networking Service Agent"
        },
        {
          "description": "Allow Cloud Source Repositories to integrate with other Cloud services.",
          "id": "roles/sourcerepo.serviceAgent",
          "is_beta": false,
          "permissions": [
            "iam.serviceAccounts.getAccessToken",
            "pubsub.topics.publish"
          ],
          "title": "Cloud Source Repositories Service Agent"
        },
        {
          "description": "Cloud Spanner API Service Agent",
          "id": "roles/spanner.serviceAgent",
          "is_beta": false,
          "permissions": [
            "aiplatform.endpoints.get",
            "aiplatform.endpoints.list",
            "aiplatform.endpoints.predict",
            "aiplatform.models.get",
            "aiplatform.models.list"
          ],
          "title": "Cloud Spanner API Service Agent"
        },
        {
          "description": "Gives Spectrum SAS Service Account access to enable analytics on behalf of users.",
          "id": "roles/spectrumsas.serviceAgent",
          "is_beta": false,
          "permissions": [
            "bigquery.datasets.create",
            "bigquery.jobs.create",
            "bigquery.tables.create",
            "bigquery.tables.updateData",
            "pubsub.schemas.attach",
            "pubsub.schemas.commit",
            "pubsub.schemas.create",
            "pubsub.schemas.delete",
            "pubsub.schemas.get",
            "pubsub.schemas.list",
            "pubsub.schemas.listRevisions",
            "pubsub.schemas.rollback",
            "pubsub.schemas.validate",
            "pubsub.snapshots.create",
            "pubsub.snapshots.delete",
            "pubsub.snapshots.get",
            "pubsub.snapshots.list",
            "pubsub.snapshots.seek",
            "pubsub.snapshots.update",
            "pubsub.subscriptions.consume",
            "pubsub.subscriptions.create",
            "pubsub.subscriptions.delete",
            "pubsub.subscriptions.get",
            "pubsub.subscriptions.list",
            "pubsub.subscriptions.update",
            "pubsub.topics.attachSubscription",
            "pubsub.topics.create",
            "pubsub.topics.delete",
            "pubsub.topics.detachSubscription",
            "pubsub.topics.get",
            "pubsub.topics.list",
            "pubsub.topics.publish",
            "pubsub.topics.update",
            "pubsub.topics.updateTag",
            "resourcemanager.projects.get",
            "serviceusage.quotas.get",
            "serviceusage.services.get",
            "serviceusage.services.list"
          ],
          "title": "Spectrum SAS Service Agent"
        },
        {
          "description": "Gives Speech-to-Text service account access to Cloud Storage resources.",
          "id": "roles/speech.serviceAgent",
          "is_beta": false,
          "permissions": [
            "storage.buckets.get",
            "storage.buckets.list",
            "storage.objects.create",
            "storage.objects.get",
            "storage.objects.list",
            "storage.objects.update"
          ],
          "title": "Cloud Speech-to-Text Service Agent"
        },
        {
          "description": "Permissions for Insights to write reports into customer project",
          "id": "roles/storageinsights.serviceAgent",
          "is_beta": false,
          "permissions": [
            "bigquery.datasets.create",
            "serviceusage.services.use",
            "storageinsights.reportDetails.list"
          ],
          "title": "StorageInsights Service Agent"
        },
        {
          "description": "Grants Storage Transfer Service Agent permissions required to run transfers",
          "id": "roles/storagetransfer.serviceAgent",
          "is_beta": false,
          "permissions": [
            "pubsub.subscriptions.consume",
            "pubsub.subscriptions.create",
            "pubsub.subscriptions.delete",
            "pubsub.subscriptions.get",
            "pubsub.subscriptions.update",
            "pubsub.topics.attachSubscription",
            "pubsub.topics.create",
            "pubsub.topics.delete",
            "pubsub.topics.get",
            "pubsub.topics.publish",
            "pubsub.topics.update"
          ],
          "title": "Storage Transfer Service Agent"
        },
        {
          "description": "Gives Immersive Stream for XR access to the required resources.",
          "id": "roles/stream.serviceAgent",
          "is_beta": false,
          "permissions": [
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "storage.buckets.create",
            "storage.buckets.get",
            "storage.objects.create",
            "storage.objects.get",
            "storage.objects.list"
          ],
          "title": "Stream Service Agent"
        },
        {
          "description": "Give Cloud TPUs service account access to managed resources",
          "id": "roles/tpu.serviceAgent",
          "is_beta": false,
          "permissions": [
            "compute.globalOperations.get",
            "compute.networks.addPeering",
            "compute.networks.get",
            "compute.networks.removePeering",
            "compute.networks.update",
            "compute.routes.get",
            "compute.routes.list",
            "compute.subnetworks.get",
            "compute.subnetworks.list",
            "compute.zones.*",
            "monitoring.metricDescriptors.create",
            "monitoring.metricDescriptors.get",
            "monitoring.metricDescriptors.list",
            "monitoring.monitoredResourceDescriptors.*",
            "monitoring.timeSeries.create",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Cloud TPU API Service Agent"
        },
        {
          "description": "Downloads and uploads media files from and to customer Cloud Storage buckets. Publishes status updates to customer Pub/Sub.",
          "id": "roles/transcoder.serviceAgent",
          "is_beta": false,
          "permissions": [
            "pubsub.topics.publish",
            "storage.objects.create",
            "storage.objects.delete",
            "storage.objects.get",
            "transcoder.jobs.delete"
          ],
          "title": "Transcoder Service Agent"
        },
        {
          "description": "Grants Cloud Vision AI service account permissions to manage resources in consumer project",
          "id": "roles/visionai.serviceAgent",
          "is_beta": false,
          "permissions": [
            "aiplatform.endpoints.predict",
            "aiplatform.models.export",
            "aiplatform.models.get",
            "bigquery.datasets.create",
            "bigquery.datasets.get",
            "bigquery.jobs.create",
            "bigquery.jobs.get",
            "bigquery.models.export",
            "bigquery.readsessions.create",
            "bigquery.tables.create",
            "bigquery.tables.export",
            "bigquery.tables.get",
            "bigquery.tables.getData",
            "bigquery.tables.update",
            "bigquery.tables.updateData",
            "bigtable.tables.get",
            "bigtable.tables.list",
            "bigtable.tables.readRows",
            "cloudfunctions.functions.get",
            "cloudfunctions.functions.invoke",
            "cloudfunctions.functions.list",
            "compute.machineTypes.get",
            "logging.logEntries.create",
            "monitoring.metricDescriptors.create",
            "monitoring.metricDescriptors.get",
            "monitoring.metricDescriptors.list",
            "monitoring.monitoredResourceDescriptors.*",
            "monitoring.timeSeries.create",
            "pubsub.subscriptions.consume",
            "pubsub.subscriptions.create",
            "pubsub.subscriptions.delete",
            "pubsub.subscriptions.get",
            "pubsub.subscriptions.list",
            "pubsub.subscriptions.update",
            "pubsub.topics.attachSubscription",
            "pubsub.topics.create",
            "pubsub.topics.delete",
            "pubsub.topics.get",
            "pubsub.topics.list",
            "pubsub.topics.publish",
            "pubsub.topics.update",
            "run.jobs.run",
            "run.routes.invoke",
            "serviceusage.services.use",
            "storage.buckets.create",
            "storage.buckets.delete",
            "storage.buckets.get",
            "storage.buckets.list",
            "storage.objects.create",
            "storage.objects.delete",
            "storage.objects.get",
            "storage.objects.list",
            "storage.objects.update",
            "visionai.analyses.create",
            "visionai.analyses.delete",
            "visionai.analyses.get",
            "visionai.analyses.list",
            "visionai.analyses.update",
            "visionai.annotations.*",
            "visionai.applications.*",
            "visionai.assets.*",
            "visionai.clusters.create",
            "visionai.clusters.delete",
            "visionai.clusters.get",
            "visionai.clusters.list",
            "visionai.clusters.update",
            "visionai.clusters.watch",
            "visionai.corpora.*",
            "visionai.dataSchemas.*",
            "visionai.drafts.*",
            "visionai.events.create",
            "visionai.events.delete",
            "visionai.events.get",
            "visionai.events.list",
            "visionai.events.update",
            "visionai.indexEndpoints.*",
            "visionai.indexes.*",
            "visionai.instances.*",
            "visionai.operations.get",
            "visionai.operations.list",
            "visionai.operators.create",
            "visionai.operators.delete",
            "visionai.operators.get",
            "visionai.operators.list",
            "visionai.operators.update",
            "visionai.processors.create",
            "visionai.processors.delete",
            "visionai.processors.get",
            "visionai.processors.list",
            "visionai.processors.update",
            "visionai.searchConfigs.*",
            "visionai.series.acquireLease",
            "visionai.series.create",
            "visionai.series.delete",
            "visionai.series.get",
            "visionai.series.list",
            "visionai.series.receive",
            "visionai.series.releaseLease",
            "visionai.series.renewLease",
            "visionai.series.send",
            "visionai.series.update",
            "visionai.streams.create",
            "visionai.streams.delete",
            "visionai.streams.get",
            "visionai.streams.list",
            "visionai.streams.receive",
            "visionai.streams.send",
            "visionai.streams.update",
            "visionai.uistreams.*"
          ],
          "title": "Cloud Vision AI Service Agent"
        },
        {
          "description": "Grants Visual Inspection AI Service Agent admin roles for accessing/exporting training data, pushing containers artifacts to GCR and ArtifactsRegistry, and Vertex AI for storing data and running training jobs.",
          "id": "roles/visualinspection.serviceAgent",
          "is_beta": false,
          "permissions": [
            "aiplatform.*",
            "artifactregistry.aptartifacts.create",
            "artifactregistry.attachments.*",
            "artifactregistry.dockerimages.*",
            "artifactregistry.files.*",
            "artifactregistry.kfpartifacts.create",
            "artifactregistry.locations.*",
            "artifactregistry.mavenartifacts.*",
            "artifactregistry.npmpackages.*",
            "artifactregistry.packages.*",
            "artifactregistry.projectsettings.*",
            "artifactregistry.pythonpackages.*",
            "artifactregistry.repositories.create",
            "artifactregistry.repositories.createTagBinding",
            "artifactregistry.repositories.delete",
            "artifactregistry.repositories.deleteArtifacts",
            "artifactregistry.repositories.deleteTagBinding",
            "artifactregistry.repositories.downloadArtifacts",
            "artifactregistry.repositories.get",
            "artifactregistry.repositories.getIamPolicy",
            "artifactregistry.repositories.list",
            "artifactregistry.repositories.listEffectiveTags",
            "artifactregistry.repositories.listTagBindings",
            "artifactregistry.repositories.readViaVirtualRepository",
            "artifactregistry.repositories.setIamPolicy",
            "artifactregistry.repositories.update",
            "artifactregistry.repositories.uploadArtifacts",
            "artifactregistry.rules.*",
            "artifactregistry.tags.*",
            "artifactregistry.versions.*",
            "artifactregistry.yumartifacts.create",
            "firebase.projects.get",
            "orgpolicy.policy.get",
            "recommender.iamPolicyInsights.*",
            "recommender.iamPolicyRecommendations.*",
            "recommender.storageBucketSoftDeleteInsights.*",
            "recommender.storageBucketSoftDeleteRecommendations.*",
            "resourcemanager.hierarchyNodes.listEffectiveTags",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "storage.anywhereCaches.*",
            "storage.bucketOperations.*",
            "storage.buckets.*",
            "storage.folders.*",
            "storage.intelligenceConfigs.*",
            "storage.managedFolders.*",
            "storage.multipartUploads.*",
            "storage.objects.*"
          ],
          "title": "Visual Inspection AI Service Agent"
        },
        {
          "description": "Grants VM Migration Service Account access to create migrated VMs, disks and images in the user project.",
          "id": "roles/vmmigration.serviceAgent",
          "is_beta": false,
          "permissions": [
            "compute.addresses.get",
            "compute.addresses.list",
            "compute.addresses.use",
            "compute.addresses.useInternal",
            "compute.disks.create",
            "compute.disks.createSnapshot",
            "compute.disks.delete",
            "compute.disks.get",
            "compute.disks.setLabels",
            "compute.disks.use",
            "compute.disks.useReadOnly",
            "compute.globalOperations.get",
            "compute.globalOperations.list",
            "compute.images.create",
            "compute.images.get",
            "compute.images.setLabels",
            "compute.images.useReadOnly",
            "compute.instances.create",
            "compute.instances.delete",
            "compute.instances.get",
            "compute.instances.setLabels",
            "compute.instances.setMetadata",
            "compute.instances.setServiceAccount",
            "compute.instances.setTags",
            "compute.instances.stop",
            "compute.instances.update",
            "compute.instances.useReadOnly",
            "compute.machineImages.create",
            "compute.machineImages.get",
            "compute.machineTypes.list",
            "compute.networks.use",
            "compute.networks.useExternalIp",
            "compute.subnetworks.use",
            "compute.subnetworks.useExternalIp",
            "compute.zoneOperations.get",
            "compute.zoneOperations.list",
            "compute.zones.list"
          ],
          "title": "VM Migration Service Agent"
        },
        {
          "description": "Gives permission to manage network configuration, such as establishing network peering, necessary for GCVE",
          "id": "roles/vmwareengine.serviceAgent",
          "is_beta": false,
          "permissions": [
            "compute.globalAddresses.get",
            "compute.globalAddresses.list",
            "compute.globalOperations.get",
            "compute.networks.addPeering",
            "compute.networks.get",
            "compute.networks.list",
            "compute.networks.listPeeringRoutes",
            "compute.networks.removePeering",
            "compute.networks.update",
            "compute.networks.updatePeering",
            "compute.networks.updatePolicy",
            "compute.projects.get",
            "compute.regionOperations.get",
            "compute.routers.get",
            "compute.routers.list",
            "compute.routes.list",
            "compute.subnetworks.get",
            "compute.subnetworks.list",
            "dns.changes.*",
            "dns.dnsKeys.*",
            "dns.gkeClusters.*",
            "dns.managedZoneOperations.*",
            "dns.managedZones.create",
            "dns.managedZones.delete",
            "dns.managedZones.get",
            "dns.managedZones.getIamPolicy",
            "dns.managedZones.list",
            "dns.managedZones.update",
            "dns.networks.*",
            "dns.policies.*",
            "dns.projects.get",
            "dns.resourceRecordSets.*",
            "dns.responsePolicies.*",
            "dns.responsePolicyRules.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "vmwareengine.externalAddresses.get",
            "vmwareengine.externalAddresses.list",
            "vmwareengine.nodes.*"
          ],
          "title": "VMware Engine Service Agent"
        },
        {
          "description": "Can create and manage resources to support serverless application to connect to virtual private cloud.",
          "id": "roles/vpcaccess.serviceAgent",
          "is_beta": false,
          "permissions": [
            "billing.accounts.get",
            "compute.autoscalers.*",
            "compute.disks.create",
            "compute.firewalls.create",
            "compute.firewalls.delete",
            "compute.firewalls.get",
            "compute.firewalls.list",
            "compute.firewalls.update",
            "compute.healthChecks.create",
            "compute.healthChecks.delete",
            "compute.healthChecks.get",
            "compute.healthChecks.list",
            "compute.healthChecks.update",
            "compute.healthChecks.use",
            "compute.healthChecks.useReadOnly",
            "compute.httpHealthChecks.create",
            "compute.httpHealthChecks.delete",
            "compute.httpHealthChecks.get",
            "compute.httpHealthChecks.list",
            "compute.httpHealthChecks.use",
            "compute.httpHealthChecks.useReadOnly",
            "compute.httpsHealthChecks.create",
            "compute.httpsHealthChecks.delete",
            "compute.httpsHealthChecks.get",
            "compute.httpsHealthChecks.update",
            "compute.httpsHealthChecks.use",
            "compute.httpsHealthChecks.useReadOnly",
            "compute.images.get",
            "compute.images.useReadOnly",
            "compute.instanceGroupManagers.create",
            "compute.instanceGroupManagers.delete",
            "compute.instanceGroupManagers.get",
            "compute.instanceGroupManagers.update",
            "compute.instanceGroupManagers.use",
            "compute.instanceGroups.create",
            "compute.instanceGroups.delete",
            "compute.instanceGroups.get",
            "compute.instanceGroups.update",
            "compute.instanceTemplates.create",
            "compute.instanceTemplates.delete",
            "compute.instanceTemplates.get",
            "compute.instanceTemplates.useReadOnly",
            "compute.instances.create",
            "compute.instances.delete",
            "compute.instances.get",
            "compute.instances.getGuestAttributes",
            "compute.instances.list",
            "compute.instances.reset",
            "compute.instances.setLabels",
            "compute.instances.setMetadata",
            "compute.instances.setTags",
            "compute.instances.start",
            "compute.instances.stop",
            "compute.instances.use",
            "compute.machineTypes.get",
            "compute.networks.get",
            "compute.networks.use",
            "compute.projects.get",
            "compute.projects.setCommonInstanceMetadata",
            "compute.regionOperations.get",
            "compute.regionOperations.list",
            "compute.regions.*",
            "compute.subnetworks.create",
            "compute.subnetworks.delete",
            "compute.subnetworks.get",
            "compute.subnetworks.list",
            "compute.subnetworks.use",
            "compute.zoneOperations.get",
            "compute.zoneOperations.list",
            "compute.zones.*",
            "deploymentmanager.compositeTypes.get",
            "deploymentmanager.deployments.create",
            "deploymentmanager.deployments.delete",
            "deploymentmanager.deployments.get",
            "deploymentmanager.deployments.list",
            "deploymentmanager.deployments.update",
            "deploymentmanager.manifests.*",
            "deploymentmanager.operations.*",
            "deploymentmanager.typeProviders.create",
            "deploymentmanager.typeProviders.get",
            "logging.logEntries.create",
            "logging.logMetrics.create",
            "logging.logMetrics.delete",
            "logging.logMetrics.get",
            "logging.logMetrics.update",
            "resourcemanager.projects.get"
          ],
          "title": "Serverless VPC Access Service Agent"
        },
        {
          "description": "Gives the Cloud Web Security Scanner service account access to compute engine details and app engine details.",
          "id": "roles/websecurityscanner.serviceAgent",
          "is_beta": false,
          "permissions": [
            "appengine.applications.get",
            "cloudasset.assets.listResource",
            "compute.addresses.list",
            "compute.backendServices.get",
            "compute.forwardingRules.get",
            "compute.globalForwardingRules.get",
            "compute.sslCertificates.list",
            "compute.targetHttpProxies.get",
            "compute.targetHttpsProxies.get",
            "compute.urlMaps.get"
          ],
          "title": "Cloud Web Security Scanner Service Agent"
        },
        {
          "description": "Gives Cloud Workflows service account access to managed resources.",
          "id": "roles/workflows.serviceAgent",
          "is_beta": false,
          "permissions": [
            "container.clusters.connect",
            "iam.serviceAccounts.get",
            "iam.serviceAccounts.getAccessToken",
            "iam.serviceAccounts.getOpenIdToken",
            "serviceusage.services.use"
          ],
          "title": "Cloud Workflows Service Agent"
        },
        {
          "description": "Gives the Workload Certificate service agent access to Cloud Platform resources.",
          "id": "roles/workloadcertificate.serviceAgent",
          "is_beta": false,
          "permissions": [
            "container.clusterRoleBindings.get",
            "container.clusterRoleBindings.list",
            "container.clusters.get",
            "container.clusters.update",
            "container.customResourceDefinitions.create",
            "container.customResourceDefinitions.get",
            "container.customResourceDefinitions.list",
            "container.operations.get",
            "container.thirdPartyObjects.update",
            "gkehub.features.get",
            "gkehub.fleet.create",
            "gkehub.fleet.get",
            "gkehub.locations.*",
            "gkehub.memberships.get",
            "gkehub.memberships.list",
            "gkehub.operations.get",
            "serviceconsumermanagement.tenancyu.addResource",
            "serviceconsumermanagement.tenancyu.create",
            "serviceconsumermanagement.tenancyu.delete",
            "serviceconsumermanagement.tenancyu.removeResource",
            "serviceusage.services.use",
            "workloadcertificate.workloadCertificateFeature.get",
            "workloadcertificate.workloadRegistrations.list"
          ],
          "title": "Workload Certificate Service Agent"
        },
        {
          "description": "Gives Workload Manager Service Agent access to CAI export functions and Cloud Monitoring.",
          "id": "roles/workloadmanager.serviceAgent",
          "is_beta": false,
          "permissions": [
            "cloudasset.assets.exportAccessPolicy",
            "cloudasset.assets.exportIamPolicy",
            "cloudasset.assets.exportOSInventories",
            "cloudasset.assets.exportOrgPolicy",
            "cloudasset.assets.exportResource",
            "cloudasset.assets.listAccessPolicy",
            "cloudasset.assets.listIamPolicy",
            "cloudasset.assets.listOSInventories",
            "cloudasset.assets.listOrgPolicy",
            "cloudasset.assets.listResource",
            "cloudasset.assets.searchAllResources",
            "config.deployments.create",
            "config.deployments.delete",
            "config.deployments.get",
            "config.deployments.list",
            "config.deployments.update",
            "config.locations.*",
            "config.operations.*",
            "config.resources.list",
            "config.revisions.get",
            "config.revisions.list",
            "monitoring.metricDescriptors.get",
            "monitoring.metricDescriptors.list",
            "monitoring.monitoredResourceDescriptors.*",
            "monitoring.timeSeries.list",
            "serviceusage.services.use",
            "workloadmanager.insights.export",
            "workloadmanager.insights.listSapSystems"
          ],
          "title": "Workload Manager Service Agent"
        },
        {
          "description": "Grants the Workstations Service Account access to manage resources in consumer project.",
          "id": "roles/workstations.serviceAgent",
          "is_beta": false,
          "permissions": [
            "compute.addresses.create",
            "compute.addresses.createInternal",
            "compute.addresses.delete",
            "compute.addresses.deleteInternal",
            "compute.addresses.get",
            "compute.addresses.use",
            "compute.disks.create",
            "compute.disks.createSnapshot",
            "compute.disks.createTagBinding",
            "compute.disks.delete",
            "compute.disks.deleteTagBinding",
            "compute.disks.get",
            "compute.disks.list",
            "compute.disks.setLabels",
            "compute.disks.use",
            "compute.disks.useReadOnly",
            "compute.firewalls.create",
            "compute.firewalls.delete",
            "compute.firewalls.get",
            "compute.firewalls.update",
            "compute.forwardingRules.create",
            "compute.forwardingRules.delete",
            "compute.forwardingRules.get",
            "compute.forwardingRules.pscCreate",
            "compute.forwardingRules.pscDelete",
            "compute.globalOperations.get",
            "compute.instances.attachDisk",
            "compute.instances.create",
            "compute.instances.createTagBinding",
            "compute.instances.delete",
            "compute.instances.deleteTagBinding",
            "compute.instances.detachDisk",
            "compute.instances.get",
            "compute.instances.getGuestAttributes",
            "compute.instances.setLabels",
            "compute.instances.setMetadata",
            "compute.instances.setServiceAccount",
            "compute.instances.setTags",
            "compute.networks.addPeering",
            "compute.networks.get",
            "compute.networks.removePeering",
            "compute.networks.updatePolicy",
            "compute.networks.use",
            "compute.networks.useExternalIp",
            "compute.regionOperations.get",
            "compute.regions.get",
            "compute.snapshots.create",
            "compute.snapshots.createTagBinding",
            "compute.snapshots.delete",
            "compute.snapshots.deleteTagBinding",
            "compute.snapshots.get",
            "compute.snapshots.listTagBindings",
            "compute.snapshots.setLabels",
            "compute.snapshots.useReadOnly",
            "compute.subnetworks.get",
            "compute.subnetworks.use",
            "compute.subnetworks.useExternalIp",
            "compute.zoneOperations.get",
            "dns.networks.bindPrivateDNSZone",
            "dns.networks.targetWithPeeringZone",
            "iam.serviceAccounts.actAs",
            "iam.serviceAccounts.get",
            "iam.serviceAccounts.list",
            "resourcemanager.tagValueBindings.*",
            "servicedirectory.namespaces.create",
            "servicedirectory.namespaces.delete",
            "servicedirectory.services.create",
            "servicedirectory.services.delete",
            "serviceusage.services.get"
          ],
          "title": "Workstations Service Agent"
        },
        {
          "description": "Administrate tenancy units",
          "id": "roles/serviceconsumermanagement.tenancyUnitsAdmin",
          "is_beta": true,
          "permissions": [
            "serviceconsumermanagement.tenancyu.*"
          ],
          "title": "Admin of Tenancy Units"
        },
        {
          "description": "View tenancy units",
          "id": "roles/serviceconsumermanagement.tenancyUnitsViewer",
          "is_beta": true,
          "permissions": [
            "serviceconsumermanagement.tenancyu.list"
          ],
          "title": "Viewer of Tenancy Units"
        },
        {
          "description": "Full control of all Service Directory resources and permissions.",
          "id": "roles/servicedirectory.admin",
          "is_beta": false,
          "permissions": [
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "servicedirectory.endpoints.*",
            "servicedirectory.locations.*",
            "servicedirectory.namespaces.*",
            "servicedirectory.networks.attach",
            "servicedirectory.services.*"
          ],
          "title": "Service Directory Admin"
        },
        {
          "description": "Edit Service Directory resources.",
          "id": "roles/servicedirectory.editor",
          "is_beta": false,
          "permissions": [
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "servicedirectory.endpoints.create",
            "servicedirectory.endpoints.delete",
            "servicedirectory.endpoints.get",
            "servicedirectory.endpoints.getIamPolicy",
            "servicedirectory.endpoints.list",
            "servicedirectory.endpoints.update",
            "servicedirectory.locations.*",
            "servicedirectory.namespaces.associatePrivateZone",
            "servicedirectory.namespaces.create",
            "servicedirectory.namespaces.delete",
            "servicedirectory.namespaces.get",
            "servicedirectory.namespaces.getIamPolicy",
            "servicedirectory.namespaces.list",
            "servicedirectory.namespaces.update",
            "servicedirectory.networks.attach",
            "servicedirectory.services.bind",
            "servicedirectory.services.create",
            "servicedirectory.services.delete",
            "servicedirectory.services.get",
            "servicedirectory.services.getIamPolicy",
            "servicedirectory.services.list",
            "servicedirectory.services.resolve",
            "servicedirectory.services.update"
          ],
          "title": "Service Directory Editor"
        },
        {
          "description": "Gives access to attach VPC Networks to Service Directory Endpoints",
          "id": "roles/servicedirectory.networkAttacher",
          "is_beta": false,
          "permissions": [
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "servicedirectory.networks.attach"
          ],
          "title": "Service Directory Network Attacher"
        },
        {
          "description": "Gives access to VPC Networks via Service Directory",
          "id": "roles/servicedirectory.pscAuthorizedService",
          "is_beta": false,
          "permissions": [
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "servicedirectory.networks.access"
          ],
          "title": "Private Service Connect Authorized Service"
        },
        {
          "description": "View Service Directory resources.",
          "id": "roles/servicedirectory.viewer",
          "is_beta": false,
          "permissions": [
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "servicedirectory.endpoints.get",
            "servicedirectory.endpoints.getIamPolicy",
            "servicedirectory.endpoints.list",
            "servicedirectory.locations.*",
            "servicedirectory.namespaces.get",
            "servicedirectory.namespaces.getIamPolicy",
            "servicedirectory.namespaces.list",
            "servicedirectory.services.get",
            "servicedirectory.services.getIamPolicy",
            "servicedirectory.services.list",
            "servicedirectory.services.resolve"
          ],
          "title": "Service Directory Viewer"
        },
        {
          "description": "Gives Cloud Run service account access to managed resources.",
          "id": "roles/serverless.serviceAgent",
          "is_beta": false,
          "permissions": [
            "artifactregistry.attachments.get",
            "artifactregistry.attachments.list",
            "artifactregistry.dockerimages.*",
            "artifactregistry.files.download",
            "artifactregistry.files.get",
            "artifactregistry.files.list",
            "artifactregistry.locations.*",
            "artifactregistry.mavenartifacts.*",
            "artifactregistry.npmpackages.*",
            "artifactregistry.packages.get",
            "artifactregistry.packages.list",
            "artifactregistry.projectsettings.get",
            "artifactregistry.pythonpackages.*",
            "artifactregistry.repositories.downloadArtifacts",
            "artifactregistry.repositories.get",
            "artifactregistry.repositories.list",
            "artifactregistry.repositories.listEffectiveTags",
            "artifactregistry.repositories.listTagBindings",
            "artifactregistry.repositories.readViaVirtualRepository",
            "artifactregistry.rules.get",
            "artifactregistry.rules.list",
            "artifactregistry.tags.get",
            "artifactregistry.tags.list",
            "artifactregistry.versions.get",
            "artifactregistry.versions.list",
            "binaryauthorization.platformPolicies.evaluatePolicy",
            "binaryauthorization.policy.evaluatePolicy",
            "clientauthconfig.clients.list",
            "cloudbuild.builds.create",
            "cloudbuild.builds.get",
            "compute.addresses.create",
            "compute.addresses.createInternal",
            "compute.addresses.delete",
            "compute.addresses.deleteInternal",
            "compute.addresses.get",
            "compute.addresses.list",
            "compute.globalOperations.get",
            "compute.networks.access",
            "compute.networks.get",
            "compute.subnetworks.get",
            "compute.subnetworks.use",
            "iam.serviceAccounts.actAs",
            "iam.serviceAccounts.getAccessToken",
            "iam.serviceAccounts.getOpenIdToken",
            "iam.serviceAccounts.signBlob",
            "pubsub.subscriptions.create",
            "pubsub.subscriptions.delete",
            "pubsub.subscriptions.get",
            "pubsub.subscriptions.list",
            "pubsub.topics.attachSubscription",
            "pubsub.topics.create",
            "pubsub.topics.delete",
            "pubsub.topics.get",
            "pubsub.topics.list",
            "pubsub.topics.publish",
            "resourcemanager.projects.get",
            "resourcemanager.projects.getIamPolicy",
            "resourcemanager.projects.list",
            "run.routes.invoke",
            "serviceusage.services.use",
            "storage.folders.get",
            "storage.folders.list",
            "storage.managedFolders.get",
            "storage.managedFolders.list",
            "storage.objects.get",
            "storage.objects.list",
            "vpcaccess.connectors.get",
            "vpcaccess.connectors.use"
          ],
          "title": "Cloud Run Service Agent"
        },
        {
          "description": "Full control of Google Service Management resources.",
          "id": "roles/servicemanagement.admin",
          "is_beta": false,
          "permissions": [
            "monitoring.timeSeries.list",
            "resourcemanager.folders.get",
            "resourcemanager.folders.list",
            "resourcemanager.organizations.get",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "serviceconsumermanagement.*",
            "servicemanagement.*",
            "serviceusage.quotas.get",
            "serviceusage.services.get"
          ],
          "title": "Service Management Administrator"
        },
        {
          "description": "Access to update the service config and create rollouts.",
          "id": "roles/servicemanagement.configEditor",
          "is_beta": false,
          "permissions": [
            "servicemanagement.services.get",
            "servicemanagement.services.update"
          ],
          "title": "Service Config Editor"
        },
        {
          "description": "Provides access to administer service quotas.",
          "id": "roles/servicemanagement.quotaAdmin",
          "is_beta": true,
          "permissions": [
            "cloudquotas.*",
            "monitoring.alertPolicies.*",
            "monitoring.timeSeries.list",
            "resourcemanager.organizations.get",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "serviceusage.quotas.*",
            "serviceusage.services.disable",
            "serviceusage.services.enable",
            "serviceusage.services.get",
            "serviceusage.services.list"
          ],
          "title": "Quota Administrator"
        },
        {
          "description": "Provides access to view service quotas.",
          "id": "roles/servicemanagement.quotaViewer",
          "is_beta": true,
          "permissions": [
            "cloudquotas.quotas.get",
            "monitoring.timeSeries.list",
            "serviceusage.quotas.get",
            "serviceusage.services.get",
            "serviceusage.services.list"
          ],
          "title": "Quota Viewer"
        },
        {
          "description": "Can report usage of a service during runtime.",
          "id": "roles/servicemanagement.reporter",
          "is_beta": false,
          "permissions": [
            "servicemanagement.services.report"
          ],
          "title": "Service Reporter"
        },
        {
          "description": "Can enable the service.",
          "id": "roles/servicemanagement.serviceConsumer",
          "is_beta": false,
          "permissions": [
            "servicemanagement.services.bind"
          ],
          "title": "Service Consumer"
        },
        {
          "description": "Can check preconditions and report usage of a service during runtime.",
          "id": "roles/servicemanagement.serviceController",
          "is_beta": false,
          "permissions": [
            "servicemanagement.services.check",
            "servicemanagement.services.get",
            "servicemanagement.services.quota",
            "servicemanagement.services.report"
          ],
          "title": "Service Controller"
        },
        {
          "description": "Full control of service networking with projects.",
          "id": "roles/servicenetworking.networksAdmin",
          "is_beta": true,
          "permissions": [
            "servicenetworking.*"
          ],
          "title": "Service Networking Admin"
        },
        {
          "description": "Ability to create, delete, update, get and list API keys for a project.",
          "id": "roles/serviceusage.apiKeysAdmin",
          "is_beta": false,
          "permissions": [
            "apikeys.*",
            "orgpolicy.policy.get",
            "serviceusage.apiKeys.*"
          ],
          "title": "API Keys Admin"
        },
        {
          "description": "Ability to get and list API keys for a project.",
          "id": "roles/serviceusage.apiKeysViewer",
          "is_beta": false,
          "permissions": [
            "apikeys.keys.get",
            "apikeys.keys.getKeyString",
            "apikeys.keys.list",
            "apikeys.keys.lookup"
          ],
          "title": "API Keys Viewer"
        },
        {
          "description": "Ability to enable, disable, and inspect service states, inspect operations, and consume quota and billing for a consumer project.",
          "id": "roles/serviceusage.serviceUsageAdmin",
          "is_beta": false,
          "permissions": [
            "monitoring.timeSeries.list",
            "serviceusage.quotas.*",
            "serviceusage.services.*"
          ],
          "title": "Service Usage Admin"
        },
        {
          "description": "Ability to inspect service states and operations, and consume quota and billing for a consumer project.",
          "id": "roles/serviceusage.serviceUsageConsumer",
          "is_beta": false,
          "permissions": [
            "monitoring.timeSeries.list",
            "serviceusage.quotas.get",
            "serviceusage.services.get",
            "serviceusage.services.list",
            "serviceusage.services.use"
          ],
          "title": "Service Usage Consumer"
        },
        {
          "description": "Ability to inspect service states and operations for a consumer project.",
          "id": "roles/serviceusage.serviceUsageViewer",
          "is_beta": false,
          "permissions": [
            "monitoring.timeSeries.list",
            "serviceusage.quotas.get",
            "serviceusage.services.get",
            "serviceusage.services.list"
          ],
          "title": "Service Usage Viewer"
        },
        {
          "description": "Provides permissions to create, update, delete, list, clone, fetch, and browse repositories. Also provides permissions to read and change IAM policies.",
          "id": "roles/source.admin",
          "is_beta": false,
          "permissions": [
            "source.*"
          ],
          "title": "Source Repository Administrator"
        },
        {
          "description": "Provides permissions to list, clone, fetch, and browse repositories.",
          "id": "roles/source.reader",
          "is_beta": false,
          "permissions": [
            "source.repos.get",
            "source.repos.list"
          ],
          "title": "Source Repository Reader"
        },
        {
          "description": "Provides permissions to list, clone, fetch, browse, and update repositories.",
          "id": "roles/source.writer",
          "is_beta": false,
          "permissions": [
            "source.repos.get",
            "source.repos.list",
            "source.repos.update"
          ],
          "title": "Source Repository Writer"
        },
        {
          "description": "Read/write access to manage Stackdriver account structure.",
          "id": "roles/stackdriver.accounts.editor",
          "is_beta": false,
          "permissions": [
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "serviceusage.services.enable",
            "serviceusage.services.get",
            "stackdriver.projects.*"
          ],
          "title": "Stackdriver Accounts Editor"
        },
        {
          "description": "Read-only access to get and list information about Stackdriver account structure.",
          "id": "roles/stackdriver.accounts.viewer",
          "is_beta": false,
          "permissions": [
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "stackdriver.projects.get"
          ],
          "title": "Stackdriver Accounts Viewer"
        },
        {
          "description": "Write-only access to resource metadata.  This provides exactly the permissions needed by the Stackdriver metadata agent and other systems that send metadata.",
          "id": "roles/stackdriver.resourceMetadata.writer",
          "is_beta": true,
          "permissions": [
            "stackdriver.resourceMetadata.write"
          ],
          "title": "Stackdriver Resource Metadata Writer"
        },
        {
          "description": "Full access to Stream all resources.",
          "id": "roles/stream.admin",
          "is_beta": false,
          "permissions": [
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "stream.*"
          ],
          "title": "Stream Admin"
        },
        {
          "description": "Full access to all StreamContent resources.",
          "id": "roles/stream.contentAdmin",
          "is_beta": false,
          "permissions": [
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "stream.streamContents.*"
          ],
          "title": "Stream Content Admin"
        },
        {
          "description": "Read and build access to StreamContent resources.",
          "id": "roles/stream.contentBuilder",
          "is_beta": false,
          "permissions": [
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "stream.streamContents.build",
            "stream.streamContents.get",
            "stream.streamContents.list"
          ],
          "title": "Stream Content Builder"
        },
        {
          "description": "Full access to all StreamInstance resources and Read access to all StreamContent resources.",
          "id": "roles/stream.instanceAdmin",
          "is_beta": false,
          "permissions": [
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "stream.streamContents.get",
            "stream.streamContents.list",
            "stream.streamInstances.*"
          ],
          "title": "Stream Instance Admin"
        },
        {
          "description": "Read-only access to Stream all resources.",
          "id": "roles/stream.viewer",
          "is_beta": false,
          "permissions": [
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "stream.locations.*",
            "stream.operations.get",
            "stream.operations.list",
            "stream.streamContents.get",
            "stream.streamContents.list",
            "stream.streamInstances.get",
            "stream.streamInstances.list"
          ],
          "title": "Stream Viewer"
        },
        {
          "description": "Allows management of a support account without giving access to support cases. See the Cloud Support documentation for more information.",
          "id": "roles/cloudsupport.admin",
          "is_beta": false,
          "permissions": [
            "cloudsupport.accounts.*",
            "cloudsupport.operations.get",
            "cloudsupport.properties.get",
            "resourcemanager.organizations.get"
          ],
          "title": "Support Account Administrator"
        },
        {
          "description": "Full read-write access to technical support cases (applicable for GCP Customer Care and Maps support). See the Cloud Support documentation for more information.",
          "id": "roles/cloudsupport.techSupportEditor",
          "is_beta": false,
          "permissions": [
            "billing.resourceAssociations.list",
            "cloudasset.assets.searchAllResources",
            "cloudsupport.properties.get",
            "cloudsupport.techCases.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Tech Support Editor"
        },
        {
          "description": "Read-only access to technical support cases (applicable for GCP Customer Care and Maps support). See the Cloud Support documentation for more information.",
          "id": "roles/cloudsupport.techSupportViewer",
          "is_beta": false,
          "permissions": [
            "cloudsupport.properties.get",
            "cloudsupport.techCases.get",
            "cloudsupport.techCases.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Tech Support Viewer"
        },
        {
          "description": "Read-only access to details of a support account. This does not allow viewing cases. See the Cloud Support documentation for more information.",
          "id": "roles/cloudsupport.viewer",
          "is_beta": false,
          "permissions": [
            "cloudsupport.accounts.get",
            "cloudsupport.accounts.getUserRoles",
            "cloudsupport.accounts.list",
            "cloudsupport.properties.get"
          ],
          "title": "Support Account Viewer"
        },
        {
          "description": "Access to write metrics.",
          "id": "roles/telemetry.metricsWriter",
          "is_beta": false,
          "permissions": [
            "telemetry.metrics.write"
          ],
          "title": "Cloud Telemetry Metrics Writer"
        },
        {
          "description": "Access to write trace spans.",
          "id": "roles/telemetry.tracesWriter",
          "is_beta": false,
          "permissions": [
            "telemetry.traces.write"
          ],
          "title": "Cloud Telemetry Traces Writer"
        },
        {
          "description": "Full access to write all telemetry data.",
          "id": "roles/telemetry.writer",
          "is_beta": false,
          "permissions": [
            "telemetry.*"
          ],
          "title": "Cloud Telemetry Writer"
        },
        {
          "description": "This role is managed by Dell EMC, not Google.",
          "id": "roles/dellemccloudonefs.admin",
          "is_beta": true,
          "permissions": [
            "cloudonefs.isiloncloud.com/*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Dell EMC Cloud OneFS Admin"
        },
        {
          "description": "This role is managed by Dell EMC, not Google.",
          "id": "roles/dellemccloudonefs.user",
          "is_beta": true,
          "permissions": [
            "cloudonefs.isiloncloud.com/clusters.create",
            "cloudonefs.isiloncloud.com/clusters.delete",
            "cloudonefs.isiloncloud.com/clusters.get",
            "cloudonefs.isiloncloud.com/clusters.list",
            "cloudonefs.isiloncloud.com/clusters.update",
            "cloudonefs.isiloncloud.com/fileshares.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Dell EMC Cloud OneFS User"
        },
        {
          "description": "This role is managed by Dell EMC, not Google.",
          "id": "roles/dellemccloudonefs.viewer",
          "is_beta": true,
          "permissions": [
            "cloudonefs.isiloncloud.com/clusters.get",
            "cloudonefs.isiloncloud.com/clusters.list",
            "cloudonefs.isiloncloud.com/fileshares.get",
            "cloudonefs.isiloncloud.com/fileshares.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Dell EMC Cloud OneFS Viewer"
        },
        {
          "description": "This role is managed by NetApp, not Google.",
          "id": "roles/netappcloudvolumes.admin",
          "is_beta": true,
          "permissions": [
            "cloudvolumesgcp-api.netapp.com/*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "NetApp Cloud Volumes Admin"
        },
        {
          "description": "This role is managed by NetApp, not Google.",
          "id": "roles/netappcloudvolumes.viewer",
          "is_beta": true,
          "permissions": [
            "cloudvolumesgcp-api.netapp.com/activeDirectories.get",
            "cloudvolumesgcp-api.netapp.com/activeDirectories.list",
            "cloudvolumesgcp-api.netapp.com/ipRanges.list",
            "cloudvolumesgcp-api.netapp.com/jobs.*",
            "cloudvolumesgcp-api.netapp.com/regions.list",
            "cloudvolumesgcp-api.netapp.com/serviceLevels.list",
            "cloudvolumesgcp-api.netapp.com/snapshots.get",
            "cloudvolumesgcp-api.netapp.com/snapshots.list",
            "cloudvolumesgcp-api.netapp.com/volumes.get",
            "cloudvolumesgcp-api.netapp.com/volumes.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "NetApp Cloud Volumes Viewer"
        },
        {
          "description": "This role is managed by Redis Labs, not Google.",
          "id": "roles/redisenterprisecloud.admin",
          "is_beta": true,
          "permissions": [
            "gcp.redisenterprise.com/*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Redis Enterprise Cloud Admin"
        },
        {
          "description": "This role is managed by Redis Labs, not Google.",
          "id": "roles/redisenterprisecloud.viewer",
          "is_beta": true,
          "permissions": [
            "gcp.redisenterprise.com/databases.get",
            "gcp.redisenterprise.com/databases.list",
            "gcp.redisenterprise.com/subscriptions.get",
            "gcp.redisenterprise.com/subscriptions.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Redis Enterprise Cloud Viewer"
        },
        {
          "description": "Full access to all transcoder resources.",
          "id": "roles/transcoder.admin",
          "is_beta": false,
          "permissions": [
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "transcoder.*"
          ],
          "title": "Transcoder Admin"
        },
        {
          "description": "Viewer of all transcoder resources.",
          "id": "roles/transcoder.viewer",
          "is_beta": false,
          "permissions": [
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "transcoder.jobTemplates.get",
            "transcoder.jobTemplates.list",
            "transcoder.jobTemplates.listEffectiveTags",
            "transcoder.jobTemplates.listTagBindings",
            "transcoder.jobs.get",
            "transcoder.jobs.list",
            "transcoder.jobs.listEffectiveTags",
            "transcoder.jobs.listTagBindings"
          ],
          "title": "Transcoder Viewer"
        },
        {
          "description": "Full access to Transfer Appliance all resources.",
          "id": "roles/transferappliance.admin",
          "is_beta": true,
          "permissions": [
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "transferappliance.*"
          ],
          "title": "Transfer Appliance Admin"
        },
        {
          "description": "Read-only access to Transfer Appliance all resources.",
          "id": "roles/transferappliance.viewer",
          "is_beta": true,
          "permissions": [
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "transferappliance.appliances.get",
            "transferappliance.appliances.list",
            "transferappliance.locations.*",
            "transferappliance.operations.get",
            "transferappliance.operations.list",
            "transferappliance.orders.get",
            "transferappliance.orders.list",
            "transferappliance.savedAddresses.get",
            "transferappliance.savedAddresses.list"
          ],
          "title": "Transfer Appliance Viewer"
        },
        {
          "description": "Grants full access to all resources in Vertex AI",
          "id": "roles/aiplatform.admin",
          "is_beta": false,
          "permissions": [
            "aiplatform.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Vertex AI Administrator"
        },
        {
          "description": "Admin role of using colab enterprise.",
          "id": "roles/aiplatform.colabEnterpriseAdmin",
          "is_beta": false,
          "permissions": [
            "aiplatform.notebookExecutionJobs.*",
            "aiplatform.notebookRuntimeTemplates.*",
            "aiplatform.notebookRuntimes.*",
            "aiplatform.operations.list",
            "aiplatform.pipelineJobs.create",
            "aiplatform.schedules.*",
            "compute.reservations.get",
            "compute.reservations.list",
            "dataform.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Colab Enterprise Admin"
        },
        {
          "description": "User role of using colab enterprise.",
          "id": "roles/aiplatform.colabEnterpriseUser",
          "is_beta": false,
          "permissions": [
            "aiplatform.notebookExecutionJobs.*",
            "aiplatform.notebookRuntimeTemplates.apply",
            "aiplatform.notebookRuntimeTemplates.get",
            "aiplatform.notebookRuntimeTemplates.getIamPolicy",
            "aiplatform.notebookRuntimeTemplates.list",
            "aiplatform.notebookRuntimes.assign",
            "aiplatform.notebookRuntimes.get",
            "aiplatform.notebookRuntimes.list",
            "aiplatform.operations.list",
            "aiplatform.pipelineJobs.create",
            "aiplatform.schedules.*",
            "dataform.commentThreads.get",
            "dataform.commentThreads.list",
            "dataform.comments.get",
            "dataform.comments.list",
            "dataform.locations.*",
            "dataform.repositories.create",
            "dataform.repositories.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Colab Enterprise User"
        },
        {
          "description": "Provides full access to all permissions for a particular entity type resource.",
          "id": "roles/aiplatform.entityTypeOwner",
          "is_beta": false,
          "permissions": [
            "aiplatform.entityTypes.delete",
            "aiplatform.entityTypes.deleteFeatureValues",
            "aiplatform.entityTypes.exportFeatureValues",
            "aiplatform.entityTypes.get",
            "aiplatform.entityTypes.getIamPolicy",
            "aiplatform.entityTypes.importFeatureValues",
            "aiplatform.entityTypes.readFeatureValues",
            "aiplatform.entityTypes.setIamPolicy",
            "aiplatform.entityTypes.streamingReadFeatureValues",
            "aiplatform.entityTypes.update",
            "aiplatform.entityTypes.writeFeatureValues",
            "aiplatform.featureGroups.get",
            "aiplatform.featureGroups.list",
            "aiplatform.featureOnlineStores.get",
            "aiplatform.featureOnlineStores.list",
            "aiplatform.featureViewSyncs.*",
            "aiplatform.featureViews.fetchFeatureValues",
            "aiplatform.featureViews.get",
            "aiplatform.featureViews.list",
            "aiplatform.featureViews.searchNearestEntities",
            "aiplatform.features.*",
            "aiplatform.featurestores.batchReadFeatureValues",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Vertex AI Feature Store EntityType owner"
        },
        {
          "description": "Grants admin access to Vertex AI Express",
          "id": "roles/aiplatform.expressAdmin",
          "is_beta": true,
          "permissions": [
            "aiplatform.datasetVersions.*",
            "aiplatform.datasets.create",
            "aiplatform.datasets.delete",
            "aiplatform.datasets.get",
            "aiplatform.datasets.list",
            "aiplatform.datasets.update",
            "aiplatform.endpoints.predict",
            "aiplatform.locations.evaluateInstances"
          ],
          "title": "Vertex AI Platform Express Admin"
        },
        {
          "description": "Grants user access to Vertex AI Express",
          "id": "roles/aiplatform.expressUser",
          "is_beta": true,
          "permissions": [
            "aiplatform.endpoints.predict"
          ],
          "title": "Vertex AI Platform Express User"
        },
        {
          "description": "Grants full access to all resources in Vertex AI Feature Store",
          "id": "roles/aiplatform.featurestoreAdmin",
          "is_beta": false,
          "permissions": [
            "aiplatform.entityTypes.*",
            "aiplatform.featureGroups.*",
            "aiplatform.featureOnlineStores.*",
            "aiplatform.featureViewSyncs.*",
            "aiplatform.featureViews.*",
            "aiplatform.features.*",
            "aiplatform.featurestores.*",
            "aiplatform.operations.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Vertex AI Feature Store Admin"
        },
        {
          "description": "This role provides permissions to read Feature data.",
          "id": "roles/aiplatform.featurestoreDataViewer",
          "is_beta": false,
          "permissions": [
            "aiplatform.entityTypes.exportFeatureValues",
            "aiplatform.entityTypes.get",
            "aiplatform.entityTypes.readFeatureValues",
            "aiplatform.entityTypes.streamingReadFeatureValues",
            "aiplatform.featureGroups.get",
            "aiplatform.featureGroups.list",
            "aiplatform.featureOnlineStores.get",
            "aiplatform.featureOnlineStores.list",
            "aiplatform.featureViewSyncs.*",
            "aiplatform.featureViews.fetchFeatureValues",
            "aiplatform.featureViews.get",
            "aiplatform.featureViews.list",
            "aiplatform.featureViews.searchNearestEntities",
            "aiplatform.features.get",
            "aiplatform.features.list",
            "aiplatform.featurestores.batchReadFeatureValues",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Vertex AI Feature Store Data Viewer"
        },
        {
          "description": "This role provides permissions to read and write Feature data.",
          "id": "roles/aiplatform.featurestoreDataWriter",
          "is_beta": false,
          "permissions": [
            "aiplatform.entityTypes.deleteFeatureValues",
            "aiplatform.entityTypes.exportFeatureValues",
            "aiplatform.entityTypes.get",
            "aiplatform.entityTypes.importFeatureValues",
            "aiplatform.entityTypes.readFeatureValues",
            "aiplatform.entityTypes.streamingReadFeatureValues",
            "aiplatform.entityTypes.writeFeatureValues",
            "aiplatform.featureGroups.get",
            "aiplatform.featureGroups.list",
            "aiplatform.featureOnlineStores.get",
            "aiplatform.featureOnlineStores.list",
            "aiplatform.featureViewSyncs.*",
            "aiplatform.featureViews.fetchFeatureValues",
            "aiplatform.featureViews.get",
            "aiplatform.featureViews.list",
            "aiplatform.featureViews.searchNearestEntities",
            "aiplatform.features.get",
            "aiplatform.features.list",
            "aiplatform.featurestores.batchReadFeatureValues",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Vertex AI Feature Store Data Writer"
        },
        {
          "description": "Administrator of Featurestore resources, but not the child resources under Featurestores.",
          "id": "roles/aiplatform.featurestoreInstanceCreator",
          "is_beta": false,
          "permissions": [
            "aiplatform.featurestores.create",
            "aiplatform.featurestores.delete",
            "aiplatform.featurestores.get",
            "aiplatform.featurestores.list",
            "aiplatform.featurestores.update"
          ],
          "title": "Vertex AI Feature Store Instance Creator"
        },
        {
          "description": "Viewer of all resources in Vertex AI Feature Store but cannot make changes.",
          "id": "roles/aiplatform.featurestoreResourceViewer",
          "is_beta": false,
          "permissions": [
            "aiplatform.entityTypes.get",
            "aiplatform.entityTypes.list",
            "aiplatform.featureGroups.get",
            "aiplatform.featureGroups.list",
            "aiplatform.featureOnlineStores.get",
            "aiplatform.featureOnlineStores.list",
            "aiplatform.featureViewSyncs.*",
            "aiplatform.featureViews.get",
            "aiplatform.featureViews.list",
            "aiplatform.features.get",
            "aiplatform.features.list",
            "aiplatform.featurestores.get",
            "aiplatform.featurestores.list",
            "aiplatform.operations.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Vertex AI Feature Store Resource Viewer"
        },
        {
          "description": "Deprecated. Use featurestoreAdmin instead.",
          "id": "roles/aiplatform.featurestoreUser",
          "is_beta": true,
          "permissions": [
            "aiplatform.entityTypes.*",
            "aiplatform.features.*",
            "aiplatform.featurestores.*",
            "aiplatform.operations.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Vertex AI Feature Store User"
        },
        {
          "description": "Grants access to use migration service in Vertex AI",
          "id": "roles/aiplatform.migrator",
          "is_beta": false,
          "permissions": [
            "aiplatform.migratableResources.*"
          ],
          "title": "Vertex AI Migration Service User"
        },
        {
          "description": "Grants users full access to schedules and notebook execution jobs.",
          "id": "roles/aiplatform.notebookExecutorUser",
          "is_beta": true,
          "permissions": [
            "aiplatform.notebookExecutionJobs.*",
            "aiplatform.operations.list",
            "aiplatform.pipelineJobs.create",
            "aiplatform.schedules.*"
          ],
          "title": "Notebook Executor User"
        },
        {
          "description": "Grants full access to all runtime templates and runtimes in Notebook Service.",
          "id": "roles/aiplatform.notebookRuntimeAdmin",
          "is_beta": false,
          "permissions": [
            "aiplatform.notebookRuntimeTemplates.*",
            "aiplatform.notebookRuntimes.*",
            "aiplatform.operations.list",
            "compute.reservations.get",
            "compute.reservations.list"
          ],
          "title": "Notebook Runtime Admin"
        },
        {
          "description": "Grants users permissions to create runtime resources using a runtime template and manage the runtime resources they created.",
          "id": "roles/aiplatform.notebookRuntimeUser",
          "is_beta": false,
          "permissions": [
            "aiplatform.notebookRuntimeTemplates.apply",
            "aiplatform.notebookRuntimeTemplates.get",
            "aiplatform.notebookRuntimeTemplates.getIamPolicy",
            "aiplatform.notebookRuntimeTemplates.list",
            "aiplatform.notebookRuntimes.assign",
            "aiplatform.notebookRuntimes.get",
            "aiplatform.notebookRuntimes.list",
            "aiplatform.operations.list"
          ],
          "title": "Notebook Runtime User"
        },
        {
          "description": "Grants access to use all resources related to Vertex AI Provisioned Throughput",
          "id": "roles/aiplatform.provisionedThroughputAdmin",
          "is_beta": true,
          "permissions": [
            "aiplatform.provisionedThroughputRevisions.*",
            "aiplatform.provisionedThroughputs.*"
          ],
          "title": "Vertex AI Platform Provisioned Throughput Admin"
        },
        {
          "description": "Grants access to the Vertex AI TensorBoard web app.",
          "id": "roles/aiplatform.tensorboardWebAppUser",
          "is_beta": true,
          "permissions": [
            "aiplatform.tensorboards.recordAccess"
          ],
          "title": "Vertex AI Tensorboard Web App User"
        },
        {
          "description": "Grants access to use all resource in Vertex AI",
          "id": "roles/aiplatform.user",
          "is_beta": false,
          "permissions": [
            "aiplatform.agentExamples.*",
            "aiplatform.agents.*",
            "aiplatform.annotationSpecs.*",
            "aiplatform.annotations.*",
            "aiplatform.apps.*",
            "aiplatform.artifacts.*",
            "aiplatform.batchPredictionJobs.*",
            "aiplatform.cacheConfigs.get",
            "aiplatform.cachedContents.*",
            "aiplatform.consents.get",
            "aiplatform.contexts.*",
            "aiplatform.customJobs.*",
            "aiplatform.dataItems.*",
            "aiplatform.dataLabelingJobs.*",
            "aiplatform.datasetVersions.*",
            "aiplatform.datasets.*",
            "aiplatform.deploymentResourcePools.*",
            "aiplatform.edgeDeploymentJobs.*",
            "aiplatform.edgeDeviceDebugInfo.get",
            "aiplatform.edgeDevices.*",
            "aiplatform.endpoints.create",
            "aiplatform.endpoints.delete",
            "aiplatform.endpoints.deploy",
            "aiplatform.endpoints.explain",
            "aiplatform.endpoints.get",
            "aiplatform.endpoints.list",
            "aiplatform.endpoints.predict",
            "aiplatform.endpoints.undeploy",
            "aiplatform.endpoints.update",
            "aiplatform.entityTypes.create",
            "aiplatform.entityTypes.delete",
            "aiplatform.entityTypes.deleteFeatureValues",
            "aiplatform.entityTypes.exportFeatureValues",
            "aiplatform.entityTypes.get",
            "aiplatform.entityTypes.importFeatureValues",
            "aiplatform.entityTypes.list",
            "aiplatform.entityTypes.readFeatureValues",
            "aiplatform.entityTypes.streamingReadFeatureValues",
            "aiplatform.entityTypes.update",
            "aiplatform.entityTypes.writeFeatureValues",
            "aiplatform.executions.*",
            "aiplatform.extensions.*",
            "aiplatform.featureGroups.create",
            "aiplatform.featureGroups.delete",
            "aiplatform.featureGroups.get",
            "aiplatform.featureGroups.list",
            "aiplatform.featureGroups.update",
            "aiplatform.featureOnlineStores.create",
            "aiplatform.featureOnlineStores.delete",
            "aiplatform.featureOnlineStores.get",
            "aiplatform.featureOnlineStores.list",
            "aiplatform.featureOnlineStores.update",
            "aiplatform.featureViewSyncs.*",
            "aiplatform.featureViews.create",
            "aiplatform.featureViews.delete",
            "aiplatform.featureViews.fetchFeatureValues",
            "aiplatform.featureViews.get",
            "aiplatform.featureViews.list",
            "aiplatform.featureViews.searchNearestEntities",
            "aiplatform.featureViews.sync",
            "aiplatform.featureViews.update",
            "aiplatform.features.*",
            "aiplatform.featurestores.batchReadFeatureValues",
            "aiplatform.featurestores.create",
            "aiplatform.featurestores.delete",
            "aiplatform.featurestores.exportFeatures",
            "aiplatform.featurestores.get",
            "aiplatform.featurestores.importFeatures",
            "aiplatform.featurestores.list",
            "aiplatform.featurestores.readFeatures",
            "aiplatform.featurestores.update",
            "aiplatform.featurestores.writeFeatures",
            "aiplatform.humanInTheLoops.*",
            "aiplatform.hyperparameterTuningJobs.*",
            "aiplatform.indexEndpoints.*",
            "aiplatform.indexes.*",
            "aiplatform.locations.*",
            "aiplatform.metadataSchemas.*",
            "aiplatform.metadataStores.*",
            "aiplatform.modelDeploymentMonitoringJobs.*",
            "aiplatform.modelEvaluationSlices.*",
            "aiplatform.modelEvaluations.*",
            "aiplatform.modelMonitoringJobs.*",
            "aiplatform.modelMonitors.*",
            "aiplatform.models.*",
            "aiplatform.nasJobs.*",
            "aiplatform.nasTrialDetails.*",
            "aiplatform.notebookExecutionJobs.*",
            "aiplatform.notebookRuntimeTemplates.apply",
            "aiplatform.notebookRuntimeTemplates.create",
            "aiplatform.notebookRuntimeTemplates.delete",
            "aiplatform.notebookRuntimeTemplates.get",
            "aiplatform.notebookRuntimeTemplates.list",
            "aiplatform.notebookRuntimeTemplates.update",
            "aiplatform.notebookRuntimes.*",
            "aiplatform.operations.list",
            "aiplatform.persistentResources.get",
            "aiplatform.persistentResources.list",
            "aiplatform.pipelineJobs.*",
            "aiplatform.provisionedThroughputRevisions.*",
            "aiplatform.provisionedThroughputs.get",
            "aiplatform.provisionedThroughputs.list",
            "aiplatform.ragCorpora.*",
            "aiplatform.ragFiles.*",
            "aiplatform.reasoningEngines.*",
            "aiplatform.schedules.*",
            "aiplatform.sessions.*",
            "aiplatform.specialistPools.*",
            "aiplatform.studies.*",
            "aiplatform.tensorboardExperiments.*",
            "aiplatform.tensorboardRuns.*",
            "aiplatform.tensorboardTimeSeries.*",
            "aiplatform.tensorboards.create",
            "aiplatform.tensorboards.delete",
            "aiplatform.tensorboards.get",
            "aiplatform.tensorboards.list",
            "aiplatform.tensorboards.update",
            "aiplatform.trainingPipelines.*",
            "aiplatform.trials.*",
            "aiplatform.tuningJobs.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Vertex AI User"
        },
        {
          "description": "Grants access to view all resource in Vertex AI",
          "id": "roles/aiplatform.viewer",
          "is_beta": false,
          "permissions": [
            "aiplatform.agentExamples.get",
            "aiplatform.agentExamples.list",
            "aiplatform.agents.get",
            "aiplatform.agents.list",
            "aiplatform.annotationSpecs.get",
            "aiplatform.annotationSpecs.list",
            "aiplatform.annotations.get",
            "aiplatform.annotations.list",
            "aiplatform.apps.get",
            "aiplatform.apps.list",
            "aiplatform.artifacts.get",
            "aiplatform.artifacts.list",
            "aiplatform.batchPredictionJobs.get",
            "aiplatform.batchPredictionJobs.list",
            "aiplatform.cacheConfigs.get",
            "aiplatform.cachedContents.get",
            "aiplatform.cachedContents.list",
            "aiplatform.consents.get",
            "aiplatform.contexts.get",
            "aiplatform.contexts.list",
            "aiplatform.contexts.queryContextLineageSubgraph",
            "aiplatform.customJobs.get",
            "aiplatform.customJobs.list",
            "aiplatform.dataItems.get",
            "aiplatform.dataItems.list",
            "aiplatform.dataLabelingJobs.get",
            "aiplatform.dataLabelingJobs.list",
            "aiplatform.datasetVersions.get",
            "aiplatform.datasetVersions.list",
            "aiplatform.datasets.get",
            "aiplatform.datasets.list",
            "aiplatform.deploymentResourcePools.get",
            "aiplatform.deploymentResourcePools.list",
            "aiplatform.deploymentResourcePools.queryDeployedModels",
            "aiplatform.edgeDeploymentJobs.get",
            "aiplatform.edgeDeploymentJobs.list",
            "aiplatform.edgeDeviceDebugInfo.get",
            "aiplatform.edgeDevices.get",
            "aiplatform.edgeDevices.list",
            "aiplatform.endpoints.get",
            "aiplatform.endpoints.list",
            "aiplatform.entityTypes.get",
            "aiplatform.entityTypes.list",
            "aiplatform.executions.get",
            "aiplatform.executions.list",
            "aiplatform.executions.queryExecutionInputsAndOutputs",
            "aiplatform.extensions.get",
            "aiplatform.extensions.list",
            "aiplatform.featureGroups.get",
            "aiplatform.featureGroups.list",
            "aiplatform.featureOnlineStores.get",
            "aiplatform.featureOnlineStores.list",
            "aiplatform.featureViewSyncs.*",
            "aiplatform.featureViews.fetchFeatureValues",
            "aiplatform.featureViews.get",
            "aiplatform.featureViews.list",
            "aiplatform.featureViews.searchNearestEntities",
            "aiplatform.features.get",
            "aiplatform.features.list",
            "aiplatform.featurestores.get",
            "aiplatform.featurestores.list",
            "aiplatform.humanInTheLoops.get",
            "aiplatform.humanInTheLoops.list",
            "aiplatform.hyperparameterTuningJobs.get",
            "aiplatform.hyperparameterTuningJobs.list",
            "aiplatform.indexEndpoints.get",
            "aiplatform.indexEndpoints.list",
            "aiplatform.indexEndpoints.queryVectors",
            "aiplatform.indexes.get",
            "aiplatform.indexes.list",
            "aiplatform.locations.get",
            "aiplatform.locations.list",
            "aiplatform.metadataSchemas.get",
            "aiplatform.metadataSchemas.list",
            "aiplatform.metadataStores.get",
            "aiplatform.metadataStores.list",
            "aiplatform.modelDeploymentMonitoringJobs.get",
            "aiplatform.modelDeploymentMonitoringJobs.list",
            "aiplatform.modelDeploymentMonitoringJobs.searchStatsAnomalies",
            "aiplatform.modelEvaluationSlices.get",
            "aiplatform.modelEvaluationSlices.list",
            "aiplatform.modelEvaluations.get",
            "aiplatform.modelEvaluations.list",
            "aiplatform.modelMonitoringJobs.get",
            "aiplatform.modelMonitoringJobs.list",
            "aiplatform.modelMonitors.get",
            "aiplatform.modelMonitors.list",
            "aiplatform.modelMonitors.searchModelMonitoringAlerts",
            "aiplatform.modelMonitors.searchModelMonitoringStats",
            "aiplatform.models.get",
            "aiplatform.models.list",
            "aiplatform.nasJobs.get",
            "aiplatform.nasJobs.list",
            "aiplatform.nasTrialDetails.*",
            "aiplatform.notebookExecutionJobs.get",
            "aiplatform.notebookExecutionJobs.list",
            "aiplatform.notebookRuntimeTemplates.get",
            "aiplatform.notebookRuntimeTemplates.list",
            "aiplatform.notebookRuntimes.get",
            "aiplatform.notebookRuntimes.list",
            "aiplatform.operations.list",
            "aiplatform.persistentResources.get",
            "aiplatform.persistentResources.list",
            "aiplatform.pipelineJobs.get",
            "aiplatform.pipelineJobs.list",
            "aiplatform.provisionedThroughputRevisions.*",
            "aiplatform.provisionedThroughputs.get",
            "aiplatform.provisionedThroughputs.list",
            "aiplatform.ragCorpora.get",
            "aiplatform.ragCorpora.list",
            "aiplatform.ragCorpora.query",
            "aiplatform.ragFiles.get",
            "aiplatform.ragFiles.list",
            "aiplatform.reasoningEngines.get",
            "aiplatform.reasoningEngines.list",
            "aiplatform.reasoningEngines.query",
            "aiplatform.schedules.get",
            "aiplatform.schedules.list",
            "aiplatform.sessions.get",
            "aiplatform.sessions.list",
            "aiplatform.specialistPools.get",
            "aiplatform.specialistPools.list",
            "aiplatform.specialistPools.update",
            "aiplatform.studies.get",
            "aiplatform.studies.list",
            "aiplatform.tensorboardExperiments.get",
            "aiplatform.tensorboardExperiments.list",
            "aiplatform.tensorboardRuns.get",
            "aiplatform.tensorboardRuns.list",
            "aiplatform.tensorboardTimeSeries.batchRead",
            "aiplatform.tensorboardTimeSeries.get",
            "aiplatform.tensorboardTimeSeries.list",
            "aiplatform.tensorboardTimeSeries.read",
            "aiplatform.tensorboards.get",
            "aiplatform.tensorboards.list",
            "aiplatform.trainingPipelines.get",
            "aiplatform.trainingPipelines.list",
            "aiplatform.trials.get",
            "aiplatform.trials.list",
            "aiplatform.tuningJobs.get",
            "aiplatform.tuningJobs.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "Vertex AI Viewer"
        },
        {
          "description": "Full access to all video stitcher resources.",
          "id": "roles/videostitcher.admin",
          "is_beta": false,
          "permissions": [
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "videostitcher.*"
          ],
          "title": "Video Stitcher Admin"
        },
        {
          "description": "Full access to video stitcher sessions.",
          "id": "roles/videostitcher.user",
          "is_beta": false,
          "permissions": [
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "videostitcher.liveSessions.*",
            "videostitcher.vodSessions.*"
          ],
          "title": "Video Stitcher User"
        },
        {
          "description": "Read-only access to video stitcher resources.",
          "id": "roles/videostitcher.viewer",
          "is_beta": false,
          "permissions": [
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "videostitcher.cdnKeys.get",
            "videostitcher.cdnKeys.list",
            "videostitcher.liveAdTagDetails.*",
            "videostitcher.liveConfigs.get",
            "videostitcher.liveConfigs.list",
            "videostitcher.liveSessions.get",
            "videostitcher.operations.get",
            "videostitcher.operations.list",
            "videostitcher.slates.get",
            "videostitcher.slates.list",
            "videostitcher.vodAdTagDetails.*",
            "videostitcher.vodConfigs.get",
            "videostitcher.vodConfigs.list",
            "videostitcher.vodSessions.get",
            "videostitcher.vodStitchDetails.*"
          ],
          "title": "Video Stitcher Viewer"
        },
        {
          "description": "Full access to Vision AI all resources.",
          "id": "roles/visionai.admin",
          "is_beta": true,
          "permissions": [
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "visionai.*"
          ],
          "title": "VisionAI Admin"
        },
        {
          "description": "Access to read and write Vision AI Analyses.",
          "id": "roles/visionai.analysisEditor",
          "is_beta": true,
          "permissions": [
            "visionai.analyses.create",
            "visionai.analyses.delete",
            "visionai.analyses.get",
            "visionai.analyses.list",
            "visionai.analyses.update"
          ],
          "title": "Vision AI Analysis Editor"
        },
        {
          "description": "Access to read Vision AI Analyses.",
          "id": "roles/visionai.analysisViewer",
          "is_beta": true,
          "permissions": [
            "visionai.analyses.get",
            "visionai.analyses.list"
          ],
          "title": "Vision AI Analysis Viewer"
        },
        {
          "description": "Grants access to edit media asset annotations into the Warehouse.",
          "id": "roles/visionai.annotationEditor",
          "is_beta": true,
          "permissions": [
            "visionai.annotations.*"
          ],
          "title": "VisionAI Warehouse Annotation Editor"
        },
        {
          "description": "Grants access to view media asset annotations into the Warehouse.",
          "id": "roles/visionai.annotationViewer",
          "is_beta": true,
          "permissions": [
            "visionai.annotations.get",
            "visionai.annotations.list"
          ],
          "title": "VisionAI Warehouse Annotation Viewer"
        },
        {
          "description": "Access to read and write Vision AI Applications.",
          "id": "roles/visionai.applicationEditor",
          "is_beta": true,
          "permissions": [
            "visionai.applications.*",
            "visionai.drafts.*",
            "visionai.instances.*"
          ],
          "title": "Vision AI Application Editor"
        },
        {
          "description": "Access to read Vision AI Applications.",
          "id": "roles/visionai.applicationViewer",
          "is_beta": true,
          "permissions": [
            "visionai.applications.get",
            "visionai.applications.list",
            "visionai.drafts.get",
            "visionai.drafts.list",
            "visionai.instances.*"
          ],
          "title": "Vision AI Application Viewer"
        },
        {
          "description": "Grants access to ingest media assets into the Warehouse.",
          "id": "roles/visionai.assetCreator",
          "is_beta": true,
          "permissions": [
            "visionai.assets.create",
            "visionai.assets.ingest"
          ],
          "title": "VisionAI Warehouse Asset Creator"
        },
        {
          "description": "Grants access to edit media assets into the Warehouse.",
          "id": "roles/visionai.assetEditor",
          "is_beta": true,
          "permissions": [
            "visionai.assets.*"
          ],
          "title": "VisionAI Warehouse Asset Editor"
        },
        {
          "description": "Grants access to view media assets into the Warehouse.",
          "id": "roles/visionai.assetViewer",
          "is_beta": true,
          "permissions": [
            "visionai.assets.get",
            "visionai.assets.list",
            "visionai.assets.search"
          ],
          "title": "VisionAI Warehouse Asset Viewer"
        },
        {
          "description": "Access to read and write Vision AI Cluster.",
          "id": "roles/visionai.clusterEditor",
          "is_beta": true,
          "permissions": [
            "visionai.clusters.create",
            "visionai.clusters.delete",
            "visionai.clusters.get",
            "visionai.clusters.list",
            "visionai.clusters.update",
            "visionai.clusters.watch"
          ],
          "title": "Vision AI Cluster Editor"
        },
        {
          "description": "Access to read Vision AI Clusters.",
          "id": "roles/visionai.clusterViewer",
          "is_beta": true,
          "permissions": [
            "visionai.clusters.get",
            "visionai.clusters.list"
          ],
          "title": "Vision AI Cluster Viewer"
        },
        {
          "description": "Full control to everything in a corpus including corpus access control.",
          "id": "roles/visionai.corpusAdmin",
          "is_beta": true,
          "permissions": [
            "visionai.annotations.*",
            "visionai.assets.*",
            "visionai.corpora.*",
            "visionai.dataSchemas.*",
            "visionai.indexes.*",
            "visionai.operations.get",
            "visionai.operations.list",
            "visionai.searchConfigs.*"
          ],
          "title": "VisionAI Warehouse Corpus Administrator"
        },
        {
          "description": "Read-write access to everything in a corpus.",
          "id": "roles/visionai.corpusEditor",
          "is_beta": true,
          "permissions": [
            "visionai.annotations.*",
            "visionai.assets.*",
            "visionai.corpora.*",
            "visionai.dataSchemas.*",
            "visionai.indexes.*",
            "visionai.operations.get",
            "visionai.operations.list",
            "visionai.searchConfigs.*"
          ],
          "title": "VisionAI Warehouse Corpus Editor"
        },
        {
          "description": "Grants access to view everything in a corpus.",
          "id": "roles/visionai.corpusViewer",
          "is_beta": true,
          "permissions": [
            "visionai.annotations.get",
            "visionai.annotations.list",
            "visionai.assets.clip",
            "visionai.assets.generateHlsUri",
            "visionai.assets.get",
            "visionai.assets.list",
            "visionai.assets.search",
            "visionai.corpora.get",
            "visionai.corpora.list",
            "visionai.corpora.suggest",
            "visionai.dataSchemas.get",
            "visionai.dataSchemas.list",
            "visionai.dataSchemas.validate",
            "visionai.indexes.get",
            "visionai.indexes.list",
            "visionai.indexes.viewAssets",
            "visionai.operations.get",
            "visionai.operations.list",
            "visionai.searchConfigs.get",
            "visionai.searchConfigs.list"
          ],
          "title": "VisionAI Warehouse Corpus Viewer"
        },
        {
          "description": "Grants access to create/update/delete everything in a corpus.",
          "id": "roles/visionai.corpusWriter",
          "is_beta": true,
          "permissions": [
            "visionai.annotations.*",
            "visionai.assets.*",
            "visionai.corpora.analyze",
            "visionai.corpora.delete",
            "visionai.corpora.import",
            "visionai.corpora.update",
            "visionai.dataSchemas.create",
            "visionai.dataSchemas.delete",
            "visionai.dataSchemas.update",
            "visionai.indexes.create",
            "visionai.indexes.delete",
            "visionai.indexes.update",
            "visionai.operations.get",
            "visionai.operations.list",
            "visionai.searchConfigs.create",
            "visionai.searchConfigs.delete",
            "visionai.searchConfigs.update"
          ],
          "title": "VisionAI Warehouse Corpus Writer"
        },
        {
          "description": "Edit access to Vision AI all resources.",
          "id": "roles/visionai.editor",
          "is_beta": true,
          "permissions": [
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "visionai.analyses.create",
            "visionai.analyses.delete",
            "visionai.analyses.get",
            "visionai.analyses.getIamPolicy",
            "visionai.analyses.list",
            "visionai.analyses.update",
            "visionai.annotations.*",
            "visionai.applications.*",
            "visionai.assets.*",
            "visionai.clusters.create",
            "visionai.clusters.delete",
            "visionai.clusters.get",
            "visionai.clusters.getIamPolicy",
            "visionai.clusters.list",
            "visionai.clusters.update",
            "visionai.clusters.watch",
            "visionai.corpora.*",
            "visionai.dataSchemas.*",
            "visionai.drafts.*",
            "visionai.events.create",
            "visionai.events.delete",
            "visionai.events.get",
            "visionai.events.getIamPolicy",
            "visionai.events.list",
            "visionai.events.update",
            "visionai.indexEndpoints.*",
            "visionai.indexes.*",
            "visionai.instances.*",
            "visionai.locations.*",
            "visionai.operations.*",
            "visionai.operators.create",
            "visionai.operators.delete",
            "visionai.operators.get",
            "visionai.operators.getIamPolicy",
            "visionai.operators.list",
            "visionai.operators.update",
            "visionai.processors.*",
            "visionai.searchConfigs.*",
            "visionai.series.acquireLease",
            "visionai.series.create",
            "visionai.series.delete",
            "visionai.series.get",
            "visionai.series.getIamPolicy",
            "visionai.series.list",
            "visionai.series.receive",
            "visionai.series.releaseLease",
            "visionai.series.renewLease",
            "visionai.series.send",
            "visionai.series.update",
            "visionai.streams.create",
            "visionai.streams.delete",
            "visionai.streams.get",
            "visionai.streams.getIamPolicy",
            "visionai.streams.list",
            "visionai.streams.receive",
            "visionai.streams.send",
            "visionai.streams.update",
            "visionai.uistreams.*"
          ],
          "title": "VisionAI Editor"
        },
        {
          "description": "Access to read and write Vision AI Events.",
          "id": "roles/visionai.eventEditor",
          "is_beta": true,
          "permissions": [
            "visionai.events.create",
            "visionai.events.delete",
            "visionai.events.get",
            "visionai.events.list",
            "visionai.events.update"
          ],
          "title": "Vision AI Event Editor"
        },
        {
          "description": "Access to read Vision AI Events.",
          "id": "roles/visionai.eventViewer",
          "is_beta": true,
          "permissions": [
            "visionai.events.get",
            "visionai.events.list"
          ],
          "title": "Vision AI Event Viewer"
        },
        {
          "description": "Full control of all Media Warehouse resources and permissions.",
          "id": "roles/visionai.indexEndpointAdmin",
          "is_beta": true,
          "permissions": [
            "visionai.indexEndpoints.*"
          ],
          "title": "VisionAI Warehouse IndexEndpoint Administrator"
        },
        {
          "description": "Read, write and create access to all index endpoints level resources.",
          "id": "roles/visionai.indexEndpointEditor",
          "is_beta": true,
          "permissions": [
            "visionai.indexEndpoints.*"
          ],
          "title": "VisionAI Warehouse IndexEndpoint Editor"
        },
        {
          "description": "Grants access to view all index endpoint resources and be able to search on them. (ReadOnly)",
          "id": "roles/visionai.indexEndpointViewer",
          "is_beta": true,
          "permissions": [
            "visionai.indexEndpoints.get",
            "visionai.indexEndpoints.list",
            "visionai.indexEndpoints.search"
          ],
          "title": "VisionAI Warehouse IndexEndpoint Viewer"
        },
        {
          "description": "Grants access to perform update, delete, deploy and undeploy operations on the index endpoint.",
          "id": "roles/visionai.indexEndpointWriter",
          "is_beta": true,
          "permissions": [
            "visionai.indexEndpoints.delete",
            "visionai.indexEndpoints.deploy",
            "visionai.indexEndpoints.undeploy",
            "visionai.indexEndpoints.update"
          ],
          "title": "VisionAI Warehouse IndexEndpoint Writer"
        },
        {
          "description": "Access to read and write Vision AI Operators.",
          "id": "roles/visionai.operatorEditor",
          "is_beta": true,
          "permissions": [
            "visionai.operators.create",
            "visionai.operators.delete",
            "visionai.operators.get",
            "visionai.operators.list",
            "visionai.operators.update"
          ],
          "title": "Vision AI Operator Editor"
        },
        {
          "description": "Access to read Vision AI Operators.",
          "id": "roles/visionai.operatorViewer",
          "is_beta": true,
          "permissions": [
            "visionai.operators.get",
            "visionai.operators.list"
          ],
          "title": "Vision AI Operator Viewer"
        },
        {
          "description": "Access to read Vision AI Series.",
          "id": "roles/visionai.packetReceiver",
          "is_beta": true,
          "permissions": [
            "visionai.clusters.watch",
            "visionai.series.acquireLease",
            "visionai.series.receive",
            "visionai.series.releaseLease",
            "visionai.series.renewLease",
            "visionai.streams.receive"
          ],
          "title": "Vision AI Packet Receiver"
        },
        {
          "description": "Packet sender to the series.",
          "id": "roles/visionai.packetSender",
          "is_beta": true,
          "permissions": [
            "visionai.series.acquireLease",
            "visionai.series.releaseLease",
            "visionai.series.renewLease",
            "visionai.series.send",
            "visionai.streams.send"
          ],
          "title": "Vision AI Packet Sender"
        },
        {
          "description": "Access to read and write Vision AI Processors.",
          "id": "roles/visionai.processorEditor",
          "is_beta": true,
          "permissions": [
            "visionai.processors.*"
          ],
          "title": "Vision AI Processor Editor"
        },
        {
          "description": "Access to read Vision AI Processors.",
          "id": "roles/visionai.processorViewer",
          "is_beta": true,
          "permissions": [
            "visionai.processors.get",
            "visionai.processors.list",
            "visionai.processors.listPrebuilt"
          ],
          "title": "Vision AI Processor Viewer"
        },
        {
          "description": "Access to read and write Vision AI Series.",
          "id": "roles/visionai.seriesEditor",
          "is_beta": true,
          "permissions": [
            "visionai.clusters.watch",
            "visionai.series.acquireLease",
            "visionai.series.create",
            "visionai.series.delete",
            "visionai.series.get",
            "visionai.series.list",
            "visionai.series.receive",
            "visionai.series.releaseLease",
            "visionai.series.renewLease",
            "visionai.series.send",
            "visionai.series.update",
            "visionai.streams.receive",
            "visionai.streams.send"
          ],
          "title": "Vision AI Series Editor"
        },
        {
          "description": "Access to read Vision AI Series.",
          "id": "roles/visionai.seriesViewer",
          "is_beta": true,
          "permissions": [
            "visionai.series.get",
            "visionai.series.list"
          ],
          "title": "Vision AI Series Viewer"
        },
        {
          "description": "Access to read and write Vision AI Streams.",
          "id": "roles/visionai.streamEditor",
          "is_beta": true,
          "permissions": [
            "visionai.clusters.watch",
            "visionai.series.acquireLease",
            "visionai.series.receive",
            "visionai.series.releaseLease",
            "visionai.series.renewLease",
            "visionai.series.send",
            "visionai.streams.create",
            "visionai.streams.delete",
            "visionai.streams.get",
            "visionai.streams.list",
            "visionai.streams.receive",
            "visionai.streams.send",
            "visionai.streams.update"
          ],
          "title": "Vision AI Stream Editor"
        },
        {
          "description": "Access to read Vision AI Streams.",
          "id": "roles/visionai.streamViewer",
          "is_beta": true,
          "permissions": [
            "visionai.streams.get",
            "visionai.streams.list"
          ],
          "title": "Vision AI Stream Viewer"
        },
        {
          "description": "Access to read & write Vision AI UI Streams.",
          "id": "roles/visionai.uiStreamEditor",
          "is_beta": true,
          "permissions": [
            "visionai.uistreams.*"
          ],
          "title": "Vision AI UI Stream Editor"
        },
        {
          "description": "Access to read Vision AI UI Streams.",
          "id": "roles/visionai.uiStreamViewer",
          "is_beta": true,
          "permissions": [
            "visionai.uistreams.get",
            "visionai.uistreams.list"
          ],
          "title": "Vision AI UI Stream Viewer"
        },
        {
          "description": "View access to Vision AI all resources.",
          "id": "roles/visionai.viewer",
          "is_beta": true,
          "permissions": [
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "visionai.analyses.get",
            "visionai.analyses.getIamPolicy",
            "visionai.analyses.list",
            "visionai.annotations.get",
            "visionai.annotations.list",
            "visionai.applications.get",
            "visionai.applications.list",
            "visionai.assets.clip",
            "visionai.assets.generateHlsUri",
            "visionai.assets.get",
            "visionai.assets.list",
            "visionai.assets.search",
            "visionai.clusters.get",
            "visionai.clusters.getIamPolicy",
            "visionai.clusters.list",
            "visionai.corpora.get",
            "visionai.corpora.list",
            "visionai.corpora.suggest",
            "visionai.dataSchemas.get",
            "visionai.dataSchemas.list",
            "visionai.dataSchemas.validate",
            "visionai.drafts.get",
            "visionai.drafts.list",
            "visionai.events.get",
            "visionai.events.getIamPolicy",
            "visionai.events.list",
            "visionai.indexEndpoints.get",
            "visionai.indexEndpoints.list",
            "visionai.indexEndpoints.search",
            "visionai.indexes.get",
            "visionai.indexes.list",
            "visionai.indexes.viewAssets",
            "visionai.instances.*",
            "visionai.locations.*",
            "visionai.operations.get",
            "visionai.operations.list",
            "visionai.operators.get",
            "visionai.operators.getIamPolicy",
            "visionai.operators.list",
            "visionai.processors.get",
            "visionai.processors.list",
            "visionai.processors.listPrebuilt",
            "visionai.searchConfigs.get",
            "visionai.searchConfigs.list",
            "visionai.series.get",
            "visionai.series.getIamPolicy",
            "visionai.series.list",
            "visionai.streams.get",
            "visionai.streams.getIamPolicy",
            "visionai.streams.list",
            "visionai.uistreams.get",
            "visionai.uistreams.list"
          ],
          "title": "VisionAI Viewer"
        },
        {
          "description": "Admin has full access to VMware Engine Service",
          "id": "roles/vmwareengine.vmwareengineAdmin",
          "is_beta": false,
          "permissions": [
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "vmwareengine.*"
          ],
          "title": "VMware Engine Service Admin"
        },
        {
          "description": "Viewer has read-only access to VMware Engine Service",
          "id": "roles/vmwareengine.vmwareengineViewer",
          "is_beta": false,
          "permissions": [
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "vmwareengine.clusters.get",
            "vmwareengine.clusters.getIamPolicy",
            "vmwareengine.clusters.list",
            "vmwareengine.dnsBindPermission.get",
            "vmwareengine.dnsForwarding.get",
            "vmwareengine.externalAccessRules.get",
            "vmwareengine.externalAccessRules.list",
            "vmwareengine.externalAddresses.get",
            "vmwareengine.externalAddresses.list",
            "vmwareengine.hcxActivationKeys.get",
            "vmwareengine.hcxActivationKeys.getIamPolicy",
            "vmwareengine.hcxActivationKeys.list",
            "vmwareengine.locations.*",
            "vmwareengine.loggingServers.get",
            "vmwareengine.loggingServers.list",
            "vmwareengine.managementDnsZoneBindings.get",
            "vmwareengine.managementDnsZoneBindings.list",
            "vmwareengine.networkPeerings.get",
            "vmwareengine.networkPeerings.list",
            "vmwareengine.networkPeerings.listPeeringRoutes",
            "vmwareengine.networkPolicies.fetchExternalAddresses",
            "vmwareengine.networkPolicies.get",
            "vmwareengine.networkPolicies.list",
            "vmwareengine.nodeTypes.*",
            "vmwareengine.nodes.*",
            "vmwareengine.operations.get",
            "vmwareengine.operations.list",
            "vmwareengine.privateClouds.get",
            "vmwareengine.privateClouds.getIamPolicy",
            "vmwareengine.privateClouds.list",
            "vmwareengine.privateConnections.get",
            "vmwareengine.privateConnections.list",
            "vmwareengine.privateConnections.listPeeringRoutes",
            "vmwareengine.projectState.get",
            "vmwareengine.services.view",
            "vmwareengine.subnets.get",
            "vmwareengine.subnets.list",
            "vmwareengine.vmwareEngineNetworks.get",
            "vmwareengine.vmwareEngineNetworks.list"
          ],
          "title": "VMware Engine Service Viewer"
        },
        {
          "description": "Full access to workflows and related resources.",
          "id": "roles/workflows.admin",
          "is_beta": false,
          "permissions": [
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "workflows.*"
          ],
          "title": "Workflows Admin"
        },
        {
          "description": "Read and write access to workflows and related resources, including development and debugging of workflows.",
          "id": "roles/workflows.editor",
          "is_beta": false,
          "permissions": [
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "workflows.*"
          ],
          "title": "Workflows Editor"
        },
        {
          "description": "Access to execute workflows and manage the executions using the API. Does not provide access to develop and debug workflows.",
          "id": "roles/workflows.invoker",
          "is_beta": false,
          "permissions": [
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "workflows.callbacks.*",
            "workflows.executions.*",
            "workflows.stepEntries.*"
          ],
          "title": "Workflows Invoker"
        },
        {
          "description": "Read-only access to workflows and related resources.",
          "id": "roles/workflows.viewer",
          "is_beta": false,
          "permissions": [
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "workflows.callbacks.list",
            "workflows.executions.get",
            "workflows.executions.list",
            "workflows.locations.*",
            "workflows.operations.get",
            "workflows.operations.list",
            "workflows.stepEntries.*",
            "workflows.workflows.get",
            "workflows.workflows.list",
            "workflows.workflows.listEffectiveTags",
            "workflows.workflows.listRevision",
            "workflows.workflows.listTagBindings"
          ],
          "title": "Workflows Viewer"
        },
        {
          "description": "Full rights to create and manage OAuth clients.",
          "id": "roles/iam.oauthClientAdmin",
          "is_beta": false,
          "permissions": [
            "iam.oauthClientCredentials.*",
            "iam.oauthClients.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "IAM OAuth Client Admin"
        },
        {
          "description": "Read access to a particular instance of an OAuth client.",
          "id": "roles/iam.oauthClientViewer",
          "is_beta": false,
          "permissions": [
            "iam.googleapis.com/oauthClientCredentials.get",
            "iam.googleapis.com/oauthClientCredentials.list",
            "iam.googleapis.com/oauthClients.get",
            "iam.googleapis.com/oauthClients.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "IAM OAuth Client Viewer"
        },
        {
          "description": "Full rights to create and manage all workforce pools in the org, along with the ability to delegate permissions to other admins.",
          "id": "roles/iam.workforcePoolAdmin",
          "is_beta": false,
          "permissions": [
            "iam.workforcePoolProviderKeys.*",
            "iam.workforcePoolProviders.*",
            "iam.workforcePoolSubjects.*",
            "iam.workforcePools.*"
          ],
          "title": "IAM Workforce Pool Admin"
        },
        {
          "description": "Rights to edit a particular instance of a workforce pool.",
          "id": "roles/iam.workforcePoolEditor",
          "is_beta": false,
          "permissions": [
            "iam.googleapis.com/workforcePoolProviderKeys.get",
            "iam.googleapis.com/workforcePoolProviderKeys.list",
            "iam.googleapis.com/workforcePools.get",
            "iam.googleapis.com/workforcePools.list",
            "iam.googleapis.com/workforcePools.update",
            "iam.workforcePoolProviders.*"
          ],
          "title": "IAM Workforce Pool Editor"
        },
        {
          "description": "Rights to read workforce pool.",
          "id": "roles/iam.workforcePoolViewer",
          "is_beta": false,
          "permissions": [
            "iam.googleapis.com/workforcePoolProviderKeys.get",
            "iam.googleapis.com/workforcePoolProviderKeys.list",
            "iam.googleapis.com/workforcePoolProviders.get",
            "iam.googleapis.com/workforcePoolProviders.list",
            "iam.googleapis.com/workforcePools.get",
            "iam.googleapis.com/workforcePools.list"
          ],
          "title": "IAM Workforce Pool Viewer"
        },
        {
          "description": "Full access to all Workload Certificate API resources.",
          "id": "roles/workloadcertificate.admin",
          "is_beta": true,
          "permissions": [
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "workloadcertificate.*"
          ],
          "title": "Workload Certificate Admin"
        },
        {
          "description": "Full access to WorkloadRegistration resources.",
          "id": "roles/workloadcertificate.registrationAdmin",
          "is_beta": true,
          "permissions": [
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "workloadcertificate.locations.*",
            "workloadcertificate.operations.*",
            "workloadcertificate.workloadRegistrations.*"
          ],
          "title": "Workload Certificate Registration Admin"
        },
        {
          "description": "Read-only access to WorkloadRegistration resources.",
          "id": "roles/workloadcertificate.registrationViewer",
          "is_beta": true,
          "permissions": [
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "workloadcertificate.locations.*",
            "workloadcertificate.operations.get",
            "workloadcertificate.operations.list",
            "workloadcertificate.workloadRegistrations.get",
            "workloadcertificate.workloadRegistrations.list"
          ],
          "title": "Workload Certificate Registration Viewer"
        },
        {
          "description": "Read-only access to Workload Certificate all resources.",
          "id": "roles/workloadcertificate.viewer",
          "is_beta": true,
          "permissions": [
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "workloadcertificate.locations.*",
            "workloadcertificate.operations.get",
            "workloadcertificate.operations.list",
            "workloadcertificate.workloadCertificateFeature.get",
            "workloadcertificate.workloadRegistrations.get",
            "workloadcertificate.workloadRegistrations.list"
          ],
          "title": "Workload Certificate Viewer"
        },
        {
          "description": "Full rights to create and manage workload identity pools.",
          "id": "roles/iam.workloadIdentityPoolAdmin",
          "is_beta": true,
          "permissions": [
            "iam.workloadIdentityPoolProviderKeys.*",
            "iam.workloadIdentityPoolProviders.*",
            "iam.workloadIdentityPools.*",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "IAM Workload Identity Pool Admin"
        },
        {
          "description": "Read access to workload identity pools.",
          "id": "roles/iam.workloadIdentityPoolViewer",
          "is_beta": true,
          "permissions": [
            "iam.googleapis.com/workloadIdentityPoolProviderKeys.get",
            "iam.googleapis.com/workloadIdentityPoolProviderKeys.list",
            "iam.googleapis.com/workloadIdentityPoolProviders.get",
            "iam.googleapis.com/workloadIdentityPoolProviders.list",
            "iam.googleapis.com/workloadIdentityPools.get",
            "iam.googleapis.com/workloadIdentityPools.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list"
          ],
          "title": "IAM Workload Identity Pool Viewer"
        },
        {
          "description": "Full access to Workload Manager all resources.",
          "id": "roles/workloadmanager.admin",
          "is_beta": true,
          "permissions": [
            "compute.acceleratorTypes.list",
            "compute.diskTypes.list",
            "compute.machineTypes.list",
            "compute.networks.list",
            "compute.projects.get",
            "compute.regions.list",
            "compute.subnetworks.list",
            "compute.zones.list",
            "dns.managedZones.list",
            "iam.serviceAccounts.list",
            "monitoring.timeSeries.list",
            "orgpolicy.policy.get",
            "resourcemanager.projects.get",
            "resourcemanager.projects.getIamPolicy",
            "resourcemanager.projects.list",
            "serviceusage.quotas.get",
            "serviceusage.services.get",
            "storage.buckets.list",
            "storage.objects.list",
            "workloadmanager.*"
          ],
          "title": "Workload Manager Admin"
        },
        {
          "description": "Full access to Workload Manager deployment resources.",
          "id": "roles/workloadmanager.deploymentAdmin",
          "is_beta": true,
          "permissions": [
            "compute.acceleratorTypes.list",
            "compute.diskTypes.list",
            "compute.machineTypes.list",
            "compute.networks.list",
            "compute.projects.get",
            "compute.regions.list",
            "compute.subnetworks.list",
            "compute.zones.list",
            "dns.managedZones.list",
            "iam.serviceAccounts.list",
            "monitoring.timeSeries.list",
            "resourcemanager.projects.get",
            "resourcemanager.projects.getIamPolicy",
            "resourcemanager.projects.list",
            "serviceusage.quotas.get",
            "serviceusage.services.get",
            "storage.buckets.list",
            "storage.objects.list",
            "workloadmanager.actuations.*",
            "workloadmanager.deployments.*",
            "workloadmanager.locations.*",
            "workloadmanager.operations.*"
          ],
          "title": "Workload Manager Deployment Admin"
        },
        {
          "description": "Read-only access to Workload Manager deployment resources.",
          "id": "roles/workloadmanager.deploymentViewer",
          "is_beta": true,
          "permissions": [
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "workloadmanager.actuations.get",
            "workloadmanager.actuations.list",
            "workloadmanager.deployments.get",
            "workloadmanager.deployments.list"
          ],
          "title": "Workload Manager Deployment Viewer"
        },
        {
          "description": "Full access to Workload Manager evaluation resources.",
          "id": "roles/workloadmanager.evaluationAdmin",
          "is_beta": true,
          "permissions": [
            "orgpolicy.policy.get",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "workloadmanager.evaluations.*",
            "workloadmanager.executions.*",
            "workloadmanager.locations.*",
            "workloadmanager.operations.*",
            "workloadmanager.results.list",
            "workloadmanager.rules.list"
          ],
          "title": "Workload Manager Evaluation Admin"
        },
        {
          "description": "Read-only access to Workload Manager evaluation resources.",
          "id": "roles/workloadmanager.evaluationViewer",
          "is_beta": true,
          "permissions": [
            "orgpolicy.policy.get",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "workloadmanager.evaluations.get",
            "workloadmanager.evaluations.list",
            "workloadmanager.executions.get",
            "workloadmanager.executions.list",
            "workloadmanager.results.list",
            "workloadmanager.rules.list"
          ],
          "title": "Workload Manager Evaluation Viewer"
        },
        {
          "description": "The role used to write data to WLM data warehouse.",
          "id": "roles/workloadmanager.insightWriter",
          "is_beta": true,
          "permissions": [
            "workloadmanager.insights.write"
          ],
          "title": "Workload Manager Insights Writer"
        },
        {
          "description": "Read-only access to Workload Manager all resources.",
          "id": "roles/workloadmanager.viewer",
          "is_beta": true,
          "permissions": [
            "orgpolicy.policy.get",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "workloadmanager.actuations.get",
            "workloadmanager.actuations.list",
            "workloadmanager.deployments.get",
            "workloadmanager.deployments.list",
            "workloadmanager.discoveredprofiles.*",
            "workloadmanager.evaluations.get",
            "workloadmanager.evaluations.list",
            "workloadmanager.executions.get",
            "workloadmanager.executions.list",
            "workloadmanager.results.list",
            "workloadmanager.rules.list"
          ],
          "title": "Workload Manager Viewer"
        },
        {
          "description": "The role used by Workload Manager application runners to read and update workloads.",
          "id": "roles/workloadmanager.worker",
          "is_beta": true,
          "permissions": [
            "orgpolicy.policy.get",
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "workloadmanager.actuations.*",
            "workloadmanager.deployments.*",
            "workloadmanager.discoveredprofiles.*",
            "workloadmanager.evaluations.*",
            "workloadmanager.executions.*",
            "workloadmanager.insights.write",
            "workloadmanager.results.list",
            "workloadmanager.rules.list"
          ],
          "title": "Workload Manager Worker"
        },
        {
          "description": "The role used to view the workload related data.",
          "id": "roles/workloadmanager.workloadViewer",
          "is_beta": true,
          "permissions": [
            "resourcemanager.projects.get",
            "resourcemanager.projects.list",
            "workloadmanager.discoveredprofiles.*"
          ],
          "title": "Workload Manager Workload Viewer"
        },
        {
          "description": "Workspace Marketplace App Configuration Admin",
          "id": "roles/appmetadata.workspaceMarketplaceAppConfigurationAdmin",
          "is_beta": false,
          "permissions": [
            "chat.bots.get",
            "clientauthconfig.clients.create",
            "gsuiteaddons.deployments.create",
            "gsuiteaddons.deployments.delete",
            "gsuiteaddons.deployments.list",
            "gsuiteaddons.deployments.update",
            "resourcemanager.projects.get",
            "serviceusage.services.get",
            "workspacemarketplace.*"
          ],
          "title": "Workspace Marketplace App Configuration Admin"
        }
      ]
    },
    "timestamp": "2025-04-11T15:04:24.934108336Z"
  }
]
